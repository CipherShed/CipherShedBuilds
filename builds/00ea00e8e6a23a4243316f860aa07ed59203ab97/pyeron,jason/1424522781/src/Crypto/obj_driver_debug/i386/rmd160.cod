; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\home\public\desktop\projects\ciphershed.build\src\crypto\rmd160.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	_RMD160Init@4
; Function compile flags: /Odtp
; File c:\home\public\desktop\projects\ciphershed.build\src\crypto\rmd160.c
;	COMDAT _RMD160Init@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_RMD160Init@4 PROC					; COMDAT

; 54   : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 55   : 	ctx->count = 0;

  00005	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00008	c7 40 18 00 00
	00 00		 mov	 DWORD PTR [eax+24], 0
  0000f	c7 40 1c 00 00
	00 00		 mov	 DWORD PTR [eax+28], 0

; 56   : 	ctx->state[0] = 0x67452301;

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00019	c7 01 01 23 45
	67		 mov	 DWORD PTR [ecx], 1732584193 ; 67452301H

; 57   : 	ctx->state[1] = 0xefcdab89;

  0001f	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  00022	c7 42 04 89 ab
	cd ef		 mov	 DWORD PTR [edx+4], -271733879 ; efcdab89H

; 58   : 	ctx->state[2] = 0x98badcfe;

  00029	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0002c	c7 40 08 fe dc
	ba 98		 mov	 DWORD PTR [eax+8], -1732584194 ; 98badcfeH

; 59   : 	ctx->state[3] = 0x10325476;

  00033	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00036	c7 41 0c 76 54
	32 10		 mov	 DWORD PTR [ecx+12], 271733878 ; 10325476H

; 60   : 	ctx->state[4] = 0xc3d2e1f0;

  0003d	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  00040	c7 42 10 f0 e1
	d2 c3		 mov	 DWORD PTR [edx+16], -1009589776 ; c3d2e1f0H

; 61   : 	PADDING[0] = 0x80;

  00047	c6 05 00 00 00
	00 80		 mov	 BYTE PTR _PADDING, 128	; 00000080H

; 62   : }

  0004e	5d		 pop	 ebp
  0004f	c2 04 00	 ret	 4
_RMD160Init@4 ENDP
_TEXT	ENDS
PUBLIC	_RMD160Transform@8
PUBLIC	_RMD160Update@12
EXTRN	_memcpy:PROC
EXTRN	__allshl:PROC
EXTRN	__aullshr:PROC
; Function compile flags: /Odtp
;	COMDAT _RMD160Update@12
_TEXT	SEGMENT
_need$ = -24						; size = 8
_len$ = -16						; size = 8
_have$ = -8						; size = 8
_ctx$ = 8						; size = 4
_input$ = 12						; size = 4
_lenArg$ = 16						; size = 4
_RMD160Update@12 PROC					; COMDAT

; 69   : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 18	 sub	 esp, 24			; 00000018H

; 70   : #ifndef TC_WINDOWS_BOOT
; 71   : 	uint64 len = lenArg, have, need;

  00008	8b 45 10	 mov	 eax, DWORD PTR _lenArg$[ebp]
  0000b	33 c9		 xor	 ecx, ecx
  0000d	89 45 f0	 mov	 DWORD PTR _len$[ebp], eax
  00010	89 4d f4	 mov	 DWORD PTR _len$[ebp+4], ecx

; 72   : #else
; 73   : 	uint16 len = (uint16) lenArg, have, need;
; 74   : #endif
; 75   : 
; 76   : 	/* Check how many bytes we already have and how many more we need. */
; 77   : 	have = ((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  00013	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  00016	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00019	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  0001c	b1 03		 mov	 cl, 3
  0001e	e8 00 00 00 00	 call	 __aullshr
  00023	83 e0 3f	 and	 eax, 63			; 0000003fH
  00026	83 e2 00	 and	 edx, 0
  00029	89 45 f8	 mov	 DWORD PTR _have$[ebp], eax
  0002c	89 55 fc	 mov	 DWORD PTR _have$[ebp+4], edx

; 78   : 	need = RIPEMD160_BLOCK_LENGTH - have;

  0002f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00034	2b 45 f8	 sub	 eax, DWORD PTR _have$[ebp]
  00037	b9 00 00 00 00	 mov	 ecx, 0
  0003c	1b 4d fc	 sbb	 ecx, DWORD PTR _have$[ebp+4]
  0003f	89 45 e8	 mov	 DWORD PTR _need$[ebp], eax
  00042	89 4d ec	 mov	 DWORD PTR _need$[ebp+4], ecx

; 79   : 
; 80   : 	/* Update bitcount */
; 81   : 	ctx->count += len << 3;

  00045	8b 45 f0	 mov	 eax, DWORD PTR _len$[ebp]
  00048	8b 55 f4	 mov	 edx, DWORD PTR _len$[ebp+4]
  0004b	b1 03		 mov	 cl, 3
  0004d	e8 00 00 00 00	 call	 __allshl
  00052	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00055	03 41 18	 add	 eax, DWORD PTR [ecx+24]
  00058	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  0005b	13 ca		 adc	 ecx, edx
  0005d	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  00060	89 42 18	 mov	 DWORD PTR [edx+24], eax
  00063	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 82   : 
; 83   : 	if (len >= need) {

  00066	8b 45 f4	 mov	 eax, DWORD PTR _len$[ebp+4]
  00069	3b 45 ec	 cmp	 eax, DWORD PTR _need$[ebp+4]
  0006c	0f 82 a0 00 00
	00		 jb	 $LN5@RMD160Upda
  00072	77 0c		 ja	 SHORT $LN8@RMD160Upda
  00074	8b 4d f0	 mov	 ecx, DWORD PTR _len$[ebp]
  00077	3b 4d e8	 cmp	 ecx, DWORD PTR _need$[ebp]
  0007a	0f 82 92 00 00
	00		 jb	 $LN5@RMD160Upda
$LN8@RMD160Upda:

; 84   : 		if (have != 0) {

  00080	8b 55 f8	 mov	 edx, DWORD PTR _have$[ebp]
  00083	0b 55 fc	 or	 edx, DWORD PTR _have$[ebp+4]
  00086	74 54		 je	 SHORT $LN3@RMD160Upda

; 85   : 			memcpy (ctx->buffer + have, input, (size_t) need);

  00088	8b 45 e8	 mov	 eax, DWORD PTR _need$[ebp]
  0008b	50		 push	 eax
  0008c	8b 4d 0c	 mov	 ecx, DWORD PTR _input$[ebp]
  0008f	51		 push	 ecx
  00090	8b 55 f8	 mov	 edx, DWORD PTR _have$[ebp]
  00093	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00096	8d 4c 10 20	 lea	 ecx, DWORD PTR [eax+edx+32]
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 _memcpy
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 86   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) ctx->buffer);

  000a3	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  000a6	83 c2 20	 add	 edx, 32			; 00000020H
  000a9	52		 push	 edx
  000aa	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  000ad	50		 push	 eax
  000ae	e8 00 00 00 00	 call	 _RMD160Transform@8

; 87   : 			input += need;

  000b3	8b 4d e8	 mov	 ecx, DWORD PTR _need$[ebp]
  000b6	03 4d 0c	 add	 ecx, DWORD PTR _input$[ebp]
  000b9	89 4d 0c	 mov	 DWORD PTR _input$[ebp], ecx

; 88   : 			len -= need;

  000bc	8b 55 f0	 mov	 edx, DWORD PTR _len$[ebp]
  000bf	2b 55 e8	 sub	 edx, DWORD PTR _need$[ebp]
  000c2	8b 45 f4	 mov	 eax, DWORD PTR _len$[ebp+4]
  000c5	1b 45 ec	 sbb	 eax, DWORD PTR _need$[ebp+4]
  000c8	89 55 f0	 mov	 DWORD PTR _len$[ebp], edx
  000cb	89 45 f4	 mov	 DWORD PTR _len$[ebp+4], eax

; 89   : 			have = 0;

  000ce	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _have$[ebp], 0
  000d5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _have$[ebp+4], 0
$LN3@RMD160Upda:

; 90   : 		}
; 91   : 
; 92   : 		/* Process data in RIPEMD160_BLOCK_LENGTH-byte chunks. */
; 93   : 		while (len >= RIPEMD160_BLOCK_LENGTH) {

  000dc	83 7d f4 00	 cmp	 DWORD PTR _len$[ebp+4], 0
  000e0	77 06		 ja	 SHORT $LN9@RMD160Upda
  000e2	83 7d f0 40	 cmp	 DWORD PTR _len$[ebp], 64 ; 00000040H
  000e6	72 2a		 jb	 SHORT $LN5@RMD160Upda
$LN9@RMD160Upda:

; 94   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) input);

  000e8	8b 4d 0c	 mov	 ecx, DWORD PTR _input$[ebp]
  000eb	51		 push	 ecx
  000ec	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  000ef	52		 push	 edx
  000f0	e8 00 00 00 00	 call	 _RMD160Transform@8

; 95   : 			input += RIPEMD160_BLOCK_LENGTH;

  000f5	8b 45 0c	 mov	 eax, DWORD PTR _input$[ebp]
  000f8	83 c0 40	 add	 eax, 64			; 00000040H
  000fb	89 45 0c	 mov	 DWORD PTR _input$[ebp], eax

; 96   : 			len -= RIPEMD160_BLOCK_LENGTH;

  000fe	8b 4d f0	 mov	 ecx, DWORD PTR _len$[ebp]
  00101	83 e9 40	 sub	 ecx, 64			; 00000040H
  00104	8b 55 f4	 mov	 edx, DWORD PTR _len$[ebp+4]
  00107	83 da 00	 sbb	 edx, 0
  0010a	89 4d f0	 mov	 DWORD PTR _len$[ebp], ecx
  0010d	89 55 f4	 mov	 DWORD PTR _len$[ebp+4], edx

; 97   : 		}

  00110	eb ca		 jmp	 SHORT $LN3@RMD160Upda
$LN5@RMD160Upda:

; 98   : 	}
; 99   : 
; 100  : 	/* Handle any remaining bytes of data. */
; 101  : 	if (len != 0)

  00112	8b 45 f0	 mov	 eax, DWORD PTR _len$[ebp]
  00115	0b 45 f4	 or	 eax, DWORD PTR _len$[ebp+4]
  00118	74 1b		 je	 SHORT $LN6@RMD160Upda

; 102  : 		memcpy (ctx->buffer + have, input, (size_t) len);

  0011a	8b 4d f0	 mov	 ecx, DWORD PTR _len$[ebp]
  0011d	51		 push	 ecx
  0011e	8b 55 0c	 mov	 edx, DWORD PTR _input$[ebp]
  00121	52		 push	 edx
  00122	8b 45 f8	 mov	 eax, DWORD PTR _have$[ebp]
  00125	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00128	8d 54 01 20	 lea	 edx, DWORD PTR [ecx+eax+32]
  0012c	52		 push	 edx
  0012d	e8 00 00 00 00	 call	 _memcpy
  00132	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@RMD160Upda:

; 103  : }

  00135	8b e5		 mov	 esp, ebp
  00137	5d		 pop	 ebp
  00138	c2 0c 00	 ret	 12			; 0000000cH
_RMD160Update@12 ENDP
_TEXT	ENDS
PUBLIC	_RMD160Final@8
EXTRN	_memset:PROC
; Function compile flags: /Odtp
;	COMDAT _RMD160Final@8
_TEXT	SEGMENT
_i$ = -4						; size = 4
_digest$ = 8						; size = 4
_ctx$ = 12						; size = 4
_RMD160Final@8 PROC					; COMDAT

; 137  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
  00006	56		 push	 esi

; 138  : 	int i;
; 139  : 
; 140  : 	RMD160Pad(ctx);

  00007	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 _RMD160Pad@4

; 141  : 	if (digest) {

  00010	83 7d 08 00	 cmp	 DWORD PTR _digest$[ebp], 0
  00014	0f 84 82 00 00
	00		 je	 $LN8@RMD160Fina

; 142  : 		for (i = 0; i < 5; i++)

  0001a	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00021	eb 09		 jmp	 SHORT $LN6@RMD160Fina
$LN5@RMD160Fina:
  00023	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00026	83 c1 01	 add	 ecx, 1
  00029	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx
$LN6@RMD160Fina:
  0002c	83 7d fc 05	 cmp	 DWORD PTR _i$[ebp], 5
  00030	7d 5a		 jge	 SHORT $LN4@RMD160Fina
$LN3@RMD160Fina:

; 143  : 			PUT_32BIT_LE(digest + i * 4, ctx->state[i]);

  00032	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00035	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00038	8b 0c 90	 mov	 ecx, DWORD PTR [eax+edx*4]
  0003b	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0003e	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00041	8b 45 08	 mov	 eax, DWORD PTR _digest$[ebp]
  00044	88 4c 90 03	 mov	 BYTE PTR [eax+edx*4+3], cl
  00048	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0004b	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  0004e	8b 04 8a	 mov	 eax, DWORD PTR [edx+ecx*4]
  00051	c1 e8 10	 shr	 eax, 16			; 00000010H
  00054	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00057	8b 55 08	 mov	 edx, DWORD PTR _digest$[ebp]
  0005a	88 44 8a 02	 mov	 BYTE PTR [edx+ecx*4+2], al
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00061	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00064	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  00067	c1 ea 08	 shr	 edx, 8
  0006a	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0006d	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  00070	88 54 81 01	 mov	 BYTE PTR [ecx+eax*4+1], dl
  00074	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00077	8b 45 08	 mov	 eax, DWORD PTR _digest$[ebp]
  0007a	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0007d	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00080	8a 0c 8e	 mov	 cl, BYTE PTR [esi+ecx*4]
  00083	88 0c 90	 mov	 BYTE PTR [eax+edx*4], cl
  00086	33 d2		 xor	 edx, edx
  00088	75 a8		 jne	 SHORT $LN3@RMD160Fina
  0008a	eb 97		 jmp	 SHORT $LN5@RMD160Fina
$LN4@RMD160Fina:

; 144  : 		memset (ctx, 0, sizeof(*ctx));

  0008c	6a 60		 push	 96			; 00000060H
  0008e	6a 00		 push	 0
  00090	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 _memset
  00099	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN8@RMD160Fina:

; 145  : 	}
; 146  : }

  0009c	5e		 pop	 esi
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c2 08 00	 ret	 8
_RMD160Final@8 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp
;	COMDAT _RMD160Pad@4
_TEXT	SEGMENT
_count$ = -16						; size = 8
__$ArrayPad$ = -8					; size = 4
_padlen$ = -4						; size = 4
_ctx$ = 8						; size = 4
_RMD160Pad@4 PROC					; COMDAT

; 110  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 10	 sub	 esp, 16			; 00000010H
  00008	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000d	33 c5		 xor	 eax, ebp
  0000f	89 45 f8	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
$LN4@RMD160Pad:

; 111  : 	byte count[8];
; 112  : 	uint32 padlen;
; 113  : 
; 114  : 	/* Convert count to 8 bytes in little endian order. */
; 115  : 
; 116  : #ifndef TC_WINDOWS_BOOT
; 117  : 	PUT_64BIT_LE(count, ctx->count);

  00012	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00015	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00018	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0001b	b1 38		 mov	 cl, 56			; 00000038H
  0001d	e8 00 00 00 00	 call	 __aullshr
  00022	88 45 f7	 mov	 BYTE PTR _count$[ebp+7], al
  00025	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  00028	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0002b	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  0002e	b1 30		 mov	 cl, 48			; 00000030H
  00030	e8 00 00 00 00	 call	 __aullshr
  00035	88 45 f6	 mov	 BYTE PTR _count$[ebp+6], al
  00038	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0003b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0003e	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00041	b1 28		 mov	 cl, 40			; 00000028H
  00043	e8 00 00 00 00	 call	 __aullshr
  00048	88 45 f5	 mov	 BYTE PTR _count$[ebp+5], al
  0004b	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0004e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00051	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  00054	b1 20		 mov	 cl, 32			; 00000020H
  00056	e8 00 00 00 00	 call	 __aullshr
  0005b	88 45 f4	 mov	 BYTE PTR _count$[ebp+4], al
  0005e	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00061	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00064	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00067	b1 18		 mov	 cl, 24			; 00000018H
  00069	e8 00 00 00 00	 call	 __aullshr
  0006e	88 45 f3	 mov	 BYTE PTR _count$[ebp+3], al
  00071	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  00074	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00077	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  0007a	b1 10		 mov	 cl, 16			; 00000010H
  0007c	e8 00 00 00 00	 call	 __aullshr
  00081	88 45 f2	 mov	 BYTE PTR _count$[ebp+2], al
  00084	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00087	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0008a	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0008d	b1 08		 mov	 cl, 8
  0008f	e8 00 00 00 00	 call	 __aullshr
  00094	88 45 f1	 mov	 BYTE PTR _count$[ebp+1], al
  00097	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0009a	8a 42 18	 mov	 al, BYTE PTR [edx+24]
  0009d	88 45 f0	 mov	 BYTE PTR _count$[ebp], al
  000a0	33 c9		 xor	 ecx, ecx
  000a2	0f 85 6a ff ff
	ff		 jne	 $LN4@RMD160Pad

; 118  : #else
; 119  : 	*(uint32 *) (count + 4) = 0;
; 120  : 	*(uint16 *) (count + 2) = 0;
; 121  : 	*(uint16 *) (count + 0) = ctx->count;
; 122  : #endif
; 123  : 
; 124  : 	/* Pad out to 56 mod 64. */
; 125  : 	padlen = RIPEMD160_BLOCK_LENGTH -
; 126  : 		(uint32)((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  000a8	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  000ab	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  000ae	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  000b1	b1 03		 mov	 cl, 3
  000b3	e8 00 00 00 00	 call	 __aullshr
  000b8	83 e0 3f	 and	 eax, 63			; 0000003fH
  000bb	83 e2 00	 and	 edx, 0
  000be	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  000c3	2b c8		 sub	 ecx, eax
  000c5	89 4d fc	 mov	 DWORD PTR _padlen$[ebp], ecx

; 127  : 	if (padlen < 1 + 8)

  000c8	83 7d fc 09	 cmp	 DWORD PTR _padlen$[ebp], 9
  000cc	73 09		 jae	 SHORT $LN1@RMD160Pad

; 128  : 		padlen += RIPEMD160_BLOCK_LENGTH;

  000ce	8b 55 fc	 mov	 edx, DWORD PTR _padlen$[ebp]
  000d1	83 c2 40	 add	 edx, 64			; 00000040H
  000d4	89 55 fc	 mov	 DWORD PTR _padlen$[ebp], edx
$LN1@RMD160Pad:

; 129  : 	RMD160Update(ctx, PADDING, padlen - 8);            /* padlen - 8 <= 64 */

  000d7	8b 45 fc	 mov	 eax, DWORD PTR _padlen$[ebp]
  000da	83 e8 08	 sub	 eax, 8
  000dd	50		 push	 eax
  000de	68 00 00 00 00	 push	 OFFSET _PADDING
  000e3	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000e6	51		 push	 ecx
  000e7	e8 00 00 00 00	 call	 _RMD160Update@12

; 130  : 	RMD160Update(ctx, count, 8);

  000ec	6a 08		 push	 8
  000ee	8d 55 f0	 lea	 edx, DWORD PTR _count$[ebp]
  000f1	52		 push	 edx
  000f2	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 _RMD160Update@12

; 131  : }

  000fb	8b 4d f8	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fe	33 cd		 xor	 ecx, ebp
  00100	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 04 00	 ret	 4
_RMD160Pad@4 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _RMD160Transform@8
_TEXT	SEGMENT
_b1$ = -44						; size = 4
_d1$ = -40						; size = 4
_a2$ = -36						; size = 4
_X$ = -32						; size = 4
_e1$ = -28						; size = 4
_c2$ = -24						; size = 4
_d2$ = -20						; size = 4
_c1$ = -16						; size = 4
_b2$ = -12						; size = 4
_a1$ = -8						; size = 4
_e2$ = -4						; size = 4
_digest$ = 8						; size = 4
_data$ = 12						; size = 4
_RMD160Transform@8 PROC					; COMDAT

; 175  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 2c	 sub	 esp, 44			; 0000002cH

; 176  : #if BYTE_ORDER == LITTLE_ENDIAN
; 177  : 	const word32 *X = data;

  00008	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0000b	89 45 e0	 mov	 DWORD PTR _X$[ebp], eax

; 178  : #else
; 179  : 	word32 X[16];
; 180  : 	int i;
; 181  : #endif
; 182  : 
; 183  : 	word32 a1, b1, c1, d1, e1, a2, b2, c2, d2, e2;
; 184  : 	a1 = a2 = digest[0];

  0000e	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  00011	8b 11		 mov	 edx, DWORD PTR [ecx]
  00013	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  00016	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  00019	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 185  : 	b1 = b2 = digest[1];

  0001c	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  0001f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00022	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  00025	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  00028	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 186  : 	c1 = c2 = digest[2];

  0002b	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  0002e	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00031	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  00034	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  00037	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 187  : 	d1 = d2 = digest[3];

  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  0003d	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00040	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  00043	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  00046	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 188  : 	e1 = e2 = digest[4];

  00049	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  0004c	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0004f	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  00052	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  00055	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 189  : 
; 190  : #if BYTE_ORDER == BIG_ENDIAN
; 191  : 	for (i = 0; i < 16; i++)
; 192  : 	{
; 193  : 		X[i] = LE32 (data[i]);
; 194  : 	}
; 195  : #endif
; 196  : 
; 197  : 	Subround(F, a1, b1, c1, d1, e1, X[ 0], 11, k0);

  00058	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  0005b	33 4d f0	 xor	 ecx, DWORD PTR _c1$[ebp]
  0005e	33 4d d8	 xor	 ecx, DWORD PTR _d1$[ebp]
  00061	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  00064	03 0a		 add	 ecx, DWORD PTR [edx]
  00066	03 4d f8	 add	 ecx, DWORD PTR _a1$[ebp]
  00069	89 4d f8	 mov	 DWORD PTR _a1$[ebp], ecx
  0006c	6a 0b		 push	 11			; 0000000bH
  0006e	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 _rotlFixed@8
  00077	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  0007a	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  0007d	6a 0a		 push	 10			; 0000000aH
  0007f	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00082	51		 push	 ecx
  00083	e8 00 00 00 00	 call	 _rotlFixed@8
  00088	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 198  : 	Subround(F, e1, a1, b1, c1, d1, X[ 1], 14, k0);

  0008b	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  0008e	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00091	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00094	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00097	03 50 04	 add	 edx, DWORD PTR [eax+4]
  0009a	03 55 e4	 add	 edx, DWORD PTR _e1$[ebp]
  0009d	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  000a0	6a 0e		 push	 14			; 0000000eH
  000a2	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  000a5	51		 push	 ecx
  000a6	e8 00 00 00 00	 call	 _rotlFixed@8
  000ab	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  000ae	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  000b1	6a 0a		 push	 10			; 0000000aH
  000b3	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  000b6	52		 push	 edx
  000b7	e8 00 00 00 00	 call	 _rotlFixed@8
  000bc	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 199  : 	Subround(F, d1, e1, a1, b1, c1, X[ 2], 15, k0);

  000bf	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  000c2	33 45 f8	 xor	 eax, DWORD PTR _a1$[ebp]
  000c5	33 45 d4	 xor	 eax, DWORD PTR _b1$[ebp]
  000c8	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  000cb	03 41 08	 add	 eax, DWORD PTR [ecx+8]
  000ce	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  000d1	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  000d4	6a 0f		 push	 15			; 0000000fH
  000d6	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  000d9	52		 push	 edx
  000da	e8 00 00 00 00	 call	 _rotlFixed@8
  000df	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  000e2	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  000e5	6a 0a		 push	 10			; 0000000aH
  000e7	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 _rotlFixed@8
  000f0	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 200  : 	Subround(F, c1, d1, e1, a1, b1, X[ 3], 12, k0);

  000f3	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  000f6	33 4d e4	 xor	 ecx, DWORD PTR _e1$[ebp]
  000f9	33 4d f8	 xor	 ecx, DWORD PTR _a1$[ebp]
  000fc	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  000ff	03 4a 0c	 add	 ecx, DWORD PTR [edx+12]
  00102	03 4d f0	 add	 ecx, DWORD PTR _c1$[ebp]
  00105	89 4d f0	 mov	 DWORD PTR _c1$[ebp], ecx
  00108	6a 0c		 push	 12			; 0000000cH
  0010a	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  0010d	50		 push	 eax
  0010e	e8 00 00 00 00	 call	 _rotlFixed@8
  00113	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00116	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00119	6a 0a		 push	 10			; 0000000aH
  0011b	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  0011e	51		 push	 ecx
  0011f	e8 00 00 00 00	 call	 _rotlFixed@8
  00124	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 201  : 	Subround(F, b1, c1, d1, e1, a1, X[ 4],  5, k0);

  00127	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  0012a	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  0012d	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00130	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00133	03 50 10	 add	 edx, DWORD PTR [eax+16]
  00136	03 55 d4	 add	 edx, DWORD PTR _b1$[ebp]
  00139	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  0013c	6a 05		 push	 5
  0013e	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00141	51		 push	 ecx
  00142	e8 00 00 00 00	 call	 _rotlFixed@8
  00147	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  0014a	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  0014d	6a 0a		 push	 10			; 0000000aH
  0014f	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00152	52		 push	 edx
  00153	e8 00 00 00 00	 call	 _rotlFixed@8
  00158	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 202  : 	Subround(F, a1, b1, c1, d1, e1, X[ 5],  8, k0);

  0015b	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  0015e	33 45 f0	 xor	 eax, DWORD PTR _c1$[ebp]
  00161	33 45 d8	 xor	 eax, DWORD PTR _d1$[ebp]
  00164	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  00167	03 41 14	 add	 eax, DWORD PTR [ecx+20]
  0016a	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  0016d	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00170	6a 08		 push	 8
  00172	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00175	52		 push	 edx
  00176	e8 00 00 00 00	 call	 _rotlFixed@8
  0017b	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  0017e	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00181	6a 0a		 push	 10			; 0000000aH
  00183	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00186	50		 push	 eax
  00187	e8 00 00 00 00	 call	 _rotlFixed@8
  0018c	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 203  : 	Subround(F, e1, a1, b1, c1, d1, X[ 6],  7, k0);

  0018f	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00192	33 4d d4	 xor	 ecx, DWORD PTR _b1$[ebp]
  00195	33 4d f0	 xor	 ecx, DWORD PTR _c1$[ebp]
  00198	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  0019b	03 4a 18	 add	 ecx, DWORD PTR [edx+24]
  0019e	03 4d e4	 add	 ecx, DWORD PTR _e1$[ebp]
  001a1	89 4d e4	 mov	 DWORD PTR _e1$[ebp], ecx
  001a4	6a 07		 push	 7
  001a6	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  001a9	50		 push	 eax
  001aa	e8 00 00 00 00	 call	 _rotlFixed@8
  001af	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  001b2	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  001b5	6a 0a		 push	 10			; 0000000aH
  001b7	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  001ba	51		 push	 ecx
  001bb	e8 00 00 00 00	 call	 _rotlFixed@8
  001c0	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 204  : 	Subround(F, d1, e1, a1, b1, c1, X[ 7],  9, k0);

  001c3	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  001c6	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  001c9	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  001cc	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  001cf	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  001d2	03 55 d8	 add	 edx, DWORD PTR _d1$[ebp]
  001d5	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  001d8	6a 09		 push	 9
  001da	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  001dd	51		 push	 ecx
  001de	e8 00 00 00 00	 call	 _rotlFixed@8
  001e3	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  001e6	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  001e9	6a 0a		 push	 10			; 0000000aH
  001eb	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  001ee	52		 push	 edx
  001ef	e8 00 00 00 00	 call	 _rotlFixed@8
  001f4	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 205  : 	Subround(F, c1, d1, e1, a1, b1, X[ 8], 11, k0);

  001f7	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  001fa	33 45 e4	 xor	 eax, DWORD PTR _e1$[ebp]
  001fd	33 45 f8	 xor	 eax, DWORD PTR _a1$[ebp]
  00200	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  00203	03 41 20	 add	 eax, DWORD PTR [ecx+32]
  00206	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00209	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  0020c	6a 0b		 push	 11			; 0000000bH
  0020e	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00211	52		 push	 edx
  00212	e8 00 00 00 00	 call	 _rotlFixed@8
  00217	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  0021a	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  0021d	6a 0a		 push	 10			; 0000000aH
  0021f	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 _rotlFixed@8
  00228	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 206  : 	Subround(F, b1, c1, d1, e1, a1, X[ 9], 13, k0);

  0022b	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  0022e	33 4d d8	 xor	 ecx, DWORD PTR _d1$[ebp]
  00231	33 4d e4	 xor	 ecx, DWORD PTR _e1$[ebp]
  00234	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  00237	03 4a 24	 add	 ecx, DWORD PTR [edx+36]
  0023a	03 4d d4	 add	 ecx, DWORD PTR _b1$[ebp]
  0023d	89 4d d4	 mov	 DWORD PTR _b1$[ebp], ecx
  00240	6a 0d		 push	 13			; 0000000dH
  00242	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00245	50		 push	 eax
  00246	e8 00 00 00 00	 call	 _rotlFixed@8
  0024b	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  0024e	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00251	6a 0a		 push	 10			; 0000000aH
  00253	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00256	51		 push	 ecx
  00257	e8 00 00 00 00	 call	 _rotlFixed@8
  0025c	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 207  : 	Subround(F, a1, b1, c1, d1, e1, X[10], 14, k0);

  0025f	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00262	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00265	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00268	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0026b	03 50 28	 add	 edx, DWORD PTR [eax+40]
  0026e	03 55 f8	 add	 edx, DWORD PTR _a1$[ebp]
  00271	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00274	6a 0e		 push	 14			; 0000000eH
  00276	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00279	51		 push	 ecx
  0027a	e8 00 00 00 00	 call	 _rotlFixed@8
  0027f	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00282	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00285	6a 0a		 push	 10			; 0000000aH
  00287	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  0028a	52		 push	 edx
  0028b	e8 00 00 00 00	 call	 _rotlFixed@8
  00290	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 208  : 	Subround(F, e1, a1, b1, c1, d1, X[11], 15, k0);

  00293	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00296	33 45 d4	 xor	 eax, DWORD PTR _b1$[ebp]
  00299	33 45 f0	 xor	 eax, DWORD PTR _c1$[ebp]
  0029c	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  0029f	03 41 2c	 add	 eax, DWORD PTR [ecx+44]
  002a2	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  002a5	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  002a8	6a 0f		 push	 15			; 0000000fH
  002aa	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  002ad	52		 push	 edx
  002ae	e8 00 00 00 00	 call	 _rotlFixed@8
  002b3	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  002b6	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  002b9	6a 0a		 push	 10			; 0000000aH
  002bb	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  002be	50		 push	 eax
  002bf	e8 00 00 00 00	 call	 _rotlFixed@8
  002c4	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 209  : 	Subround(F, d1, e1, a1, b1, c1, X[12],  6, k0);

  002c7	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  002ca	33 4d f8	 xor	 ecx, DWORD PTR _a1$[ebp]
  002cd	33 4d d4	 xor	 ecx, DWORD PTR _b1$[ebp]
  002d0	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  002d3	03 4a 30	 add	 ecx, DWORD PTR [edx+48]
  002d6	03 4d d8	 add	 ecx, DWORD PTR _d1$[ebp]
  002d9	89 4d d8	 mov	 DWORD PTR _d1$[ebp], ecx
  002dc	6a 06		 push	 6
  002de	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 _rotlFixed@8
  002e7	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  002ea	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  002ed	6a 0a		 push	 10			; 0000000aH
  002ef	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  002f2	51		 push	 ecx
  002f3	e8 00 00 00 00	 call	 _rotlFixed@8
  002f8	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 210  : 	Subround(F, c1, d1, e1, a1, b1, X[13],  7, k0);

  002fb	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  002fe	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00301	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00304	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00307	03 50 34	 add	 edx, DWORD PTR [eax+52]
  0030a	03 55 f0	 add	 edx, DWORD PTR _c1$[ebp]
  0030d	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00310	6a 07		 push	 7
  00312	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00315	51		 push	 ecx
  00316	e8 00 00 00 00	 call	 _rotlFixed@8
  0031b	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  0031e	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00321	6a 0a		 push	 10			; 0000000aH
  00323	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00326	52		 push	 edx
  00327	e8 00 00 00 00	 call	 _rotlFixed@8
  0032c	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 211  : 	Subround(F, b1, c1, d1, e1, a1, X[14],  9, k0);

  0032f	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00332	33 45 d8	 xor	 eax, DWORD PTR _d1$[ebp]
  00335	33 45 e4	 xor	 eax, DWORD PTR _e1$[ebp]
  00338	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  0033b	03 41 38	 add	 eax, DWORD PTR [ecx+56]
  0033e	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00341	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00344	6a 09		 push	 9
  00346	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00349	52		 push	 edx
  0034a	e8 00 00 00 00	 call	 _rotlFixed@8
  0034f	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  00352	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00355	6a 0a		 push	 10			; 0000000aH
  00357	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  0035a	50		 push	 eax
  0035b	e8 00 00 00 00	 call	 _rotlFixed@8
  00360	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 212  : 	Subround(F, a1, b1, c1, d1, e1, X[15],  8, k0);

  00363	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00366	33 4d f0	 xor	 ecx, DWORD PTR _c1$[ebp]
  00369	33 4d d8	 xor	 ecx, DWORD PTR _d1$[ebp]
  0036c	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  0036f	03 4a 3c	 add	 ecx, DWORD PTR [edx+60]
  00372	03 4d f8	 add	 ecx, DWORD PTR _a1$[ebp]
  00375	89 4d f8	 mov	 DWORD PTR _a1$[ebp], ecx
  00378	6a 08		 push	 8
  0037a	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  0037d	50		 push	 eax
  0037e	e8 00 00 00 00	 call	 _rotlFixed@8
  00383	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00386	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00389	6a 0a		 push	 10			; 0000000aH
  0038b	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  0038e	51		 push	 ecx
  0038f	e8 00 00 00 00	 call	 _rotlFixed@8
  00394	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 213  : 
; 214  : 	Subround(G, e1, a1, b1, c1, d1, X[ 7],  7, k1);

  00397	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  0039a	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  0039d	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  003a0	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  003a3	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  003a6	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  003a9	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  003ac	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  003b3	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  003b6	6a 07		 push	 7
  003b8	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  003bb	50		 push	 eax
  003bc	e8 00 00 00 00	 call	 _rotlFixed@8
  003c1	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  003c4	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  003c7	6a 0a		 push	 10			; 0000000aH
  003c9	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  003cc	51		 push	 ecx
  003cd	e8 00 00 00 00	 call	 _rotlFixed@8
  003d2	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 215  : 	Subround(G, d1, e1, a1, b1, c1, X[ 4],  6, k1);

  003d5	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  003d8	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  003db	23 55 e4	 and	 edx, DWORD PTR _e1$[ebp]
  003de	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  003e1	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  003e4	03 50 10	 add	 edx, DWORD PTR [eax+16]
  003e7	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  003ea	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  003f1	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  003f4	6a 06		 push	 6
  003f6	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  003f9	50		 push	 eax
  003fa	e8 00 00 00 00	 call	 _rotlFixed@8
  003ff	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00402	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  00405	6a 0a		 push	 10			; 0000000aH
  00407	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  0040a	51		 push	 ecx
  0040b	e8 00 00 00 00	 call	 _rotlFixed@8
  00410	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 216  : 	Subround(G, c1, d1, e1, a1, b1, X[13],  8, k1);

  00413	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00416	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00419	23 55 d8	 and	 edx, DWORD PTR _d1$[ebp]
  0041c	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  0041f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00422	03 50 34	 add	 edx, DWORD PTR [eax+52]
  00425	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00428	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  0042f	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00432	6a 08		 push	 8
  00434	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 _rotlFixed@8
  0043d	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00440	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00443	6a 0a		 push	 10			; 0000000aH
  00445	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00448	51		 push	 ecx
  00449	e8 00 00 00 00	 call	 _rotlFixed@8
  0044e	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 217  : 	Subround(G, b1, c1, d1, e1, a1, X[ 1], 13, k1);

  00451	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00454	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00457	23 55 f0	 and	 edx, DWORD PTR _c1$[ebp]
  0045a	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  0045d	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00460	03 50 04	 add	 edx, DWORD PTR [eax+4]
  00463	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00466	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  0046d	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  00470	6a 0d		 push	 13			; 0000000dH
  00472	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00475	50		 push	 eax
  00476	e8 00 00 00 00	 call	 _rotlFixed@8
  0047b	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  0047e	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00481	6a 0a		 push	 10			; 0000000aH
  00483	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00486	51		 push	 ecx
  00487	e8 00 00 00 00	 call	 _rotlFixed@8
  0048c	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 218  : 	Subround(G, a1, b1, c1, d1, e1, X[10], 11, k1);

  0048f	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00492	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00495	23 55 d4	 and	 edx, DWORD PTR _b1$[ebp]
  00498	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  0049b	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0049e	03 50 28	 add	 edx, DWORD PTR [eax+40]
  004a1	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  004a4	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  004ab	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  004ae	6a 0b		 push	 11			; 0000000bH
  004b0	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  004b3	50		 push	 eax
  004b4	e8 00 00 00 00	 call	 _rotlFixed@8
  004b9	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  004bc	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  004bf	6a 0a		 push	 10			; 0000000aH
  004c1	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  004c4	51		 push	 ecx
  004c5	e8 00 00 00 00	 call	 _rotlFixed@8
  004ca	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 219  : 	Subround(G, e1, a1, b1, c1, d1, X[ 6],  9, k1);

  004cd	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  004d0	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  004d3	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  004d6	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  004d9	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  004dc	03 50 18	 add	 edx, DWORD PTR [eax+24]
  004df	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  004e2	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  004e9	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  004ec	6a 09		 push	 9
  004ee	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  004f1	50		 push	 eax
  004f2	e8 00 00 00 00	 call	 _rotlFixed@8
  004f7	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  004fa	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  004fd	6a 0a		 push	 10			; 0000000aH
  004ff	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00502	51		 push	 ecx
  00503	e8 00 00 00 00	 call	 _rotlFixed@8
  00508	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 220  : 	Subround(G, d1, e1, a1, b1, c1, X[15],  7, k1);

  0050b	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  0050e	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00511	23 55 e4	 and	 edx, DWORD PTR _e1$[ebp]
  00514	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00517	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0051a	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  0051d	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00520	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  00527	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  0052a	6a 07		 push	 7
  0052c	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  0052f	50		 push	 eax
  00530	e8 00 00 00 00	 call	 _rotlFixed@8
  00535	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00538	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  0053b	6a 0a		 push	 10			; 0000000aH
  0053d	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00540	51		 push	 ecx
  00541	e8 00 00 00 00	 call	 _rotlFixed@8
  00546	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 221  : 	Subround(G, c1, d1, e1, a1, b1, X[ 3], 15, k1);

  00549	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  0054c	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  0054f	23 55 d8	 and	 edx, DWORD PTR _d1$[ebp]
  00552	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00555	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00558	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  0055b	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  0055e	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  00565	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00568	6a 0f		 push	 15			; 0000000fH
  0056a	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  0056d	50		 push	 eax
  0056e	e8 00 00 00 00	 call	 _rotlFixed@8
  00573	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00576	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00579	6a 0a		 push	 10			; 0000000aH
  0057b	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  0057e	51		 push	 ecx
  0057f	e8 00 00 00 00	 call	 _rotlFixed@8
  00584	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 222  : 	Subround(G, b1, c1, d1, e1, a1, X[12],  7, k1);

  00587	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  0058a	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  0058d	23 55 f0	 and	 edx, DWORD PTR _c1$[ebp]
  00590	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00593	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00596	03 50 30	 add	 edx, DWORD PTR [eax+48]
  00599	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  0059c	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  005a3	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  005a6	6a 07		 push	 7
  005a8	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  005ab	50		 push	 eax
  005ac	e8 00 00 00 00	 call	 _rotlFixed@8
  005b1	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  005b4	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  005b7	6a 0a		 push	 10			; 0000000aH
  005b9	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  005bc	51		 push	 ecx
  005bd	e8 00 00 00 00	 call	 _rotlFixed@8
  005c2	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 223  : 	Subround(G, a1, b1, c1, d1, e1, X[ 0], 12, k1);

  005c5	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  005c8	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  005cb	23 55 d4	 and	 edx, DWORD PTR _b1$[ebp]
  005ce	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  005d1	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  005d4	03 10		 add	 edx, DWORD PTR [eax]
  005d6	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  005d9	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  005e0	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  005e3	6a 0c		 push	 12			; 0000000cH
  005e5	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  005e8	50		 push	 eax
  005e9	e8 00 00 00 00	 call	 _rotlFixed@8
  005ee	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  005f1	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  005f4	6a 0a		 push	 10			; 0000000aH
  005f6	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  005f9	51		 push	 ecx
  005fa	e8 00 00 00 00	 call	 _rotlFixed@8
  005ff	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 224  : 	Subround(G, e1, a1, b1, c1, d1, X[ 9], 15, k1);

  00602	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00605	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00608	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  0060b	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  0060e	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00611	03 50 24	 add	 edx, DWORD PTR [eax+36]
  00614	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00617	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  0061e	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00621	6a 0f		 push	 15			; 0000000fH
  00623	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  00626	50		 push	 eax
  00627	e8 00 00 00 00	 call	 _rotlFixed@8
  0062c	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  0062f	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00632	6a 0a		 push	 10			; 0000000aH
  00634	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00637	51		 push	 ecx
  00638	e8 00 00 00 00	 call	 _rotlFixed@8
  0063d	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 225  : 	Subround(G, d1, e1, a1, b1, c1, X[ 5],  9, k1);

  00640	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00643	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00646	23 55 e4	 and	 edx, DWORD PTR _e1$[ebp]
  00649	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  0064c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0064f	03 50 14	 add	 edx, DWORD PTR [eax+20]
  00652	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00655	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  0065c	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  0065f	6a 09		 push	 9
  00661	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  00664	50		 push	 eax
  00665	e8 00 00 00 00	 call	 _rotlFixed@8
  0066a	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  0066d	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  00670	6a 0a		 push	 10			; 0000000aH
  00672	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00675	51		 push	 ecx
  00676	e8 00 00 00 00	 call	 _rotlFixed@8
  0067b	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 226  : 	Subround(G, c1, d1, e1, a1, b1, X[ 2], 11, k1);

  0067e	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00681	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00684	23 55 d8	 and	 edx, DWORD PTR _d1$[ebp]
  00687	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  0068a	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0068d	03 50 08	 add	 edx, DWORD PTR [eax+8]
  00690	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00693	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  0069a	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  0069d	6a 0b		 push	 11			; 0000000bH
  0069f	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  006a2	50		 push	 eax
  006a3	e8 00 00 00 00	 call	 _rotlFixed@8
  006a8	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  006ab	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  006ae	6a 0a		 push	 10			; 0000000aH
  006b0	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  006b3	51		 push	 ecx
  006b4	e8 00 00 00 00	 call	 _rotlFixed@8
  006b9	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 227  : 	Subround(G, b1, c1, d1, e1, a1, X[14],  7, k1);

  006bc	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  006bf	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  006c2	23 55 f0	 and	 edx, DWORD PTR _c1$[ebp]
  006c5	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  006c8	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  006cb	03 50 38	 add	 edx, DWORD PTR [eax+56]
  006ce	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  006d1	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  006d8	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  006db	6a 07		 push	 7
  006dd	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  006e0	50		 push	 eax
  006e1	e8 00 00 00 00	 call	 _rotlFixed@8
  006e6	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  006e9	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  006ec	6a 0a		 push	 10			; 0000000aH
  006ee	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  006f1	51		 push	 ecx
  006f2	e8 00 00 00 00	 call	 _rotlFixed@8
  006f7	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 228  : 	Subround(G, a1, b1, c1, d1, e1, X[11], 13, k1);

  006fa	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  006fd	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00700	23 55 d4	 and	 edx, DWORD PTR _b1$[ebp]
  00703	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00706	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00709	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  0070c	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  0070f	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  00716	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00719	6a 0d		 push	 13			; 0000000dH
  0071b	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  0071e	50		 push	 eax
  0071f	e8 00 00 00 00	 call	 _rotlFixed@8
  00724	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00727	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  0072a	6a 0a		 push	 10			; 0000000aH
  0072c	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  0072f	51		 push	 ecx
  00730	e8 00 00 00 00	 call	 _rotlFixed@8
  00735	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 229  : 	Subround(G, e1, a1, b1, c1, d1, X[ 8], 12, k1);

  00738	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  0073b	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  0073e	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  00741	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00744	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00747	03 50 20	 add	 edx, DWORD PTR [eax+32]
  0074a	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  0074d	8d 94 11 99 79
	82 5a		 lea	 edx, DWORD PTR [ecx+edx+1518500249]
  00754	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00757	6a 0c		 push	 12			; 0000000cH
  00759	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  0075c	50		 push	 eax
  0075d	e8 00 00 00 00	 call	 _rotlFixed@8
  00762	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  00765	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00768	6a 0a		 push	 10			; 0000000aH
  0076a	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  0076d	51		 push	 ecx
  0076e	e8 00 00 00 00	 call	 _rotlFixed@8
  00773	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 230  : 
; 231  : 	Subround(H, d1, e1, a1, b1, c1, X[ 3], 11, k2);

  00776	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00779	f7 d2		 not	 edx
  0077b	0b 55 e4	 or	 edx, DWORD PTR _e1$[ebp]
  0077e	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00781	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00784	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  00787	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  0078a	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00791	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  00794	6a 0b		 push	 11			; 0000000bH
  00796	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  00799	50		 push	 eax
  0079a	e8 00 00 00 00	 call	 _rotlFixed@8
  0079f	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  007a2	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  007a5	6a 0a		 push	 10			; 0000000aH
  007a7	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  007aa	51		 push	 ecx
  007ab	e8 00 00 00 00	 call	 _rotlFixed@8
  007b0	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 232  : 	Subround(H, c1, d1, e1, a1, b1, X[10], 13, k2);

  007b3	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  007b6	f7 d2		 not	 edx
  007b8	0b 55 d8	 or	 edx, DWORD PTR _d1$[ebp]
  007bb	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  007be	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  007c1	03 50 28	 add	 edx, DWORD PTR [eax+40]
  007c4	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  007c7	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  007ce	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  007d1	6a 0d		 push	 13			; 0000000dH
  007d3	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  007d6	50		 push	 eax
  007d7	e8 00 00 00 00	 call	 _rotlFixed@8
  007dc	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  007df	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  007e2	6a 0a		 push	 10			; 0000000aH
  007e4	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  007e7	51		 push	 ecx
  007e8	e8 00 00 00 00	 call	 _rotlFixed@8
  007ed	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 233  : 	Subround(H, b1, c1, d1, e1, a1, X[14],  6, k2);

  007f0	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  007f3	f7 d2		 not	 edx
  007f5	0b 55 f0	 or	 edx, DWORD PTR _c1$[ebp]
  007f8	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  007fb	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  007fe	03 50 38	 add	 edx, DWORD PTR [eax+56]
  00801	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00804	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  0080b	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  0080e	6a 06		 push	 6
  00810	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00813	50		 push	 eax
  00814	e8 00 00 00 00	 call	 _rotlFixed@8
  00819	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  0081c	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  0081f	6a 0a		 push	 10			; 0000000aH
  00821	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00824	51		 push	 ecx
  00825	e8 00 00 00 00	 call	 _rotlFixed@8
  0082a	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 234  : 	Subround(H, a1, b1, c1, d1, e1, X[ 4],  7, k2);

  0082d	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00830	f7 d2		 not	 edx
  00832	0b 55 d4	 or	 edx, DWORD PTR _b1$[ebp]
  00835	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00838	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0083b	03 50 10	 add	 edx, DWORD PTR [eax+16]
  0083e	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00841	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00848	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  0084b	6a 07		 push	 7
  0084d	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00850	50		 push	 eax
  00851	e8 00 00 00 00	 call	 _rotlFixed@8
  00856	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00859	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  0085c	6a 0a		 push	 10			; 0000000aH
  0085e	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00861	51		 push	 ecx
  00862	e8 00 00 00 00	 call	 _rotlFixed@8
  00867	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 235  : 	Subround(H, e1, a1, b1, c1, d1, X[ 9], 14, k2);

  0086a	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  0086d	f7 d2		 not	 edx
  0086f	0b 55 f8	 or	 edx, DWORD PTR _a1$[ebp]
  00872	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00875	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00878	03 50 24	 add	 edx, DWORD PTR [eax+36]
  0087b	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  0087e	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00885	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00888	6a 0e		 push	 14			; 0000000eH
  0088a	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  0088d	50		 push	 eax
  0088e	e8 00 00 00 00	 call	 _rotlFixed@8
  00893	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  00896	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00899	6a 0a		 push	 10			; 0000000aH
  0089b	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  0089e	51		 push	 ecx
  0089f	e8 00 00 00 00	 call	 _rotlFixed@8
  008a4	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 236  : 	Subround(H, d1, e1, a1, b1, c1, X[15],  9, k2);

  008a7	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  008aa	f7 d2		 not	 edx
  008ac	0b 55 e4	 or	 edx, DWORD PTR _e1$[ebp]
  008af	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  008b2	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  008b5	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  008b8	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  008bb	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  008c2	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  008c5	6a 09		 push	 9
  008c7	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  008ca	50		 push	 eax
  008cb	e8 00 00 00 00	 call	 _rotlFixed@8
  008d0	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  008d3	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  008d6	6a 0a		 push	 10			; 0000000aH
  008d8	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  008db	51		 push	 ecx
  008dc	e8 00 00 00 00	 call	 _rotlFixed@8
  008e1	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 237  : 	Subround(H, c1, d1, e1, a1, b1, X[ 8], 13, k2);

  008e4	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  008e7	f7 d2		 not	 edx
  008e9	0b 55 d8	 or	 edx, DWORD PTR _d1$[ebp]
  008ec	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  008ef	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  008f2	03 50 20	 add	 edx, DWORD PTR [eax+32]
  008f5	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  008f8	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  008ff	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00902	6a 0d		 push	 13			; 0000000dH
  00904	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00907	50		 push	 eax
  00908	e8 00 00 00 00	 call	 _rotlFixed@8
  0090d	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00910	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00913	6a 0a		 push	 10			; 0000000aH
  00915	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00918	51		 push	 ecx
  00919	e8 00 00 00 00	 call	 _rotlFixed@8
  0091e	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 238  : 	Subround(H, b1, c1, d1, e1, a1, X[ 1], 15, k2);

  00921	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00924	f7 d2		 not	 edx
  00926	0b 55 f0	 or	 edx, DWORD PTR _c1$[ebp]
  00929	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  0092c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0092f	03 50 04	 add	 edx, DWORD PTR [eax+4]
  00932	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00935	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  0093c	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  0093f	6a 0f		 push	 15			; 0000000fH
  00941	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00944	50		 push	 eax
  00945	e8 00 00 00 00	 call	 _rotlFixed@8
  0094a	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  0094d	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00950	6a 0a		 push	 10			; 0000000aH
  00952	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00955	51		 push	 ecx
  00956	e8 00 00 00 00	 call	 _rotlFixed@8
  0095b	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 239  : 	Subround(H, a1, b1, c1, d1, e1, X[ 2], 14, k2);

  0095e	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00961	f7 d2		 not	 edx
  00963	0b 55 d4	 or	 edx, DWORD PTR _b1$[ebp]
  00966	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00969	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0096c	03 50 08	 add	 edx, DWORD PTR [eax+8]
  0096f	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00972	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00979	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  0097c	6a 0e		 push	 14			; 0000000eH
  0097e	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00981	50		 push	 eax
  00982	e8 00 00 00 00	 call	 _rotlFixed@8
  00987	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  0098a	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  0098d	6a 0a		 push	 10			; 0000000aH
  0098f	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00992	51		 push	 ecx
  00993	e8 00 00 00 00	 call	 _rotlFixed@8
  00998	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 240  : 	Subround(H, e1, a1, b1, c1, d1, X[ 7],  8, k2);

  0099b	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  0099e	f7 d2		 not	 edx
  009a0	0b 55 f8	 or	 edx, DWORD PTR _a1$[ebp]
  009a3	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  009a6	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  009a9	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  009ac	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  009af	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  009b6	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  009b9	6a 08		 push	 8
  009bb	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  009be	50		 push	 eax
  009bf	e8 00 00 00 00	 call	 _rotlFixed@8
  009c4	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  009c7	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  009ca	6a 0a		 push	 10			; 0000000aH
  009cc	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  009cf	51		 push	 ecx
  009d0	e8 00 00 00 00	 call	 _rotlFixed@8
  009d5	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 241  : 	Subround(H, d1, e1, a1, b1, c1, X[ 0], 13, k2);

  009d8	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  009db	f7 d2		 not	 edx
  009dd	0b 55 e4	 or	 edx, DWORD PTR _e1$[ebp]
  009e0	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  009e3	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  009e6	03 10		 add	 edx, DWORD PTR [eax]
  009e8	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  009eb	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  009f2	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  009f5	6a 0d		 push	 13			; 0000000dH
  009f7	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  009fa	50		 push	 eax
  009fb	e8 00 00 00 00	 call	 _rotlFixed@8
  00a00	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00a03	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  00a06	6a 0a		 push	 10			; 0000000aH
  00a08	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00a0b	51		 push	 ecx
  00a0c	e8 00 00 00 00	 call	 _rotlFixed@8
  00a11	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 242  : 	Subround(H, c1, d1, e1, a1, b1, X[ 6],  6, k2);

  00a14	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00a17	f7 d2		 not	 edx
  00a19	0b 55 d8	 or	 edx, DWORD PTR _d1$[ebp]
  00a1c	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00a1f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00a22	03 50 18	 add	 edx, DWORD PTR [eax+24]
  00a25	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00a28	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00a2f	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00a32	6a 06		 push	 6
  00a34	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00a37	50		 push	 eax
  00a38	e8 00 00 00 00	 call	 _rotlFixed@8
  00a3d	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00a40	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00a43	6a 0a		 push	 10			; 0000000aH
  00a45	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00a48	51		 push	 ecx
  00a49	e8 00 00 00 00	 call	 _rotlFixed@8
  00a4e	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 243  : 	Subround(H, b1, c1, d1, e1, a1, X[13],  5, k2);

  00a51	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00a54	f7 d2		 not	 edx
  00a56	0b 55 f0	 or	 edx, DWORD PTR _c1$[ebp]
  00a59	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00a5c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00a5f	03 50 34	 add	 edx, DWORD PTR [eax+52]
  00a62	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00a65	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00a6c	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  00a6f	6a 05		 push	 5
  00a71	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00a74	50		 push	 eax
  00a75	e8 00 00 00 00	 call	 _rotlFixed@8
  00a7a	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  00a7d	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00a80	6a 0a		 push	 10			; 0000000aH
  00a82	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00a85	51		 push	 ecx
  00a86	e8 00 00 00 00	 call	 _rotlFixed@8
  00a8b	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 244  : 	Subround(H, a1, b1, c1, d1, e1, X[11], 12, k2);

  00a8e	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00a91	f7 d2		 not	 edx
  00a93	0b 55 d4	 or	 edx, DWORD PTR _b1$[ebp]
  00a96	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00a99	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00a9c	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  00a9f	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00aa2	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00aa9	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00aac	6a 0c		 push	 12			; 0000000cH
  00aae	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00ab1	50		 push	 eax
  00ab2	e8 00 00 00 00	 call	 _rotlFixed@8
  00ab7	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00aba	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00abd	6a 0a		 push	 10			; 0000000aH
  00abf	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00ac2	51		 push	 ecx
  00ac3	e8 00 00 00 00	 call	 _rotlFixed@8
  00ac8	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 245  : 	Subround(H, e1, a1, b1, c1, d1, X[ 5],  7, k2);

  00acb	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00ace	f7 d2		 not	 edx
  00ad0	0b 55 f8	 or	 edx, DWORD PTR _a1$[ebp]
  00ad3	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00ad6	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00ad9	03 50 14	 add	 edx, DWORD PTR [eax+20]
  00adc	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00adf	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00ae6	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00ae9	6a 07		 push	 7
  00aeb	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  00aee	50		 push	 eax
  00aef	e8 00 00 00 00	 call	 _rotlFixed@8
  00af4	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  00af7	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00afa	6a 0a		 push	 10			; 0000000aH
  00afc	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00aff	51		 push	 ecx
  00b00	e8 00 00 00 00	 call	 _rotlFixed@8
  00b05	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 246  : 	Subround(H, d1, e1, a1, b1, c1, X[12],  5, k2);

  00b08	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00b0b	f7 d2		 not	 edx
  00b0d	0b 55 e4	 or	 edx, DWORD PTR _e1$[ebp]
  00b10	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00b13	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00b16	03 50 30	 add	 edx, DWORD PTR [eax+48]
  00b19	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00b1c	8d 94 11 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ecx+edx+1859775393]
  00b23	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  00b26	6a 05		 push	 5
  00b28	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  00b2b	50		 push	 eax
  00b2c	e8 00 00 00 00	 call	 _rotlFixed@8
  00b31	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00b34	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  00b37	6a 0a		 push	 10			; 0000000aH
  00b39	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00b3c	51		 push	 ecx
  00b3d	e8 00 00 00 00	 call	 _rotlFixed@8
  00b42	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 247  : 
; 248  : 	Subround(I, c1, d1, e1, a1, b1, X[ 1], 11, k3);

  00b45	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00b48	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00b4b	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  00b4e	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00b51	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00b54	03 50 04	 add	 edx, DWORD PTR [eax+4]
  00b57	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00b5a	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00b61	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00b64	6a 0b		 push	 11			; 0000000bH
  00b66	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00b69	50		 push	 eax
  00b6a	e8 00 00 00 00	 call	 _rotlFixed@8
  00b6f	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00b72	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00b75	6a 0a		 push	 10			; 0000000aH
  00b77	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00b7a	51		 push	 ecx
  00b7b	e8 00 00 00 00	 call	 _rotlFixed@8
  00b80	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 249  : 	Subround(I, b1, c1, d1, e1, a1, X[ 9], 12, k3);

  00b83	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00b86	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00b89	23 55 e4	 and	 edx, DWORD PTR _e1$[ebp]
  00b8c	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00b8f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00b92	03 50 24	 add	 edx, DWORD PTR [eax+36]
  00b95	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00b98	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00b9f	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  00ba2	6a 0c		 push	 12			; 0000000cH
  00ba4	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00ba7	50		 push	 eax
  00ba8	e8 00 00 00 00	 call	 _rotlFixed@8
  00bad	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  00bb0	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00bb3	6a 0a		 push	 10			; 0000000aH
  00bb5	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00bb8	51		 push	 ecx
  00bb9	e8 00 00 00 00	 call	 _rotlFixed@8
  00bbe	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 250  : 	Subround(I, a1, b1, c1, d1, e1, X[11], 14, k3);

  00bc1	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00bc4	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00bc7	23 55 d8	 and	 edx, DWORD PTR _d1$[ebp]
  00bca	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00bcd	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00bd0	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  00bd3	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00bd6	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00bdd	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00be0	6a 0e		 push	 14			; 0000000eH
  00be2	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00be5	50		 push	 eax
  00be6	e8 00 00 00 00	 call	 _rotlFixed@8
  00beb	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00bee	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00bf1	6a 0a		 push	 10			; 0000000aH
  00bf3	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00bf6	51		 push	 ecx
  00bf7	e8 00 00 00 00	 call	 _rotlFixed@8
  00bfc	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 251  : 	Subround(I, e1, a1, b1, c1, d1, X[10], 15, k3);

  00bff	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00c02	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00c05	23 55 f0	 and	 edx, DWORD PTR _c1$[ebp]
  00c08	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00c0b	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00c0e	03 50 28	 add	 edx, DWORD PTR [eax+40]
  00c11	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00c14	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00c1b	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00c1e	6a 0f		 push	 15			; 0000000fH
  00c20	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  00c23	50		 push	 eax
  00c24	e8 00 00 00 00	 call	 _rotlFixed@8
  00c29	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  00c2c	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00c2f	6a 0a		 push	 10			; 0000000aH
  00c31	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00c34	51		 push	 ecx
  00c35	e8 00 00 00 00	 call	 _rotlFixed@8
  00c3a	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 252  : 	Subround(I, d1, e1, a1, b1, c1, X[ 0], 14, k3);

  00c3d	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00c40	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00c43	23 55 d4	 and	 edx, DWORD PTR _b1$[ebp]
  00c46	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00c49	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00c4c	03 10		 add	 edx, DWORD PTR [eax]
  00c4e	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00c51	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00c58	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  00c5b	6a 0e		 push	 14			; 0000000eH
  00c5d	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  00c60	50		 push	 eax
  00c61	e8 00 00 00 00	 call	 _rotlFixed@8
  00c66	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00c69	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  00c6c	6a 0a		 push	 10			; 0000000aH
  00c6e	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00c71	51		 push	 ecx
  00c72	e8 00 00 00 00	 call	 _rotlFixed@8
  00c77	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 253  : 	Subround(I, c1, d1, e1, a1, b1, X[ 8], 15, k3);

  00c7a	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00c7d	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00c80	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  00c83	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00c86	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00c89	03 50 20	 add	 edx, DWORD PTR [eax+32]
  00c8c	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00c8f	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00c96	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00c99	6a 0f		 push	 15			; 0000000fH
  00c9b	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00c9e	50		 push	 eax
  00c9f	e8 00 00 00 00	 call	 _rotlFixed@8
  00ca4	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00ca7	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00caa	6a 0a		 push	 10			; 0000000aH
  00cac	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00caf	51		 push	 ecx
  00cb0	e8 00 00 00 00	 call	 _rotlFixed@8
  00cb5	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 254  : 	Subround(I, b1, c1, d1, e1, a1, X[12],  9, k3);

  00cb8	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00cbb	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00cbe	23 55 e4	 and	 edx, DWORD PTR _e1$[ebp]
  00cc1	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00cc4	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00cc7	03 50 30	 add	 edx, DWORD PTR [eax+48]
  00cca	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00ccd	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00cd4	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  00cd7	6a 09		 push	 9
  00cd9	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00cdc	50		 push	 eax
  00cdd	e8 00 00 00 00	 call	 _rotlFixed@8
  00ce2	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  00ce5	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00ce8	6a 0a		 push	 10			; 0000000aH
  00cea	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00ced	51		 push	 ecx
  00cee	e8 00 00 00 00	 call	 _rotlFixed@8
  00cf3	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 255  : 	Subround(I, a1, b1, c1, d1, e1, X[ 4],  8, k3);

  00cf6	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00cf9	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00cfc	23 55 d8	 and	 edx, DWORD PTR _d1$[ebp]
  00cff	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00d02	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00d05	03 50 10	 add	 edx, DWORD PTR [eax+16]
  00d08	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00d0b	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00d12	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00d15	6a 08		 push	 8
  00d17	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00d1a	50		 push	 eax
  00d1b	e8 00 00 00 00	 call	 _rotlFixed@8
  00d20	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00d23	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00d26	6a 0a		 push	 10			; 0000000aH
  00d28	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00d2b	51		 push	 ecx
  00d2c	e8 00 00 00 00	 call	 _rotlFixed@8
  00d31	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 256  : 	Subround(I, e1, a1, b1, c1, d1, X[13],  9, k3);

  00d34	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00d37	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00d3a	23 55 f0	 and	 edx, DWORD PTR _c1$[ebp]
  00d3d	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00d40	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00d43	03 50 34	 add	 edx, DWORD PTR [eax+52]
  00d46	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00d49	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00d50	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00d53	6a 09		 push	 9
  00d55	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  00d58	50		 push	 eax
  00d59	e8 00 00 00 00	 call	 _rotlFixed@8
  00d5e	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  00d61	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00d64	6a 0a		 push	 10			; 0000000aH
  00d66	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00d69	51		 push	 ecx
  00d6a	e8 00 00 00 00	 call	 _rotlFixed@8
  00d6f	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 257  : 	Subround(I, d1, e1, a1, b1, c1, X[ 3], 14, k3);

  00d72	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00d75	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00d78	23 55 d4	 and	 edx, DWORD PTR _b1$[ebp]
  00d7b	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00d7e	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00d81	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  00d84	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00d87	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00d8e	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  00d91	6a 0e		 push	 14			; 0000000eH
  00d93	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  00d96	50		 push	 eax
  00d97	e8 00 00 00 00	 call	 _rotlFixed@8
  00d9c	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00d9f	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  00da2	6a 0a		 push	 10			; 0000000aH
  00da4	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00da7	51		 push	 ecx
  00da8	e8 00 00 00 00	 call	 _rotlFixed@8
  00dad	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 258  : 	Subround(I, c1, d1, e1, a1, b1, X[ 7],  5, k3);

  00db0	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00db3	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00db6	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  00db9	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00dbc	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00dbf	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  00dc2	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00dc5	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00dcc	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00dcf	6a 05		 push	 5
  00dd1	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00dd4	50		 push	 eax
  00dd5	e8 00 00 00 00	 call	 _rotlFixed@8
  00dda	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00ddd	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00de0	6a 0a		 push	 10			; 0000000aH
  00de2	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00de5	51		 push	 ecx
  00de6	e8 00 00 00 00	 call	 _rotlFixed@8
  00deb	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 259  : 	Subround(I, b1, c1, d1, e1, a1, X[15],  6, k3);

  00dee	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00df1	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00df4	23 55 e4	 and	 edx, DWORD PTR _e1$[ebp]
  00df7	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  00dfa	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00dfd	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  00e00	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00e03	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00e0a	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  00e0d	6a 06		 push	 6
  00e0f	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00e12	50		 push	 eax
  00e13	e8 00 00 00 00	 call	 _rotlFixed@8
  00e18	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  00e1b	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00e1e	6a 0a		 push	 10			; 0000000aH
  00e20	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00e23	51		 push	 ecx
  00e24	e8 00 00 00 00	 call	 _rotlFixed@8
  00e29	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 260  : 	Subround(I, a1, b1, c1, d1, e1, X[14],  8, k3);

  00e2c	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00e2f	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00e32	23 55 d8	 and	 edx, DWORD PTR _d1$[ebp]
  00e35	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00e38	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00e3b	03 50 38	 add	 edx, DWORD PTR [eax+56]
  00e3e	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00e41	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00e48	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00e4b	6a 08		 push	 8
  00e4d	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00e50	50		 push	 eax
  00e51	e8 00 00 00 00	 call	 _rotlFixed@8
  00e56	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00e59	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00e5c	6a 0a		 push	 10			; 0000000aH
  00e5e	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00e61	51		 push	 ecx
  00e62	e8 00 00 00 00	 call	 _rotlFixed@8
  00e67	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 261  : 	Subround(I, e1, a1, b1, c1, d1, X[ 5],  6, k3);

  00e6a	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00e6d	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00e70	23 55 f0	 and	 edx, DWORD PTR _c1$[ebp]
  00e73	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00e76	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00e79	03 50 14	 add	 edx, DWORD PTR [eax+20]
  00e7c	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00e7f	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00e86	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00e89	6a 06		 push	 6
  00e8b	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  00e8e	50		 push	 eax
  00e8f	e8 00 00 00 00	 call	 _rotlFixed@8
  00e94	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  00e97	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00e9a	6a 0a		 push	 10			; 0000000aH
  00e9c	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00e9f	51		 push	 ecx
  00ea0	e8 00 00 00 00	 call	 _rotlFixed@8
  00ea5	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 262  : 	Subround(I, d1, e1, a1, b1, c1, X[ 6],  5, k3);

  00ea8	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00eab	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00eae	23 55 d4	 and	 edx, DWORD PTR _b1$[ebp]
  00eb1	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00eb4	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00eb7	03 50 18	 add	 edx, DWORD PTR [eax+24]
  00eba	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00ebd	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00ec4	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  00ec7	6a 05		 push	 5
  00ec9	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  00ecc	50		 push	 eax
  00ecd	e8 00 00 00 00	 call	 _rotlFixed@8
  00ed2	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  00ed5	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  00ed8	6a 0a		 push	 10			; 0000000aH
  00eda	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00edd	51		 push	 ecx
  00ede	e8 00 00 00 00	 call	 _rotlFixed@8
  00ee3	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 263  : 	Subround(I, c1, d1, e1, a1, b1, X[ 2], 12, k3);

  00ee6	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00ee9	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00eec	23 55 f8	 and	 edx, DWORD PTR _a1$[ebp]
  00eef	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00ef2	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00ef5	03 50 08	 add	 edx, DWORD PTR [eax+8]
  00ef8	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00efb	8d 94 11 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ecx+edx-1894007588]
  00f02	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00f05	6a 0c		 push	 12			; 0000000cH
  00f07	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  00f0a	50		 push	 eax
  00f0b	e8 00 00 00 00	 call	 _rotlFixed@8
  00f10	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  00f13	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  00f16	6a 0a		 push	 10			; 0000000aH
  00f18	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00f1b	51		 push	 ecx
  00f1c	e8 00 00 00 00	 call	 _rotlFixed@8
  00f21	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 264  : 
; 265  : 	Subround(J, b1, c1, d1, e1, a1, X[ 4],  9, k4);

  00f24	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  00f27	f7 d2		 not	 edx
  00f29	0b 55 d8	 or	 edx, DWORD PTR _d1$[ebp]
  00f2c	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00f2f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00f32	03 50 10	 add	 edx, DWORD PTR [eax+16]
  00f35	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00f38	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  00f3f	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  00f42	6a 09		 push	 9
  00f44	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  00f47	50		 push	 eax
  00f48	e8 00 00 00 00	 call	 _rotlFixed@8
  00f4d	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  00f50	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  00f53	6a 0a		 push	 10			; 0000000aH
  00f55	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00f58	51		 push	 ecx
  00f59	e8 00 00 00 00	 call	 _rotlFixed@8
  00f5e	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 266  : 	Subround(J, a1, b1, c1, d1, e1, X[ 0], 15, k4);

  00f61	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  00f64	f7 d2		 not	 edx
  00f66	0b 55 f0	 or	 edx, DWORD PTR _c1$[ebp]
  00f69	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  00f6c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00f6f	03 10		 add	 edx, DWORD PTR [eax]
  00f71	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  00f74	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  00f7b	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00f7e	6a 0f		 push	 15			; 0000000fH
  00f80	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  00f83	50		 push	 eax
  00f84	e8 00 00 00 00	 call	 _rotlFixed@8
  00f89	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  00f8c	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  00f8f	6a 0a		 push	 10			; 0000000aH
  00f91	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  00f94	51		 push	 ecx
  00f95	e8 00 00 00 00	 call	 _rotlFixed@8
  00f9a	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 267  : 	Subround(J, e1, a1, b1, c1, d1, X[ 5],  5, k4);

  00f9d	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00fa0	f7 d2		 not	 edx
  00fa2	0b 55 d4	 or	 edx, DWORD PTR _b1$[ebp]
  00fa5	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  00fa8	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00fab	03 50 14	 add	 edx, DWORD PTR [eax+20]
  00fae	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  00fb1	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  00fb8	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  00fbb	6a 05		 push	 5
  00fbd	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  00fc0	50		 push	 eax
  00fc1	e8 00 00 00 00	 call	 _rotlFixed@8
  00fc6	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  00fc9	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  00fcc	6a 0a		 push	 10			; 0000000aH
  00fce	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  00fd1	51		 push	 ecx
  00fd2	e8 00 00 00 00	 call	 _rotlFixed@8
  00fd7	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 268  : 	Subround(J, d1, e1, a1, b1, c1, X[ 9], 11, k4);

  00fda	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  00fdd	f7 d2		 not	 edx
  00fdf	0b 55 f8	 or	 edx, DWORD PTR _a1$[ebp]
  00fe2	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  00fe5	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  00fe8	03 50 24	 add	 edx, DWORD PTR [eax+36]
  00feb	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  00fee	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  00ff5	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  00ff8	6a 0b		 push	 11			; 0000000bH
  00ffa	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  00ffd	50		 push	 eax
  00ffe	e8 00 00 00 00	 call	 _rotlFixed@8
  01003	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  01006	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  01009	6a 0a		 push	 10			; 0000000aH
  0100b	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  0100e	51		 push	 ecx
  0100f	e8 00 00 00 00	 call	 _rotlFixed@8
  01014	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 269  : 	Subround(J, c1, d1, e1, a1, b1, X[ 7],  6, k4);

  01017	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  0101a	f7 d2		 not	 edx
  0101c	0b 55 e4	 or	 edx, DWORD PTR _e1$[ebp]
  0101f	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  01022	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01025	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  01028	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  0102b	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  01032	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  01035	6a 06		 push	 6
  01037	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  0103a	50		 push	 eax
  0103b	e8 00 00 00 00	 call	 _rotlFixed@8
  01040	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  01043	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  01046	6a 0a		 push	 10			; 0000000aH
  01048	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  0104b	51		 push	 ecx
  0104c	e8 00 00 00 00	 call	 _rotlFixed@8
  01051	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 270  : 	Subround(J, b1, c1, d1, e1, a1, X[12],  8, k4);

  01054	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  01057	f7 d2		 not	 edx
  01059	0b 55 d8	 or	 edx, DWORD PTR _d1$[ebp]
  0105c	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  0105f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01062	03 50 30	 add	 edx, DWORD PTR [eax+48]
  01065	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  01068	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  0106f	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  01072	6a 08		 push	 8
  01074	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  01077	50		 push	 eax
  01078	e8 00 00 00 00	 call	 _rotlFixed@8
  0107d	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  01080	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  01083	6a 0a		 push	 10			; 0000000aH
  01085	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  01088	51		 push	 ecx
  01089	e8 00 00 00 00	 call	 _rotlFixed@8
  0108e	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 271  : 	Subround(J, a1, b1, c1, d1, e1, X[ 2], 13, k4);

  01091	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  01094	f7 d2		 not	 edx
  01096	0b 55 f0	 or	 edx, DWORD PTR _c1$[ebp]
  01099	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  0109c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0109f	03 50 08	 add	 edx, DWORD PTR [eax+8]
  010a2	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  010a5	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  010ac	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  010af	6a 0d		 push	 13			; 0000000dH
  010b1	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  010b4	50		 push	 eax
  010b5	e8 00 00 00 00	 call	 _rotlFixed@8
  010ba	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  010bd	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  010c0	6a 0a		 push	 10			; 0000000aH
  010c2	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  010c5	51		 push	 ecx
  010c6	e8 00 00 00 00	 call	 _rotlFixed@8
  010cb	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 272  : 	Subround(J, e1, a1, b1, c1, d1, X[10], 12, k4);

  010ce	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  010d1	f7 d2		 not	 edx
  010d3	0b 55 d4	 or	 edx, DWORD PTR _b1$[ebp]
  010d6	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  010d9	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  010dc	03 50 28	 add	 edx, DWORD PTR [eax+40]
  010df	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  010e2	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  010e9	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  010ec	6a 0c		 push	 12			; 0000000cH
  010ee	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  010f1	50		 push	 eax
  010f2	e8 00 00 00 00	 call	 _rotlFixed@8
  010f7	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  010fa	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  010fd	6a 0a		 push	 10			; 0000000aH
  010ff	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  01102	51		 push	 ecx
  01103	e8 00 00 00 00	 call	 _rotlFixed@8
  01108	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 273  : 	Subround(J, d1, e1, a1, b1, c1, X[14],  5, k4);

  0110b	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  0110e	f7 d2		 not	 edx
  01110	0b 55 f8	 or	 edx, DWORD PTR _a1$[ebp]
  01113	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  01116	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01119	03 50 38	 add	 edx, DWORD PTR [eax+56]
  0111c	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  0111f	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  01126	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  01129	6a 05		 push	 5
  0112b	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  0112e	50		 push	 eax
  0112f	e8 00 00 00 00	 call	 _rotlFixed@8
  01134	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  01137	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  0113a	6a 0a		 push	 10			; 0000000aH
  0113c	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  0113f	51		 push	 ecx
  01140	e8 00 00 00 00	 call	 _rotlFixed@8
  01145	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 274  : 	Subround(J, c1, d1, e1, a1, b1, X[ 1], 12, k4);

  01148	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  0114b	f7 d2		 not	 edx
  0114d	0b 55 e4	 or	 edx, DWORD PTR _e1$[ebp]
  01150	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  01153	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01156	03 50 04	 add	 edx, DWORD PTR [eax+4]
  01159	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  0115c	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  01163	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  01166	6a 0c		 push	 12			; 0000000cH
  01168	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  0116b	50		 push	 eax
  0116c	e8 00 00 00 00	 call	 _rotlFixed@8
  01171	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  01174	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  01177	6a 0a		 push	 10			; 0000000aH
  01179	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  0117c	51		 push	 ecx
  0117d	e8 00 00 00 00	 call	 _rotlFixed@8
  01182	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 275  : 	Subround(J, b1, c1, d1, e1, a1, X[ 3], 13, k4);

  01185	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  01188	f7 d2		 not	 edx
  0118a	0b 55 d8	 or	 edx, DWORD PTR _d1$[ebp]
  0118d	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  01190	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01193	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  01196	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  01199	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  011a0	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  011a3	6a 0d		 push	 13			; 0000000dH
  011a5	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  011a8	50		 push	 eax
  011a9	e8 00 00 00 00	 call	 _rotlFixed@8
  011ae	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  011b1	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  011b4	6a 0a		 push	 10			; 0000000aH
  011b6	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  011b9	51		 push	 ecx
  011ba	e8 00 00 00 00	 call	 _rotlFixed@8
  011bf	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 276  : 	Subround(J, a1, b1, c1, d1, e1, X[ 8], 14, k4);

  011c2	8b 55 d8	 mov	 edx, DWORD PTR _d1$[ebp]
  011c5	f7 d2		 not	 edx
  011c7	0b 55 f0	 or	 edx, DWORD PTR _c1$[ebp]
  011ca	33 55 d4	 xor	 edx, DWORD PTR _b1$[ebp]
  011cd	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  011d0	03 50 20	 add	 edx, DWORD PTR [eax+32]
  011d3	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  011d6	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  011dd	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  011e0	6a 0e		 push	 14			; 0000000eH
  011e2	8b 45 f8	 mov	 eax, DWORD PTR _a1$[ebp]
  011e5	50		 push	 eax
  011e6	e8 00 00 00 00	 call	 _rotlFixed@8
  011eb	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  011ee	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax
  011f1	6a 0a		 push	 10			; 0000000aH
  011f3	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  011f6	51		 push	 ecx
  011f7	e8 00 00 00 00	 call	 _rotlFixed@8
  011fc	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax

; 277  : 	Subround(J, e1, a1, b1, c1, d1, X[11], 11, k4);

  011ff	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  01202	f7 d2		 not	 edx
  01204	0b 55 d4	 or	 edx, DWORD PTR _b1$[ebp]
  01207	33 55 f8	 xor	 edx, DWORD PTR _a1$[ebp]
  0120a	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0120d	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  01210	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  01213	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  0121a	89 55 e4	 mov	 DWORD PTR _e1$[ebp], edx
  0121d	6a 0b		 push	 11			; 0000000bH
  0121f	8b 45 e4	 mov	 eax, DWORD PTR _e1$[ebp]
  01222	50		 push	 eax
  01223	e8 00 00 00 00	 call	 _rotlFixed@8
  01228	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  0122b	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax
  0122e	6a 0a		 push	 10			; 0000000aH
  01230	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  01233	51		 push	 ecx
  01234	e8 00 00 00 00	 call	 _rotlFixed@8
  01239	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax

; 278  : 	Subround(J, d1, e1, a1, b1, c1, X[ 6],  8, k4);

  0123c	8b 55 d4	 mov	 edx, DWORD PTR _b1$[ebp]
  0123f	f7 d2		 not	 edx
  01241	0b 55 f8	 or	 edx, DWORD PTR _a1$[ebp]
  01244	33 55 e4	 xor	 edx, DWORD PTR _e1$[ebp]
  01247	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0124a	03 50 18	 add	 edx, DWORD PTR [eax+24]
  0124d	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  01250	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  01257	89 55 d8	 mov	 DWORD PTR _d1$[ebp], edx
  0125a	6a 08		 push	 8
  0125c	8b 45 d8	 mov	 eax, DWORD PTR _d1$[ebp]
  0125f	50		 push	 eax
  01260	e8 00 00 00 00	 call	 _rotlFixed@8
  01265	03 45 f0	 add	 eax, DWORD PTR _c1$[ebp]
  01268	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax
  0126b	6a 0a		 push	 10			; 0000000aH
  0126d	8b 4d f8	 mov	 ecx, DWORD PTR _a1$[ebp]
  01270	51		 push	 ecx
  01271	e8 00 00 00 00	 call	 _rotlFixed@8
  01276	89 45 f8	 mov	 DWORD PTR _a1$[ebp], eax

; 279  : 	Subround(J, c1, d1, e1, a1, b1, X[15],  5, k4);

  01279	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  0127c	f7 d2		 not	 edx
  0127e	0b 55 e4	 or	 edx, DWORD PTR _e1$[ebp]
  01281	33 55 d8	 xor	 edx, DWORD PTR _d1$[ebp]
  01284	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01287	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  0128a	8b 4d f0	 mov	 ecx, DWORD PTR _c1$[ebp]
  0128d	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  01294	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  01297	6a 05		 push	 5
  01299	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  0129c	50		 push	 eax
  0129d	e8 00 00 00 00	 call	 _rotlFixed@8
  012a2	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  012a5	89 45 f0	 mov	 DWORD PTR _c1$[ebp], eax
  012a8	6a 0a		 push	 10			; 0000000aH
  012aa	8b 4d e4	 mov	 ecx, DWORD PTR _e1$[ebp]
  012ad	51		 push	 ecx
  012ae	e8 00 00 00 00	 call	 _rotlFixed@8
  012b3	89 45 e4	 mov	 DWORD PTR _e1$[ebp], eax

; 280  : 	Subround(J, b1, c1, d1, e1, a1, X[13],  6, k4);

  012b6	8b 55 e4	 mov	 edx, DWORD PTR _e1$[ebp]
  012b9	f7 d2		 not	 edx
  012bb	0b 55 d8	 or	 edx, DWORD PTR _d1$[ebp]
  012be	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  012c1	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  012c4	03 50 34	 add	 edx, DWORD PTR [eax+52]
  012c7	8b 4d d4	 mov	 ecx, DWORD PTR _b1$[ebp]
  012ca	8d 94 11 4e fd
	53 a9		 lea	 edx, DWORD PTR [ecx+edx-1454113458]
  012d1	89 55 d4	 mov	 DWORD PTR _b1$[ebp], edx
  012d4	6a 06		 push	 6
  012d6	8b 45 d4	 mov	 eax, DWORD PTR _b1$[ebp]
  012d9	50		 push	 eax
  012da	e8 00 00 00 00	 call	 _rotlFixed@8
  012df	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  012e2	89 45 d4	 mov	 DWORD PTR _b1$[ebp], eax
  012e5	6a 0a		 push	 10			; 0000000aH
  012e7	8b 4d d8	 mov	 ecx, DWORD PTR _d1$[ebp]
  012ea	51		 push	 ecx
  012eb	e8 00 00 00 00	 call	 _rotlFixed@8
  012f0	89 45 d8	 mov	 DWORD PTR _d1$[ebp], eax

; 281  : 
; 282  : 	Subround(J, a2, b2, c2, d2, e2, X[ 5],  8, k5);

  012f3	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  012f6	f7 d2		 not	 edx
  012f8	0b 55 e8	 or	 edx, DWORD PTR _c2$[ebp]
  012fb	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  012fe	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01301	03 50 14	 add	 edx, DWORD PTR [eax+20]
  01304	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01307	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  0130e	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01311	6a 08		 push	 8
  01313	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01316	50		 push	 eax
  01317	e8 00 00 00 00	 call	 _rotlFixed@8
  0131c	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  0131f	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01322	6a 0a		 push	 10			; 0000000aH
  01324	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01327	51		 push	 ecx
  01328	e8 00 00 00 00	 call	 _rotlFixed@8
  0132d	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 283  : 	Subround(J, e2, a2, b2, c2, d2, X[14],  9, k5);

  01330	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  01333	f7 d2		 not	 edx
  01335	0b 55 f4	 or	 edx, DWORD PTR _b2$[ebp]
  01338	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  0133b	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0133e	03 50 38	 add	 edx, DWORD PTR [eax+56]
  01341	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01344	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  0134b	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  0134e	6a 09		 push	 9
  01350	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01353	50		 push	 eax
  01354	e8 00 00 00 00	 call	 _rotlFixed@8
  01359	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  0135c	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  0135f	6a 0a		 push	 10			; 0000000aH
  01361	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01364	51		 push	 ecx
  01365	e8 00 00 00 00	 call	 _rotlFixed@8
  0136a	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 284  : 	Subround(J, d2, e2, a2, b2, c2, X[ 7],  9, k5);

  0136d	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  01370	f7 d2		 not	 edx
  01372	0b 55 dc	 or	 edx, DWORD PTR _a2$[ebp]
  01375	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01378	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0137b	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  0137e	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01381	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  01388	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  0138b	6a 09		 push	 9
  0138d	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01390	50		 push	 eax
  01391	e8 00 00 00 00	 call	 _rotlFixed@8
  01396	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01399	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  0139c	6a 0a		 push	 10			; 0000000aH
  0139e	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  013a1	51		 push	 ecx
  013a2	e8 00 00 00 00	 call	 _rotlFixed@8
  013a7	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 285  : 	Subround(J, c2, d2, e2, a2, b2, X[ 0], 11, k5);

  013aa	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  013ad	f7 d2		 not	 edx
  013af	0b 55 fc	 or	 edx, DWORD PTR _e2$[ebp]
  013b2	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  013b5	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  013b8	03 10		 add	 edx, DWORD PTR [eax]
  013ba	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  013bd	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  013c4	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  013c7	6a 0b		 push	 11			; 0000000bH
  013c9	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  013cc	50		 push	 eax
  013cd	e8 00 00 00 00	 call	 _rotlFixed@8
  013d2	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  013d5	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  013d8	6a 0a		 push	 10			; 0000000aH
  013da	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  013dd	51		 push	 ecx
  013de	e8 00 00 00 00	 call	 _rotlFixed@8
  013e3	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 286  : 	Subround(J, b2, c2, d2, e2, a2, X[ 9], 13, k5);

  013e6	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  013e9	f7 d2		 not	 edx
  013eb	0b 55 ec	 or	 edx, DWORD PTR _d2$[ebp]
  013ee	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  013f1	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  013f4	03 50 24	 add	 edx, DWORD PTR [eax+36]
  013f7	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  013fa	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  01401	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01404	6a 0d		 push	 13			; 0000000dH
  01406	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  01409	50		 push	 eax
  0140a	e8 00 00 00 00	 call	 _rotlFixed@8
  0140f	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01412	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01415	6a 0a		 push	 10			; 0000000aH
  01417	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  0141a	51		 push	 ecx
  0141b	e8 00 00 00 00	 call	 _rotlFixed@8
  01420	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 287  : 	Subround(J, a2, b2, c2, d2, e2, X[ 2], 15, k5);

  01423	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01426	f7 d2		 not	 edx
  01428	0b 55 e8	 or	 edx, DWORD PTR _c2$[ebp]
  0142b	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  0142e	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01431	03 50 08	 add	 edx, DWORD PTR [eax+8]
  01434	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01437	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  0143e	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01441	6a 0f		 push	 15			; 0000000fH
  01443	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01446	50		 push	 eax
  01447	e8 00 00 00 00	 call	 _rotlFixed@8
  0144c	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  0144f	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01452	6a 0a		 push	 10			; 0000000aH
  01454	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01457	51		 push	 ecx
  01458	e8 00 00 00 00	 call	 _rotlFixed@8
  0145d	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 288  : 	Subround(J, e2, a2, b2, c2, d2, X[11], 15, k5);

  01460	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  01463	f7 d2		 not	 edx
  01465	0b 55 f4	 or	 edx, DWORD PTR _b2$[ebp]
  01468	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  0146b	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0146e	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  01471	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01474	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  0147b	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  0147e	6a 0f		 push	 15			; 0000000fH
  01480	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01483	50		 push	 eax
  01484	e8 00 00 00 00	 call	 _rotlFixed@8
  01489	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  0148c	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  0148f	6a 0a		 push	 10			; 0000000aH
  01491	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01494	51		 push	 ecx
  01495	e8 00 00 00 00	 call	 _rotlFixed@8
  0149a	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 289  : 	Subround(J, d2, e2, a2, b2, c2, X[ 4],  5, k5);

  0149d	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  014a0	f7 d2		 not	 edx
  014a2	0b 55 dc	 or	 edx, DWORD PTR _a2$[ebp]
  014a5	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  014a8	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  014ab	03 50 10	 add	 edx, DWORD PTR [eax+16]
  014ae	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  014b1	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  014b8	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  014bb	6a 05		 push	 5
  014bd	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  014c0	50		 push	 eax
  014c1	e8 00 00 00 00	 call	 _rotlFixed@8
  014c6	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  014c9	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  014cc	6a 0a		 push	 10			; 0000000aH
  014ce	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  014d1	51		 push	 ecx
  014d2	e8 00 00 00 00	 call	 _rotlFixed@8
  014d7	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 290  : 	Subround(J, c2, d2, e2, a2, b2, X[13],  7, k5);

  014da	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  014dd	f7 d2		 not	 edx
  014df	0b 55 fc	 or	 edx, DWORD PTR _e2$[ebp]
  014e2	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  014e5	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  014e8	03 50 34	 add	 edx, DWORD PTR [eax+52]
  014eb	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  014ee	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  014f5	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  014f8	6a 07		 push	 7
  014fa	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  014fd	50		 push	 eax
  014fe	e8 00 00 00 00	 call	 _rotlFixed@8
  01503	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  01506	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  01509	6a 0a		 push	 10			; 0000000aH
  0150b	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  0150e	51		 push	 ecx
  0150f	e8 00 00 00 00	 call	 _rotlFixed@8
  01514	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 291  : 	Subround(J, b2, c2, d2, e2, a2, X[ 6],  7, k5);

  01517	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  0151a	f7 d2		 not	 edx
  0151c	0b 55 ec	 or	 edx, DWORD PTR _d2$[ebp]
  0151f	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01522	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01525	03 50 18	 add	 edx, DWORD PTR [eax+24]
  01528	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  0152b	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  01532	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01535	6a 07		 push	 7
  01537	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  0153a	50		 push	 eax
  0153b	e8 00 00 00 00	 call	 _rotlFixed@8
  01540	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01543	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01546	6a 0a		 push	 10			; 0000000aH
  01548	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  0154b	51		 push	 ecx
  0154c	e8 00 00 00 00	 call	 _rotlFixed@8
  01551	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 292  : 	Subround(J, a2, b2, c2, d2, e2, X[15],  8, k5);

  01554	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01557	f7 d2		 not	 edx
  01559	0b 55 e8	 or	 edx, DWORD PTR _c2$[ebp]
  0155c	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  0155f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01562	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  01565	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01568	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  0156f	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01572	6a 08		 push	 8
  01574	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01577	50		 push	 eax
  01578	e8 00 00 00 00	 call	 _rotlFixed@8
  0157d	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  01580	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01583	6a 0a		 push	 10			; 0000000aH
  01585	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01588	51		 push	 ecx
  01589	e8 00 00 00 00	 call	 _rotlFixed@8
  0158e	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 293  : 	Subround(J, e2, a2, b2, c2, d2, X[ 8], 11, k5);

  01591	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  01594	f7 d2		 not	 edx
  01596	0b 55 f4	 or	 edx, DWORD PTR _b2$[ebp]
  01599	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  0159c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0159f	03 50 20	 add	 edx, DWORD PTR [eax+32]
  015a2	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  015a5	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  015ac	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  015af	6a 0b		 push	 11			; 0000000bH
  015b1	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  015b4	50		 push	 eax
  015b5	e8 00 00 00 00	 call	 _rotlFixed@8
  015ba	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  015bd	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  015c0	6a 0a		 push	 10			; 0000000aH
  015c2	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  015c5	51		 push	 ecx
  015c6	e8 00 00 00 00	 call	 _rotlFixed@8
  015cb	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 294  : 	Subround(J, d2, e2, a2, b2, c2, X[ 1], 14, k5);

  015ce	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  015d1	f7 d2		 not	 edx
  015d3	0b 55 dc	 or	 edx, DWORD PTR _a2$[ebp]
  015d6	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  015d9	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  015dc	03 50 04	 add	 edx, DWORD PTR [eax+4]
  015df	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  015e2	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  015e9	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  015ec	6a 0e		 push	 14			; 0000000eH
  015ee	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  015f1	50		 push	 eax
  015f2	e8 00 00 00 00	 call	 _rotlFixed@8
  015f7	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  015fa	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  015fd	6a 0a		 push	 10			; 0000000aH
  015ff	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01602	51		 push	 ecx
  01603	e8 00 00 00 00	 call	 _rotlFixed@8
  01608	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 295  : 	Subround(J, c2, d2, e2, a2, b2, X[10], 14, k5);

  0160b	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  0160e	f7 d2		 not	 edx
  01610	0b 55 fc	 or	 edx, DWORD PTR _e2$[ebp]
  01613	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01616	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01619	03 50 28	 add	 edx, DWORD PTR [eax+40]
  0161c	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  0161f	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  01626	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  01629	6a 0e		 push	 14			; 0000000eH
  0162b	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  0162e	50		 push	 eax
  0162f	e8 00 00 00 00	 call	 _rotlFixed@8
  01634	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  01637	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  0163a	6a 0a		 push	 10			; 0000000aH
  0163c	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  0163f	51		 push	 ecx
  01640	e8 00 00 00 00	 call	 _rotlFixed@8
  01645	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 296  : 	Subround(J, b2, c2, d2, e2, a2, X[ 3], 12, k5);

  01648	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  0164b	f7 d2		 not	 edx
  0164d	0b 55 ec	 or	 edx, DWORD PTR _d2$[ebp]
  01650	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01653	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01656	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  01659	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  0165c	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  01663	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01666	6a 0c		 push	 12			; 0000000cH
  01668	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  0166b	50		 push	 eax
  0166c	e8 00 00 00 00	 call	 _rotlFixed@8
  01671	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01674	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01677	6a 0a		 push	 10			; 0000000aH
  01679	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  0167c	51		 push	 ecx
  0167d	e8 00 00 00 00	 call	 _rotlFixed@8
  01682	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 297  : 	Subround(J, a2, b2, c2, d2, e2, X[12],  6, k5);

  01685	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01688	f7 d2		 not	 edx
  0168a	0b 55 e8	 or	 edx, DWORD PTR _c2$[ebp]
  0168d	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01690	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01693	03 50 30	 add	 edx, DWORD PTR [eax+48]
  01696	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01699	8d 94 11 e6 8b
	a2 50		 lea	 edx, DWORD PTR [ecx+edx+1352829926]
  016a0	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  016a3	6a 06		 push	 6
  016a5	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  016a8	50		 push	 eax
  016a9	e8 00 00 00 00	 call	 _rotlFixed@8
  016ae	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  016b1	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  016b4	6a 0a		 push	 10			; 0000000aH
  016b6	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  016b9	51		 push	 ecx
  016ba	e8 00 00 00 00	 call	 _rotlFixed@8
  016bf	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 298  : 
; 299  : 	Subround(I, e2, a2, b2, c2, d2, X[ 6],  9, k6); 

  016c2	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  016c5	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  016c8	23 55 e8	 and	 edx, DWORD PTR _c2$[ebp]
  016cb	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  016ce	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  016d1	03 50 18	 add	 edx, DWORD PTR [eax+24]
  016d4	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  016d7	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  016de	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  016e1	6a 09		 push	 9
  016e3	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  016e6	50		 push	 eax
  016e7	e8 00 00 00 00	 call	 _rotlFixed@8
  016ec	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  016ef	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  016f2	6a 0a		 push	 10			; 0000000aH
  016f4	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  016f7	51		 push	 ecx
  016f8	e8 00 00 00 00	 call	 _rotlFixed@8
  016fd	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 300  : 	Subround(I, d2, e2, a2, b2, c2, X[11], 13, k6);

  01700	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  01703	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01706	23 55 f4	 and	 edx, DWORD PTR _b2$[ebp]
  01709	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  0170c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0170f	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  01712	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01715	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  0171c	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  0171f	6a 0d		 push	 13			; 0000000dH
  01721	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01724	50		 push	 eax
  01725	e8 00 00 00 00	 call	 _rotlFixed@8
  0172a	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  0172d	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  01730	6a 0a		 push	 10			; 0000000aH
  01732	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01735	51		 push	 ecx
  01736	e8 00 00 00 00	 call	 _rotlFixed@8
  0173b	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 301  : 	Subround(I, c2, d2, e2, a2, b2, X[ 3], 15, k6);

  0173e	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01741	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01744	23 55 dc	 and	 edx, DWORD PTR _a2$[ebp]
  01747	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  0174a	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0174d	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  01750	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01753	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  0175a	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  0175d	6a 0f		 push	 15			; 0000000fH
  0175f	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  01762	50		 push	 eax
  01763	e8 00 00 00 00	 call	 _rotlFixed@8
  01768	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  0176b	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  0176e	6a 0a		 push	 10			; 0000000aH
  01770	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01773	51		 push	 ecx
  01774	e8 00 00 00 00	 call	 _rotlFixed@8
  01779	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 302  : 	Subround(I, b2, c2, d2, e2, a2, X[ 7],  7, k6);

  0177c	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  0177f	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01782	23 55 fc	 and	 edx, DWORD PTR _e2$[ebp]
  01785	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01788	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0178b	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  0178e	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01791	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01798	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  0179b	6a 07		 push	 7
  0179d	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  017a0	50		 push	 eax
  017a1	e8 00 00 00 00	 call	 _rotlFixed@8
  017a6	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  017a9	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  017ac	6a 0a		 push	 10			; 0000000aH
  017ae	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  017b1	51		 push	 ecx
  017b2	e8 00 00 00 00	 call	 _rotlFixed@8
  017b7	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 303  : 	Subround(I, a2, b2, c2, d2, e2, X[ 0], 12, k6);

  017ba	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  017bd	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  017c0	23 55 ec	 and	 edx, DWORD PTR _d2$[ebp]
  017c3	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  017c6	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  017c9	03 10		 add	 edx, DWORD PTR [eax]
  017cb	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  017ce	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  017d5	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  017d8	6a 0c		 push	 12			; 0000000cH
  017da	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  017dd	50		 push	 eax
  017de	e8 00 00 00 00	 call	 _rotlFixed@8
  017e3	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  017e6	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  017e9	6a 0a		 push	 10			; 0000000aH
  017eb	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  017ee	51		 push	 ecx
  017ef	e8 00 00 00 00	 call	 _rotlFixed@8
  017f4	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 304  : 	Subround(I, e2, a2, b2, c2, d2, X[13],  8, k6);

  017f7	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  017fa	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  017fd	23 55 e8	 and	 edx, DWORD PTR _c2$[ebp]
  01800	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01803	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01806	03 50 34	 add	 edx, DWORD PTR [eax+52]
  01809	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  0180c	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01813	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  01816	6a 08		 push	 8
  01818	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  0181b	50		 push	 eax
  0181c	e8 00 00 00 00	 call	 _rotlFixed@8
  01821	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  01824	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  01827	6a 0a		 push	 10			; 0000000aH
  01829	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  0182c	51		 push	 ecx
  0182d	e8 00 00 00 00	 call	 _rotlFixed@8
  01832	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 305  : 	Subround(I, d2, e2, a2, b2, c2, X[ 5],  9, k6);

  01835	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  01838	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  0183b	23 55 f4	 and	 edx, DWORD PTR _b2$[ebp]
  0183e	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01841	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01844	03 50 14	 add	 edx, DWORD PTR [eax+20]
  01847	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  0184a	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01851	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  01854	6a 09		 push	 9
  01856	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01859	50		 push	 eax
  0185a	e8 00 00 00 00	 call	 _rotlFixed@8
  0185f	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01862	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  01865	6a 0a		 push	 10			; 0000000aH
  01867	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  0186a	51		 push	 ecx
  0186b	e8 00 00 00 00	 call	 _rotlFixed@8
  01870	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 306  : 	Subround(I, c2, d2, e2, a2, b2, X[10], 11, k6);

  01873	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01876	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01879	23 55 dc	 and	 edx, DWORD PTR _a2$[ebp]
  0187c	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  0187f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01882	03 50 28	 add	 edx, DWORD PTR [eax+40]
  01885	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01888	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  0188f	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  01892	6a 0b		 push	 11			; 0000000bH
  01894	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  01897	50		 push	 eax
  01898	e8 00 00 00 00	 call	 _rotlFixed@8
  0189d	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  018a0	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  018a3	6a 0a		 push	 10			; 0000000aH
  018a5	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  018a8	51		 push	 ecx
  018a9	e8 00 00 00 00	 call	 _rotlFixed@8
  018ae	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 307  : 	Subround(I, b2, c2, d2, e2, a2, X[14],  7, k6);

  018b1	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  018b4	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  018b7	23 55 fc	 and	 edx, DWORD PTR _e2$[ebp]
  018ba	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  018bd	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  018c0	03 50 38	 add	 edx, DWORD PTR [eax+56]
  018c3	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  018c6	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  018cd	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  018d0	6a 07		 push	 7
  018d2	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  018d5	50		 push	 eax
  018d6	e8 00 00 00 00	 call	 _rotlFixed@8
  018db	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  018de	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  018e1	6a 0a		 push	 10			; 0000000aH
  018e3	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  018e6	51		 push	 ecx
  018e7	e8 00 00 00 00	 call	 _rotlFixed@8
  018ec	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 308  : 	Subround(I, a2, b2, c2, d2, e2, X[15],  7, k6);

  018ef	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  018f2	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  018f5	23 55 ec	 and	 edx, DWORD PTR _d2$[ebp]
  018f8	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  018fb	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  018fe	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  01901	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01904	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  0190b	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  0190e	6a 07		 push	 7
  01910	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01913	50		 push	 eax
  01914	e8 00 00 00 00	 call	 _rotlFixed@8
  01919	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  0191c	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  0191f	6a 0a		 push	 10			; 0000000aH
  01921	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01924	51		 push	 ecx
  01925	e8 00 00 00 00	 call	 _rotlFixed@8
  0192a	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 309  : 	Subround(I, e2, a2, b2, c2, d2, X[ 8], 12, k6);

  0192d	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  01930	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01933	23 55 e8	 and	 edx, DWORD PTR _c2$[ebp]
  01936	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01939	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0193c	03 50 20	 add	 edx, DWORD PTR [eax+32]
  0193f	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01942	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01949	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  0194c	6a 0c		 push	 12			; 0000000cH
  0194e	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01951	50		 push	 eax
  01952	e8 00 00 00 00	 call	 _rotlFixed@8
  01957	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  0195a	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  0195d	6a 0a		 push	 10			; 0000000aH
  0195f	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01962	51		 push	 ecx
  01963	e8 00 00 00 00	 call	 _rotlFixed@8
  01968	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 310  : 	Subround(I, d2, e2, a2, b2, c2, X[12],  7, k6);

  0196b	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  0196e	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01971	23 55 f4	 and	 edx, DWORD PTR _b2$[ebp]
  01974	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01977	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0197a	03 50 30	 add	 edx, DWORD PTR [eax+48]
  0197d	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01980	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01987	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  0198a	6a 07		 push	 7
  0198c	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  0198f	50		 push	 eax
  01990	e8 00 00 00 00	 call	 _rotlFixed@8
  01995	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01998	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  0199b	6a 0a		 push	 10			; 0000000aH
  0199d	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  019a0	51		 push	 ecx
  019a1	e8 00 00 00 00	 call	 _rotlFixed@8
  019a6	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 311  : 	Subround(I, c2, d2, e2, a2, b2, X[ 4],  6, k6);

  019a9	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  019ac	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  019af	23 55 dc	 and	 edx, DWORD PTR _a2$[ebp]
  019b2	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  019b5	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  019b8	03 50 10	 add	 edx, DWORD PTR [eax+16]
  019bb	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  019be	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  019c5	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  019c8	6a 06		 push	 6
  019ca	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  019cd	50		 push	 eax
  019ce	e8 00 00 00 00	 call	 _rotlFixed@8
  019d3	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  019d6	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  019d9	6a 0a		 push	 10			; 0000000aH
  019db	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  019de	51		 push	 ecx
  019df	e8 00 00 00 00	 call	 _rotlFixed@8
  019e4	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 312  : 	Subround(I, b2, c2, d2, e2, a2, X[ 9], 15, k6);

  019e7	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  019ea	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  019ed	23 55 fc	 and	 edx, DWORD PTR _e2$[ebp]
  019f0	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  019f3	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  019f6	03 50 24	 add	 edx, DWORD PTR [eax+36]
  019f9	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  019fc	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01a03	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01a06	6a 0f		 push	 15			; 0000000fH
  01a08	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  01a0b	50		 push	 eax
  01a0c	e8 00 00 00 00	 call	 _rotlFixed@8
  01a11	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01a14	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01a17	6a 0a		 push	 10			; 0000000aH
  01a19	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01a1c	51		 push	 ecx
  01a1d	e8 00 00 00 00	 call	 _rotlFixed@8
  01a22	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 313  : 	Subround(I, a2, b2, c2, d2, e2, X[ 1], 13, k6);

  01a25	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  01a28	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01a2b	23 55 ec	 and	 edx, DWORD PTR _d2$[ebp]
  01a2e	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01a31	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01a34	03 50 04	 add	 edx, DWORD PTR [eax+4]
  01a37	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01a3a	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01a41	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01a44	6a 0d		 push	 13			; 0000000dH
  01a46	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01a49	50		 push	 eax
  01a4a	e8 00 00 00 00	 call	 _rotlFixed@8
  01a4f	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  01a52	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01a55	6a 0a		 push	 10			; 0000000aH
  01a57	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01a5a	51		 push	 ecx
  01a5b	e8 00 00 00 00	 call	 _rotlFixed@8
  01a60	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 314  : 	Subround(I, e2, a2, b2, c2, d2, X[ 2], 11, k6);

  01a63	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  01a66	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01a69	23 55 e8	 and	 edx, DWORD PTR _c2$[ebp]
  01a6c	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01a6f	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01a72	03 50 08	 add	 edx, DWORD PTR [eax+8]
  01a75	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01a78	8d 94 11 24 d1
	4d 5c		 lea	 edx, DWORD PTR [ecx+edx+1548603684]
  01a7f	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  01a82	6a 0b		 push	 11			; 0000000bH
  01a84	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01a87	50		 push	 eax
  01a88	e8 00 00 00 00	 call	 _rotlFixed@8
  01a8d	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  01a90	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  01a93	6a 0a		 push	 10			; 0000000aH
  01a95	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01a98	51		 push	 ecx
  01a99	e8 00 00 00 00	 call	 _rotlFixed@8
  01a9e	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 315  : 
; 316  : 	Subround(H, d2, e2, a2, b2, c2, X[15],  9, k7);

  01aa1	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  01aa4	f7 d2		 not	 edx
  01aa6	0b 55 fc	 or	 edx, DWORD PTR _e2$[ebp]
  01aa9	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01aac	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01aaf	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  01ab2	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01ab5	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01abc	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  01abf	6a 09		 push	 9
  01ac1	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01ac4	50		 push	 eax
  01ac5	e8 00 00 00 00	 call	 _rotlFixed@8
  01aca	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01acd	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  01ad0	6a 0a		 push	 10			; 0000000aH
  01ad2	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01ad5	51		 push	 ecx
  01ad6	e8 00 00 00 00	 call	 _rotlFixed@8
  01adb	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 317  : 	Subround(H, c2, d2, e2, a2, b2, X[ 5],  7, k7);

  01ade	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  01ae1	f7 d2		 not	 edx
  01ae3	0b 55 ec	 or	 edx, DWORD PTR _d2$[ebp]
  01ae6	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01ae9	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01aec	03 50 14	 add	 edx, DWORD PTR [eax+20]
  01aef	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01af2	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01af9	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  01afc	6a 07		 push	 7
  01afe	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  01b01	50		 push	 eax
  01b02	e8 00 00 00 00	 call	 _rotlFixed@8
  01b07	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  01b0a	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  01b0d	6a 0a		 push	 10			; 0000000aH
  01b0f	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01b12	51		 push	 ecx
  01b13	e8 00 00 00 00	 call	 _rotlFixed@8
  01b18	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 318  : 	Subround(H, b2, c2, d2, e2, a2, X[ 1], 15, k7);

  01b1b	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01b1e	f7 d2		 not	 edx
  01b20	0b 55 e8	 or	 edx, DWORD PTR _c2$[ebp]
  01b23	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01b26	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01b29	03 50 04	 add	 edx, DWORD PTR [eax+4]
  01b2c	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01b2f	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01b36	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01b39	6a 0f		 push	 15			; 0000000fH
  01b3b	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  01b3e	50		 push	 eax
  01b3f	e8 00 00 00 00	 call	 _rotlFixed@8
  01b44	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01b47	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01b4a	6a 0a		 push	 10			; 0000000aH
  01b4c	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01b4f	51		 push	 ecx
  01b50	e8 00 00 00 00	 call	 _rotlFixed@8
  01b55	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 319  : 	Subround(H, a2, b2, c2, d2, e2, X[ 3], 11, k7);

  01b58	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  01b5b	f7 d2		 not	 edx
  01b5d	0b 55 f4	 or	 edx, DWORD PTR _b2$[ebp]
  01b60	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01b63	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01b66	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  01b69	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01b6c	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01b73	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01b76	6a 0b		 push	 11			; 0000000bH
  01b78	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01b7b	50		 push	 eax
  01b7c	e8 00 00 00 00	 call	 _rotlFixed@8
  01b81	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  01b84	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01b87	6a 0a		 push	 10			; 0000000aH
  01b89	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01b8c	51		 push	 ecx
  01b8d	e8 00 00 00 00	 call	 _rotlFixed@8
  01b92	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 320  : 	Subround(H, e2, a2, b2, c2, d2, X[ 7],  8, k7);

  01b95	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  01b98	f7 d2		 not	 edx
  01b9a	0b 55 dc	 or	 edx, DWORD PTR _a2$[ebp]
  01b9d	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01ba0	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01ba3	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  01ba6	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01ba9	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01bb0	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  01bb3	6a 08		 push	 8
  01bb5	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01bb8	50		 push	 eax
  01bb9	e8 00 00 00 00	 call	 _rotlFixed@8
  01bbe	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  01bc1	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  01bc4	6a 0a		 push	 10			; 0000000aH
  01bc6	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01bc9	51		 push	 ecx
  01bca	e8 00 00 00 00	 call	 _rotlFixed@8
  01bcf	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 321  : 	Subround(H, d2, e2, a2, b2, c2, X[14],  6, k7);

  01bd2	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  01bd5	f7 d2		 not	 edx
  01bd7	0b 55 fc	 or	 edx, DWORD PTR _e2$[ebp]
  01bda	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01bdd	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01be0	03 50 38	 add	 edx, DWORD PTR [eax+56]
  01be3	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01be6	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01bed	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  01bf0	6a 06		 push	 6
  01bf2	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01bf5	50		 push	 eax
  01bf6	e8 00 00 00 00	 call	 _rotlFixed@8
  01bfb	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01bfe	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  01c01	6a 0a		 push	 10			; 0000000aH
  01c03	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01c06	51		 push	 ecx
  01c07	e8 00 00 00 00	 call	 _rotlFixed@8
  01c0c	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 322  : 	Subround(H, c2, d2, e2, a2, b2, X[ 6],  6, k7);

  01c0f	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  01c12	f7 d2		 not	 edx
  01c14	0b 55 ec	 or	 edx, DWORD PTR _d2$[ebp]
  01c17	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01c1a	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01c1d	03 50 18	 add	 edx, DWORD PTR [eax+24]
  01c20	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01c23	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01c2a	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  01c2d	6a 06		 push	 6
  01c2f	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  01c32	50		 push	 eax
  01c33	e8 00 00 00 00	 call	 _rotlFixed@8
  01c38	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  01c3b	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  01c3e	6a 0a		 push	 10			; 0000000aH
  01c40	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01c43	51		 push	 ecx
  01c44	e8 00 00 00 00	 call	 _rotlFixed@8
  01c49	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 323  : 	Subround(H, b2, c2, d2, e2, a2, X[ 9], 14, k7);

  01c4c	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01c4f	f7 d2		 not	 edx
  01c51	0b 55 e8	 or	 edx, DWORD PTR _c2$[ebp]
  01c54	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01c57	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01c5a	03 50 24	 add	 edx, DWORD PTR [eax+36]
  01c5d	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01c60	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01c67	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01c6a	6a 0e		 push	 14			; 0000000eH
  01c6c	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  01c6f	50		 push	 eax
  01c70	e8 00 00 00 00	 call	 _rotlFixed@8
  01c75	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01c78	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01c7b	6a 0a		 push	 10			; 0000000aH
  01c7d	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01c80	51		 push	 ecx
  01c81	e8 00 00 00 00	 call	 _rotlFixed@8
  01c86	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 324  : 	Subround(H, a2, b2, c2, d2, e2, X[11], 12, k7);

  01c89	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  01c8c	f7 d2		 not	 edx
  01c8e	0b 55 f4	 or	 edx, DWORD PTR _b2$[ebp]
  01c91	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01c94	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01c97	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  01c9a	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01c9d	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01ca4	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01ca7	6a 0c		 push	 12			; 0000000cH
  01ca9	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01cac	50		 push	 eax
  01cad	e8 00 00 00 00	 call	 _rotlFixed@8
  01cb2	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  01cb5	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01cb8	6a 0a		 push	 10			; 0000000aH
  01cba	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01cbd	51		 push	 ecx
  01cbe	e8 00 00 00 00	 call	 _rotlFixed@8
  01cc3	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 325  : 	Subround(H, e2, a2, b2, c2, d2, X[ 8], 13, k7);

  01cc6	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  01cc9	f7 d2		 not	 edx
  01ccb	0b 55 dc	 or	 edx, DWORD PTR _a2$[ebp]
  01cce	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01cd1	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01cd4	03 50 20	 add	 edx, DWORD PTR [eax+32]
  01cd7	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01cda	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01ce1	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  01ce4	6a 0d		 push	 13			; 0000000dH
  01ce6	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01ce9	50		 push	 eax
  01cea	e8 00 00 00 00	 call	 _rotlFixed@8
  01cef	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  01cf2	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  01cf5	6a 0a		 push	 10			; 0000000aH
  01cf7	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01cfa	51		 push	 ecx
  01cfb	e8 00 00 00 00	 call	 _rotlFixed@8
  01d00	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 326  : 	Subround(H, d2, e2, a2, b2, c2, X[12],  5, k7);

  01d03	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  01d06	f7 d2		 not	 edx
  01d08	0b 55 fc	 or	 edx, DWORD PTR _e2$[ebp]
  01d0b	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01d0e	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01d11	03 50 30	 add	 edx, DWORD PTR [eax+48]
  01d14	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01d17	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01d1e	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  01d21	6a 05		 push	 5
  01d23	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01d26	50		 push	 eax
  01d27	e8 00 00 00 00	 call	 _rotlFixed@8
  01d2c	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01d2f	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  01d32	6a 0a		 push	 10			; 0000000aH
  01d34	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01d37	51		 push	 ecx
  01d38	e8 00 00 00 00	 call	 _rotlFixed@8
  01d3d	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 327  : 	Subround(H, c2, d2, e2, a2, b2, X[ 2], 14, k7);

  01d40	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  01d43	f7 d2		 not	 edx
  01d45	0b 55 ec	 or	 edx, DWORD PTR _d2$[ebp]
  01d48	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01d4b	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01d4e	03 50 08	 add	 edx, DWORD PTR [eax+8]
  01d51	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01d54	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01d5b	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  01d5e	6a 0e		 push	 14			; 0000000eH
  01d60	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  01d63	50		 push	 eax
  01d64	e8 00 00 00 00	 call	 _rotlFixed@8
  01d69	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  01d6c	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  01d6f	6a 0a		 push	 10			; 0000000aH
  01d71	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01d74	51		 push	 ecx
  01d75	e8 00 00 00 00	 call	 _rotlFixed@8
  01d7a	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 328  : 	Subround(H, b2, c2, d2, e2, a2, X[10], 13, k7);

  01d7d	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01d80	f7 d2		 not	 edx
  01d82	0b 55 e8	 or	 edx, DWORD PTR _c2$[ebp]
  01d85	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01d88	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01d8b	03 50 28	 add	 edx, DWORD PTR [eax+40]
  01d8e	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01d91	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01d98	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01d9b	6a 0d		 push	 13			; 0000000dH
  01d9d	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  01da0	50		 push	 eax
  01da1	e8 00 00 00 00	 call	 _rotlFixed@8
  01da6	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01da9	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01dac	6a 0a		 push	 10			; 0000000aH
  01dae	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01db1	51		 push	 ecx
  01db2	e8 00 00 00 00	 call	 _rotlFixed@8
  01db7	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 329  : 	Subround(H, a2, b2, c2, d2, e2, X[ 0], 13, k7);

  01dba	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  01dbd	f7 d2		 not	 edx
  01dbf	0b 55 f4	 or	 edx, DWORD PTR _b2$[ebp]
  01dc2	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01dc5	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01dc8	03 10		 add	 edx, DWORD PTR [eax]
  01dca	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01dcd	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01dd4	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01dd7	6a 0d		 push	 13			; 0000000dH
  01dd9	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01ddc	50		 push	 eax
  01ddd	e8 00 00 00 00	 call	 _rotlFixed@8
  01de2	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  01de5	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01de8	6a 0a		 push	 10			; 0000000aH
  01dea	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01ded	51		 push	 ecx
  01dee	e8 00 00 00 00	 call	 _rotlFixed@8
  01df3	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 330  : 	Subround(H, e2, a2, b2, c2, d2, X[ 4],  7, k7);

  01df6	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  01df9	f7 d2		 not	 edx
  01dfb	0b 55 dc	 or	 edx, DWORD PTR _a2$[ebp]
  01dfe	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01e01	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01e04	03 50 10	 add	 edx, DWORD PTR [eax+16]
  01e07	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01e0a	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01e11	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  01e14	6a 07		 push	 7
  01e16	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01e19	50		 push	 eax
  01e1a	e8 00 00 00 00	 call	 _rotlFixed@8
  01e1f	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  01e22	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  01e25	6a 0a		 push	 10			; 0000000aH
  01e27	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01e2a	51		 push	 ecx
  01e2b	e8 00 00 00 00	 call	 _rotlFixed@8
  01e30	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 331  : 	Subround(H, d2, e2, a2, b2, c2, X[13],  5, k7);

  01e33	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  01e36	f7 d2		 not	 edx
  01e38	0b 55 fc	 or	 edx, DWORD PTR _e2$[ebp]
  01e3b	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01e3e	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01e41	03 50 34	 add	 edx, DWORD PTR [eax+52]
  01e44	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01e47	8d 94 11 f3 3e
	70 6d		 lea	 edx, DWORD PTR [ecx+edx+1836072691]
  01e4e	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  01e51	6a 05		 push	 5
  01e53	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01e56	50		 push	 eax
  01e57	e8 00 00 00 00	 call	 _rotlFixed@8
  01e5c	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01e5f	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  01e62	6a 0a		 push	 10			; 0000000aH
  01e64	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01e67	51		 push	 ecx
  01e68	e8 00 00 00 00	 call	 _rotlFixed@8
  01e6d	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 332  : 
; 333  : 	Subround(G, c2, d2, e2, a2, b2, X[ 8], 15, k8);

  01e70	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  01e73	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01e76	23 55 ec	 and	 edx, DWORD PTR _d2$[ebp]
  01e79	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01e7c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01e7f	03 50 20	 add	 edx, DWORD PTR [eax+32]
  01e82	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01e85	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  01e8c	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  01e8f	6a 0f		 push	 15			; 0000000fH
  01e91	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  01e94	50		 push	 eax
  01e95	e8 00 00 00 00	 call	 _rotlFixed@8
  01e9a	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  01e9d	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  01ea0	6a 0a		 push	 10			; 0000000aH
  01ea2	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01ea5	51		 push	 ecx
  01ea6	e8 00 00 00 00	 call	 _rotlFixed@8
  01eab	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 334  : 	Subround(G, b2, c2, d2, e2, a2, X[ 6],  5, k8);

  01eae	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01eb1	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01eb4	23 55 e8	 and	 edx, DWORD PTR _c2$[ebp]
  01eb7	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01eba	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01ebd	03 50 18	 add	 edx, DWORD PTR [eax+24]
  01ec0	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01ec3	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  01eca	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  01ecd	6a 05		 push	 5
  01ecf	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  01ed2	50		 push	 eax
  01ed3	e8 00 00 00 00	 call	 _rotlFixed@8
  01ed8	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  01edb	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  01ede	6a 0a		 push	 10			; 0000000aH
  01ee0	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01ee3	51		 push	 ecx
  01ee4	e8 00 00 00 00	 call	 _rotlFixed@8
  01ee9	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 335  : 	Subround(G, a2, b2, c2, d2, e2, X[ 4],  8, k8);

  01eec	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  01eef	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01ef2	23 55 f4	 and	 edx, DWORD PTR _b2$[ebp]
  01ef5	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  01ef8	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01efb	03 50 10	 add	 edx, DWORD PTR [eax+16]
  01efe	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01f01	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  01f08	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  01f0b	6a 08		 push	 8
  01f0d	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  01f10	50		 push	 eax
  01f11	e8 00 00 00 00	 call	 _rotlFixed@8
  01f16	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  01f19	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  01f1c	6a 0a		 push	 10			; 0000000aH
  01f1e	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01f21	51		 push	 ecx
  01f22	e8 00 00 00 00	 call	 _rotlFixed@8
  01f27	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 336  : 	Subround(G, e2, a2, b2, c2, d2, X[ 1], 11, k8);

  01f2a	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  01f2d	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01f30	23 55 dc	 and	 edx, DWORD PTR _a2$[ebp]
  01f33	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  01f36	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01f39	03 50 04	 add	 edx, DWORD PTR [eax+4]
  01f3c	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01f3f	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  01f46	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  01f49	6a 0b		 push	 11			; 0000000bH
  01f4b	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01f4e	50		 push	 eax
  01f4f	e8 00 00 00 00	 call	 _rotlFixed@8
  01f54	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  01f57	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  01f5a	6a 0a		 push	 10			; 0000000aH
  01f5c	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01f5f	51		 push	 ecx
  01f60	e8 00 00 00 00	 call	 _rotlFixed@8
  01f65	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 337  : 	Subround(G, d2, e2, a2, b2, c2, X[ 3], 14, k8);

  01f68	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  01f6b	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01f6e	23 55 fc	 and	 edx, DWORD PTR _e2$[ebp]
  01f71	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  01f74	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01f77	03 50 0c	 add	 edx, DWORD PTR [eax+12]
  01f7a	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  01f7d	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  01f84	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  01f87	6a 0e		 push	 14			; 0000000eH
  01f89	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  01f8c	50		 push	 eax
  01f8d	e8 00 00 00 00	 call	 _rotlFixed@8
  01f92	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  01f95	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  01f98	6a 0a		 push	 10			; 0000000aH
  01f9a	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  01f9d	51		 push	 ecx
  01f9e	e8 00 00 00 00	 call	 _rotlFixed@8
  01fa3	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 338  : 	Subround(G, c2, d2, e2, a2, b2, X[11], 14, k8);

  01fa6	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  01fa9	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01fac	23 55 ec	 and	 edx, DWORD PTR _d2$[ebp]
  01faf	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  01fb2	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01fb5	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  01fb8	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  01fbb	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  01fc2	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  01fc5	6a 0e		 push	 14			; 0000000eH
  01fc7	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  01fca	50		 push	 eax
  01fcb	e8 00 00 00 00	 call	 _rotlFixed@8
  01fd0	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  01fd3	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  01fd6	6a 0a		 push	 10			; 0000000aH
  01fd8	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  01fdb	51		 push	 ecx
  01fdc	e8 00 00 00 00	 call	 _rotlFixed@8
  01fe1	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 339  : 	Subround(G, b2, c2, d2, e2, a2, X[15],  6, k8);

  01fe4	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  01fe7	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01fea	23 55 e8	 and	 edx, DWORD PTR _c2$[ebp]
  01fed	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  01ff0	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  01ff3	03 50 3c	 add	 edx, DWORD PTR [eax+60]
  01ff6	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  01ff9	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  02000	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  02003	6a 06		 push	 6
  02005	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  02008	50		 push	 eax
  02009	e8 00 00 00 00	 call	 _rotlFixed@8
  0200e	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  02011	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  02014	6a 0a		 push	 10			; 0000000aH
  02016	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  02019	51		 push	 ecx
  0201a	e8 00 00 00 00	 call	 _rotlFixed@8
  0201f	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 340  : 	Subround(G, a2, b2, c2, d2, e2, X[ 0], 14, k8);

  02022	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  02025	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  02028	23 55 f4	 and	 edx, DWORD PTR _b2$[ebp]
  0202b	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  0202e	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  02031	03 10		 add	 edx, DWORD PTR [eax]
  02033	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  02036	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  0203d	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  02040	6a 0e		 push	 14			; 0000000eH
  02042	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  02045	50		 push	 eax
  02046	e8 00 00 00 00	 call	 _rotlFixed@8
  0204b	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  0204e	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  02051	6a 0a		 push	 10			; 0000000aH
  02053	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  02056	51		 push	 ecx
  02057	e8 00 00 00 00	 call	 _rotlFixed@8
  0205c	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 341  : 	Subround(G, e2, a2, b2, c2, d2, X[ 5],  6, k8);

  0205f	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  02062	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  02065	23 55 dc	 and	 edx, DWORD PTR _a2$[ebp]
  02068	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  0206b	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0206e	03 50 14	 add	 edx, DWORD PTR [eax+20]
  02071	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  02074	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  0207b	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  0207e	6a 06		 push	 6
  02080	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  02083	50		 push	 eax
  02084	e8 00 00 00 00	 call	 _rotlFixed@8
  02089	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  0208c	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  0208f	6a 0a		 push	 10			; 0000000aH
  02091	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  02094	51		 push	 ecx
  02095	e8 00 00 00 00	 call	 _rotlFixed@8
  0209a	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 342  : 	Subround(G, d2, e2, a2, b2, c2, X[12],  9, k8);

  0209d	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  020a0	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  020a3	23 55 fc	 and	 edx, DWORD PTR _e2$[ebp]
  020a6	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  020a9	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  020ac	03 50 30	 add	 edx, DWORD PTR [eax+48]
  020af	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  020b2	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  020b9	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  020bc	6a 09		 push	 9
  020be	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  020c1	50		 push	 eax
  020c2	e8 00 00 00 00	 call	 _rotlFixed@8
  020c7	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  020ca	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  020cd	6a 0a		 push	 10			; 0000000aH
  020cf	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  020d2	51		 push	 ecx
  020d3	e8 00 00 00 00	 call	 _rotlFixed@8
  020d8	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 343  : 	Subround(G, c2, d2, e2, a2, b2, X[ 2], 12, k8);

  020db	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  020de	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  020e1	23 55 ec	 and	 edx, DWORD PTR _d2$[ebp]
  020e4	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  020e7	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  020ea	03 50 08	 add	 edx, DWORD PTR [eax+8]
  020ed	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  020f0	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  020f7	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  020fa	6a 0c		 push	 12			; 0000000cH
  020fc	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  020ff	50		 push	 eax
  02100	e8 00 00 00 00	 call	 _rotlFixed@8
  02105	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  02108	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  0210b	6a 0a		 push	 10			; 0000000aH
  0210d	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  02110	51		 push	 ecx
  02111	e8 00 00 00 00	 call	 _rotlFixed@8
  02116	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 344  : 	Subround(G, b2, c2, d2, e2, a2, X[13],  9, k8);

  02119	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  0211c	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  0211f	23 55 e8	 and	 edx, DWORD PTR _c2$[ebp]
  02122	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  02125	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  02128	03 50 34	 add	 edx, DWORD PTR [eax+52]
  0212b	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  0212e	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  02135	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  02138	6a 09		 push	 9
  0213a	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  0213d	50		 push	 eax
  0213e	e8 00 00 00 00	 call	 _rotlFixed@8
  02143	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  02146	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  02149	6a 0a		 push	 10			; 0000000aH
  0214b	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  0214e	51		 push	 ecx
  0214f	e8 00 00 00 00	 call	 _rotlFixed@8
  02154	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 345  : 	Subround(G, a2, b2, c2, d2, e2, X[ 9], 12, k8);

  02157	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  0215a	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  0215d	23 55 f4	 and	 edx, DWORD PTR _b2$[ebp]
  02160	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  02163	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  02166	03 50 24	 add	 edx, DWORD PTR [eax+36]
  02169	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  0216c	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  02173	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  02176	6a 0c		 push	 12			; 0000000cH
  02178	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  0217b	50		 push	 eax
  0217c	e8 00 00 00 00	 call	 _rotlFixed@8
  02181	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  02184	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  02187	6a 0a		 push	 10			; 0000000aH
  02189	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  0218c	51		 push	 ecx
  0218d	e8 00 00 00 00	 call	 _rotlFixed@8
  02192	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 346  : 	Subround(G, e2, a2, b2, c2, d2, X[ 7],  5, k8);

  02195	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  02198	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  0219b	23 55 dc	 and	 edx, DWORD PTR _a2$[ebp]
  0219e	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  021a1	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  021a4	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  021a7	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  021aa	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  021b1	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  021b4	6a 05		 push	 5
  021b6	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  021b9	50		 push	 eax
  021ba	e8 00 00 00 00	 call	 _rotlFixed@8
  021bf	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  021c2	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  021c5	6a 0a		 push	 10			; 0000000aH
  021c7	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  021ca	51		 push	 ecx
  021cb	e8 00 00 00 00	 call	 _rotlFixed@8
  021d0	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 347  : 	Subround(G, d2, e2, a2, b2, c2, X[10], 15, k8);

  021d3	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  021d6	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  021d9	23 55 fc	 and	 edx, DWORD PTR _e2$[ebp]
  021dc	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  021df	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  021e2	03 50 28	 add	 edx, DWORD PTR [eax+40]
  021e5	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  021e8	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  021ef	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  021f2	6a 0f		 push	 15			; 0000000fH
  021f4	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  021f7	50		 push	 eax
  021f8	e8 00 00 00 00	 call	 _rotlFixed@8
  021fd	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  02200	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  02203	6a 0a		 push	 10			; 0000000aH
  02205	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  02208	51		 push	 ecx
  02209	e8 00 00 00 00	 call	 _rotlFixed@8
  0220e	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 348  : 	Subround(G, c2, d2, e2, a2, b2, X[14],  8, k8);

  02211	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  02214	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  02217	23 55 ec	 and	 edx, DWORD PTR _d2$[ebp]
  0221a	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  0221d	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  02220	03 50 38	 add	 edx, DWORD PTR [eax+56]
  02223	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  02226	8d 94 11 e9 76
	6d 7a		 lea	 edx, DWORD PTR [ecx+edx+2053994217]
  0222d	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  02230	6a 08		 push	 8
  02232	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  02235	50		 push	 eax
  02236	e8 00 00 00 00	 call	 _rotlFixed@8
  0223b	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  0223e	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  02241	6a 0a		 push	 10			; 0000000aH
  02243	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  02246	51		 push	 ecx
  02247	e8 00 00 00 00	 call	 _rotlFixed@8
  0224c	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 349  : 
; 350  : 	Subround(F, b2, c2, d2, e2, a2, X[12],  8, k9);

  0224f	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  02252	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  02255	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  02258	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0225b	03 50 30	 add	 edx, DWORD PTR [eax+48]
  0225e	03 55 f4	 add	 edx, DWORD PTR _b2$[ebp]
  02261	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  02264	6a 08		 push	 8
  02266	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  02269	51		 push	 ecx
  0226a	e8 00 00 00 00	 call	 _rotlFixed@8
  0226f	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  02272	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  02275	6a 0a		 push	 10			; 0000000aH
  02277	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  0227a	52		 push	 edx
  0227b	e8 00 00 00 00	 call	 _rotlFixed@8
  02280	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 351  : 	Subround(F, a2, b2, c2, d2, e2, X[15],  5, k9);

  02283	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  02286	33 45 e8	 xor	 eax, DWORD PTR _c2$[ebp]
  02289	33 45 ec	 xor	 eax, DWORD PTR _d2$[ebp]
  0228c	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  0228f	03 41 3c	 add	 eax, DWORD PTR [ecx+60]
  02292	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  02295	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  02298	6a 05		 push	 5
  0229a	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  0229d	52		 push	 edx
  0229e	e8 00 00 00 00	 call	 _rotlFixed@8
  022a3	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  022a6	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  022a9	6a 0a		 push	 10			; 0000000aH
  022ab	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  022ae	50		 push	 eax
  022af	e8 00 00 00 00	 call	 _rotlFixed@8
  022b4	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 352  : 	Subround(F, e2, a2, b2, c2, d2, X[10], 12, k9);

  022b7	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  022ba	33 4d f4	 xor	 ecx, DWORD PTR _b2$[ebp]
  022bd	33 4d e8	 xor	 ecx, DWORD PTR _c2$[ebp]
  022c0	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  022c3	03 4a 28	 add	 ecx, DWORD PTR [edx+40]
  022c6	03 4d fc	 add	 ecx, DWORD PTR _e2$[ebp]
  022c9	89 4d fc	 mov	 DWORD PTR _e2$[ebp], ecx
  022cc	6a 0c		 push	 12			; 0000000cH
  022ce	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  022d1	50		 push	 eax
  022d2	e8 00 00 00 00	 call	 _rotlFixed@8
  022d7	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  022da	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  022dd	6a 0a		 push	 10			; 0000000aH
  022df	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  022e2	51		 push	 ecx
  022e3	e8 00 00 00 00	 call	 _rotlFixed@8
  022e8	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 353  : 	Subround(F, d2, e2, a2, b2, c2, X[ 4],  9, k9);

  022eb	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  022ee	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  022f1	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  022f4	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  022f7	03 50 10	 add	 edx, DWORD PTR [eax+16]
  022fa	03 55 ec	 add	 edx, DWORD PTR _d2$[ebp]
  022fd	89 55 ec	 mov	 DWORD PTR _d2$[ebp], edx
  02300	6a 09		 push	 9
  02302	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  02305	51		 push	 ecx
  02306	e8 00 00 00 00	 call	 _rotlFixed@8
  0230b	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  0230e	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  02311	6a 0a		 push	 10			; 0000000aH
  02313	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  02316	52		 push	 edx
  02317	e8 00 00 00 00	 call	 _rotlFixed@8
  0231c	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 354  : 	Subround(F, c2, d2, e2, a2, b2, X[ 1], 12, k9);

  0231f	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  02322	33 45 fc	 xor	 eax, DWORD PTR _e2$[ebp]
  02325	33 45 dc	 xor	 eax, DWORD PTR _a2$[ebp]
  02328	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  0232b	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  0232e	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  02331	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  02334	6a 0c		 push	 12			; 0000000cH
  02336	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  02339	52		 push	 edx
  0233a	e8 00 00 00 00	 call	 _rotlFixed@8
  0233f	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  02342	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  02345	6a 0a		 push	 10			; 0000000aH
  02347	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  0234a	50		 push	 eax
  0234b	e8 00 00 00 00	 call	 _rotlFixed@8
  02350	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 355  : 	Subround(F, b2, c2, d2, e2, a2, X[ 5],  5, k9);

  02353	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  02356	33 4d ec	 xor	 ecx, DWORD PTR _d2$[ebp]
  02359	33 4d fc	 xor	 ecx, DWORD PTR _e2$[ebp]
  0235c	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  0235f	03 4a 14	 add	 ecx, DWORD PTR [edx+20]
  02362	03 4d f4	 add	 ecx, DWORD PTR _b2$[ebp]
  02365	89 4d f4	 mov	 DWORD PTR _b2$[ebp], ecx
  02368	6a 05		 push	 5
  0236a	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  0236d	50		 push	 eax
  0236e	e8 00 00 00 00	 call	 _rotlFixed@8
  02373	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  02376	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  02379	6a 0a		 push	 10			; 0000000aH
  0237b	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  0237e	51		 push	 ecx
  0237f	e8 00 00 00 00	 call	 _rotlFixed@8
  02384	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 356  : 	Subround(F, a2, b2, c2, d2, e2, X[ 8], 14, k9);

  02387	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  0238a	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  0238d	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  02390	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  02393	03 50 20	 add	 edx, DWORD PTR [eax+32]
  02396	03 55 dc	 add	 edx, DWORD PTR _a2$[ebp]
  02399	89 55 dc	 mov	 DWORD PTR _a2$[ebp], edx
  0239c	6a 0e		 push	 14			; 0000000eH
  0239e	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  023a1	51		 push	 ecx
  023a2	e8 00 00 00 00	 call	 _rotlFixed@8
  023a7	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  023aa	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  023ad	6a 0a		 push	 10			; 0000000aH
  023af	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  023b2	52		 push	 edx
  023b3	e8 00 00 00 00	 call	 _rotlFixed@8
  023b8	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 357  : 	Subround(F, e2, a2, b2, c2, d2, X[ 7],  6, k9);

  023bb	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  023be	33 45 f4	 xor	 eax, DWORD PTR _b2$[ebp]
  023c1	33 45 e8	 xor	 eax, DWORD PTR _c2$[ebp]
  023c4	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  023c7	03 41 1c	 add	 eax, DWORD PTR [ecx+28]
  023ca	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  023cd	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  023d0	6a 06		 push	 6
  023d2	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  023d5	52		 push	 edx
  023d6	e8 00 00 00 00	 call	 _rotlFixed@8
  023db	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  023de	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  023e1	6a 0a		 push	 10			; 0000000aH
  023e3	8b 45 f4	 mov	 eax, DWORD PTR _b2$[ebp]
  023e6	50		 push	 eax
  023e7	e8 00 00 00 00	 call	 _rotlFixed@8
  023ec	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 358  : 	Subround(F, d2, e2, a2, b2, c2, X[ 6],  8, k9);

  023ef	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  023f2	33 4d dc	 xor	 ecx, DWORD PTR _a2$[ebp]
  023f5	33 4d f4	 xor	 ecx, DWORD PTR _b2$[ebp]
  023f8	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  023fb	03 4a 18	 add	 ecx, DWORD PTR [edx+24]
  023fe	03 4d ec	 add	 ecx, DWORD PTR _d2$[ebp]
  02401	89 4d ec	 mov	 DWORD PTR _d2$[ebp], ecx
  02404	6a 08		 push	 8
  02406	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  02409	50		 push	 eax
  0240a	e8 00 00 00 00	 call	 _rotlFixed@8
  0240f	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  02412	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  02415	6a 0a		 push	 10			; 0000000aH
  02417	8b 4d dc	 mov	 ecx, DWORD PTR _a2$[ebp]
  0241a	51		 push	 ecx
  0241b	e8 00 00 00 00	 call	 _rotlFixed@8
  02420	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 359  : 	Subround(F, c2, d2, e2, a2, b2, X[ 2], 13, k9);

  02423	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  02426	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  02429	33 55 dc	 xor	 edx, DWORD PTR _a2$[ebp]
  0242c	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  0242f	03 50 08	 add	 edx, DWORD PTR [eax+8]
  02432	03 55 e8	 add	 edx, DWORD PTR _c2$[ebp]
  02435	89 55 e8	 mov	 DWORD PTR _c2$[ebp], edx
  02438	6a 0d		 push	 13			; 0000000dH
  0243a	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  0243d	51		 push	 ecx
  0243e	e8 00 00 00 00	 call	 _rotlFixed@8
  02443	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  02446	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  02449	6a 0a		 push	 10			; 0000000aH
  0244b	8b 55 fc	 mov	 edx, DWORD PTR _e2$[ebp]
  0244e	52		 push	 edx
  0244f	e8 00 00 00 00	 call	 _rotlFixed@8
  02454	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 360  : 	Subround(F, b2, c2, d2, e2, a2, X[13],  6, k9);

  02457	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  0245a	33 45 ec	 xor	 eax, DWORD PTR _d2$[ebp]
  0245d	33 45 fc	 xor	 eax, DWORD PTR _e2$[ebp]
  02460	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  02463	03 41 34	 add	 eax, DWORD PTR [ecx+52]
  02466	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  02469	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  0246c	6a 06		 push	 6
  0246e	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  02471	52		 push	 edx
  02472	e8 00 00 00 00	 call	 _rotlFixed@8
  02477	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  0247a	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  0247d	6a 0a		 push	 10			; 0000000aH
  0247f	8b 45 ec	 mov	 eax, DWORD PTR _d2$[ebp]
  02482	50		 push	 eax
  02483	e8 00 00 00 00	 call	 _rotlFixed@8
  02488	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 361  : 	Subround(F, a2, b2, c2, d2, e2, X[14],  5, k9);

  0248b	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  0248e	33 4d e8	 xor	 ecx, DWORD PTR _c2$[ebp]
  02491	33 4d ec	 xor	 ecx, DWORD PTR _d2$[ebp]
  02494	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  02497	03 4a 38	 add	 ecx, DWORD PTR [edx+56]
  0249a	03 4d dc	 add	 ecx, DWORD PTR _a2$[ebp]
  0249d	89 4d dc	 mov	 DWORD PTR _a2$[ebp], ecx
  024a0	6a 05		 push	 5
  024a2	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  024a5	50		 push	 eax
  024a6	e8 00 00 00 00	 call	 _rotlFixed@8
  024ab	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  024ae	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax
  024b1	6a 0a		 push	 10			; 0000000aH
  024b3	8b 4d e8	 mov	 ecx, DWORD PTR _c2$[ebp]
  024b6	51		 push	 ecx
  024b7	e8 00 00 00 00	 call	 _rotlFixed@8
  024bc	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax

; 362  : 	Subround(F, e2, a2, b2, c2, d2, X[ 0], 15, k9);

  024bf	8b 55 dc	 mov	 edx, DWORD PTR _a2$[ebp]
  024c2	33 55 f4	 xor	 edx, DWORD PTR _b2$[ebp]
  024c5	33 55 e8	 xor	 edx, DWORD PTR _c2$[ebp]
  024c8	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  024cb	03 10		 add	 edx, DWORD PTR [eax]
  024cd	03 55 fc	 add	 edx, DWORD PTR _e2$[ebp]
  024d0	89 55 fc	 mov	 DWORD PTR _e2$[ebp], edx
  024d3	6a 0f		 push	 15			; 0000000fH
  024d5	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  024d8	51		 push	 ecx
  024d9	e8 00 00 00 00	 call	 _rotlFixed@8
  024de	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  024e1	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax
  024e4	6a 0a		 push	 10			; 0000000aH
  024e6	8b 55 f4	 mov	 edx, DWORD PTR _b2$[ebp]
  024e9	52		 push	 edx
  024ea	e8 00 00 00 00	 call	 _rotlFixed@8
  024ef	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax

; 363  : 	Subround(F, d2, e2, a2, b2, c2, X[ 3], 13, k9);

  024f2	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  024f5	33 45 dc	 xor	 eax, DWORD PTR _a2$[ebp]
  024f8	33 45 f4	 xor	 eax, DWORD PTR _b2$[ebp]
  024fb	8b 4d e0	 mov	 ecx, DWORD PTR _X$[ebp]
  024fe	03 41 0c	 add	 eax, DWORD PTR [ecx+12]
  02501	03 45 ec	 add	 eax, DWORD PTR _d2$[ebp]
  02504	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  02507	6a 0d		 push	 13			; 0000000dH
  02509	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  0250c	52		 push	 edx
  0250d	e8 00 00 00 00	 call	 _rotlFixed@8
  02512	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  02515	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax
  02518	6a 0a		 push	 10			; 0000000aH
  0251a	8b 45 dc	 mov	 eax, DWORD PTR _a2$[ebp]
  0251d	50		 push	 eax
  0251e	e8 00 00 00 00	 call	 _rotlFixed@8
  02523	89 45 dc	 mov	 DWORD PTR _a2$[ebp], eax

; 364  : 	Subround(F, c2, d2, e2, a2, b2, X[ 9], 11, k9);

  02526	8b 4d ec	 mov	 ecx, DWORD PTR _d2$[ebp]
  02529	33 4d fc	 xor	 ecx, DWORD PTR _e2$[ebp]
  0252c	33 4d dc	 xor	 ecx, DWORD PTR _a2$[ebp]
  0252f	8b 55 e0	 mov	 edx, DWORD PTR _X$[ebp]
  02532	03 4a 24	 add	 ecx, DWORD PTR [edx+36]
  02535	03 4d e8	 add	 ecx, DWORD PTR _c2$[ebp]
  02538	89 4d e8	 mov	 DWORD PTR _c2$[ebp], ecx
  0253b	6a 0b		 push	 11			; 0000000bH
  0253d	8b 45 e8	 mov	 eax, DWORD PTR _c2$[ebp]
  02540	50		 push	 eax
  02541	e8 00 00 00 00	 call	 _rotlFixed@8
  02546	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  02549	89 45 e8	 mov	 DWORD PTR _c2$[ebp], eax
  0254c	6a 0a		 push	 10			; 0000000aH
  0254e	8b 4d fc	 mov	 ecx, DWORD PTR _e2$[ebp]
  02551	51		 push	 ecx
  02552	e8 00 00 00 00	 call	 _rotlFixed@8
  02557	89 45 fc	 mov	 DWORD PTR _e2$[ebp], eax

; 365  : 	Subround(F, b2, c2, d2, e2, a2, X[11], 11, k9);

  0255a	8b 55 e8	 mov	 edx, DWORD PTR _c2$[ebp]
  0255d	33 55 ec	 xor	 edx, DWORD PTR _d2$[ebp]
  02560	33 55 fc	 xor	 edx, DWORD PTR _e2$[ebp]
  02563	8b 45 e0	 mov	 eax, DWORD PTR _X$[ebp]
  02566	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  02569	03 55 f4	 add	 edx, DWORD PTR _b2$[ebp]
  0256c	89 55 f4	 mov	 DWORD PTR _b2$[ebp], edx
  0256f	6a 0b		 push	 11			; 0000000bH
  02571	8b 4d f4	 mov	 ecx, DWORD PTR _b2$[ebp]
  02574	51		 push	 ecx
  02575	e8 00 00 00 00	 call	 _rotlFixed@8
  0257a	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  0257d	89 45 f4	 mov	 DWORD PTR _b2$[ebp], eax
  02580	6a 0a		 push	 10			; 0000000aH
  02582	8b 55 ec	 mov	 edx, DWORD PTR _d2$[ebp]
  02585	52		 push	 edx
  02586	e8 00 00 00 00	 call	 _rotlFixed@8
  0258b	89 45 ec	 mov	 DWORD PTR _d2$[ebp], eax

; 366  : 
; 367  : 	c1        = digest[1] + c1 + d2;

  0258e	8b 45 08	 mov	 eax, DWORD PTR _digest$[ebp]
  02591	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  02594	03 4d f0	 add	 ecx, DWORD PTR _c1$[ebp]
  02597	03 4d ec	 add	 ecx, DWORD PTR _d2$[ebp]
  0259a	89 4d f0	 mov	 DWORD PTR _c1$[ebp], ecx

; 368  : 	digest[1] = digest[2] + d1 + e2;

  0259d	8b 55 08	 mov	 edx, DWORD PTR _digest$[ebp]
  025a0	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  025a3	03 45 d8	 add	 eax, DWORD PTR _d1$[ebp]
  025a6	03 45 fc	 add	 eax, DWORD PTR _e2$[ebp]
  025a9	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  025ac	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 369  : 	digest[2] = digest[3] + e1 + a2;

  025af	8b 55 08	 mov	 edx, DWORD PTR _digest$[ebp]
  025b2	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  025b5	03 45 e4	 add	 eax, DWORD PTR _e1$[ebp]
  025b8	03 45 dc	 add	 eax, DWORD PTR _a2$[ebp]
  025bb	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  025be	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 370  : 	digest[3] = digest[4] + a1 + b2;

  025c1	8b 55 08	 mov	 edx, DWORD PTR _digest$[ebp]
  025c4	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  025c7	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  025ca	03 45 f4	 add	 eax, DWORD PTR _b2$[ebp]
  025cd	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  025d0	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 371  : 	digest[4] = digest[0] + b1 + c2;

  025d3	8b 55 08	 mov	 edx, DWORD PTR _digest$[ebp]
  025d6	8b 02		 mov	 eax, DWORD PTR [edx]
  025d8	03 45 d4	 add	 eax, DWORD PTR _b1$[ebp]
  025db	03 45 e8	 add	 eax, DWORD PTR _c2$[ebp]
  025de	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]
  025e1	89 41 10	 mov	 DWORD PTR [ecx+16], eax

; 372  : 	digest[0] = c1;

  025e4	8b 55 08	 mov	 edx, DWORD PTR _digest$[ebp]
  025e7	8b 45 f0	 mov	 eax, DWORD PTR _c1$[ebp]
  025ea	89 02		 mov	 DWORD PTR [edx], eax

; 373  : }

  025ec	8b e5		 mov	 esp, ebp
  025ee	5d		 pop	 ebp
  025ef	c2 08 00	 ret	 8
_RMD160Transform@8 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _rotlFixed@8
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_rotlFixed@8 PROC					; COMDAT

; 165  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 166  : 	return (word32)((x<<y) | (x>>(sizeof(word32)*8-y)));

  00005	8b 45 08	 mov	 eax, DWORD PTR _x$[ebp]
  00008	8b 4d 0c	 mov	 ecx, DWORD PTR _y$[ebp]
  0000b	d3 e0		 shl	 eax, cl
  0000d	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00012	2b 4d 0c	 sub	 ecx, DWORD PTR _y$[ebp]
  00015	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]
  00018	d3 ea		 shr	 edx, cl
  0001a	0b c2		 or	 eax, edx

; 167  : }

  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
_rotlFixed@8 ENDP
_TEXT	ENDS
END
