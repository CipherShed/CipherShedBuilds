; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\home\public\Desktop\projects\ciphershed.build\src\Common\Endian.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_MirrorBytes16
; Function compile flags: /Ogtpy
; File c:\home\public\desktop\projects\ciphershed.build\src\common\endian.c
;	COMDAT _MirrorBytes16
_TEXT	SEGMENT
_x$ = 8							; size = 2
_MirrorBytes16 PROC					; COMDAT

; 17   : 	return (x << 8) | (x >> 8);

  00000	0f b7 4c 24 04	 movzx	 ecx, WORD PTR _x$[esp-4]
  00005	8b c1		 mov	 eax, ecx
  00007	c1 e8 08	 shr	 eax, 8
  0000a	c1 e1 08	 shl	 ecx, 8
  0000d	0b c1		 or	 eax, ecx

; 18   : }

  0000f	c3		 ret	 0
_MirrorBytes16 ENDP
_TEXT	ENDS
PUBLIC	_MirrorBytes32
; Function compile flags: /Ogtpy
;	COMDAT _MirrorBytes32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_MirrorBytes32 PROC					; COMDAT

; 23   : 	unsigned __int32 n = (unsigned __int8) x;
; 24   : 	n <<= 8; n |= (unsigned __int8) (x >> 8);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _x$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	c1 e8 08	 shr	 eax, 8

; 25   : 	n <<= 8; n |= (unsigned __int8) (x >> 16);
; 26   : 	return (n << 8) | (unsigned __int8) (x >> 24);

  00009	0f b6 c0	 movzx	 eax, al
  0000c	0f b6 d1	 movzx	 edx, cl
  0000f	c1 e2 08	 shl	 edx, 8
  00012	0b c2		 or	 eax, edx
  00014	8b d1		 mov	 edx, ecx
  00016	c1 ea 10	 shr	 edx, 16			; 00000010H
  00019	c1 e0 08	 shl	 eax, 8
  0001c	0f b6 d2	 movzx	 edx, dl
  0001f	0b c2		 or	 eax, edx
  00021	c1 e0 08	 shl	 eax, 8
  00024	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00027	0b c1		 or	 eax, ecx

; 27   : }

  00029	c3		 ret	 0
_MirrorBytes32 ENDP
_TEXT	ENDS
PUBLIC	_MirrorBytes64
; Function compile flags: /Ogtpy
;	COMDAT _MirrorBytes64
_TEXT	SEGMENT
_x$ = 8							; size = 8
_MirrorBytes64 PROC					; COMDAT

; 32   : 	uint64 n = (unsigned __int8) x;
; 33   : 	n <<= 8; n |= (unsigned __int8) (x >> 8);

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR _x$[esp]
  00004	53		 push	 ebx
  00005	8b 5c 24 08	 mov	 ebx, DWORD PTR _x$[esp]
  00009	56		 push	 esi
  0000a	8b c3		 mov	 eax, ebx
  0000c	8b d1		 mov	 edx, ecx
  0000e	0f ac d0 08	 shrd	 eax, edx, 8

; 34   : 	n <<= 8; n |= (unsigned __int8) (x >> 16);
; 35   : 	n <<= 8; n |= (unsigned __int8) (x >> 24);
; 36   : 	n <<= 8; n |= (unsigned __int8) (x >> 32);
; 37   : 	n <<= 8; n |= (unsigned __int8) (x >> 40);
; 38   : 	n <<= 8; n |= (unsigned __int8) (x >> 48);
; 39   : 	return (n << 8) | (unsigned __int8) (x >> 56);

  00012	0f b6 c0	 movzx	 eax, al
  00015	c1 ea 08	 shr	 edx, 8
  00018	99		 cdq
  00019	8b f0		 mov	 esi, eax
  0001b	57		 push	 edi
  0001c	8b fa		 mov	 edi, edx
  0001e	0f b6 c3	 movzx	 eax, bl
  00021	99		 cdq
  00022	0f a4 c2 08	 shld	 edx, eax, 8
  00026	0b fa		 or	 edi, edx
  00028	c1 e0 08	 shl	 eax, 8
  0002b	0b f0		 or	 esi, eax
  0002d	0f a4 f7 08	 shld	 edi, esi, 8
  00031	c1 e6 08	 shl	 esi, 8
  00034	8b c3		 mov	 eax, ebx
  00036	8b d1		 mov	 edx, ecx
  00038	0f ac d0 10	 shrd	 eax, edx, 16
  0003c	0f b6 c0	 movzx	 eax, al
  0003f	c1 ea 10	 shr	 edx, 16			; 00000010H
  00042	99		 cdq
  00043	0b f0		 or	 esi, eax
  00045	0b fa		 or	 edi, edx
  00047	0f a4 f7 08	 shld	 edi, esi, 8
  0004b	8b c1		 mov	 eax, ecx
  0004d	0f ac c3 18	 shrd	 ebx, eax, 24
  00051	c1 e8 18	 shr	 eax, 24			; 00000018H
  00054	c1 e6 08	 shl	 esi, 8
  00057	0f b6 c3	 movzx	 eax, bl
  0005a	99		 cdq
  0005b	0b f0		 or	 esi, eax
  0005d	0b fa		 or	 edi, edx
  0005f	0f a4 f7 08	 shld	 edi, esi, 8
  00063	c1 e6 08	 shl	 esi, 8
  00066	0f b6 c1	 movzx	 eax, cl
  00069	99		 cdq
  0006a	0b f0		 or	 esi, eax
  0006c	0b fa		 or	 edi, edx
  0006e	0f a4 f7 08	 shld	 edi, esi, 8
  00072	8b d1		 mov	 edx, ecx
  00074	c1 ea 08	 shr	 edx, 8
  00077	0f b6 c2	 movzx	 eax, dl
  0007a	99		 cdq
  0007b	c1 e6 08	 shl	 esi, 8
  0007e	0b f0		 or	 esi, eax
  00080	0b fa		 or	 edi, edx
  00082	0f a4 f7 08	 shld	 edi, esi, 8
  00086	8b c1		 mov	 eax, ecx
  00088	c1 e8 10	 shr	 eax, 16			; 00000010H
  0008b	0f b6 c0	 movzx	 eax, al
  0008e	99		 cdq
  0008f	c1 e6 08	 shl	 esi, 8
  00092	0b f0		 or	 esi, eax
  00094	0b fa		 or	 edi, edx
  00096	0f a4 f7 08	 shld	 edi, esi, 8
  0009a	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0009d	0f b6 c1	 movzx	 eax, cl
  000a0	99		 cdq
  000a1	c1 e6 08	 shl	 esi, 8
  000a4	0b fa		 or	 edi, edx
  000a6	0b f0		 or	 esi, eax
  000a8	8b d7		 mov	 edx, edi
  000aa	5f		 pop	 edi
  000ab	8b c6		 mov	 eax, esi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx

; 40   : }

  000af	c3		 ret	 0
_MirrorBytes64 ENDP
_TEXT	ENDS
END
