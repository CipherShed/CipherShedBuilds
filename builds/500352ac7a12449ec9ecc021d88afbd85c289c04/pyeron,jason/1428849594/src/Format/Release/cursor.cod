; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\home\public\Desktop\projects\ciphershed.build\src\Common\dialog\cursor.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_hCursor
_BSS	SEGMENT
_hCursor DD	01H DUP (?)
_BSS	ENDS
PUBLIC	_WaitCursor
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__LoadCursorA@8:PROC
_BSS	SEGMENT
?hcWait@?1??WaitCursor@@9@9 DD 01H DUP (?)		; `WaitCursor'::`2'::hcWait
; Function compile flags: /Ogtpy
; File c:\home\public\desktop\projects\ciphershed.build\src\common\dialog\cursor.c
_BSS	ENDS
;	COMDAT _WaitCursor
_TEXT	SEGMENT
_WaitCursor PROC					; COMDAT

; 21   : 	static HCURSOR hcWait;
; 22   : 	if (hcWait == NULL)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hcWait@?1??WaitCursor@@9@9
  00005	85 c0		 test	 eax, eax
  00007	75 11		 jne	 SHORT $LN1@WaitCursor

; 23   : 		hcWait = LoadCursor (NULL, IDC_WAIT);

  00009	68 02 7f 00 00	 push	 32514			; 00007f02H
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00015	a3 00 00 00 00	 mov	 DWORD PTR ?hcWait@?1??WaitCursor@@9@9, eax
$LN1@WaitCursor:

; 24   : 	SetCursor (hcWait);

  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 25   : 	hCursor = hcWait;

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hcWait@?1??WaitCursor@@9@9
  00026	a3 00 00 00 00	 mov	 DWORD PTR _hCursor, eax

; 26   : }

  0002b	c3		 ret	 0
_WaitCursor ENDP
_TEXT	ENDS
PUBLIC	_NormalCursor
_BSS	SEGMENT
?hcArrow@?1??NormalCursor@@9@9 DD 01H DUP (?)		; `NormalCursor'::`2'::hcArrow
; Function compile flags: /Ogtpy
_BSS	ENDS
;	COMDAT _NormalCursor
_TEXT	SEGMENT
_NormalCursor PROC					; COMDAT

; 31   : 	static HCURSOR hcArrow;
; 32   : 	if (hcArrow == NULL)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hcArrow@?1??NormalCursor@@9@9
  00005	85 c0		 test	 eax, eax
  00007	75 11		 jne	 SHORT $LN1@NormalCurs

; 33   : 		hcArrow = LoadCursor (NULL, IDC_ARROW);

  00009	68 00 7f 00 00	 push	 32512			; 00007f00H
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00015	a3 00 00 00 00	 mov	 DWORD PTR ?hcArrow@?1??NormalCursor@@9@9, eax
$LN1@NormalCurs:

; 34   : 	SetCursor (hcArrow);

  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 35   : 	hCursor = NULL;

  00021	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _hCursor, 0

; 36   : }

  0002b	c3		 ret	 0
_NormalCursor ENDP
_TEXT	ENDS
PUBLIC	_ArrowWaitCursor
_BSS	SEGMENT
?hcArrowWait@?1??ArrowWaitCursor@@9@9 DD 01H DUP (?)	; `ArrowWaitCursor'::`2'::hcArrowWait
; Function compile flags: /Ogtpy
_BSS	ENDS
;	COMDAT _ArrowWaitCursor
_TEXT	SEGMENT
_ArrowWaitCursor PROC					; COMDAT

; 41   : 	static HCURSOR hcArrowWait;
; 42   : 	if (hcArrowWait == NULL)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hcArrowWait@?1??ArrowWaitCursor@@9@9
  00005	85 c0		 test	 eax, eax
  00007	75 11		 jne	 SHORT $LN1@ArrowWaitC

; 43   : 		hcArrowWait = LoadCursor (NULL, IDC_APPSTARTING);

  00009	68 8a 7f 00 00	 push	 32650			; 00007f8aH
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00015	a3 00 00 00 00	 mov	 DWORD PTR ?hcArrowWait@?1??ArrowWaitCursor@@9@9, eax
$LN1@ArrowWaitC:

; 44   : 	SetCursor (hcArrowWait);

  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 45   : 	hCursor = hcArrowWait;

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hcArrowWait@?1??ArrowWaitCursor@@9@9
  00026	a3 00 00 00 00	 mov	 DWORD PTR _hCursor, eax

; 46   : }

  0002b	c3		 ret	 0
_ArrowWaitCursor ENDP
_TEXT	ENDS
PUBLIC	_HandCursor
_BSS	SEGMENT
?hcHand@?1??HandCursor@@9@9 DD 01H DUP (?)		; `HandCursor'::`2'::hcHand
; Function compile flags: /Ogtpy
_BSS	ENDS
;	COMDAT _HandCursor
_TEXT	SEGMENT
_HandCursor PROC					; COMDAT

; 50   : 	static HCURSOR hcHand;
; 51   : 	if (hcHand == NULL)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hcHand@?1??HandCursor@@9@9
  00005	85 c0		 test	 eax, eax
  00007	75 11		 jne	 SHORT $LN1@HandCursor

; 52   : 		hcHand = LoadCursor (NULL, IDC_HAND);

  00009	68 89 7f 00 00	 push	 32649			; 00007f89H
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8
  00015	a3 00 00 00 00	 mov	 DWORD PTR ?hcHand@?1??HandCursor@@9@9, eax
$LN1@HandCursor:

; 53   : 	SetCursor (hcHand);

  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetCursor@4

; 54   : 	hCursor = hcHand;

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?hcHand@?1??HandCursor@@9@9
  00026	a3 00 00 00 00	 mov	 DWORD PTR _hCursor, eax

; 55   : }

  0002b	c3		 ret	 0
_HandCursor ENDP
_TEXT	ENDS
END
