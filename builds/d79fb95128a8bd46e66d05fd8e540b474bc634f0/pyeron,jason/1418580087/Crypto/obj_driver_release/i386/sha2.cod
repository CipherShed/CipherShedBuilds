; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\home\public\desktop\projects\ciphershed.build\src\crypto\sha2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_k256
PUBLIC	_i224
PUBLIC	_i256
PUBLIC	_k512
PUBLIC	_i384
PUBLIC	_i512
CONST	SEGMENT
_k256	DD	0428a2f98H
	DD	071374491H
	DD	0b5c0fbcfH
	DD	0e9b5dba5H
	DD	03956c25bH
	DD	059f111f1H
	DD	0923f82a4H
	DD	0ab1c5ed5H
	DD	0d807aa98H
	DD	012835b01H
	DD	0243185beH
	DD	0550c7dc3H
	DD	072be5d74H
	DD	080deb1feH
	DD	09bdc06a7H
	DD	0c19bf174H
	DD	0e49b69c1H
	DD	0efbe4786H
	DD	0fc19dc6H
	DD	0240ca1ccH
	DD	02de92c6fH
	DD	04a7484aaH
	DD	05cb0a9dcH
	DD	076f988daH
	DD	0983e5152H
	DD	0a831c66dH
	DD	0b00327c8H
	DD	0bf597fc7H
	DD	0c6e00bf3H
	DD	0d5a79147H
	DD	06ca6351H
	DD	014292967H
	DD	027b70a85H
	DD	02e1b2138H
	DD	04d2c6dfcH
	DD	053380d13H
	DD	0650a7354H
	DD	0766a0abbH
	DD	081c2c92eH
	DD	092722c85H
	DD	0a2bfe8a1H
	DD	0a81a664bH
	DD	0c24b8b70H
	DD	0c76c51a3H
	DD	0d192e819H
	DD	0d6990624H
	DD	0f40e3585H
	DD	0106aa070H
	DD	019a4c116H
	DD	01e376c08H
	DD	02748774cH
	DD	034b0bcb5H
	DD	0391c0cb3H
	DD	04ed8aa4aH
	DD	05b9cca4fH
	DD	0682e6ff3H
	DD	0748f82eeH
	DD	078a5636fH
	DD	084c87814H
	DD	08cc70208H
	DD	090befffaH
	DD	0a4506cebH
	DD	0bef9a3f7H
	DD	0c67178f2H
_i224	DD	0c1059ed8H
	DD	0367cd507H
	DD	03070dd17H
	DD	0f70e5939H
	DD	0ffc00b31H
	DD	068581511H
	DD	064f98fa7H
	DD	0befa4fa4H
_i256	DD	06a09e667H
	DD	0bb67ae85H
	DD	03c6ef372H
	DD	0a54ff53aH
	DD	0510e527fH
	DD	09b05688cH
	DD	01f83d9abH
	DD	05be0cd19H
_k512	DQ	428a2f98d728ae22H
	DQ	7137449123ef65cdH
	DQ	b5c0fbcfec4d3b2fH
	DQ	e9b5dba58189dbbcH
	DQ	3956c25bf348b538H
	DQ	59f111f1b605d019H
	DQ	923f82a4af194f9bH
	DQ	ab1c5ed5da6d8118H
	DQ	d807aa98a3030242H
	DQ	12835b0145706fbeH
	DQ	243185be4ee4b28cH
	DQ	550c7dc3d5ffb4e2H
	DQ	72be5d74f27b896fH
	DQ	80deb1fe3b1696b1H
	DQ	9bdc06a725c71235H
	DQ	c19bf174cf692694H
	DQ	e49b69c19ef14ad2H
	DQ	efbe4786384f25e3H
	DQ	0fc19dc68b8cd5b5H
	DQ	240ca1cc77ac9c65H
	DQ	2de92c6f592b0275H
	DQ	4a7484aa6ea6e483H
	DQ	5cb0a9dcbd41fbd4H
	DQ	76f988da831153b5H
	DQ	983e5152ee66dfabH
	DQ	a831c66d2db43210H
	DQ	b00327c898fb213fH
	DQ	bf597fc7beef0ee4H
	DQ	c6e00bf33da88fc2H
	DQ	d5a79147930aa725H
	DQ	06ca6351e003826fH
	DQ	142929670a0e6e70H
	DQ	27b70a8546d22ffcH
	DQ	2e1b21385c26c926H
	DQ	4d2c6dfc5ac42aedH
	DQ	53380d139d95b3dfH
	DQ	650a73548baf63deH
	DQ	766a0abb3c77b2a8H
	DQ	81c2c92e47edaee6H
	DQ	92722c851482353bH
	DQ	a2bfe8a14cf10364H
	DQ	a81a664bbc423001H
	DQ	c24b8b70d0f89791H
	DQ	c76c51a30654be30H
	DQ	d192e819d6ef5218H
	DQ	d69906245565a910H
	DQ	f40e35855771202aH
	DQ	106aa07032bbd1b8H
	DQ	19a4c116b8d2d0c8H
	DQ	1e376c085141ab53H
	DQ	2748774cdf8eeb99H
	DQ	34b0bcb5e19b48a8H
	DQ	391c0cb3c5c95a63H
	DQ	4ed8aa4ae3418acbH
	DQ	5b9cca4f7763e373H
	DQ	682e6ff3d6b2b8a3H
	DQ	748f82ee5defb2fcH
	DQ	78a5636f43172f60H
	DQ	84c87814a1f0ab72H
	DQ	8cc702081a6439ecH
	DQ	90befffa23631e28H
	DQ	a4506cebde82bde9H
	DQ	bef9a3f7b2c67915H
	DQ	c67178f2e372532bH
	DQ	ca273eceea26619cH
	DQ	d186b8c721c0c207H
	DQ	eada7dd6cde0eb1eH
	DQ	f57d4f7fee6ed178H
	DQ	06f067aa72176fbaH
	DQ	0a637dc5a2c898a6H
	DQ	113f9804bef90daeH
	DQ	1b710b35131c471bH
	DQ	28db77f523047d84H
	DQ	32caab7b40c72493H
	DQ	3c9ebe0a15c9bebcH
	DQ	431d67c49c100d4cH
	DQ	4cc5d4becb3e42b6H
	DQ	597f299cfc657e2aH
	DQ	5fcb6fab3ad6faecH
	DQ	6c44198c4a475817H
_i384	DQ	cbbb9d5dc1059ed8H
	DQ	629a292a367cd507H
	DQ	9159015a3070dd17H
	DQ	152fecd8f70e5939H
	DQ	67332667ffc00b31H
	DQ	8eb44a8768581511H
	DQ	db0c2e0d64f98fa7H
	DQ	47b5481dbefa4fa4H
	ORG $+576
_i512	DQ	6a09e667f3bcc908H
	DQ	bb67ae8584caa73bH
	DQ	3c6ef372fe94f82bH
	DQ	a54ff53a5f1d36f1H
	DQ	510e527fade682d1H
	DQ	9b05688c2b3e6c1fH
	DQ	1f83d9abfb41bd6bH
	DQ	5be0cd19137e2179H
	ORG $+576
CONST	ENDS
PUBLIC	_sha256_compile@4
; Function compile flags: /Ogsp
; File c:\home\public\desktop\projects\ciphershed.build\src\crypto\sha2.c
;	COMDAT _sha256_compile@4
_TEXT	SEGMENT
_v$ = -36						; size = 32
tv2819 = -4						; size = 4
tv2779 = -4						; size = 4
tv2739 = -4						; size = 4
tv2709 = -4						; size = 4
tv2695 = -4						; size = 4
tv2664 = -4						; size = 4
tv2650 = -4						; size = 4
tv2555 = -4						; size = 4
tv2523 = -4						; size = 4
tv2520 = -4						; size = 4
tv2503 = -4						; size = 4
_j$ = 8							; size = 4
_ctx$ = 8						; size = 4
_sha256_compile@4 PROC					; COMDAT

; 190  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 24	 sub	 esp, 36			; 00000024H

; 191  : #if !defined(UNROLL_SHA2)
; 192  : 
; 193  :     uint_32t j, *p = ctx->wbuf, v[8];

  00008	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]

; 194  : 
; 195  :     memcpy(v, ctx->hash, 8 * sizeof(uint_32t));
; 196  : 
; 197  :     for(j = 0; j < 64; j += 16)

  0000b	83 65 08 00	 and	 DWORD PTR _j$[ebp], 0
  0000f	53		 push	 ebx
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	6a 08		 push	 8
  00014	8d 70 08	 lea	 esi, DWORD PTR [eax+8]
  00017	59		 pop	 ecx
  00018	8d 7d dc	 lea	 edi, DWORD PTR _v$[ebp]
  0001b	f3 a5		 rep movsd
  0001d	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00020	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
$LL40@sha256_com:

; 198  :     {
; 199  :         v_cycle( 0, j); v_cycle( 1, j);

  00023	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  00027	74 32		 je	 SHORT $LN6@sha256_com
  00029	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0002c	8b f9		 mov	 edi, ecx
  0002e	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  00031	8b d9		 mov	 ebx, ecx
  00033	c1 cb 07	 ror	 ebx, 7
  00036	33 fb		 xor	 edi, ebx
  00038	8b 58 60	 mov	 ebx, DWORD PTR [eax+96]
  0003b	c1 e9 03	 shr	 ecx, 3
  0003e	33 f9		 xor	 edi, ecx
  00040	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  00043	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  00046	c1 c1 0d	 rol	 ecx, 13			; 0000000dH
  00049	33 d9		 xor	 ebx, ecx
  0004b	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0004e	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00051	33 d9		 xor	 ebx, ecx
  00053	03 fb		 add	 edi, ebx
  00055	03 78 4c	 add	 edi, DWORD PTR [eax+76]
  00058	01 78 28	 add	 DWORD PTR [eax+40], edi
$LN6@sha256_com:
  0005b	8b 4d 08	 mov	 ecx, DWORD PTR _j$[ebp]
  0005e	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+16]
  00061	8b 5d ec	 mov	 ebx, DWORD PTR _v$[ebp+16]
  00064	c1 e1 02	 shl	 ecx, 2
  00067	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  0006a	c1 c3 07	 rol	 ebx, 7
  0006d	33 fb		 xor	 edi, ebx
  0006f	8b 5d ec	 mov	 ebx, DWORD PTR _v$[ebp+16]
  00072	c1 cb 06	 ror	 ebx, 6
  00075	33 fb		 xor	 edi, ebx
  00077	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  0007a	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+24]
  0007d	23 5d ec	 and	 ebx, DWORD PTR _v$[ebp+16]
  00080	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+24]
  00083	03 fb		 add	 edi, ebx
  00085	03 b9 00 00 00
	00		 add	 edi, DWORD PTR _k256[ecx]
  0008b	8b de		 mov	 ebx, esi
  0008d	03 78 28	 add	 edi, DWORD PTR [eax+40]
  00090	01 7d f8	 add	 DWORD PTR _v$[ebp+28], edi
  00093	8b 7d f8	 mov	 edi, DWORD PTR _v$[ebp+28]
  00096	01 7d e8	 add	 DWORD PTR _v$[ebp+12], edi
  00099	8b fe		 mov	 edi, esi
  0009b	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  0009e	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  000a1	33 fb		 xor	 edi, ebx
  000a3	8b de		 mov	 ebx, esi
  000a5	c1 cb 02	 ror	 ebx, 2
  000a8	33 fb		 xor	 edi, ebx
  000aa	8b da		 mov	 ebx, edx
  000ac	33 de		 xor	 ebx, esi
  000ae	23 5d e4	 and	 ebx, DWORD PTR _v$[ebp+8]
  000b1	23 d6		 and	 edx, esi
  000b3	0b da		 or	 ebx, edx
  000b5	03 5d f8	 add	 ebx, DWORD PTR _v$[ebp+28]
  000b8	03 df		 add	 ebx, edi
  000ba	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  000be	89 5d f8	 mov	 DWORD PTR _v$[ebp+28], ebx
  000c1	74 32		 je	 SHORT $LN8@sha256_com
  000c3	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  000c6	8b fa		 mov	 edi, edx
  000c8	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  000cb	8b da		 mov	 ebx, edx
  000cd	c1 cb 07	 ror	 ebx, 7
  000d0	33 fb		 xor	 edi, ebx
  000d2	8b 58 64	 mov	 ebx, DWORD PTR [eax+100]
  000d5	c1 ea 03	 shr	 edx, 3
  000d8	33 fa		 xor	 edi, edx
  000da	8b 50 64	 mov	 edx, DWORD PTR [eax+100]
  000dd	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  000e0	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  000e3	33 da		 xor	 ebx, edx
  000e5	8b 50 64	 mov	 edx, DWORD PTR [eax+100]
  000e8	c1 ea 0a	 shr	 edx, 10			; 0000000aH
  000eb	33 da		 xor	 ebx, edx
  000ed	03 fb		 add	 edi, ebx
  000ef	03 78 50	 add	 edi, DWORD PTR [eax+80]
  000f2	01 78 2c	 add	 DWORD PTR [eax+44], edi
$LN8@sha256_com:
  000f5	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+12]
  000f8	8b fa		 mov	 edi, edx
  000fa	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  000fd	8b da		 mov	 ebx, edx
  000ff	c1 c3 07	 rol	 ebx, 7
  00102	33 fb		 xor	 edi, ebx
  00104	8b da		 mov	 ebx, edx
  00106	c1 cb 06	 ror	 ebx, 6
  00109	33 fb		 xor	 edi, ebx
  0010b	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  0010e	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+16]
  00111	23 da		 and	 ebx, edx
  00113	33 5d f0	 xor	 ebx, DWORD PTR _v$[ebp+20]
  00116	03 fb		 add	 edi, ebx
  00118	03 b9 04 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+4]
  0011e	03 78 2c	 add	 edi, DWORD PTR [eax+44]
  00121	01 7d f4	 add	 DWORD PTR _v$[ebp+24], edi
  00124	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  00127	01 55 e4	 add	 DWORD PTR _v$[ebp+8], edx
  0012a	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  0012d	8b fa		 mov	 edi, edx
  0012f	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00132	8b da		 mov	 ebx, edx
  00134	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00137	33 fb		 xor	 edi, ebx
  00139	8b da		 mov	 ebx, edx
  0013b	c1 cb 02	 ror	 ebx, 2
  0013e	33 fb		 xor	 edi, ebx
  00140	8b de		 mov	 ebx, esi
  00142	33 da		 xor	 ebx, edx
  00144	23 5d e0	 and	 ebx, DWORD PTR _v$[ebp+4]
  00147	23 f2		 and	 esi, edx
  00149	0b de		 or	 ebx, esi
  0014b	03 5d f4	 add	 ebx, DWORD PTR _v$[ebp+24]

; 200  :         v_cycle( 2, j); v_cycle( 3, j);

  0014e	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  00152	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00155	89 55 f4	 mov	 DWORD PTR _v$[ebp+24], edx
  00158	74 32		 je	 SHORT $LN10@sha256_com
  0015a	8b 70 34	 mov	 esi, DWORD PTR [eax+52]
  0015d	8b fe		 mov	 edi, esi
  0015f	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  00162	8b de		 mov	 ebx, esi
  00164	c1 cb 07	 ror	 ebx, 7
  00167	33 fb		 xor	 edi, ebx
  00169	8b 58 28	 mov	 ebx, DWORD PTR [eax+40]
  0016c	c1 ee 03	 shr	 esi, 3
  0016f	33 fe		 xor	 edi, esi
  00171	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  00174	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  00177	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  0017a	33 de		 xor	 ebx, esi
  0017c	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  0017f	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  00182	33 de		 xor	 ebx, esi
  00184	03 fb		 add	 edi, ebx
  00186	03 78 54	 add	 edi, DWORD PTR [eax+84]
  00189	01 78 30	 add	 DWORD PTR [eax+48], edi
$LN10@sha256_com:
  0018c	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  0018f	8b fe		 mov	 edi, esi
  00191	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  00194	8b de		 mov	 ebx, esi
  00196	c1 c3 07	 rol	 ebx, 7
  00199	33 fb		 xor	 edi, ebx
  0019b	8b de		 mov	 ebx, esi
  0019d	c1 cb 06	 ror	 ebx, 6
  001a0	33 fb		 xor	 edi, ebx
  001a2	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  001a5	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+16]
  001a8	23 de		 and	 ebx, esi
  001aa	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+16]
  001ad	03 fb		 add	 edi, ebx
  001af	03 b9 08 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+8]
  001b5	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  001b8	03 78 30	 add	 edi, DWORD PTR [eax+48]
  001bb	23 da		 and	 ebx, edx
  001bd	01 7d f0	 add	 DWORD PTR _v$[ebp+20], edi
  001c0	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  001c3	01 75 e0	 add	 DWORD PTR _v$[ebp+4], esi
  001c6	8b f2		 mov	 esi, edx
  001c8	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  001cb	8b fa		 mov	 edi, edx
  001cd	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  001d0	33 f7		 xor	 esi, edi
  001d2	8b fa		 mov	 edi, edx
  001d4	c1 cf 02	 ror	 edi, 2
  001d7	33 f7		 xor	 esi, edi
  001d9	8b 7d f8	 mov	 edi, DWORD PTR _v$[ebp+28]
  001dc	33 fa		 xor	 edi, edx
  001de	23 7d dc	 and	 edi, DWORD PTR _v$[ebp]
  001e1	0b fb		 or	 edi, ebx
  001e3	03 7d f0	 add	 edi, DWORD PTR _v$[ebp+20]
  001e6	03 fe		 add	 edi, esi
  001e8	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  001ec	89 7d f0	 mov	 DWORD PTR _v$[ebp+20], edi
  001ef	74 32		 je	 SHORT $LN12@sha256_com
  001f1	8b 70 2c	 mov	 esi, DWORD PTR [eax+44]
  001f4	8b fe		 mov	 edi, esi
  001f6	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  001f9	8b de		 mov	 ebx, esi
  001fb	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  001fe	33 fb		 xor	 edi, ebx
  00200	8b 58 38	 mov	 ebx, DWORD PTR [eax+56]
  00203	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  00206	33 fe		 xor	 edi, esi
  00208	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  0020b	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  0020e	c1 ce 07	 ror	 esi, 7
  00211	33 de		 xor	 ebx, esi
  00213	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  00216	c1 ee 03	 shr	 esi, 3
  00219	33 de		 xor	 ebx, esi
  0021b	03 fb		 add	 edi, ebx
  0021d	03 78 58	 add	 edi, DWORD PTR [eax+88]
  00220	01 78 34	 add	 DWORD PTR [eax+52], edi
$LN12@sha256_com:
  00223	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  00226	8b fe		 mov	 edi, esi
  00228	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  0022b	8b de		 mov	 ebx, esi
  0022d	c1 c3 07	 rol	 ebx, 7
  00230	33 fb		 xor	 edi, ebx
  00232	8b de		 mov	 ebx, esi
  00234	c1 cb 06	 ror	 ebx, 6
  00237	33 fb		 xor	 edi, ebx
  00239	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+8]
  0023c	33 5d e8	 xor	 ebx, DWORD PTR _v$[ebp+12]
  0023f	23 de		 and	 ebx, esi
  00241	33 5d e8	 xor	 ebx, DWORD PTR _v$[ebp+12]
  00244	03 fb		 add	 edi, ebx
  00246	03 b9 0c 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+12]
  0024c	03 78 34	 add	 edi, DWORD PTR [eax+52]
  0024f	01 7d ec	 add	 DWORD PTR _v$[ebp+16], edi
  00252	8b 75 ec	 mov	 esi, DWORD PTR _v$[ebp+16]
  00255	01 75 dc	 add	 DWORD PTR _v$[ebp], esi
  00258	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  0025b	8b fe		 mov	 edi, esi
  0025d	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00260	8b de		 mov	 ebx, esi
  00262	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00265	33 fb		 xor	 edi, ebx
  00267	8b de		 mov	 ebx, esi
  00269	c1 cb 02	 ror	 ebx, 2
  0026c	33 fb		 xor	 edi, ebx
  0026e	8b de		 mov	 ebx, esi
  00270	33 da		 xor	 ebx, edx
  00272	23 5d f8	 and	 ebx, DWORD PTR _v$[ebp+28]
  00275	23 f2		 and	 esi, edx
  00277	0b de		 or	 ebx, esi
  00279	03 5d ec	 add	 ebx, DWORD PTR _v$[ebp+16]

; 201  :         v_cycle( 4, j); v_cycle( 5, j);

  0027c	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  00280	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00283	89 55 ec	 mov	 DWORD PTR _v$[ebp+16], edx
  00286	74 32		 je	 SHORT $LN14@sha256_com
  00288	8b 70 30	 mov	 esi, DWORD PTR [eax+48]
  0028b	8b fe		 mov	 edi, esi
  0028d	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00290	8b de		 mov	 ebx, esi
  00292	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  00295	33 fb		 xor	 edi, ebx
  00297	8b 58 3c	 mov	 ebx, DWORD PTR [eax+60]
  0029a	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  0029d	33 fe		 xor	 edi, esi
  0029f	8b 70 3c	 mov	 esi, DWORD PTR [eax+60]
  002a2	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  002a5	c1 ce 07	 ror	 esi, 7
  002a8	33 de		 xor	 ebx, esi
  002aa	8b 70 3c	 mov	 esi, DWORD PTR [eax+60]
  002ad	c1 ee 03	 shr	 esi, 3
  002b0	33 de		 xor	 ebx, esi
  002b2	03 fb		 add	 edi, ebx
  002b4	03 78 5c	 add	 edi, DWORD PTR [eax+92]
  002b7	01 78 38	 add	 DWORD PTR [eax+56], edi
$LN14@sha256_com:
  002ba	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  002bd	8b fe		 mov	 edi, esi
  002bf	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  002c2	8b de		 mov	 ebx, esi
  002c4	c1 c3 07	 rol	 ebx, 7
  002c7	33 fb		 xor	 edi, ebx
  002c9	8b de		 mov	 ebx, esi
  002cb	c1 cb 06	 ror	 ebx, 6
  002ce	33 fb		 xor	 edi, ebx
  002d0	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+8]
  002d3	33 5d e0	 xor	 ebx, DWORD PTR _v$[ebp+4]
  002d6	23 de		 and	 ebx, esi
  002d8	33 5d e4	 xor	 ebx, DWORD PTR _v$[ebp+8]
  002db	03 fb		 add	 edi, ebx
  002dd	03 b9 10 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+16]
  002e3	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  002e6	03 78 38	 add	 edi, DWORD PTR [eax+56]
  002e9	23 da		 and	 ebx, edx
  002eb	01 7d e8	 add	 DWORD PTR _v$[ebp+12], edi
  002ee	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  002f1	01 75 f8	 add	 DWORD PTR _v$[ebp+28], esi
  002f4	8b f2		 mov	 esi, edx
  002f6	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  002f9	8b fa		 mov	 edi, edx
  002fb	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  002fe	33 f7		 xor	 esi, edi
  00300	8b fa		 mov	 edi, edx
  00302	c1 cf 02	 ror	 edi, 2
  00305	33 f7		 xor	 esi, edi
  00307	8b 7d f0	 mov	 edi, DWORD PTR _v$[ebp+20]
  0030a	33 fa		 xor	 edi, edx
  0030c	23 7d f4	 and	 edi, DWORD PTR _v$[ebp+24]
  0030f	0b fb		 or	 edi, ebx
  00311	03 7d e8	 add	 edi, DWORD PTR _v$[ebp+12]
  00314	03 fe		 add	 edi, esi
  00316	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  0031a	89 7d e8	 mov	 DWORD PTR _v$[ebp+12], edi
  0031d	74 32		 je	 SHORT $LN16@sha256_com
  0031f	8b 70 34	 mov	 esi, DWORD PTR [eax+52]
  00322	8b fe		 mov	 edi, esi
  00324	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00327	8b de		 mov	 ebx, esi
  00329	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  0032c	33 fb		 xor	 edi, ebx
  0032e	8b 58 40	 mov	 ebx, DWORD PTR [eax+64]
  00331	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  00334	33 fe		 xor	 edi, esi
  00336	8b 70 40	 mov	 esi, DWORD PTR [eax+64]
  00339	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  0033c	c1 ce 07	 ror	 esi, 7
  0033f	33 de		 xor	 ebx, esi
  00341	8b 70 40	 mov	 esi, DWORD PTR [eax+64]
  00344	c1 ee 03	 shr	 esi, 3
  00347	33 de		 xor	 ebx, esi
  00349	03 fb		 add	 edi, ebx
  0034b	03 78 60	 add	 edi, DWORD PTR [eax+96]
  0034e	01 78 3c	 add	 DWORD PTR [eax+60], edi
$LN16@sha256_com:
  00351	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+28]
  00354	8b fe		 mov	 edi, esi
  00356	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  00359	8b de		 mov	 ebx, esi
  0035b	c1 c3 07	 rol	 ebx, 7
  0035e	33 fb		 xor	 edi, ebx
  00360	8b de		 mov	 ebx, esi
  00362	c1 cb 06	 ror	 ebx, 6
  00365	33 fb		 xor	 edi, ebx
  00367	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  0036a	33 5d dc	 xor	 ebx, DWORD PTR _v$[ebp]
  0036d	23 de		 and	 ebx, esi
  0036f	33 5d e0	 xor	 ebx, DWORD PTR _v$[ebp+4]
  00372	03 fb		 add	 edi, ebx
  00374	03 b9 14 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+20]
  0037a	03 78 3c	 add	 edi, DWORD PTR [eax+60]
  0037d	01 7d e4	 add	 DWORD PTR _v$[ebp+8], edi
  00380	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  00383	01 75 f4	 add	 DWORD PTR _v$[ebp+24], esi
  00386	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  00389	8b fe		 mov	 edi, esi
  0038b	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  0038e	8b de		 mov	 ebx, esi
  00390	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00393	33 fb		 xor	 edi, ebx
  00395	8b de		 mov	 ebx, esi
  00397	c1 cb 02	 ror	 ebx, 2
  0039a	33 fb		 xor	 edi, ebx
  0039c	8b de		 mov	 ebx, esi
  0039e	33 da		 xor	 ebx, edx
  003a0	23 5d f0	 and	 ebx, DWORD PTR _v$[ebp+20]
  003a3	23 f2		 and	 esi, edx
  003a5	0b de		 or	 ebx, esi
  003a7	03 5d e4	 add	 ebx, DWORD PTR _v$[ebp+8]
  003aa	03 df		 add	 ebx, edi

; 202  :         v_cycle( 6, j); v_cycle( 7, j);

  003ac	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  003b0	89 5d e4	 mov	 DWORD PTR _v$[ebp+8], ebx
  003b3	74 32		 je	 SHORT $LN18@sha256_com
  003b5	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  003b8	8b fe		 mov	 edi, esi
  003ba	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  003bd	8b de		 mov	 ebx, esi
  003bf	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  003c2	33 fb		 xor	 edi, ebx
  003c4	8b 58 44	 mov	 ebx, DWORD PTR [eax+68]
  003c7	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  003ca	33 fe		 xor	 edi, esi
  003cc	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  003cf	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  003d2	c1 ce 07	 ror	 esi, 7
  003d5	33 de		 xor	 ebx, esi
  003d7	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  003da	c1 ee 03	 shr	 esi, 3
  003dd	33 de		 xor	 ebx, esi
  003df	03 fb		 add	 edi, ebx
  003e1	03 78 64	 add	 edi, DWORD PTR [eax+100]
  003e4	01 78 40	 add	 DWORD PTR [eax+64], edi
$LN18@sha256_com:
  003e7	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+24]
  003ea	8b fe		 mov	 edi, esi
  003ec	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  003ef	8b de		 mov	 ebx, esi
  003f1	c1 c3 07	 rol	 ebx, 7
  003f4	33 fb		 xor	 edi, ebx
  003f6	8b de		 mov	 ebx, esi
  003f8	c1 cb 06	 ror	 ebx, 6
  003fb	33 fb		 xor	 edi, ebx
  003fd	8b 5d dc	 mov	 ebx, DWORD PTR _v$[ebp]
  00400	33 5d f8	 xor	 ebx, DWORD PTR _v$[ebp+28]
  00403	23 de		 and	 ebx, esi
  00405	33 5d dc	 xor	 ebx, DWORD PTR _v$[ebp]
  00408	03 fb		 add	 edi, ebx
  0040a	03 b9 18 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+24]
  00410	03 78 40	 add	 edi, DWORD PTR [eax+64]
  00413	01 7d e0	 add	 DWORD PTR _v$[ebp+4], edi
  00416	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  00419	01 75 f0	 add	 DWORD PTR _v$[ebp+20], esi
  0041c	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  0041f	8b fe		 mov	 edi, esi
  00421	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00424	8b de		 mov	 ebx, esi
  00426	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00429	33 fb		 xor	 edi, ebx
  0042b	8b de		 mov	 ebx, esi
  0042d	c1 cb 02	 ror	 ebx, 2
  00430	33 fb		 xor	 edi, ebx
  00432	8b de		 mov	 ebx, esi
  00434	33 5d e8	 xor	 ebx, DWORD PTR _v$[ebp+12]
  00437	23 75 e8	 and	 esi, DWORD PTR _v$[ebp+12]
  0043a	23 da		 and	 ebx, edx
  0043c	0b de		 or	 ebx, esi
  0043e	03 5d e0	 add	 ebx, DWORD PTR _v$[ebp+4]
  00441	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  00445	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00448	89 55 e0	 mov	 DWORD PTR _v$[ebp+4], edx
  0044b	74 32		 je	 SHORT $LN20@sha256_com
  0044d	8b 70 3c	 mov	 esi, DWORD PTR [eax+60]
  00450	8b fe		 mov	 edi, esi
  00452	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00455	8b de		 mov	 ebx, esi
  00457	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  0045a	33 fb		 xor	 edi, ebx
  0045c	8b 58 48	 mov	 ebx, DWORD PTR [eax+72]
  0045f	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  00462	33 fe		 xor	 edi, esi
  00464	8b 70 48	 mov	 esi, DWORD PTR [eax+72]
  00467	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  0046a	c1 ce 07	 ror	 esi, 7
  0046d	33 de		 xor	 ebx, esi
  0046f	8b 70 48	 mov	 esi, DWORD PTR [eax+72]
  00472	c1 ee 03	 shr	 esi, 3
  00475	33 de		 xor	 ebx, esi
  00477	03 fb		 add	 edi, ebx
  00479	03 78 28	 add	 edi, DWORD PTR [eax+40]
  0047c	01 78 44	 add	 DWORD PTR [eax+68], edi
$LN20@sha256_com:
  0047f	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  00482	8b fe		 mov	 edi, esi
  00484	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  00487	8b de		 mov	 ebx, esi
  00489	c1 c3 07	 rol	 ebx, 7
  0048c	33 fb		 xor	 edi, ebx
  0048e	8b de		 mov	 ebx, esi
  00490	c1 cb 06	 ror	 ebx, 6
  00493	33 fb		 xor	 edi, ebx
  00495	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  00498	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+24]
  0049b	23 de		 and	 ebx, esi
  0049d	33 5d f8	 xor	 ebx, DWORD PTR _v$[ebp+28]
  004a0	03 fb		 add	 edi, ebx
  004a2	03 b9 1c 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+28]
  004a8	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+8]
  004ab	03 78 44	 add	 edi, DWORD PTR [eax+68]
  004ae	23 da		 and	 ebx, edx
  004b0	01 7d dc	 add	 DWORD PTR _v$[ebp], edi
  004b3	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  004b6	01 75 ec	 add	 DWORD PTR _v$[ebp+16], esi
  004b9	8b f2		 mov	 esi, edx
  004bb	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  004be	8b fa		 mov	 edi, edx
  004c0	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  004c3	33 f7		 xor	 esi, edi
  004c5	8b fa		 mov	 edi, edx
  004c7	c1 cf 02	 ror	 edi, 2
  004ca	33 f7		 xor	 esi, edi
  004cc	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+8]
  004cf	33 fa		 xor	 edi, edx
  004d1	23 7d e8	 and	 edi, DWORD PTR _v$[ebp+12]
  004d4	0b fb		 or	 edi, ebx
  004d6	03 7d dc	 add	 edi, DWORD PTR _v$[ebp]
  004d9	03 fe		 add	 edi, esi

; 203  :         v_cycle( 8, j); v_cycle( 9, j);

  004db	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  004df	89 7d dc	 mov	 DWORD PTR _v$[ebp], edi
  004e2	74 32		 je	 SHORT $LN22@sha256_com
  004e4	8b 70 40	 mov	 esi, DWORD PTR [eax+64]
  004e7	8b fe		 mov	 edi, esi
  004e9	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  004ec	8b de		 mov	 ebx, esi
  004ee	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  004f1	33 fb		 xor	 edi, ebx
  004f3	8b 58 4c	 mov	 ebx, DWORD PTR [eax+76]
  004f6	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  004f9	33 fe		 xor	 edi, esi
  004fb	8b 70 4c	 mov	 esi, DWORD PTR [eax+76]
  004fe	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  00501	c1 ce 07	 ror	 esi, 7
  00504	33 de		 xor	 ebx, esi
  00506	8b 70 4c	 mov	 esi, DWORD PTR [eax+76]
  00509	c1 ee 03	 shr	 esi, 3
  0050c	33 de		 xor	 ebx, esi
  0050e	03 fb		 add	 edi, ebx
  00510	03 78 2c	 add	 edi, DWORD PTR [eax+44]
  00513	01 78 48	 add	 DWORD PTR [eax+72], edi
$LN22@sha256_com:
  00516	8b 75 ec	 mov	 esi, DWORD PTR _v$[ebp+16]
  00519	8b fe		 mov	 edi, esi
  0051b	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  0051e	8b de		 mov	 ebx, esi
  00520	c1 c3 07	 rol	 ebx, 7
  00523	33 fb		 xor	 edi, ebx
  00525	8b de		 mov	 ebx, esi
  00527	c1 cb 06	 ror	 ebx, 6
  0052a	33 fb		 xor	 edi, ebx
  0052c	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  0052f	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+24]
  00532	23 de		 and	 ebx, esi
  00534	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+24]
  00537	03 fb		 add	 edi, ebx
  00539	03 b9 20 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+32]
  0053f	03 78 48	 add	 edi, DWORD PTR [eax+72]
  00542	01 7d f8	 add	 DWORD PTR _v$[ebp+28], edi
  00545	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+28]
  00548	01 75 e8	 add	 DWORD PTR _v$[ebp+12], esi
  0054b	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  0054e	8b fe		 mov	 edi, esi
  00550	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00553	8b de		 mov	 ebx, esi
  00555	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00558	33 fb		 xor	 edi, ebx
  0055a	8b de		 mov	 ebx, esi
  0055c	c1 cb 02	 ror	 ebx, 2
  0055f	33 fb		 xor	 edi, ebx
  00561	8b da		 mov	 ebx, edx
  00563	33 de		 xor	 ebx, esi
  00565	23 5d e4	 and	 ebx, DWORD PTR _v$[ebp+8]
  00568	23 d6		 and	 edx, esi
  0056a	0b da		 or	 ebx, edx
  0056c	03 5d f8	 add	 ebx, DWORD PTR _v$[ebp+28]
  0056f	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  00573	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00576	89 55 f8	 mov	 DWORD PTR _v$[ebp+28], edx
  00579	74 32		 je	 SHORT $LN24@sha256_com
  0057b	8b 70 50	 mov	 esi, DWORD PTR [eax+80]
  0057e	8b fe		 mov	 edi, esi
  00580	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  00583	8b de		 mov	 ebx, esi
  00585	c1 cb 07	 ror	 ebx, 7
  00588	33 fb		 xor	 edi, ebx
  0058a	8b 58 44	 mov	 ebx, DWORD PTR [eax+68]
  0058d	c1 ee 03	 shr	 esi, 3
  00590	33 fe		 xor	 edi, esi
  00592	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00595	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  00598	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  0059b	33 de		 xor	 ebx, esi
  0059d	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  005a0	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  005a3	33 de		 xor	 ebx, esi
  005a5	03 fb		 add	 edi, ebx
  005a7	03 78 30	 add	 edi, DWORD PTR [eax+48]
  005aa	01 78 4c	 add	 DWORD PTR [eax+76], edi
$LN24@sha256_com:
  005ad	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  005b0	8b fe		 mov	 edi, esi
  005b2	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  005b5	8b de		 mov	 ebx, esi
  005b7	c1 c3 07	 rol	 ebx, 7
  005ba	33 fb		 xor	 edi, ebx
  005bc	8b de		 mov	 ebx, esi
  005be	c1 cb 06	 ror	 ebx, 6
  005c1	33 fb		 xor	 edi, ebx
  005c3	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  005c6	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+16]
  005c9	23 de		 and	 ebx, esi
  005cb	33 5d f0	 xor	 ebx, DWORD PTR _v$[ebp+20]
  005ce	03 fb		 add	 edi, ebx
  005d0	03 b9 24 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+36]
  005d6	8b 5d dc	 mov	 ebx, DWORD PTR _v$[ebp]
  005d9	03 78 4c	 add	 edi, DWORD PTR [eax+76]
  005dc	23 da		 and	 ebx, edx
  005de	01 7d f4	 add	 DWORD PTR _v$[ebp+24], edi
  005e1	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+24]
  005e4	01 75 e4	 add	 DWORD PTR _v$[ebp+8], esi
  005e7	8b f2		 mov	 esi, edx
  005e9	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  005ec	8b fa		 mov	 edi, edx
  005ee	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  005f1	33 f7		 xor	 esi, edi
  005f3	8b fa		 mov	 edi, edx
  005f5	c1 cf 02	 ror	 edi, 2
  005f8	33 f7		 xor	 esi, edi
  005fa	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp]
  005fd	33 fa		 xor	 edi, edx
  005ff	23 7d e0	 and	 edi, DWORD PTR _v$[ebp+4]
  00602	0b fb		 or	 edi, ebx
  00604	03 7d f4	 add	 edi, DWORD PTR _v$[ebp+24]

; 204  :         v_cycle(10, j); v_cycle(11, j);

  00607	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  0060b	8d 14 37	 lea	 edx, DWORD PTR [edi+esi]
  0060e	89 55 f4	 mov	 DWORD PTR _v$[ebp+24], edx
  00611	74 32		 je	 SHORT $LN26@sha256_com
  00613	8b 70 54	 mov	 esi, DWORD PTR [eax+84]
  00616	8b fe		 mov	 edi, esi
  00618	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  0061b	8b de		 mov	 ebx, esi
  0061d	c1 cb 07	 ror	 ebx, 7
  00620	33 fb		 xor	 edi, ebx
  00622	8b 58 48	 mov	 ebx, DWORD PTR [eax+72]
  00625	c1 ee 03	 shr	 esi, 3
  00628	33 fe		 xor	 edi, esi
  0062a	8b 70 48	 mov	 esi, DWORD PTR [eax+72]
  0062d	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  00630	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00633	33 de		 xor	 ebx, esi
  00635	8b 70 48	 mov	 esi, DWORD PTR [eax+72]
  00638	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  0063b	33 de		 xor	 ebx, esi
  0063d	03 fb		 add	 edi, ebx
  0063f	03 78 34	 add	 edi, DWORD PTR [eax+52]
  00642	01 78 50	 add	 DWORD PTR [eax+80], edi
$LN26@sha256_com:
  00645	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  00648	8b fe		 mov	 edi, esi
  0064a	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  0064d	8b de		 mov	 ebx, esi
  0064f	c1 c3 07	 rol	 ebx, 7
  00652	33 fb		 xor	 edi, ebx
  00654	8b de		 mov	 ebx, esi
  00656	c1 cb 06	 ror	 ebx, 6
  00659	33 fb		 xor	 edi, ebx
  0065b	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  0065e	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+16]
  00661	23 de		 and	 ebx, esi
  00663	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+16]
  00666	03 fb		 add	 edi, ebx
  00668	03 b9 28 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+40]
  0066e	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  00671	03 78 50	 add	 edi, DWORD PTR [eax+80]
  00674	23 da		 and	 ebx, edx
  00676	01 7d f0	 add	 DWORD PTR _v$[ebp+20], edi
  00679	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  0067c	01 75 e0	 add	 DWORD PTR _v$[ebp+4], esi
  0067f	8b f2		 mov	 esi, edx
  00681	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  00684	8b fa		 mov	 edi, edx
  00686	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00689	33 f7		 xor	 esi, edi
  0068b	8b fa		 mov	 edi, edx
  0068d	c1 cf 02	 ror	 edi, 2
  00690	33 f7		 xor	 esi, edi
  00692	8b 7d f8	 mov	 edi, DWORD PTR _v$[ebp+28]
  00695	33 fa		 xor	 edi, edx
  00697	23 7d dc	 and	 edi, DWORD PTR _v$[ebp]
  0069a	0b fb		 or	 edi, ebx
  0069c	03 7d f0	 add	 edi, DWORD PTR _v$[ebp+20]
  0069f	03 fe		 add	 edi, esi
  006a1	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  006a5	89 7d f0	 mov	 DWORD PTR _v$[ebp+20], edi
  006a8	74 32		 je	 SHORT $LN28@sha256_com
  006aa	8b 70 4c	 mov	 esi, DWORD PTR [eax+76]
  006ad	8b fe		 mov	 edi, esi
  006af	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  006b2	8b de		 mov	 ebx, esi
  006b4	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  006b7	33 fb		 xor	 edi, ebx
  006b9	8b 58 58	 mov	 ebx, DWORD PTR [eax+88]
  006bc	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  006bf	33 fe		 xor	 edi, esi
  006c1	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  006c4	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  006c7	c1 ce 07	 ror	 esi, 7
  006ca	33 de		 xor	 ebx, esi
  006cc	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  006cf	c1 ee 03	 shr	 esi, 3
  006d2	33 de		 xor	 ebx, esi
  006d4	03 fb		 add	 edi, ebx
  006d6	03 78 38	 add	 edi, DWORD PTR [eax+56]
  006d9	01 78 54	 add	 DWORD PTR [eax+84], edi
$LN28@sha256_com:
  006dc	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  006df	8b fe		 mov	 edi, esi
  006e1	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  006e4	8b de		 mov	 ebx, esi
  006e6	c1 c3 07	 rol	 ebx, 7
  006e9	33 fb		 xor	 edi, ebx
  006eb	8b de		 mov	 ebx, esi
  006ed	c1 cb 06	 ror	 ebx, 6
  006f0	33 fb		 xor	 edi, ebx
  006f2	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+8]
  006f5	33 5d e8	 xor	 ebx, DWORD PTR _v$[ebp+12]
  006f8	23 de		 and	 ebx, esi
  006fa	33 5d e8	 xor	 ebx, DWORD PTR _v$[ebp+12]
  006fd	03 fb		 add	 edi, ebx
  006ff	03 b9 2c 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+44]
  00705	03 78 54	 add	 edi, DWORD PTR [eax+84]
  00708	01 7d ec	 add	 DWORD PTR _v$[ebp+16], edi
  0070b	8b 75 ec	 mov	 esi, DWORD PTR _v$[ebp+16]
  0070e	01 75 dc	 add	 DWORD PTR _v$[ebp], esi
  00711	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  00714	8b fe		 mov	 edi, esi
  00716	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00719	8b de		 mov	 ebx, esi
  0071b	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  0071e	33 fb		 xor	 edi, ebx
  00720	8b de		 mov	 ebx, esi
  00722	c1 cb 02	 ror	 ebx, 2
  00725	33 fb		 xor	 edi, ebx
  00727	8b de		 mov	 ebx, esi
  00729	33 da		 xor	 ebx, edx
  0072b	23 5d f8	 and	 ebx, DWORD PTR _v$[ebp+28]
  0072e	23 f2		 and	 esi, edx
  00730	0b de		 or	 ebx, esi
  00732	03 5d ec	 add	 ebx, DWORD PTR _v$[ebp+16]

; 205  :         v_cycle(12, j); v_cycle(13, j);

  00735	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  00739	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  0073c	89 55 ec	 mov	 DWORD PTR _v$[ebp+16], edx
  0073f	74 32		 je	 SHORT $LN30@sha256_com
  00741	8b 70 50	 mov	 esi, DWORD PTR [eax+80]
  00744	8b fe		 mov	 edi, esi
  00746	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00749	8b de		 mov	 ebx, esi
  0074b	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  0074e	33 fb		 xor	 edi, ebx
  00750	8b 58 5c	 mov	 ebx, DWORD PTR [eax+92]
  00753	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  00756	33 fe		 xor	 edi, esi
  00758	8b 70 5c	 mov	 esi, DWORD PTR [eax+92]
  0075b	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  0075e	c1 ce 07	 ror	 esi, 7
  00761	33 de		 xor	 ebx, esi
  00763	8b 70 5c	 mov	 esi, DWORD PTR [eax+92]
  00766	c1 ee 03	 shr	 esi, 3
  00769	33 de		 xor	 ebx, esi
  0076b	03 fb		 add	 edi, ebx
  0076d	03 78 3c	 add	 edi, DWORD PTR [eax+60]
  00770	01 78 58	 add	 DWORD PTR [eax+88], edi
$LN30@sha256_com:
  00773	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  00776	8b fe		 mov	 edi, esi
  00778	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  0077b	8b de		 mov	 ebx, esi
  0077d	c1 c3 07	 rol	 ebx, 7
  00780	33 fb		 xor	 edi, ebx
  00782	8b de		 mov	 ebx, esi
  00784	c1 cb 06	 ror	 ebx, 6
  00787	33 fb		 xor	 edi, ebx
  00789	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+8]
  0078c	33 5d e0	 xor	 ebx, DWORD PTR _v$[ebp+4]
  0078f	23 de		 and	 ebx, esi
  00791	33 5d e4	 xor	 ebx, DWORD PTR _v$[ebp+8]
  00794	03 fb		 add	 edi, ebx
  00796	03 b9 30 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+48]
  0079c	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  0079f	03 78 58	 add	 edi, DWORD PTR [eax+88]
  007a2	23 da		 and	 ebx, edx
  007a4	01 7d e8	 add	 DWORD PTR _v$[ebp+12], edi
  007a7	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  007aa	01 75 f8	 add	 DWORD PTR _v$[ebp+28], esi
  007ad	8b f2		 mov	 esi, edx
  007af	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  007b2	8b fa		 mov	 edi, edx
  007b4	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  007b7	33 f7		 xor	 esi, edi
  007b9	8b fa		 mov	 edi, edx
  007bb	c1 cf 02	 ror	 edi, 2
  007be	33 f7		 xor	 esi, edi
  007c0	8b 7d f0	 mov	 edi, DWORD PTR _v$[ebp+20]
  007c3	33 fa		 xor	 edi, edx
  007c5	23 7d f4	 and	 edi, DWORD PTR _v$[ebp+24]
  007c8	0b fb		 or	 edi, ebx
  007ca	03 7d e8	 add	 edi, DWORD PTR _v$[ebp+12]
  007cd	03 fe		 add	 edi, esi
  007cf	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  007d3	89 7d e8	 mov	 DWORD PTR _v$[ebp+12], edi
  007d6	74 32		 je	 SHORT $LN32@sha256_com
  007d8	8b 70 54	 mov	 esi, DWORD PTR [eax+84]
  007db	8b fe		 mov	 edi, esi
  007dd	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  007e0	8b de		 mov	 ebx, esi
  007e2	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  007e5	33 fb		 xor	 edi, ebx
  007e7	8b 58 60	 mov	 ebx, DWORD PTR [eax+96]
  007ea	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  007ed	33 fe		 xor	 edi, esi
  007ef	8b 70 60	 mov	 esi, DWORD PTR [eax+96]
  007f2	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  007f5	c1 ce 07	 ror	 esi, 7
  007f8	33 de		 xor	 ebx, esi
  007fa	8b 70 60	 mov	 esi, DWORD PTR [eax+96]
  007fd	c1 ee 03	 shr	 esi, 3
  00800	33 de		 xor	 ebx, esi
  00802	03 fb		 add	 edi, ebx
  00804	03 78 40	 add	 edi, DWORD PTR [eax+64]
  00807	01 78 5c	 add	 DWORD PTR [eax+92], edi
$LN32@sha256_com:
  0080a	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+28]
  0080d	8b fe		 mov	 edi, esi
  0080f	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  00812	8b de		 mov	 ebx, esi
  00814	c1 c3 07	 rol	 ebx, 7
  00817	33 fb		 xor	 edi, ebx
  00819	8b de		 mov	 ebx, esi
  0081b	c1 cb 06	 ror	 ebx, 6
  0081e	33 fb		 xor	 edi, ebx
  00820	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  00823	33 5d dc	 xor	 ebx, DWORD PTR _v$[ebp]
  00826	23 de		 and	 ebx, esi
  00828	33 5d e0	 xor	 ebx, DWORD PTR _v$[ebp+4]
  0082b	03 fb		 add	 edi, ebx
  0082d	03 b9 34 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+52]
  00833	03 78 5c	 add	 edi, DWORD PTR [eax+92]
  00836	01 7d e4	 add	 DWORD PTR _v$[ebp+8], edi
  00839	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  0083c	01 75 f4	 add	 DWORD PTR _v$[ebp+24], esi
  0083f	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  00842	8b fe		 mov	 edi, esi
  00844	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00847	8b de		 mov	 ebx, esi
  00849	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  0084c	33 fb		 xor	 edi, ebx
  0084e	8b de		 mov	 ebx, esi
  00850	c1 cb 02	 ror	 ebx, 2
  00853	33 fb		 xor	 edi, ebx
  00855	8b de		 mov	 ebx, esi
  00857	33 da		 xor	 ebx, edx
  00859	23 5d f0	 and	 ebx, DWORD PTR _v$[ebp+20]
  0085c	23 f2		 and	 esi, edx
  0085e	0b de		 or	 ebx, esi
  00860	03 5d e4	 add	 ebx, DWORD PTR _v$[ebp+8]
  00863	03 df		 add	 ebx, edi

; 206  :         v_cycle(14, j); v_cycle(15, j);

  00865	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  00869	89 5d e4	 mov	 DWORD PTR _v$[ebp+8], ebx
  0086c	74 32		 je	 SHORT $LN34@sha256_com
  0086e	8b 70 64	 mov	 esi, DWORD PTR [eax+100]
  00871	8b fe		 mov	 edi, esi
  00873	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  00876	8b de		 mov	 ebx, esi
  00878	c1 cb 07	 ror	 ebx, 7
  0087b	33 fb		 xor	 edi, ebx
  0087d	8b 58 58	 mov	 ebx, DWORD PTR [eax+88]
  00880	c1 ee 03	 shr	 esi, 3
  00883	33 fe		 xor	 edi, esi
  00885	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  00888	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  0088b	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  0088e	33 de		 xor	 ebx, esi
  00890	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  00893	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  00896	33 de		 xor	 ebx, esi
  00898	03 fb		 add	 edi, ebx
  0089a	03 78 44	 add	 edi, DWORD PTR [eax+68]
  0089d	01 78 60	 add	 DWORD PTR [eax+96], edi
$LN34@sha256_com:
  008a0	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+24]
  008a3	8b fe		 mov	 edi, esi
  008a5	c1 cf 0b	 ror	 edi, 11			; 0000000bH
  008a8	8b de		 mov	 ebx, esi
  008aa	c1 c3 07	 rol	 ebx, 7
  008ad	33 fb		 xor	 edi, ebx
  008af	8b de		 mov	 ebx, esi
  008b1	c1 cb 06	 ror	 ebx, 6
  008b4	33 fb		 xor	 edi, ebx
  008b6	8b 5d dc	 mov	 ebx, DWORD PTR _v$[ebp]
  008b9	33 5d f8	 xor	 ebx, DWORD PTR _v$[ebp+28]
  008bc	23 de		 and	 ebx, esi
  008be	33 5d dc	 xor	 ebx, DWORD PTR _v$[ebp]
  008c1	03 fb		 add	 edi, ebx
  008c3	03 b9 38 00 00
	00		 add	 edi, DWORD PTR _k256[ecx+56]
  008c9	03 78 60	 add	 edi, DWORD PTR [eax+96]
  008cc	01 7d e0	 add	 DWORD PTR _v$[ebp+4], edi
  008cf	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  008d2	01 75 f0	 add	 DWORD PTR _v$[ebp+20], esi
  008d5	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  008d8	8b fe		 mov	 edi, esi
  008da	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  008dd	8b de		 mov	 ebx, esi
  008df	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  008e2	33 fb		 xor	 edi, ebx
  008e4	8b de		 mov	 ebx, esi
  008e6	c1 cb 02	 ror	 ebx, 2
  008e9	33 fb		 xor	 edi, ebx
  008eb	8b de		 mov	 ebx, esi
  008ed	33 5d e8	 xor	 ebx, DWORD PTR _v$[ebp+12]
  008f0	23 75 e8	 and	 esi, DWORD PTR _v$[ebp+12]
  008f3	23 da		 and	 ebx, edx
  008f5	0b de		 or	 ebx, esi
  008f7	03 5d e0	 add	 ebx, DWORD PTR _v$[ebp+4]
  008fa	83 7d 08 00	 cmp	 DWORD PTR _j$[ebp], 0
  008fe	8d 14 3b	 lea	 edx, DWORD PTR [ebx+edi]
  00901	89 55 e0	 mov	 DWORD PTR _v$[ebp+4], edx
  00904	74 32		 je	 SHORT $LN36@sha256_com
  00906	8b 70 5c	 mov	 esi, DWORD PTR [eax+92]
  00909	8b fe		 mov	 edi, esi
  0090b	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  0090e	8b de		 mov	 ebx, esi
  00910	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  00913	33 fb		 xor	 edi, ebx
  00915	8b 58 28	 mov	 ebx, DWORD PTR [eax+40]
  00918	c1 ee 0a	 shr	 esi, 10			; 0000000aH
  0091b	33 fe		 xor	 edi, esi
  0091d	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  00920	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  00923	c1 ce 07	 ror	 esi, 7
  00926	33 de		 xor	 ebx, esi
  00928	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  0092b	c1 ee 03	 shr	 esi, 3
  0092e	33 de		 xor	 ebx, esi
  00930	03 fb		 add	 edi, ebx
  00932	03 78 48	 add	 edi, DWORD PTR [eax+72]
  00935	01 78 64	 add	 DWORD PTR [eax+100], edi
$LN36@sha256_com:
  00938	8b 7d f0	 mov	 edi, DWORD PTR _v$[ebp+20]
  0093b	8b f7		 mov	 esi, edi
  0093d	c1 ce 0b	 ror	 esi, 11			; 0000000bH
  00940	8b df		 mov	 ebx, edi
  00942	c1 c3 07	 rol	 ebx, 7
  00945	33 f3		 xor	 esi, ebx
  00947	8b df		 mov	 ebx, edi
  00949	c1 cb 06	 ror	 ebx, 6
  0094c	33 f3		 xor	 esi, ebx
  0094e	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  00951	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+24]
  00954	83 45 08 10	 add	 DWORD PTR _j$[ebp], 16	; 00000010H
  00958	23 df		 and	 ebx, edi
  0095a	33 5d f8	 xor	 ebx, DWORD PTR _v$[ebp+28]
  0095d	03 f3		 add	 esi, ebx
  0095f	03 b1 3c 00 00
	00		 add	 esi, DWORD PTR _k256[ecx+60]
  00965	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+8]
  00968	03 70 64	 add	 esi, DWORD PTR [eax+100]
  0096b	23 da		 and	 ebx, edx
  0096d	01 75 dc	 add	 DWORD PTR _v$[ebp], esi
  00970	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  00973	01 4d ec	 add	 DWORD PTR _v$[ebp+16], ecx
  00976	8b ca		 mov	 ecx, edx
  00978	c1 c9 0d	 ror	 ecx, 13			; 0000000dH
  0097b	8b f2		 mov	 esi, edx
  0097d	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00980	33 ce		 xor	 ecx, esi
  00982	8b f2		 mov	 esi, edx
  00984	c1 ce 02	 ror	 esi, 2
  00987	33 ce		 xor	 ecx, esi
  00989	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  0098c	33 f2		 xor	 esi, edx
  0098e	23 75 e8	 and	 esi, DWORD PTR _v$[ebp+12]
  00991	0b f3		 or	 esi, ebx
  00993	03 75 dc	 add	 esi, DWORD PTR _v$[ebp]
  00996	03 f1		 add	 esi, ecx
  00998	83 7d 08 40	 cmp	 DWORD PTR _j$[ebp], 64	; 00000040H
  0099c	89 75 dc	 mov	 DWORD PTR _v$[ebp], esi
  0099f	0f 82 7e f6 ff
	ff		 jb	 $LL40@sha256_com

; 207  :     }
; 208  : 
; 209  :     ctx->hash[0] += v[0]; ctx->hash[1] += v[1];
; 210  :     ctx->hash[2] += v[2]; ctx->hash[3] += v[3];

  009a5	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  009a8	01 48 10	 add	 DWORD PTR [eax+16], ecx
  009ab	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  009ae	01 48 14	 add	 DWORD PTR [eax+20], ecx

; 211  :     ctx->hash[4] += v[4]; ctx->hash[5] += v[5];

  009b1	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+16]
  009b4	01 48 18	 add	 DWORD PTR [eax+24], ecx
  009b7	01 78 1c	 add	 DWORD PTR [eax+28], edi

; 212  :     ctx->hash[6] += v[6]; ctx->hash[7] += v[7];

  009ba	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  009bd	01 70 08	 add	 DWORD PTR [eax+8], esi
  009c0	01 48 20	 add	 DWORD PTR [eax+32], ecx
  009c3	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  009c6	01 50 0c	 add	 DWORD PTR [eax+12], edx
  009c9	01 48 24	 add	 DWORD PTR [eax+36], ecx
  009cc	5f		 pop	 edi
  009cd	5e		 pop	 esi
  009ce	5b		 pop	 ebx

; 213  : 
; 214  : #else
; 215  : 
; 216  :     uint_32t *p = ctx->wbuf,v0,v1,v2,v3,v4,v5,v6,v7;
; 217  : 
; 218  :     v0 = ctx->hash[0]; v1 = ctx->hash[1];
; 219  :     v2 = ctx->hash[2]; v3 = ctx->hash[3];
; 220  :     v4 = ctx->hash[4]; v5 = ctx->hash[5];
; 221  :     v6 = ctx->hash[6]; v7 = ctx->hash[7];
; 222  : 
; 223  :     one_cycle(0,1,2,3,4,5,6,7,k256[ 0],p[ 0]);
; 224  :     one_cycle(7,0,1,2,3,4,5,6,k256[ 1],p[ 1]);
; 225  :     one_cycle(6,7,0,1,2,3,4,5,k256[ 2],p[ 2]);
; 226  :     one_cycle(5,6,7,0,1,2,3,4,k256[ 3],p[ 3]);
; 227  :     one_cycle(4,5,6,7,0,1,2,3,k256[ 4],p[ 4]);
; 228  :     one_cycle(3,4,5,6,7,0,1,2,k256[ 5],p[ 5]);
; 229  :     one_cycle(2,3,4,5,6,7,0,1,k256[ 6],p[ 6]);
; 230  :     one_cycle(1,2,3,4,5,6,7,0,k256[ 7],p[ 7]);
; 231  :     one_cycle(0,1,2,3,4,5,6,7,k256[ 8],p[ 8]);
; 232  :     one_cycle(7,0,1,2,3,4,5,6,k256[ 9],p[ 9]);
; 233  :     one_cycle(6,7,0,1,2,3,4,5,k256[10],p[10]);
; 234  :     one_cycle(5,6,7,0,1,2,3,4,k256[11],p[11]);
; 235  :     one_cycle(4,5,6,7,0,1,2,3,k256[12],p[12]);
; 236  :     one_cycle(3,4,5,6,7,0,1,2,k256[13],p[13]);
; 237  :     one_cycle(2,3,4,5,6,7,0,1,k256[14],p[14]);
; 238  :     one_cycle(1,2,3,4,5,6,7,0,k256[15],p[15]);
; 239  : 
; 240  :     one_cycle(0,1,2,3,4,5,6,7,k256[16],hf( 0));
; 241  :     one_cycle(7,0,1,2,3,4,5,6,k256[17],hf( 1));
; 242  :     one_cycle(6,7,0,1,2,3,4,5,k256[18],hf( 2));
; 243  :     one_cycle(5,6,7,0,1,2,3,4,k256[19],hf( 3));
; 244  :     one_cycle(4,5,6,7,0,1,2,3,k256[20],hf( 4));
; 245  :     one_cycle(3,4,5,6,7,0,1,2,k256[21],hf( 5));
; 246  :     one_cycle(2,3,4,5,6,7,0,1,k256[22],hf( 6));
; 247  :     one_cycle(1,2,3,4,5,6,7,0,k256[23],hf( 7));
; 248  :     one_cycle(0,1,2,3,4,5,6,7,k256[24],hf( 8));
; 249  :     one_cycle(7,0,1,2,3,4,5,6,k256[25],hf( 9));
; 250  :     one_cycle(6,7,0,1,2,3,4,5,k256[26],hf(10));
; 251  :     one_cycle(5,6,7,0,1,2,3,4,k256[27],hf(11));
; 252  :     one_cycle(4,5,6,7,0,1,2,3,k256[28],hf(12));
; 253  :     one_cycle(3,4,5,6,7,0,1,2,k256[29],hf(13));
; 254  :     one_cycle(2,3,4,5,6,7,0,1,k256[30],hf(14));
; 255  :     one_cycle(1,2,3,4,5,6,7,0,k256[31],hf(15));
; 256  : 
; 257  :     one_cycle(0,1,2,3,4,5,6,7,k256[32],hf( 0));
; 258  :     one_cycle(7,0,1,2,3,4,5,6,k256[33],hf( 1));
; 259  :     one_cycle(6,7,0,1,2,3,4,5,k256[34],hf( 2));
; 260  :     one_cycle(5,6,7,0,1,2,3,4,k256[35],hf( 3));
; 261  :     one_cycle(4,5,6,7,0,1,2,3,k256[36],hf( 4));
; 262  :     one_cycle(3,4,5,6,7,0,1,2,k256[37],hf( 5));
; 263  :     one_cycle(2,3,4,5,6,7,0,1,k256[38],hf( 6));
; 264  :     one_cycle(1,2,3,4,5,6,7,0,k256[39],hf( 7));
; 265  :     one_cycle(0,1,2,3,4,5,6,7,k256[40],hf( 8));
; 266  :     one_cycle(7,0,1,2,3,4,5,6,k256[41],hf( 9));
; 267  :     one_cycle(6,7,0,1,2,3,4,5,k256[42],hf(10));
; 268  :     one_cycle(5,6,7,0,1,2,3,4,k256[43],hf(11));
; 269  :     one_cycle(4,5,6,7,0,1,2,3,k256[44],hf(12));
; 270  :     one_cycle(3,4,5,6,7,0,1,2,k256[45],hf(13));
; 271  :     one_cycle(2,3,4,5,6,7,0,1,k256[46],hf(14));
; 272  :     one_cycle(1,2,3,4,5,6,7,0,k256[47],hf(15));
; 273  : 
; 274  :     one_cycle(0,1,2,3,4,5,6,7,k256[48],hf( 0));
; 275  :     one_cycle(7,0,1,2,3,4,5,6,k256[49],hf( 1));
; 276  :     one_cycle(6,7,0,1,2,3,4,5,k256[50],hf( 2));
; 277  :     one_cycle(5,6,7,0,1,2,3,4,k256[51],hf( 3));
; 278  :     one_cycle(4,5,6,7,0,1,2,3,k256[52],hf( 4));
; 279  :     one_cycle(3,4,5,6,7,0,1,2,k256[53],hf( 5));
; 280  :     one_cycle(2,3,4,5,6,7,0,1,k256[54],hf( 6));
; 281  :     one_cycle(1,2,3,4,5,6,7,0,k256[55],hf( 7));
; 282  :     one_cycle(0,1,2,3,4,5,6,7,k256[56],hf( 8));
; 283  :     one_cycle(7,0,1,2,3,4,5,6,k256[57],hf( 9));
; 284  :     one_cycle(6,7,0,1,2,3,4,5,k256[58],hf(10));
; 285  :     one_cycle(5,6,7,0,1,2,3,4,k256[59],hf(11));
; 286  :     one_cycle(4,5,6,7,0,1,2,3,k256[60],hf(12));
; 287  :     one_cycle(3,4,5,6,7,0,1,2,k256[61],hf(13));
; 288  :     one_cycle(2,3,4,5,6,7,0,1,k256[62],hf(14));
; 289  :     one_cycle(1,2,3,4,5,6,7,0,k256[63],hf(15));
; 290  : 
; 291  :     ctx->hash[0] += v0; ctx->hash[1] += v1;
; 292  :     ctx->hash[2] += v2; ctx->hash[3] += v3;
; 293  :     ctx->hash[4] += v4; ctx->hash[5] += v5;
; 294  :     ctx->hash[6] += v6; ctx->hash[7] += v7;
; 295  : #endif
; 296  : }

  009cf	c9		 leave
  009d0	c2 04 00	 ret	 4
_sha256_compile@4 ENDP
_TEXT	ENDS
PUBLIC	_sha256_hash@12
EXTRN	_memcpy:PROC
; Function compile flags: /Ogsp
;	COMDAT _sha256_hash@12
_TEXT	SEGMENT
__i$24902 = 8						; size = 4
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_sp$ = 16						; size = 4
_ctx$ = 16						; size = 4
_sha256_hash@12 PROC					; COMDAT

; 302  : {   uint_32t pos = (uint_32t)(ctx->count[0] & SHA256_MASK),

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 303  :              space = SHA256_BLOCK_SIZE - pos;
; 304  :     const unsigned char *sp = data;

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  00008	53		 push	 ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 7d 10	 mov	 edi, DWORD PTR _ctx$[ebp]
  0000e	8b 07		 mov	 eax, DWORD PTR [edi]
  00010	8b f0		 mov	 esi, eax
  00012	6a 40		 push	 64			; 00000040H
  00014	89 4d 10	 mov	 DWORD PTR _sp$[ebp], ecx

; 305  : 
; 306  :     if((ctx->count[0] += len) < len)

  00017	8b 4d 0c	 mov	 ecx, DWORD PTR _len$[ebp]
  0001a	83 e6 3f	 and	 esi, 63			; 0000003fH
  0001d	5b		 pop	 ebx
  0001e	03 c1		 add	 eax, ecx
  00020	2b de		 sub	 ebx, esi
  00022	89 07		 mov	 DWORD PTR [edi], eax
  00024	3b c1		 cmp	 eax, ecx
  00026	73 03		 jae	 SHORT $LN8@sha256_has

; 307  :         ++(ctx->count[1]);

  00028	ff 47 04	 inc	 DWORD PTR [edi+4]
$LN8@sha256_has:

; 308  : 
; 309  :     while(len >= space)     /* tranfer whole blocks while possible  */

  0002b	3b cb		 cmp	 ecx, ebx
  0002d	72 59		 jb	 SHORT $LN3@sha256_has
$LL4@sha256_has:

; 310  :     {
; 311  :         memcpy(((unsigned char*)ctx->wbuf) + pos, sp, space);

  0002f	53		 push	 ebx
  00030	ff 75 10	 push	 DWORD PTR _sp$[ebp]
  00033	8d 44 37 28	 lea	 eax, DWORD PTR [edi+esi+40]
  00037	50		 push	 eax
  00038	e8 00 00 00 00	 call	 _memcpy

; 312  :         sp += space; len -= space; space = SHA256_BLOCK_SIZE; pos = 0;

  0003d	01 5d 10	 add	 DWORD PTR _sp$[ebp], ebx
  00040	29 5d 0c	 sub	 DWORD PTR _len$[ebp], ebx
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	6a 40		 push	 64			; 00000040H
  00048	8d 47 68	 lea	 eax, DWORD PTR [edi+104]
  0004b	5b		 pop	 ebx
  0004c	33 f6		 xor	 esi, esi

; 313  :         bsw_32(ctx->wbuf, SHA256_BLOCK_SIZE >> 2)

  0004e	c7 45 08 10 00
	00 00		 mov	 DWORD PTR __i$24902[ebp], 16 ; 00000010H
  00055	8b c8		 mov	 ecx, eax
$LL2@sha256_has:
  00057	ff 4d 08	 dec	 DWORD PTR __i$24902[ebp]
  0005a	83 e9 04	 sub	 ecx, 4
  0005d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0005f	8b d0		 mov	 edx, eax
  00061	c1 ca 08	 ror	 edx, 8
  00064	81 e2 00 ff 00
	ff		 and	 edx, -16711936		; ff00ff00H
  0006a	c1 c0 08	 rol	 eax, 8
  0006d	25 ff 00 ff 00	 and	 eax, 16711935		; 00ff00ffH
  00072	0b d0		 or	 edx, eax
  00074	83 7d 08 00	 cmp	 DWORD PTR __i$24902[ebp], 0
  00078	89 11		 mov	 DWORD PTR [ecx], edx
  0007a	75 db		 jne	 SHORT $LL2@sha256_has

; 314  :         sha256_compile(ctx);

  0007c	57		 push	 edi
  0007d	e8 00 00 00 00	 call	 _sha256_compile@4
  00082	83 7d 0c 40	 cmp	 DWORD PTR _len$[ebp], 64 ; 00000040H
  00086	73 a7		 jae	 SHORT $LL4@sha256_has
$LN3@sha256_has:

; 315  :     }
; 316  : 
; 317  :     memcpy(((unsigned char*)ctx->wbuf) + pos, sp, len);

  00088	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  0008b	8d 44 3e 28	 lea	 eax, DWORD PTR [esi+edi+40]
  0008f	ff 75 10	 push	 DWORD PTR _sp$[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 _memcpy
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	5b		 pop	 ebx

; 318  : }

  0009e	5d		 pop	 ebp
  0009f	c2 0c 00	 ret	 12			; 0000000cH
_sha256_hash@12 ENDP
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT _sha_end1@12
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_hlen$ = 12						; size = 4
_sha_end1@12 PROC					; COMDAT
; _ctx$ = esi

; 323  : {   uint_32t    i = (uint_32t)(ctx->count[0] & SHA256_MASK);

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	8b 06		 mov	 eax, DWORD PTR [esi]
  00007	83 e0 3f	 and	 eax, 63			; 0000003fH

; 324  : 
; 325  :     /* put bytes in the buffer in an order in which references to   */
; 326  :     /* 32-bit words will put bytes with lower addresses into the    */
; 327  :     /* top of 32 bit words on BOTH big and little endian machines   */
; 328  :     bsw_32(ctx->wbuf, (i + 3) >> 2)

  0000a	8d 48 03	 lea	 ecx, DWORD PTR [eax+3]
  0000d	c1 e9 02	 shr	 ecx, 2
  00010	53		 push	 ebx
  00011	57		 push	 edi
  00012	85 c9		 test	 ecx, ecx
  00014	74 26		 je	 SHORT $LN16@sha_end1

; 323  : {   uint_32t    i = (uint_32t)(ctx->count[0] & SHA256_MASK);

  00016	8d 7c 8e 28	 lea	 edi, DWORD PTR [esi+ecx*4+40]
$LL10@sha_end1:

; 324  : 
; 325  :     /* put bytes in the buffer in an order in which references to   */
; 326  :     /* 32-bit words will put bytes with lower addresses into the    */
; 327  :     /* top of 32 bit words on BOTH big and little endian machines   */
; 328  :     bsw_32(ctx->wbuf, (i + 3) >> 2)

  0001a	83 ef 04	 sub	 edi, 4
  0001d	8b 17		 mov	 edx, DWORD PTR [edi]
  0001f	8b da		 mov	 ebx, edx
  00021	c1 cb 08	 ror	 ebx, 8
  00024	81 e3 00 ff 00
	ff		 and	 ebx, -16711936		; ff00ff00H
  0002a	c1 c2 08	 rol	 edx, 8
  0002d	81 e2 ff 00 ff
	00		 and	 edx, 16711935		; 00ff00ffH
  00033	49		 dec	 ecx
  00034	0b da		 or	 ebx, edx
  00036	89 1f		 mov	 DWORD PTR [edi], ebx
  00038	85 c9		 test	 ecx, ecx
  0003a	75 de		 jne	 SHORT $LL10@sha_end1
$LN16@sha_end1:

; 329  : 
; 330  :     /* we now need to mask valid bytes and add the padding which is */
; 331  :     /* a single 1 bit and as many zero bits as necessary. Note that */
; 332  :     /* we can always add the first padding byte here because the    */
; 333  :     /* buffer always has at least one empty slot                    */
; 334  :     ctx->wbuf[i >> 2] &= 0xffffff80 << 8 * (~i & 3);

  0003c	8b c8		 mov	 ecx, eax
  0003e	f7 d1		 not	 ecx
  00040	83 e1 03	 and	 ecx, 3
  00043	c1 e1 03	 shl	 ecx, 3
  00046	6a 80		 push	 -128			; ffffff80H
  00048	5f		 pop	 edi
  00049	d3 e7		 shl	 edi, cl
  0004b	8b d0		 mov	 edx, eax
  0004d	c1 ea 02	 shr	 edx, 2

; 335  :     ctx->wbuf[i >> 2] |= 0x00000080 << 8 * (~i & 3);

  00050	bb 80 00 00 00	 mov	 ebx, 128		; 00000080H
  00055	23 7c 96 28	 and	 edi, DWORD PTR [esi+edx*4+40]
  00059	d3 e3		 shl	 ebx, cl
  0005b	0b fb		 or	 edi, ebx
  0005d	89 7c 96 28	 mov	 DWORD PTR [esi+edx*4+40], edi

; 336  : 
; 337  :     /* we need 9 or more empty positions, one for the padding byte  */
; 338  :     /* (above) and eight for the length count.  If there is not     */
; 339  :     /* enough space pad and empty the buffer                        */
; 340  :     if(i > SHA256_BLOCK_SIZE - 9)

  00061	83 f8 37	 cmp	 eax, 55			; 00000037H
  00064	76 13		 jbe	 SHORT $LN8@sha_end1

; 341  :     {
; 342  :         if(i < 60) ctx->wbuf[15] = 0;

  00066	83 f8 3c	 cmp	 eax, 60			; 0000003cH
  00069	73 04		 jae	 SHORT $LN23@sha_end1
  0006b	83 66 64 00	 and	 DWORD PTR [esi+100], 0
$LN23@sha_end1:

; 343  :         sha256_compile(ctx);

  0006f	56		 push	 esi
  00070	e8 00 00 00 00	 call	 _sha256_compile@4

; 344  :         i = 0;

  00075	33 c0		 xor	 eax, eax

; 345  :     }
; 346  :     else    /* compute a word index for the empty buffer positions  */

  00077	eb 08		 jmp	 SHORT $LN21@sha_end1
$LN8@sha_end1:

; 347  :         i = (i >> 2) + 1;

  00079	8d 42 01	 lea	 eax, DWORD PTR [edx+1]

; 348  : 
; 349  :     while(i < 14) /* and zero pad all but last two positions        */

  0007c	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  0007f	73 0d		 jae	 SHORT $LN5@sha_end1
$LN21@sha_end1:

; 350  :         ctx->wbuf[i++] = 0;

  00081	6a 0e		 push	 14			; 0000000eH
  00083	59		 pop	 ecx
  00084	8d 7c 86 28	 lea	 edi, DWORD PTR [esi+eax*4+40]
  00088	2b c8		 sub	 ecx, eax
  0008a	33 c0		 xor	 eax, eax
  0008c	f3 ab		 rep stosd
$LN5@sha_end1:

; 351  : 
; 352  :     /* the following 32-bit length fields are assembled in the      */
; 353  :     /* wrong byte order on little endian machines but this is       */
; 354  :     /* corrected later since they are only ever used as 32-bit      */
; 355  :     /* word values.                                                 */
; 356  :     ctx->wbuf[14] = (ctx->count[1] << 3) | (ctx->count[0] >> 29);

  0008e	8b 06		 mov	 eax, DWORD PTR [esi]
  00090	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00093	8b d0		 mov	 edx, eax
  00095	c1 e1 03	 shl	 ecx, 3
  00098	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  0009b	0b ca		 or	 ecx, edx

; 357  :     ctx->wbuf[15] = ctx->count[0] << 3;

  0009d	c1 e0 03	 shl	 eax, 3

; 358  :     sha256_compile(ctx);

  000a0	56		 push	 esi
  000a1	89 4e 60	 mov	 DWORD PTR [esi+96], ecx
  000a4	89 46 64	 mov	 DWORD PTR [esi+100], eax
  000a7	e8 00 00 00 00	 call	 _sha256_compile@4

; 359  : 
; 360  :     /* extract the hash value as bytes in case the hash buffer is   */
; 361  :     /* mislaigned for 32-bit words                                  */
; 362  :     for(i = 0; i < hlen; ++i)

  000ac	33 c0		 xor	 eax, eax
  000ae	5f		 pop	 edi
  000af	5b		 pop	 ebx
  000b0	39 45 0c	 cmp	 DWORD PTR _hlen$[ebp], eax
  000b3	76 21		 jbe	 SHORT $LN1@sha_end1
$LL3@sha_end1:

; 363  :         hval[i] = (unsigned char)(ctx->hash[i >> 2] >> (8 * (~i & 3)));

  000b5	8b c8		 mov	 ecx, eax
  000b7	f7 d1		 not	 ecx
  000b9	8b d0		 mov	 edx, eax
  000bb	c1 ea 02	 shr	 edx, 2
  000be	8b 54 96 08	 mov	 edx, DWORD PTR [esi+edx*4+8]
  000c2	83 e1 03	 and	 ecx, 3
  000c5	c1 e1 03	 shl	 ecx, 3
  000c8	d3 ea		 shr	 edx, cl
  000ca	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  000cd	88 14 08	 mov	 BYTE PTR [eax+ecx], dl
  000d0	40		 inc	 eax
  000d1	3b 45 0c	 cmp	 eax, DWORD PTR _hlen$[ebp]
  000d4	72 df		 jb	 SHORT $LL3@sha_end1
$LN1@sha_end1:

; 364  : }

  000d6	5d		 pop	 ebp
  000d7	c2 08 00	 ret	 8
_sha_end1@12 ENDP
_TEXT	ENDS
PUBLIC	_sha224_begin@4
; Function compile flags: /Ogsp
;	COMDAT _sha224_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha224_begin@4 PROC					; COMDAT

; 377  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 378  :     ctx->count[0] = ctx->count[1] = 0;

  00005	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00008	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  0000c	83 20 00	 and	 DWORD PTR [eax], 0
  0000f	56		 push	 esi
  00010	57		 push	 edi

; 379  :     memcpy(ctx->hash, i224, 8 * sizeof(uint_32t));

  00011	6a 08		 push	 8
  00013	59		 pop	 ecx
  00014	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  00017	be 00 00 00 00	 mov	 esi, OFFSET _i224
  0001c	f3 a5		 rep movsd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 380  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
_sha224_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha224_end@8
; Function compile flags: /Ogsp
;	COMDAT _sha224_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha224_end@8 PROC					; COMDAT

; 383  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	56		 push	 esi

; 384  :     sha_end1(hval, ctx, SHA224_DIGEST_SIZE);

  00006	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00009	6a 1c		 push	 28			; 0000001cH
  0000b	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0000e	e8 00 00 00 00	 call	 _sha_end1@12
  00013	5e		 pop	 esi

; 385  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha224_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha224@12
; Function compile flags: /Ogsp
;	COMDAT _sha224@12
_TEXT	SEGMENT
_cx$ = -104						; size = 104
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha224@12 PROC						; COMDAT

; 388  : {   sha224_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 68	 sub	 esp, 104		; 00000068H
  00008	56		 push	 esi

; 389  : 
; 390  :     sha224_begin(cx);

  00009	8d 45 98	 lea	 eax, DWORD PTR _cx$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _sha224_begin@4

; 391  :     sha224_hash(data, len, cx);

  00012	8d 45 98	 lea	 eax, DWORD PTR _cx$[ebp]
  00015	50		 push	 eax
  00016	ff 75 10	 push	 DWORD PTR _len$[ebp]
  00019	ff 75 0c	 push	 DWORD PTR _data$[ebp]
  0001c	e8 00 00 00 00	 call	 _sha256_hash@12

; 392  :     sha_end1(hval, cx, SHA224_DIGEST_SIZE);

  00021	6a 1c		 push	 28			; 0000001cH
  00023	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  00026	8d 75 98	 lea	 esi, DWORD PTR _cx$[ebp]
  00029	e8 00 00 00 00	 call	 _sha_end1@12
  0002e	5e		 pop	 esi

; 393  : }

  0002f	c9		 leave
  00030	c2 0c 00	 ret	 12			; 0000000cH
_sha224@12 ENDP
_TEXT	ENDS
PUBLIC	_sha256_begin@4
; Function compile flags: /Ogsp
;	COMDAT _sha256_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha256_begin@4 PROC					; COMDAT

; 406  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 407  :     ctx->count[0] = ctx->count[1] = 0;

  00005	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00008	83 60 04 00	 and	 DWORD PTR [eax+4], 0
  0000c	83 20 00	 and	 DWORD PTR [eax], 0
  0000f	56		 push	 esi
  00010	57		 push	 edi

; 408  :     memcpy(ctx->hash, i256, 8 * sizeof(uint_32t));

  00011	6a 08		 push	 8
  00013	59		 pop	 ecx
  00014	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  00017	be 00 00 00 00	 mov	 esi, OFFSET _i256
  0001c	f3 a5		 rep movsd
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 409  : }

  00020	5d		 pop	 ebp
  00021	c2 04 00	 ret	 4
_sha256_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha256_end@8
; Function compile flags: /Ogsp
;	COMDAT _sha256_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha256_end@8 PROC					; COMDAT

; 412  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	56		 push	 esi

; 413  :     sha_end1(hval, ctx, SHA256_DIGEST_SIZE);

  00006	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00009	6a 20		 push	 32			; 00000020H
  0000b	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0000e	e8 00 00 00 00	 call	 _sha_end1@12
  00013	5e		 pop	 esi

; 414  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha256_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha256@12
; Function compile flags: /Ogsp
;	COMDAT _sha256@12
_TEXT	SEGMENT
_cx$ = -104						; size = 104
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha256@12 PROC						; COMDAT

; 417  : {   sha256_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 68	 sub	 esp, 104		; 00000068H
  00008	56		 push	 esi

; 418  : 
; 419  :     sha256_begin(cx);

  00009	8d 45 98	 lea	 eax, DWORD PTR _cx$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 _sha256_begin@4

; 420  :     sha256_hash(data, len, cx);

  00012	8d 45 98	 lea	 eax, DWORD PTR _cx$[ebp]
  00015	50		 push	 eax
  00016	ff 75 10	 push	 DWORD PTR _len$[ebp]
  00019	ff 75 0c	 push	 DWORD PTR _data$[ebp]
  0001c	e8 00 00 00 00	 call	 _sha256_hash@12

; 421  :     sha_end1(hval, cx, SHA256_DIGEST_SIZE);

  00021	6a 20		 push	 32			; 00000020H
  00023	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  00026	8d 75 98	 lea	 esi, DWORD PTR _cx$[ebp]
  00029	e8 00 00 00 00	 call	 _sha_end1@12
  0002e	5e		 pop	 esi

; 422  : }

  0002f	c9		 leave
  00030	c2 0c 00	 ret	 12			; 0000000cH
_sha256@12 ENDP
_TEXT	ENDS
PUBLIC	_sha512_compile@4
; Function compile flags: /Ogsp
;	COMDAT _sha512_compile@4
_TEXT	SEGMENT
tv2017 = -340						; size = 4
tv843 = -336						; size = 8
tv1650 = -328						; size = 8
tv437 = -320						; size = 8
tv1553 = -312						; size = 8
tv638 = -304						; size = 8
tv1449 = -296						; size = 8
tv235 = -288						; size = 8
tv1351 = -280						; size = 8
tv742 = -272						; size = 8
tv1248 = -264						; size = 8
tv540 = -256						; size = 8
tv1144 = -248						; size = 8
tv333 = -240						; size = 8
tv1041 = -232						; size = 8
tv944 = -224						; size = 8
tv139 = -216						; size = 8
tv2107 = -208						; size = 8
tv2295 = -200						; size = 8
tv2095 = -192						; size = 8
tv2164 = -184						; size = 8
tv2479 = -176						; size = 8
tv2230 = -168						; size = 8
tv2317 = -160						; size = 8
tv2186 = -152						; size = 8
tv2023 = -144						; size = 8
tv2120 = -136						; size = 8
tv2419 = -128						; size = 8
tv2048 = -120						; size = 8
tv2252 = -112						; size = 8
tv2035 = -104						; size = 8
tv2359 = -96						; size = 8
tv2051 = -88						; size = 8
tv4831 = -80						; size = 4
tv2068 = -80						; size = 4
_j$ = -76						; size = 4
tv4834 = -72						; size = 4
tv4828 = -72						; size = 4
tv4822 = -72						; size = 4
tv4816 = -72						; size = 4
tv4807 = -72						; size = 4
tv4798 = -72						; size = 4
tv4789 = -72						; size = 4
tv4780 = -72						; size = 4
tv4771 = -72						; size = 4
tv4762 = -72						; size = 4
tv4753 = -72						; size = 4
tv4744 = -72						; size = 4
tv4735 = -72						; size = 4
tv4726 = -72						; size = 4
tv4717 = -72						; size = 4
tv4708 = -72						; size = 4
tv4699 = -72						; size = 4
_v$ = -68						; size = 64
tv4825 = -4						; size = 4
tv4819 = -4						; size = 4
tv4813 = -4						; size = 4
tv4810 = -4						; size = 4
tv4804 = -4						; size = 4
tv4801 = -4						; size = 4
tv4795 = -4						; size = 4
tv4792 = -4						; size = 4
tv4786 = -4						; size = 4
tv4783 = -4						; size = 4
tv4777 = -4						; size = 4
tv4774 = -4						; size = 4
tv4768 = -4						; size = 4
tv4765 = -4						; size = 4
tv4759 = -4						; size = 4
tv4756 = -4						; size = 4
tv4750 = -4						; size = 4
tv4747 = -4						; size = 4
tv4741 = -4						; size = 4
tv4738 = -4						; size = 4
tv4732 = -4						; size = 4
tv4729 = -4						; size = 4
tv4723 = -4						; size = 4
tv4720 = -4						; size = 4
tv4714 = -4						; size = 4
tv4711 = -4						; size = 4
tv4705 = -4						; size = 4
tv4702 = -4						; size = 4
tv4696 = -4						; size = 4
tv4693 = -4						; size = 4
_ctx$ = 8						; size = 4
_sha512_compile@4 PROC					; COMDAT

; 512  : {   uint_64t    v[8], *p = ctx->wbuf;

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec 54 01 00
	00		 sub	 esp, 340		; 00000154H

; 513  :     uint_32t    j;
; 514  : 
; 515  :     memcpy(v, ctx->hash, 8 * sizeof(uint_64t));
; 516  : 
; 517  :     for(j = 0; j < 80; j += 16)

  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi

; 512  : {   uint_64t    v[8], *p = ctx->wbuf;

  0000e	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]

; 513  :     uint_32t    j;
; 514  : 
; 515  :     memcpy(v, ctx->hash, 8 * sizeof(uint_64t));
; 516  : 
; 517  :     for(j = 0; j < 80; j += 16)

  00011	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00014	89 55 9c	 mov	 DWORD PTR tv2035[ebp+4], edx
  00017	8b 50 60	 mov	 edx, DWORD PTR [eax+96]
  0001a	89 95 30 ff ff
	ff		 mov	 DWORD PTR tv2107[ebp], edx
  00020	8b 50 64	 mov	 edx, DWORD PTR [eax+100]
  00023	89 95 34 ff ff
	ff		 mov	 DWORD PTR tv2107[ebp+4], edx
  00029	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  0002c	89 95 48 ff ff
	ff		 mov	 DWORD PTR tv2164[ebp], edx
  00032	8b 50 6c	 mov	 edx, DWORD PTR [eax+108]
  00035	89 95 4c ff ff
	ff		 mov	 DWORD PTR tv2164[ebp+4], edx
  0003b	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  0003e	89 95 58 ff ff
	ff		 mov	 DWORD PTR tv2230[ebp], edx
  00044	8b 50 74	 mov	 edx, DWORD PTR [eax+116]
  00047	89 95 5c ff ff
	ff		 mov	 DWORD PTR tv2230[ebp+4], edx
  0004d	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  00050	89 95 38 ff ff
	ff		 mov	 DWORD PTR tv2295[ebp], edx
  00056	8b 50 7c	 mov	 edx, DWORD PTR [eax+124]
  00059	89 95 3c ff ff
	ff		 mov	 DWORD PTR tv2295[ebp+4], edx
  0005f	8b 90 80 00 00
	00		 mov	 edx, DWORD PTR [eax+128]
  00065	89 55 a0	 mov	 DWORD PTR tv2359[ebp], edx
  00068	8b 90 84 00 00
	00		 mov	 edx, DWORD PTR [eax+132]
  0006e	89 55 a4	 mov	 DWORD PTR tv2359[ebp+4], edx
  00071	8b 90 88 00 00
	00		 mov	 edx, DWORD PTR [eax+136]
  00077	89 55 80	 mov	 DWORD PTR tv2419[ebp], edx
  0007a	8b 90 8c 00 00
	00		 mov	 edx, DWORD PTR [eax+140]
  00080	89 55 84	 mov	 DWORD PTR tv2419[ebp+4], edx
  00083	8b 90 90 00 00
	00		 mov	 edx, DWORD PTR [eax+144]
  00089	89 95 50 ff ff
	ff		 mov	 DWORD PTR tv2479[ebp], edx
  0008f	8b 90 94 00 00
	00		 mov	 edx, DWORD PTR [eax+148]
  00095	89 95 54 ff ff
	ff		 mov	 DWORD PTR tv2479[ebp+4], edx
  0009b	8b 90 98 00 00
	00		 mov	 edx, DWORD PTR [eax+152]
  000a1	89 55 88	 mov	 DWORD PTR tv2048[ebp], edx
  000a4	8b 90 9c 00 00
	00		 mov	 edx, DWORD PTR [eax+156]
  000aa	89 55 8c	 mov	 DWORD PTR tv2048[ebp+4], edx
  000ad	8b 90 a0 00 00
	00		 mov	 edx, DWORD PTR [eax+160]
  000b3	89 95 78 ff ff
	ff		 mov	 DWORD PTR tv2120[ebp], edx
  000b9	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  000bf	89 95 7c ff ff
	ff		 mov	 DWORD PTR tv2120[ebp+4], edx
  000c5	8b 90 a8 00 00
	00		 mov	 edx, DWORD PTR [eax+168]
  000cb	83 65 b4 00	 and	 DWORD PTR _j$[ebp], 0
  000cf	89 95 68 ff ff
	ff		 mov	 DWORD PTR tv2186[ebp], edx
  000d5	8b 90 ac 00 00
	00		 mov	 edx, DWORD PTR [eax+172]
  000db	89 95 6c ff ff
	ff		 mov	 DWORD PTR tv2186[ebp+4], edx
  000e1	8b 90 b0 00 00
	00		 mov	 edx, DWORD PTR [eax+176]
  000e7	89 55 90	 mov	 DWORD PTR tv2252[ebp], edx
  000ea	8b 90 b4 00 00
	00		 mov	 edx, DWORD PTR [eax+180]
  000f0	89 55 94	 mov	 DWORD PTR tv2252[ebp+4], edx
  000f3	8b 90 b8 00 00
	00		 mov	 edx, DWORD PTR [eax+184]
  000f9	89 95 60 ff ff
	ff		 mov	 DWORD PTR tv2317[ebp], edx
  000ff	8b 90 bc 00 00
	00		 mov	 edx, DWORD PTR [eax+188]
  00105	8d 70 10	 lea	 esi, DWORD PTR [eax+16]
  00108	6a 10		 push	 16			; 00000010H
  0010a	59		 pop	 ecx
  0010b	8d 7d bc	 lea	 edi, DWORD PTR _v$[ebp]
  0010e	89 95 64 ff ff
	ff		 mov	 DWORD PTR tv2317[ebp+4], edx
  00114	8b 90 c0 00 00
	00		 mov	 edx, DWORD PTR [eax+192]
  0011a	89 b5 ac fe ff
	ff		 mov	 DWORD PTR tv2017[ebp], esi
  00120	f3 a5		 rep movsd
  00122	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  00125	89 4d a8	 mov	 DWORD PTR tv2051[ebp], ecx
  00128	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  0012b	89 95 70 ff ff
	ff		 mov	 DWORD PTR tv2023[ebp], edx
  00131	8b 90 c4 00 00
	00		 mov	 edx, DWORD PTR [eax+196]
  00137	89 4d ac	 mov	 DWORD PTR tv2051[ebp+4], ecx
  0013a	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0013d	89 95 74 ff ff
	ff		 mov	 DWORD PTR tv2023[ebp+4], edx
  00143	8b 90 c8 00 00
	00		 mov	 edx, DWORD PTR [eax+200]
  00149	8b 80 cc 00 00
	00		 mov	 eax, DWORD PTR [eax+204]
  0014f	89 4d 98	 mov	 DWORD PTR tv2035[ebp], ecx
  00152	89 95 40 ff ff
	ff		 mov	 DWORD PTR tv2095[ebp], edx
  00158	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv2095[ebp+4], eax
  0015e	eb 03		 jmp	 SHORT $LN3@sha512_com
$LL40@sha512_com:
  00160	8b 4d 98	 mov	 ecx, DWORD PTR tv2035[ebp]
$LN3@sha512_com:

; 518  :     {
; 519  :         v_cycle( 0, j); v_cycle( 1, j);

  00163	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00167	0f 84 d7 00 00
	00		 je	 $LN6@sha512_com
  0016d	8b 7d 9c	 mov	 edi, DWORD PTR tv2035[ebp+4]
  00170	8b 5d 9c	 mov	 ebx, DWORD PTR tv2035[ebp+4]
  00173	8b f1		 mov	 esi, ecx
  00175	0f ac fe 08	 shrd	 esi, edi, 8
  00179	33 d2		 xor	 edx, edx
  0017b	0b d6		 or	 edx, esi
  0017d	8b c1		 mov	 eax, ecx
  0017f	8b f1		 mov	 esi, ecx
  00181	0f ac d9 01	 shrd	 ecx, ebx, 1
  00185	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  00188	c1 e0 18	 shl	 eax, 24			; 00000018H
  0018b	c1 ef 08	 shr	 edi, 8
  0018e	0b c7		 or	 eax, edi
  00190	d1 eb		 shr	 ebx, 1
  00192	0b f3		 or	 esi, ebx
  00194	33 c6		 xor	 eax, esi
  00196	8b 75 9c	 mov	 esi, DWORD PTR tv2035[ebp+4]
  00199	8b 9d 74 ff ff
	ff		 mov	 ebx, DWORD PTR tv2023[ebp+4]
  0019f	33 ff		 xor	 edi, edi
  001a1	0b f9		 or	 edi, ecx
  001a3	8b 4d 98	 mov	 ecx, DWORD PTR tv2035[ebp]
  001a6	0f ac f1 07	 shrd	 ecx, esi, 7
  001aa	33 d7		 xor	 edx, edi
  001ac	8b bd 70 ff ff
	ff		 mov	 edi, DWORD PTR tv2023[ebp]
  001b2	33 d1		 xor	 edx, ecx
  001b4	c1 ee 07	 shr	 esi, 7
  001b7	33 c6		 xor	 eax, esi
  001b9	8b b5 74 ff ff
	ff		 mov	 esi, DWORD PTR tv2023[ebp+4]
  001bf	89 55 b0	 mov	 DWORD PTR tv4831[ebp], edx
  001c2	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv2023[ebp]
  001c8	0f ac f2 13	 shrd	 edx, esi, 19
  001cc	33 c9		 xor	 ecx, ecx
  001ce	0b ca		 or	 ecx, edx
  001d0	8b 95 74 ff ff
	ff		 mov	 edx, DWORD PTR tv2023[ebp+4]
  001d6	89 45 b8	 mov	 DWORD PTR tv4834[ebp], eax
  001d9	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv2023[ebp]
  001df	c1 ee 13	 shr	 esi, 19			; 00000013H
  001e2	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  001e5	0b c6		 or	 eax, esi
  001e7	0f a4 fb 03	 shld	 ebx, edi, 3
  001eb	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  001ee	33 f6		 xor	 esi, esi
  001f0	0b f3		 or	 esi, ebx
  001f2	33 c6		 xor	 eax, esi
  001f4	8b b5 74 ff ff
	ff		 mov	 esi, DWORD PTR tv2023[ebp+4]
  001fa	c1 e7 03	 shl	 edi, 3
  001fd	0b d7		 or	 edx, edi
  001ff	33 ca		 xor	 ecx, edx
  00201	8b 95 70 ff ff
	ff		 mov	 edx, DWORD PTR tv2023[ebp]
  00207	0f ac f2 06	 shrd	 edx, esi, 6
  0020b	33 ca		 xor	 ecx, edx
  0020d	8b 55 b0	 mov	 edx, DWORD PTR tv4831[ebp]
  00210	c1 ee 06	 shr	 esi, 6
  00213	33 c6		 xor	 eax, esi
  00215	03 d1		 add	 edx, ecx
  00217	8b 4d b8	 mov	 ecx, DWORD PTR tv4834[ebp]
  0021a	13 c8		 adc	 ecx, eax
  0021c	03 55 a8	 add	 edx, DWORD PTR tv2051[ebp]
  0021f	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00222	13 4d ac	 adc	 ecx, DWORD PTR tv2051[ebp+4]
  00225	03 55 88	 add	 edx, DWORD PTR tv2048[ebp]
  00228	13 4d 8c	 adc	 ecx, DWORD PTR tv2048[ebp+4]
  0022b	89 50 50	 mov	 DWORD PTR [eax+80], edx
  0022e	89 48 54	 mov	 DWORD PTR [eax+84], ecx
  00231	8b 40 54	 mov	 eax, DWORD PTR [eax+84]
  00234	8b ca		 mov	 ecx, edx
  00236	89 4d a8	 mov	 DWORD PTR tv2051[ebp], ecx
  00239	89 45 ac	 mov	 DWORD PTR tv2051[ebp+4], eax
  0023c	89 8d 28 ff ff
	ff		 mov	 DWORD PTR tv139[ebp], ecx
  00242	eb 0c		 jmp	 SHORT $LN41@sha512_com
$LN6@sha512_com:
  00244	8b 45 a8	 mov	 eax, DWORD PTR tv2051[ebp]
  00247	89 85 28 ff ff
	ff		 mov	 DWORD PTR tv139[ebp], eax
  0024d	8b 45 ac	 mov	 eax, DWORD PTR tv2051[ebp+4]
$LN41@sha512_com:
  00250	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+36]
  00253	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv139[ebp+4], eax
  00259	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  0025c	c1 e0 03	 shl	 eax, 3
  0025f	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+36]
  00262	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  00265	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  00268	89 45 b0	 mov	 DWORD PTR tv2068[ebp], eax
  0026b	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  0026e	0f a4 c6 17	 shld	 esi, eax, 23
  00272	c1 e0 17	 shl	 eax, 23			; 00000017H
  00275	0f ac df 12	 shrd	 edi, ebx, 18
  00279	33 d2		 xor	 edx, edx
  0027b	0b d6		 or	 edx, esi
  0027d	33 f6		 xor	 esi, esi
  0027f	0b f7		 or	 esi, edi
  00281	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  00284	c1 e9 09	 shr	 ecx, 9
  00287	0b c8		 or	 ecx, eax
  00289	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  0028c	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  0028f	c1 eb 12	 shr	 ebx, 18			; 00000012H
  00292	0b c3		 or	 eax, ebx
  00294	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  00297	33 d0		 xor	 edx, eax
  00299	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  0029c	33 ce		 xor	 ecx, esi
  0029e	0f ac df 0e	 shrd	 edi, ebx, 14
  002a2	c1 e0 12	 shl	 eax, 18			; 00000012H
  002a5	33 f6		 xor	 esi, esi
  002a7	0b f7		 or	 esi, edi
  002a9	33 ce		 xor	 ecx, esi
  002ab	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  002ae	33 75 f0	 xor	 esi, DWORD PTR _v$[ebp+52]
  002b1	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  002b4	23 75 e0	 and	 esi, DWORD PTR _v$[ebp+36]
  002b7	0b c3		 or	 eax, ebx
  002b9	33 75 f0	 xor	 esi, DWORD PTR _v$[ebp+52]
  002bc	33 d0		 xor	 edx, eax
  002be	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  002c1	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+48]
  002c4	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  002c7	23 45 dc	 and	 eax, DWORD PTR _v$[ebp+32]
  002ca	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  002cd	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+48]
  002d0	03 c8		 add	 ecx, eax
  002d2	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  002d5	13 d6		 adc	 edx, esi
  002d7	03 88 00 00 00
	00		 add	 ecx, DWORD PTR _k512[eax]
  002dd	8b 75 c0	 mov	 esi, DWORD PTR _v$[ebp+4]
  002e0	13 90 04 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+4]
  002e6	03 8d 28 ff ff
	ff		 add	 ecx, DWORD PTR tv139[ebp]
  002ec	13 95 2c ff ff
	ff		 adc	 edx, DWORD PTR tv139[ebp+4]
  002f2	01 4d f4	 add	 DWORD PTR _v$[ebp+56], ecx
  002f5	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  002f8	11 55 f8	 adc	 DWORD PTR _v$[ebp+60], edx
  002fb	01 45 d4	 add	 DWORD PTR _v$[ebp+24], eax
  002fe	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+60]
  00301	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp]
  00304	11 45 d8	 adc	 DWORD PTR _v$[ebp+28], eax
  00307	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  0030a	0f ac f2 1c	 shrd	 edx, esi, 28
  0030e	0f a4 fb 1e	 shld	 ebx, edi, 30
  00312	33 c9		 xor	 ecx, ecx
  00314	0b ca		 or	 ecx, edx
  00316	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00319	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  0031c	c1 ea 02	 shr	 edx, 2
  0031f	c1 e0 04	 shl	 eax, 4
  00322	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  00325	0b d7		 or	 edx, edi
  00327	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  0032a	0b c6		 or	 eax, esi
  0032c	33 f6		 xor	 esi, esi
  0032e	33 ca		 xor	 ecx, edx
  00330	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00333	0b f3		 or	 esi, ebx
  00335	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  00338	33 c6		 xor	 eax, esi
  0033a	c1 ea 07	 shr	 edx, 7
  0033d	33 f6		 xor	 esi, esi
  0033f	0f a4 fb 19	 shld	 ebx, edi, 25
  00343	c1 e7 19	 shl	 edi, 25			; 00000019H
  00346	0b d7		 or	 edx, edi
  00348	8b 7d c8	 mov	 edi, DWORD PTR _v$[ebp+12]
  0034b	23 7d c0	 and	 edi, DWORD PTR _v$[ebp+4]
  0034e	33 ca		 xor	 ecx, edx
  00350	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+12]
  00353	33 55 c0	 xor	 edx, DWORD PTR _v$[ebp+4]
  00356	0b f3		 or	 esi, ebx
  00358	23 55 d0	 and	 edx, DWORD PTR _v$[ebp+20]
  0035b	89 4d b8	 mov	 DWORD PTR tv4828[ebp], ecx
  0035e	8b 4d c4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00361	33 4d bc	 xor	 ecx, DWORD PTR _v$[ebp]
  00364	33 c6		 xor	 eax, esi
  00366	23 4d cc	 and	 ecx, DWORD PTR _v$[ebp+16]
  00369	8b 75 c4	 mov	 esi, DWORD PTR _v$[ebp+8]
  0036c	23 75 bc	 and	 esi, DWORD PTR _v$[ebp]
  0036f	0b d7		 or	 edx, edi
  00371	0b ce		 or	 ecx, esi
  00373	8b 75 b8	 mov	 esi, DWORD PTR tv4828[ebp]
  00376	03 f1		 add	 esi, ecx
  00378	13 c2		 adc	 eax, edx
  0037a	01 75 f4	 add	 DWORD PTR _v$[ebp+56], esi
  0037d	11 45 f8	 adc	 DWORD PTR _v$[ebp+60], eax
  00380	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00384	0f 84 ef 00 00
	00		 je	 $LN8@sha512_com
  0038a	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv2107[ebp]
  00390	8b bd 34 ff ff
	ff		 mov	 edi, DWORD PTR tv2107[ebp+4]
  00396	8b 9d 34 ff ff
	ff		 mov	 ebx, DWORD PTR tv2107[ebp+4]
  0039c	8b f0		 mov	 esi, eax
  0039e	0f ac fe 08	 shrd	 esi, edi, 8
  003a2	33 d2		 xor	 edx, edx
  003a4	0b d6		 or	 edx, esi
  003a6	8b c8		 mov	 ecx, eax
  003a8	8b f0		 mov	 esi, eax
  003aa	0f ac d8 01	 shrd	 eax, ebx, 1
  003ae	c1 e1 18	 shl	 ecx, 24			; 00000018H
  003b1	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  003b4	c1 ef 08	 shr	 edi, 8
  003b7	0b cf		 or	 ecx, edi
  003b9	d1 eb		 shr	 ebx, 1
  003bb	0b f3		 or	 esi, ebx
  003bd	33 ce		 xor	 ecx, esi
  003bf	8b b5 34 ff ff
	ff		 mov	 esi, DWORD PTR tv2107[ebp+4]
  003c5	8b 9d 44 ff ff
	ff		 mov	 ebx, DWORD PTR tv2095[ebp+4]
  003cb	33 ff		 xor	 edi, edi
  003cd	0b f8		 or	 edi, eax
  003cf	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv2107[ebp]
  003d5	0f ac f0 07	 shrd	 eax, esi, 7
  003d9	33 d7		 xor	 edx, edi
  003db	8b bd 40 ff ff
	ff		 mov	 edi, DWORD PTR tv2095[ebp]
  003e1	33 d0		 xor	 edx, eax
  003e3	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv2095[ebp]
  003e9	c1 ee 07	 shr	 esi, 7
  003ec	33 ce		 xor	 ecx, esi
  003ee	8b b5 44 ff ff
	ff		 mov	 esi, DWORD PTR tv2095[ebp+4]
  003f4	89 55 b8	 mov	 DWORD PTR tv4822[ebp], edx
  003f7	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR tv2095[ebp]
  003fd	0f ac f2 13	 shrd	 edx, esi, 19
  00401	89 4d fc	 mov	 DWORD PTR tv4825[ebp], ecx
  00404	33 c9		 xor	 ecx, ecx
  00406	0b ca		 or	 ecx, edx
  00408	8b 95 44 ff ff
	ff		 mov	 edx, DWORD PTR tv2095[ebp+4]
  0040e	c1 ee 13	 shr	 esi, 19			; 00000013H
  00411	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00414	0b c6		 or	 eax, esi
  00416	0f a4 fb 03	 shld	 ebx, edi, 3
  0041a	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  0041d	33 f6		 xor	 esi, esi
  0041f	0b f3		 or	 esi, ebx
  00421	33 c6		 xor	 eax, esi
  00423	8b b5 44 ff ff
	ff		 mov	 esi, DWORD PTR tv2095[ebp+4]
  00429	c1 e7 03	 shl	 edi, 3
  0042c	0b d7		 or	 edx, edi
  0042e	33 ca		 xor	 ecx, edx
  00430	8b 95 40 ff ff
	ff		 mov	 edx, DWORD PTR tv2095[ebp]
  00436	0f ac f2 06	 shrd	 edx, esi, 6
  0043a	33 ca		 xor	 ecx, edx
  0043c	8b 55 b8	 mov	 edx, DWORD PTR tv4822[ebp]
  0043f	c1 ee 06	 shr	 esi, 6
  00442	33 c6		 xor	 eax, esi
  00444	03 d1		 add	 edx, ecx
  00446	8b 4d fc	 mov	 ecx, DWORD PTR tv4825[ebp]
  00449	13 c8		 adc	 ecx, eax
  0044b	03 55 98	 add	 edx, DWORD PTR tv2035[ebp]
  0044e	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00451	13 4d 9c	 adc	 ecx, DWORD PTR tv2035[ebp+4]
  00454	03 95 78 ff ff
	ff		 add	 edx, DWORD PTR tv2120[ebp]
  0045a	13 8d 7c ff ff
	ff		 adc	 ecx, DWORD PTR tv2120[ebp+4]
  00460	89 50 58	 mov	 DWORD PTR [eax+88], edx
  00463	89 48 5c	 mov	 DWORD PTR [eax+92], ecx
  00466	8b 40 5c	 mov	 eax, DWORD PTR [eax+92]
  00469	8b ca		 mov	 ecx, edx
  0046b	89 4d 98	 mov	 DWORD PTR tv2035[ebp], ecx
  0046e	89 45 9c	 mov	 DWORD PTR tv2035[ebp+4], eax
  00471	89 8d e0 fe ff
	ff		 mov	 DWORD PTR tv235[ebp], ecx
  00477	eb 0c		 jmp	 SHORT $LN42@sha512_com
$LN8@sha512_com:
  00479	8b 45 98	 mov	 eax, DWORD PTR tv2035[ebp]
  0047c	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv235[ebp], eax
  00482	8b 45 9c	 mov	 eax, DWORD PTR tv2035[ebp+4]
$LN42@sha512_com:
  00485	8b 75 d8	 mov	 esi, DWORD PTR _v$[ebp+28]
  00488	8b 4d d8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  0048b	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  0048e	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  00491	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv235[ebp+4], eax
  00497	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  0049a	0f a4 c6 17	 shld	 esi, eax, 23
  0049e	c1 e0 17	 shl	 eax, 23			; 00000017H
  004a1	0f ac df 12	 shrd	 edi, ebx, 18
  004a5	33 d2		 xor	 edx, edx
  004a7	0b d6		 or	 edx, esi
  004a9	33 f6		 xor	 esi, esi
  004ab	0b f7		 or	 esi, edi
  004ad	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  004b0	c1 e9 09	 shr	 ecx, 9
  004b3	0b c8		 or	 ecx, eax
  004b5	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  004b8	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  004bb	c1 eb 12	 shr	 ebx, 18			; 00000012H
  004be	0b c3		 or	 eax, ebx
  004c0	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  004c3	33 d0		 xor	 edx, eax
  004c5	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  004c8	33 ce		 xor	 ecx, esi
  004ca	0f ac df 0e	 shrd	 edi, ebx, 14
  004ce	c1 e0 12	 shl	 eax, 18			; 00000012H
  004d1	33 f6		 xor	 esi, esi
  004d3	0b f7		 or	 esi, edi
  004d5	33 ce		 xor	 ecx, esi
  004d7	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  004da	33 75 e0	 xor	 esi, DWORD PTR _v$[ebp+36]
  004dd	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  004e0	23 75 d8	 and	 esi, DWORD PTR _v$[ebp+28]
  004e3	0b c3		 or	 eax, ebx
  004e5	33 75 e8	 xor	 esi, DWORD PTR _v$[ebp+44]
  004e8	33 d0		 xor	 edx, eax
  004ea	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  004ed	33 45 dc	 xor	 eax, DWORD PTR _v$[ebp+32]
  004f0	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  004f3	23 45 d4	 and	 eax, DWORD PTR _v$[ebp+24]
  004f6	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  004f9	33 45 e4	 xor	 eax, DWORD PTR _v$[ebp+40]
  004fc	03 c8		 add	 ecx, eax
  004fe	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  00501	13 d6		 adc	 edx, esi
  00503	03 88 08 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+8]
  00509	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+60]
  0050c	13 90 0c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+12]
  00512	03 8d e0 fe ff
	ff		 add	 ecx, DWORD PTR tv235[ebp]
  00518	13 95 e4 fe ff
	ff		 adc	 edx, DWORD PTR tv235[ebp+4]
  0051e	01 4d ec	 add	 DWORD PTR _v$[ebp+48], ecx
  00521	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  00524	11 55 f0	 adc	 DWORD PTR _v$[ebp+52], edx
  00527	01 45 cc	 add	 DWORD PTR _v$[ebp+16], eax
  0052a	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+52]
  0052d	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+56]
  00530	11 45 d0	 adc	 DWORD PTR _v$[ebp+20], eax
  00533	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  00536	0f ac f2 1c	 shrd	 edx, esi, 28
  0053a	0f a4 fb 1e	 shld	 ebx, edi, 30
  0053e	33 c9		 xor	 ecx, ecx
  00540	0b ca		 or	 ecx, edx
  00542	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+60]
  00545	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  00548	c1 e0 04	 shl	 eax, 4
  0054b	0b c6		 or	 eax, esi
  0054d	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  00550	c1 ea 02	 shr	 edx, 2
  00553	0b d7		 or	 edx, edi
  00555	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  00558	33 f6		 xor	 esi, esi
  0055a	0b f3		 or	 esi, ebx
  0055c	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  0055f	0f a4 fb 19	 shld	 ebx, edi, 25
  00563	33 ca		 xor	 ecx, edx
  00565	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+60]
  00568	33 c6		 xor	 eax, esi
  0056a	c1 ea 07	 shr	 edx, 7
  0056d	c1 e7 19	 shl	 edi, 25			; 00000019H
  00570	33 f6		 xor	 esi, esi
  00572	0b d7		 or	 edx, edi
  00574	8b 7d c0	 mov	 edi, DWORD PTR _v$[ebp+4]
  00577	23 7d f8	 and	 edi, DWORD PTR _v$[ebp+60]
  0057a	33 ca		 xor	 ecx, edx
  0057c	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+4]
  0057f	33 55 f8	 xor	 edx, DWORD PTR _v$[ebp+60]
  00582	0b f3		 or	 esi, ebx
  00584	23 55 c8	 and	 edx, DWORD PTR _v$[ebp+12]
  00587	89 4d fc	 mov	 DWORD PTR tv4819[ebp], ecx
  0058a	8b 4d bc	 mov	 ecx, DWORD PTR _v$[ebp]
  0058d	33 4d f4	 xor	 ecx, DWORD PTR _v$[ebp+56]
  00590	33 c6		 xor	 eax, esi
  00592	23 4d c4	 and	 ecx, DWORD PTR _v$[ebp+8]
  00595	8b 75 bc	 mov	 esi, DWORD PTR _v$[ebp]
  00598	23 75 f4	 and	 esi, DWORD PTR _v$[ebp+56]
  0059b	0b d7		 or	 edx, edi
  0059d	0b ce		 or	 ecx, esi
  0059f	8b 75 fc	 mov	 esi, DWORD PTR tv4819[ebp]
  005a2	03 f1		 add	 esi, ecx
  005a4	13 c2		 adc	 eax, edx
  005a6	01 75 ec	 add	 DWORD PTR _v$[ebp+48], esi
  005a9	11 45 f0	 adc	 DWORD PTR _v$[ebp+52], eax

; 520  :         v_cycle( 2, j); v_cycle( 3, j);

  005ac	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  005b0	0f 84 e3 00 00
	00		 je	 $LN10@sha512_com
  005b6	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv2164[ebp]
  005bc	8b bd 4c ff ff
	ff		 mov	 edi, DWORD PTR tv2164[ebp+4]
  005c2	8b 9d 4c ff ff
	ff		 mov	 ebx, DWORD PTR tv2164[ebp+4]
  005c8	8b f0		 mov	 esi, eax
  005ca	0f ac fe 08	 shrd	 esi, edi, 8
  005ce	33 d2		 xor	 edx, edx
  005d0	0b d6		 or	 edx, esi
  005d2	8b c8		 mov	 ecx, eax
  005d4	8b f0		 mov	 esi, eax
  005d6	0f ac d8 01	 shrd	 eax, ebx, 1
  005da	c1 e1 18	 shl	 ecx, 24			; 00000018H
  005dd	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  005e0	c1 ef 08	 shr	 edi, 8
  005e3	0b cf		 or	 ecx, edi
  005e5	d1 eb		 shr	 ebx, 1
  005e7	0b f3		 or	 esi, ebx
  005e9	33 ce		 xor	 ecx, esi
  005eb	8b b5 4c ff ff
	ff		 mov	 esi, DWORD PTR tv2164[ebp+4]
  005f1	8b 5d ac	 mov	 ebx, DWORD PTR tv2051[ebp+4]
  005f4	33 ff		 xor	 edi, edi
  005f6	0b f8		 or	 edi, eax
  005f8	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv2164[ebp]
  005fe	0f ac f0 07	 shrd	 eax, esi, 7
  00602	33 d7		 xor	 edx, edi
  00604	8b 7d a8	 mov	 edi, DWORD PTR tv2051[ebp]
  00607	33 d0		 xor	 edx, eax
  00609	8b 45 a8	 mov	 eax, DWORD PTR tv2051[ebp]
  0060c	c1 ee 07	 shr	 esi, 7
  0060f	33 ce		 xor	 ecx, esi
  00611	8b 75 ac	 mov	 esi, DWORD PTR tv2051[ebp+4]
  00614	89 55 fc	 mov	 DWORD PTR tv4813[ebp], edx
  00617	8b 55 a8	 mov	 edx, DWORD PTR tv2051[ebp]
  0061a	0f ac f2 13	 shrd	 edx, esi, 19
  0061e	89 4d b8	 mov	 DWORD PTR tv4816[ebp], ecx
  00621	33 c9		 xor	 ecx, ecx
  00623	0b ca		 or	 ecx, edx
  00625	8b 55 ac	 mov	 edx, DWORD PTR tv2051[ebp+4]
  00628	c1 ee 13	 shr	 esi, 19			; 00000013H
  0062b	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  0062e	0b c6		 or	 eax, esi
  00630	0f a4 fb 03	 shld	 ebx, edi, 3
  00634	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  00637	33 f6		 xor	 esi, esi
  00639	0b f3		 or	 esi, ebx
  0063b	33 c6		 xor	 eax, esi
  0063d	8b 75 ac	 mov	 esi, DWORD PTR tv2051[ebp+4]
  00640	c1 e7 03	 shl	 edi, 3
  00643	0b d7		 or	 edx, edi
  00645	33 ca		 xor	 ecx, edx
  00647	8b 55 a8	 mov	 edx, DWORD PTR tv2051[ebp]
  0064a	0f ac f2 06	 shrd	 edx, esi, 6
  0064e	33 ca		 xor	 ecx, edx
  00650	8b 55 fc	 mov	 edx, DWORD PTR tv4813[ebp]
  00653	c1 ee 06	 shr	 esi, 6
  00656	33 c6		 xor	 eax, esi
  00658	03 d1		 add	 edx, ecx
  0065a	8b 4d b8	 mov	 ecx, DWORD PTR tv4816[ebp]
  0065d	13 c8		 adc	 ecx, eax
  0065f	03 95 68 ff ff
	ff		 add	 edx, DWORD PTR tv2186[ebp]
  00665	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00668	13 8d 6c ff ff
	ff		 adc	 ecx, DWORD PTR tv2186[ebp+4]
  0066e	03 95 30 ff ff
	ff		 add	 edx, DWORD PTR tv2107[ebp]
  00674	13 8d 34 ff ff
	ff		 adc	 ecx, DWORD PTR tv2107[ebp+4]
  0067a	89 50 60	 mov	 DWORD PTR [eax+96], edx
  0067d	89 48 64	 mov	 DWORD PTR [eax+100], ecx
  00680	8b 40 64	 mov	 eax, DWORD PTR [eax+100]
  00683	8b ca		 mov	 ecx, edx
  00685	89 8d 30 ff ff
	ff		 mov	 DWORD PTR tv2107[ebp], ecx
  0068b	89 85 34 ff ff
	ff		 mov	 DWORD PTR tv2107[ebp+4], eax
  00691	89 8d 10 ff ff
	ff		 mov	 DWORD PTR tv333[ebp], ecx
  00697	eb 12		 jmp	 SHORT $LN43@sha512_com
$LN10@sha512_com:
  00699	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv2107[ebp]
  0069f	89 85 10 ff ff
	ff		 mov	 DWORD PTR tv333[ebp], eax
  006a5	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv2107[ebp+4]
$LN43@sha512_com:
  006ab	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  006ae	8b 4d d0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  006b1	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  006b4	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  006b7	89 85 14 ff ff
	ff		 mov	 DWORD PTR tv333[ebp+4], eax
  006bd	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  006c0	0f a4 c6 17	 shld	 esi, eax, 23
  006c4	c1 e0 17	 shl	 eax, 23			; 00000017H
  006c7	0f ac df 12	 shrd	 edi, ebx, 18
  006cb	33 d2		 xor	 edx, edx
  006cd	0b d6		 or	 edx, esi
  006cf	33 f6		 xor	 esi, esi
  006d1	0b f7		 or	 esi, edi
  006d3	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  006d6	c1 e9 09	 shr	 ecx, 9
  006d9	0b c8		 or	 ecx, eax
  006db	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  006de	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  006e1	c1 eb 12	 shr	 ebx, 18			; 00000012H
  006e4	0b c3		 or	 eax, ebx
  006e6	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  006e9	33 d0		 xor	 edx, eax
  006eb	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  006ee	33 ce		 xor	 ecx, esi
  006f0	0f ac df 0e	 shrd	 edi, ebx, 14
  006f4	c1 e0 12	 shl	 eax, 18			; 00000012H
  006f7	33 f6		 xor	 esi, esi
  006f9	0b f7		 or	 esi, edi
  006fb	33 ce		 xor	 ecx, esi
  006fd	8b 75 d8	 mov	 esi, DWORD PTR _v$[ebp+28]
  00700	33 75 e0	 xor	 esi, DWORD PTR _v$[ebp+36]
  00703	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  00706	23 75 d0	 and	 esi, DWORD PTR _v$[ebp+20]
  00709	0b c3		 or	 eax, ebx
  0070b	33 75 e0	 xor	 esi, DWORD PTR _v$[ebp+36]
  0070e	33 d0		 xor	 edx, eax
  00710	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00713	33 45 dc	 xor	 eax, DWORD PTR _v$[ebp+32]
  00716	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  00719	23 45 cc	 and	 eax, DWORD PTR _v$[ebp+16]
  0071c	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  0071f	33 45 dc	 xor	 eax, DWORD PTR _v$[ebp+32]
  00722	03 c8		 add	 ecx, eax
  00724	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  00727	13 d6		 adc	 edx, esi
  00729	03 88 10 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+16]
  0072f	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+52]
  00732	13 90 14 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+20]
  00738	03 8d 10 ff ff
	ff		 add	 ecx, DWORD PTR tv333[ebp]
  0073e	13 95 14 ff ff
	ff		 adc	 edx, DWORD PTR tv333[ebp+4]
  00744	01 4d e4	 add	 DWORD PTR _v$[ebp+40], ecx
  00747	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  0074a	11 55 e8	 adc	 DWORD PTR _v$[ebp+44], edx
  0074d	01 45 c4	 add	 DWORD PTR _v$[ebp+8], eax
  00750	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+44]
  00753	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+48]
  00756	11 45 c8	 adc	 DWORD PTR _v$[ebp+12], eax
  00759	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  0075c	0f ac f2 1c	 shrd	 edx, esi, 28
  00760	0f a4 fb 1e	 shld	 ebx, edi, 30
  00764	33 c9		 xor	 ecx, ecx
  00766	0b ca		 or	 ecx, edx
  00768	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+52]
  0076b	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  0076e	c1 e0 04	 shl	 eax, 4
  00771	0b c6		 or	 eax, esi
  00773	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  00776	c1 ea 02	 shr	 edx, 2
  00779	0b d7		 or	 edx, edi
  0077b	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  0077e	33 f6		 xor	 esi, esi
  00780	0b f3		 or	 esi, ebx
  00782	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  00785	0f a4 fb 19	 shld	 ebx, edi, 25
  00789	33 ca		 xor	 ecx, edx
  0078b	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+52]
  0078e	33 c6		 xor	 eax, esi
  00790	c1 ea 07	 shr	 edx, 7
  00793	c1 e7 19	 shl	 edi, 25			; 00000019H
  00796	33 f6		 xor	 esi, esi
  00798	0b d7		 or	 edx, edi
  0079a	8b 7d f8	 mov	 edi, DWORD PTR _v$[ebp+60]
  0079d	23 7d f0	 and	 edi, DWORD PTR _v$[ebp+52]
  007a0	33 ca		 xor	 ecx, edx
  007a2	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+60]
  007a5	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+52]
  007a8	0b f3		 or	 esi, ebx
  007aa	23 55 c0	 and	 edx, DWORD PTR _v$[ebp+4]
  007ad	89 4d fc	 mov	 DWORD PTR tv4810[ebp], ecx
  007b0	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+56]
  007b3	33 4d ec	 xor	 ecx, DWORD PTR _v$[ebp+48]
  007b6	33 c6		 xor	 eax, esi
  007b8	23 4d bc	 and	 ecx, DWORD PTR _v$[ebp]
  007bb	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+56]
  007be	23 75 ec	 and	 esi, DWORD PTR _v$[ebp+48]
  007c1	0b d7		 or	 edx, edi
  007c3	0b ce		 or	 ecx, esi
  007c5	8b 75 fc	 mov	 esi, DWORD PTR tv4810[ebp]
  007c8	03 f1		 add	 esi, ecx
  007ca	13 c2		 adc	 eax, edx
  007cc	01 75 e4	 add	 DWORD PTR _v$[ebp+40], esi
  007cf	11 45 e8	 adc	 DWORD PTR _v$[ebp+44], eax
  007d2	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  007d6	0f 84 dc 00 00
	00		 je	 $LN12@sha512_com
  007dc	8b 55 98	 mov	 edx, DWORD PTR tv2035[ebp]
  007df	8b 75 9c	 mov	 esi, DWORD PTR tv2035[ebp+4]
  007e2	8b 7d 98	 mov	 edi, DWORD PTR tv2035[ebp]
  007e5	8b 5d 9c	 mov	 ebx, DWORD PTR tv2035[ebp+4]
  007e8	0f ac f2 13	 shrd	 edx, esi, 19
  007ec	8b 45 98	 mov	 eax, DWORD PTR tv2035[ebp]
  007ef	c1 ee 13	 shr	 esi, 19			; 00000013H
  007f2	0f a4 fb 03	 shld	 ebx, edi, 3
  007f6	33 c9		 xor	 ecx, ecx
  007f8	0b ca		 or	 ecx, edx
  007fa	8b 55 9c	 mov	 edx, DWORD PTR tv2035[ebp+4]
  007fd	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00800	0b c6		 or	 eax, esi
  00802	33 f6		 xor	 esi, esi
  00804	0b f3		 or	 esi, ebx
  00806	33 c6		 xor	 eax, esi
  00808	8b 75 9c	 mov	 esi, DWORD PTR tv2035[ebp+4]
  0080b	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  0080e	c1 e7 03	 shl	 edi, 3
  00811	0b d7		 or	 edx, edi
  00813	33 ca		 xor	 ecx, edx
  00815	8b 55 98	 mov	 edx, DWORD PTR tv2035[ebp]
  00818	0f ac f2 06	 shrd	 edx, esi, 6
  0081c	8b bd 5c ff ff
	ff		 mov	 edi, DWORD PTR tv2230[ebp+4]
  00822	8b 9d 5c ff ff
	ff		 mov	 ebx, DWORD PTR tv2230[ebp+4]
  00828	c1 ee 06	 shr	 esi, 6
  0082b	33 c6		 xor	 eax, esi
  0082d	33 ca		 xor	 ecx, edx
  0082f	89 45 b8	 mov	 DWORD PTR tv4807[ebp], eax
  00832	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv2230[ebp]
  00838	8b f0		 mov	 esi, eax
  0083a	0f ac fe 08	 shrd	 esi, edi, 8
  0083e	33 d2		 xor	 edx, edx
  00840	0b d6		 or	 edx, esi
  00842	89 4d fc	 mov	 DWORD PTR tv4804[ebp], ecx
  00845	8b c8		 mov	 ecx, eax
  00847	8b f0		 mov	 esi, eax
  00849	0f ac d8 01	 shrd	 eax, ebx, 1
  0084d	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00850	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  00853	c1 ef 08	 shr	 edi, 8
  00856	0b cf		 or	 ecx, edi
  00858	d1 eb		 shr	 ebx, 1
  0085a	0b f3		 or	 esi, ebx
  0085c	33 ce		 xor	 ecx, esi
  0085e	8b b5 5c ff ff
	ff		 mov	 esi, DWORD PTR tv2230[ebp+4]
  00864	33 ff		 xor	 edi, edi
  00866	0b f8		 or	 edi, eax
  00868	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv2230[ebp]
  0086e	0f ac f0 07	 shrd	 eax, esi, 7
  00872	33 d7		 xor	 edx, edi
  00874	c1 ee 07	 shr	 esi, 7
  00877	33 d0		 xor	 edx, eax
  00879	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0087c	33 ce		 xor	 ecx, esi
  0087e	8b 75 fc	 mov	 esi, DWORD PTR tv4804[ebp]
  00881	03 f2		 add	 esi, edx
  00883	8b 55 b8	 mov	 edx, DWORD PTR tv4807[ebp]
  00886	13 d1		 adc	 edx, ecx
  00888	03 75 90	 add	 esi, DWORD PTR tv2252[ebp]
  0088b	13 55 94	 adc	 edx, DWORD PTR tv2252[ebp+4]
  0088e	03 b5 48 ff ff
	ff		 add	 esi, DWORD PTR tv2164[ebp]
  00894	13 95 4c ff ff
	ff		 adc	 edx, DWORD PTR tv2164[ebp+4]
  0089a	89 70 68	 mov	 DWORD PTR [eax+104], esi
  0089d	89 50 6c	 mov	 DWORD PTR [eax+108], edx
  008a0	8b ce		 mov	 ecx, esi
  008a2	8b c2		 mov	 eax, edx
  008a4	89 8d 48 ff ff
	ff		 mov	 DWORD PTR tv2164[ebp], ecx
  008aa	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv2164[ebp+4], eax
  008b0	89 8d c0 fe ff
	ff		 mov	 DWORD PTR tv437[ebp], ecx
  008b6	eb 12		 jmp	 SHORT $LN44@sha512_com
$LN12@sha512_com:
  008b8	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv2164[ebp]
  008be	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv437[ebp], eax
  008c4	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv2164[ebp+4]
$LN44@sha512_com:
  008ca	8b 75 c8	 mov	 esi, DWORD PTR _v$[ebp+12]
  008cd	8b 4d c8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  008d0	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  008d3	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  008d6	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv437[ebp+4], eax
  008dc	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  008df	0f a4 c6 17	 shld	 esi, eax, 23
  008e3	c1 e0 17	 shl	 eax, 23			; 00000017H
  008e6	0f ac df 12	 shrd	 edi, ebx, 18
  008ea	33 d2		 xor	 edx, edx
  008ec	0b d6		 or	 edx, esi
  008ee	33 f6		 xor	 esi, esi
  008f0	0b f7		 or	 esi, edi
  008f2	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  008f5	c1 e9 09	 shr	 ecx, 9
  008f8	0b c8		 or	 ecx, eax
  008fa	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  008fd	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00900	c1 eb 12	 shr	 ebx, 18			; 00000012H
  00903	0b c3		 or	 eax, ebx
  00905	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  00908	33 d0		 xor	 edx, eax
  0090a	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  0090d	33 ce		 xor	 ecx, esi
  0090f	0f ac df 0e	 shrd	 edi, ebx, 14
  00913	c1 e0 12	 shl	 eax, 18			; 00000012H
  00916	33 f6		 xor	 esi, esi
  00918	0b f7		 or	 esi, edi
  0091a	33 ce		 xor	 ecx, esi
  0091c	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  0091f	33 75 d8	 xor	 esi, DWORD PTR _v$[ebp+28]
  00922	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  00925	23 75 c8	 and	 esi, DWORD PTR _v$[ebp+12]
  00928	0b c3		 or	 eax, ebx
  0092a	33 75 d8	 xor	 esi, DWORD PTR _v$[ebp+28]
  0092d	33 d0		 xor	 edx, eax
  0092f	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  00932	33 45 d4	 xor	 eax, DWORD PTR _v$[ebp+24]
  00935	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  00938	23 45 c4	 and	 eax, DWORD PTR _v$[ebp+8]
  0093b	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  0093e	33 45 d4	 xor	 eax, DWORD PTR _v$[ebp+24]
  00941	03 c8		 add	 ecx, eax
  00943	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  00946	13 d6		 adc	 edx, esi
  00948	03 88 18 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+24]
  0094e	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  00951	13 90 1c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+28]
  00957	03 8d c0 fe ff
	ff		 add	 ecx, DWORD PTR tv437[ebp]
  0095d	13 95 c4 fe ff
	ff		 adc	 edx, DWORD PTR tv437[ebp+4]
  00963	01 4d dc	 add	 DWORD PTR _v$[ebp+32], ecx
  00966	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  00969	11 55 e0	 adc	 DWORD PTR _v$[ebp+36], edx
  0096c	01 45 bc	 add	 DWORD PTR _v$[ebp], eax
  0096f	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+36]
  00972	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+40]
  00975	11 45 c0	 adc	 DWORD PTR _v$[ebp+4], eax
  00978	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  0097b	0f ac f2 1c	 shrd	 edx, esi, 28
  0097f	0f a4 fb 1e	 shld	 ebx, edi, 30
  00983	33 c9		 xor	 ecx, ecx
  00985	0b ca		 or	 ecx, edx
  00987	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  0098a	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  0098d	c1 e0 04	 shl	 eax, 4
  00990	0b c6		 or	 eax, esi
  00992	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  00995	c1 ea 02	 shr	 edx, 2
  00998	0b d7		 or	 edx, edi
  0099a	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  0099d	33 f6		 xor	 esi, esi
  0099f	0b f3		 or	 esi, ebx
  009a1	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  009a4	0f a4 fb 19	 shld	 ebx, edi, 25
  009a8	33 ca		 xor	 ecx, edx
  009aa	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  009ad	33 c6		 xor	 eax, esi
  009af	c1 ea 07	 shr	 edx, 7
  009b2	c1 e7 19	 shl	 edi, 25			; 00000019H
  009b5	33 f6		 xor	 esi, esi
  009b7	0b d7		 or	 edx, edi
  009b9	8b 7d e8	 mov	 edi, DWORD PTR _v$[ebp+44]
  009bc	23 7d f0	 and	 edi, DWORD PTR _v$[ebp+52]
  009bf	33 ca		 xor	 ecx, edx
  009c1	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  009c4	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+52]
  009c7	0b f3		 or	 esi, ebx
  009c9	23 55 f8	 and	 edx, DWORD PTR _v$[ebp+60]
  009cc	89 4d fc	 mov	 DWORD PTR tv4801[ebp], ecx
  009cf	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+40]
  009d2	33 4d ec	 xor	 ecx, DWORD PTR _v$[ebp+48]
  009d5	33 c6		 xor	 eax, esi
  009d7	23 4d f4	 and	 ecx, DWORD PTR _v$[ebp+56]
  009da	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+40]
  009dd	23 75 ec	 and	 esi, DWORD PTR _v$[ebp+48]
  009e0	0b d7		 or	 edx, edi
  009e2	0b ce		 or	 ecx, esi
  009e4	8b 75 fc	 mov	 esi, DWORD PTR tv4801[ebp]
  009e7	03 f1		 add	 esi, ecx
  009e9	13 c2		 adc	 eax, edx
  009eb	01 75 dc	 add	 DWORD PTR _v$[ebp+32], esi
  009ee	11 45 e0	 adc	 DWORD PTR _v$[ebp+36], eax

; 521  :         v_cycle( 4, j); v_cycle( 5, j);

  009f1	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  009f5	0f 84 fa 00 00
	00		 je	 $LN14@sha512_com
  009fb	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv2107[ebp]
  00a01	8b b5 34 ff ff
	ff		 mov	 esi, DWORD PTR tv2107[ebp+4]
  00a07	8b bd 30 ff ff
	ff		 mov	 edi, DWORD PTR tv2107[ebp]
  00a0d	8b 9d 34 ff ff
	ff		 mov	 ebx, DWORD PTR tv2107[ebp+4]
  00a13	0f ac f2 13	 shrd	 edx, esi, 19
  00a17	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv2107[ebp]
  00a1d	c1 ee 13	 shr	 esi, 19			; 00000013H
  00a20	0f a4 fb 03	 shld	 ebx, edi, 3
  00a24	33 c9		 xor	 ecx, ecx
  00a26	0b ca		 or	 ecx, edx
  00a28	8b 95 34 ff ff
	ff		 mov	 edx, DWORD PTR tv2107[ebp+4]
  00a2e	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00a31	0b c6		 or	 eax, esi
  00a33	33 f6		 xor	 esi, esi
  00a35	0b f3		 or	 esi, ebx
  00a37	33 c6		 xor	 eax, esi
  00a39	8b b5 34 ff ff
	ff		 mov	 esi, DWORD PTR tv2107[ebp+4]
  00a3f	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  00a42	c1 e7 03	 shl	 edi, 3
  00a45	0b d7		 or	 edx, edi
  00a47	33 ca		 xor	 ecx, edx
  00a49	8b 95 30 ff ff
	ff		 mov	 edx, DWORD PTR tv2107[ebp]
  00a4f	0f ac f2 06	 shrd	 edx, esi, 6
  00a53	8b bd 3c ff ff
	ff		 mov	 edi, DWORD PTR tv2295[ebp+4]
  00a59	8b 9d 3c ff ff
	ff		 mov	 ebx, DWORD PTR tv2295[ebp+4]
  00a5f	c1 ee 06	 shr	 esi, 6
  00a62	33 c6		 xor	 eax, esi
  00a64	33 ca		 xor	 ecx, edx
  00a66	89 45 b8	 mov	 DWORD PTR tv4798[ebp], eax
  00a69	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv2295[ebp]
  00a6f	8b f0		 mov	 esi, eax
  00a71	0f ac fe 08	 shrd	 esi, edi, 8
  00a75	33 d2		 xor	 edx, edx
  00a77	0b d6		 or	 edx, esi
  00a79	89 4d fc	 mov	 DWORD PTR tv4795[ebp], ecx
  00a7c	8b c8		 mov	 ecx, eax
  00a7e	8b f0		 mov	 esi, eax
  00a80	0f ac d8 01	 shrd	 eax, ebx, 1
  00a84	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00a87	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  00a8a	c1 ef 08	 shr	 edi, 8
  00a8d	0b cf		 or	 ecx, edi
  00a8f	d1 eb		 shr	 ebx, 1
  00a91	0b f3		 or	 esi, ebx
  00a93	33 ce		 xor	 ecx, esi
  00a95	8b b5 3c ff ff
	ff		 mov	 esi, DWORD PTR tv2295[ebp+4]
  00a9b	33 ff		 xor	 edi, edi
  00a9d	0b f8		 or	 edi, eax
  00a9f	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv2295[ebp]
  00aa5	0f ac f0 07	 shrd	 eax, esi, 7
  00aa9	33 d7		 xor	 edx, edi
  00aab	c1 ee 07	 shr	 esi, 7
  00aae	33 d0		 xor	 edx, eax
  00ab0	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00ab3	33 ce		 xor	 ecx, esi
  00ab5	8b 75 fc	 mov	 esi, DWORD PTR tv4795[ebp]
  00ab8	03 f2		 add	 esi, edx
  00aba	8b 55 b8	 mov	 edx, DWORD PTR tv4798[ebp]
  00abd	13 d1		 adc	 edx, ecx
  00abf	03 b5 60 ff ff
	ff		 add	 esi, DWORD PTR tv2317[ebp]
  00ac5	13 95 64 ff ff
	ff		 adc	 edx, DWORD PTR tv2317[ebp+4]
  00acb	03 b5 58 ff ff
	ff		 add	 esi, DWORD PTR tv2230[ebp]
  00ad1	13 95 5c ff ff
	ff		 adc	 edx, DWORD PTR tv2230[ebp+4]
  00ad7	89 70 70	 mov	 DWORD PTR [eax+112], esi
  00ada	89 50 74	 mov	 DWORD PTR [eax+116], edx
  00add	8b ce		 mov	 ecx, esi
  00adf	8b c2		 mov	 eax, edx
  00ae1	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv2230[ebp], ecx
  00ae7	89 85 5c ff ff
	ff		 mov	 DWORD PTR tv2230[ebp+4], eax
  00aed	89 8d 00 ff ff
	ff		 mov	 DWORD PTR tv540[ebp], ecx
  00af3	eb 12		 jmp	 SHORT $LN45@sha512_com
$LN14@sha512_com:
  00af5	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv2230[ebp]
  00afb	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv540[ebp], eax
  00b01	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv2230[ebp+4]
$LN45@sha512_com:
  00b07	8b 75 c0	 mov	 esi, DWORD PTR _v$[ebp+4]
  00b0a	8b 4d c0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  00b0d	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  00b10	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  00b13	89 85 04 ff ff
	ff		 mov	 DWORD PTR tv540[ebp+4], eax
  00b19	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  00b1c	0f a4 c6 17	 shld	 esi, eax, 23
  00b20	c1 e0 17	 shl	 eax, 23			; 00000017H
  00b23	0f ac df 12	 shrd	 edi, ebx, 18
  00b27	33 d2		 xor	 edx, edx
  00b29	0b d6		 or	 edx, esi
  00b2b	33 f6		 xor	 esi, esi
  00b2d	0b f7		 or	 esi, edi
  00b2f	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  00b32	c1 e9 09	 shr	 ecx, 9
  00b35	0b c8		 or	 ecx, eax
  00b37	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  00b3a	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00b3d	c1 eb 12	 shr	 ebx, 18			; 00000012H
  00b40	0b c3		 or	 eax, ebx
  00b42	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  00b45	33 d0		 xor	 edx, eax
  00b47	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  00b4a	33 ce		 xor	 ecx, esi
  00b4c	0f ac df 0e	 shrd	 edi, ebx, 14
  00b50	c1 e0 12	 shl	 eax, 18			; 00000012H
  00b53	33 f6		 xor	 esi, esi
  00b55	0b f7		 or	 esi, edi
  00b57	33 ce		 xor	 ecx, esi
  00b59	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  00b5c	33 75 c8	 xor	 esi, DWORD PTR _v$[ebp+12]
  00b5f	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  00b62	23 75 c0	 and	 esi, DWORD PTR _v$[ebp+4]
  00b65	0b c3		 or	 eax, ebx
  00b67	33 75 d0	 xor	 esi, DWORD PTR _v$[ebp+20]
  00b6a	33 d0		 xor	 edx, eax
  00b6c	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  00b6f	33 45 c4	 xor	 eax, DWORD PTR _v$[ebp+8]
  00b72	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  00b75	23 45 bc	 and	 eax, DWORD PTR _v$[ebp]
  00b78	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  00b7b	33 45 cc	 xor	 eax, DWORD PTR _v$[ebp+16]
  00b7e	03 c8		 add	 ecx, eax
  00b80	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  00b83	13 d6		 adc	 edx, esi
  00b85	03 88 20 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+32]
  00b8b	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+36]
  00b8e	13 90 24 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+36]
  00b94	03 8d 00 ff ff
	ff		 add	 ecx, DWORD PTR tv540[ebp]
  00b9a	13 95 04 ff ff
	ff		 adc	 edx, DWORD PTR tv540[ebp+4]
  00ba0	01 4d d4	 add	 DWORD PTR _v$[ebp+24], ecx
  00ba3	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00ba6	11 55 d8	 adc	 DWORD PTR _v$[ebp+28], edx
  00ba9	01 45 f4	 add	 DWORD PTR _v$[ebp+56], eax
  00bac	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+28]
  00baf	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+32]
  00bb2	11 45 f8	 adc	 DWORD PTR _v$[ebp+60], eax
  00bb5	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  00bb8	0f ac f2 1c	 shrd	 edx, esi, 28
  00bbc	0f a4 fb 1e	 shld	 ebx, edi, 30
  00bc0	33 c9		 xor	 ecx, ecx
  00bc2	0b ca		 or	 ecx, edx
  00bc4	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+36]
  00bc7	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  00bca	c1 e0 04	 shl	 eax, 4
  00bcd	0b c6		 or	 eax, esi
  00bcf	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  00bd2	c1 ea 02	 shr	 edx, 2
  00bd5	0b d7		 or	 edx, edi
  00bd7	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  00bda	33 f6		 xor	 esi, esi
  00bdc	0b f3		 or	 esi, ebx
  00bde	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  00be1	0f a4 fb 19	 shld	 ebx, edi, 25
  00be5	33 ca		 xor	 ecx, edx
  00be7	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+36]
  00bea	33 c6		 xor	 eax, esi
  00bec	c1 ea 07	 shr	 edx, 7
  00bef	c1 e7 19	 shl	 edi, 25			; 00000019H
  00bf2	33 f6		 xor	 esi, esi
  00bf4	0b d7		 or	 edx, edi
  00bf6	8b 7d e8	 mov	 edi, DWORD PTR _v$[ebp+44]
  00bf9	23 7d e0	 and	 edi, DWORD PTR _v$[ebp+36]
  00bfc	33 ca		 xor	 ecx, edx
  00bfe	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  00c01	33 55 e0	 xor	 edx, DWORD PTR _v$[ebp+36]
  00c04	0b f3		 or	 esi, ebx
  00c06	23 55 f0	 and	 edx, DWORD PTR _v$[ebp+52]
  00c09	89 4d fc	 mov	 DWORD PTR tv4792[ebp], ecx
  00c0c	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+40]
  00c0f	33 4d dc	 xor	 ecx, DWORD PTR _v$[ebp+32]
  00c12	33 c6		 xor	 eax, esi
  00c14	23 4d ec	 and	 ecx, DWORD PTR _v$[ebp+48]
  00c17	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+40]
  00c1a	23 75 dc	 and	 esi, DWORD PTR _v$[ebp+32]
  00c1d	0b d7		 or	 edx, edi
  00c1f	0b ce		 or	 ecx, esi
  00c21	8b 75 fc	 mov	 esi, DWORD PTR tv4792[ebp]
  00c24	03 f1		 add	 esi, ecx
  00c26	13 c2		 adc	 eax, edx
  00c28	01 75 d4	 add	 DWORD PTR _v$[ebp+24], esi
  00c2b	11 45 d8	 adc	 DWORD PTR _v$[ebp+28], eax
  00c2e	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00c32	0f 84 ec 00 00
	00		 je	 $LN16@sha512_com
  00c38	8b 45 a0	 mov	 eax, DWORD PTR tv2359[ebp]
  00c3b	8b 7d a4	 mov	 edi, DWORD PTR tv2359[ebp+4]
  00c3e	8b 5d a4	 mov	 ebx, DWORD PTR tv2359[ebp+4]
  00c41	8b f0		 mov	 esi, eax
  00c43	0f ac fe 08	 shrd	 esi, edi, 8
  00c47	33 d2		 xor	 edx, edx
  00c49	0b d6		 or	 edx, esi
  00c4b	8b c8		 mov	 ecx, eax
  00c4d	8b f0		 mov	 esi, eax
  00c4f	0f ac d8 01	 shrd	 eax, ebx, 1
  00c53	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00c56	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  00c59	c1 ef 08	 shr	 edi, 8
  00c5c	0b cf		 or	 ecx, edi
  00c5e	d1 eb		 shr	 ebx, 1
  00c60	0b f3		 or	 esi, ebx
  00c62	33 ce		 xor	 ecx, esi
  00c64	8b 75 a4	 mov	 esi, DWORD PTR tv2359[ebp+4]
  00c67	8b 9d 4c ff ff
	ff		 mov	 ebx, DWORD PTR tv2164[ebp+4]
  00c6d	33 ff		 xor	 edi, edi
  00c6f	0b f8		 or	 edi, eax
  00c71	8b 45 a0	 mov	 eax, DWORD PTR tv2359[ebp]
  00c74	0f ac f0 07	 shrd	 eax, esi, 7
  00c78	33 d7		 xor	 edx, edi
  00c7a	8b bd 48 ff ff
	ff		 mov	 edi, DWORD PTR tv2164[ebp]
  00c80	33 d0		 xor	 edx, eax
  00c82	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR tv2164[ebp]
  00c88	c1 ee 07	 shr	 esi, 7
  00c8b	33 ce		 xor	 ecx, esi
  00c8d	8b b5 4c ff ff
	ff		 mov	 esi, DWORD PTR tv2164[ebp+4]
  00c93	89 55 fc	 mov	 DWORD PTR tv4786[ebp], edx
  00c96	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv2164[ebp]
  00c9c	0f ac f2 13	 shrd	 edx, esi, 19
  00ca0	89 4d b8	 mov	 DWORD PTR tv4789[ebp], ecx
  00ca3	33 c9		 xor	 ecx, ecx
  00ca5	0b ca		 or	 ecx, edx
  00ca7	8b 95 4c ff ff
	ff		 mov	 edx, DWORD PTR tv2164[ebp+4]
  00cad	c1 ee 13	 shr	 esi, 19			; 00000013H
  00cb0	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00cb3	0b c6		 or	 eax, esi
  00cb5	0f a4 fb 03	 shld	 ebx, edi, 3
  00cb9	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  00cbc	33 f6		 xor	 esi, esi
  00cbe	0b f3		 or	 esi, ebx
  00cc0	33 c6		 xor	 eax, esi
  00cc2	8b b5 4c ff ff
	ff		 mov	 esi, DWORD PTR tv2164[ebp+4]
  00cc8	c1 e7 03	 shl	 edi, 3
  00ccb	0b d7		 or	 edx, edi
  00ccd	33 ca		 xor	 ecx, edx
  00ccf	8b 95 48 ff ff
	ff		 mov	 edx, DWORD PTR tv2164[ebp]
  00cd5	0f ac f2 06	 shrd	 edx, esi, 6
  00cd9	33 ca		 xor	 ecx, edx
  00cdb	8b 55 fc	 mov	 edx, DWORD PTR tv4786[ebp]
  00cde	c1 ee 06	 shr	 esi, 6
  00ce1	33 c6		 xor	 eax, esi
  00ce3	03 d1		 add	 edx, ecx
  00ce5	8b 4d b8	 mov	 ecx, DWORD PTR tv4789[ebp]
  00ce8	13 c8		 adc	 ecx, eax
  00cea	03 95 70 ff ff
	ff		 add	 edx, DWORD PTR tv2023[ebp]
  00cf0	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00cf3	13 8d 74 ff ff
	ff		 adc	 ecx, DWORD PTR tv2023[ebp+4]
  00cf9	03 95 38 ff ff
	ff		 add	 edx, DWORD PTR tv2295[ebp]
  00cff	13 8d 3c ff ff
	ff		 adc	 ecx, DWORD PTR tv2295[ebp+4]
  00d05	89 50 78	 mov	 DWORD PTR [eax+120], edx
  00d08	89 48 7c	 mov	 DWORD PTR [eax+124], ecx
  00d0b	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]
  00d0e	8b ca		 mov	 ecx, edx
  00d10	89 8d 38 ff ff
	ff		 mov	 DWORD PTR tv2295[ebp], ecx
  00d16	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv2295[ebp+4], eax
  00d1c	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv638[ebp], ecx
  00d22	eb 12		 jmp	 SHORT $LN46@sha512_com
$LN16@sha512_com:
  00d24	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv2295[ebp]
  00d2a	89 85 d0 fe ff
	ff		 mov	 DWORD PTR tv638[ebp], eax
  00d30	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv2295[ebp+4]
$LN46@sha512_com:
  00d36	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+60]
  00d39	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+60]
  00d3c	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  00d3f	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  00d42	89 85 d4 fe ff
	ff		 mov	 DWORD PTR tv638[ebp+4], eax
  00d48	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  00d4b	0f a4 c6 17	 shld	 esi, eax, 23
  00d4f	c1 e0 17	 shl	 eax, 23			; 00000017H
  00d52	0f ac df 12	 shrd	 edi, ebx, 18
  00d56	33 d2		 xor	 edx, edx
  00d58	0b d6		 or	 edx, esi
  00d5a	33 f6		 xor	 esi, esi
  00d5c	0b f7		 or	 esi, edi
  00d5e	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  00d61	c1 e9 09	 shr	 ecx, 9
  00d64	0b c8		 or	 ecx, eax
  00d66	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  00d69	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00d6c	c1 eb 12	 shr	 ebx, 18			; 00000012H
  00d6f	0b c3		 or	 eax, ebx
  00d71	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  00d74	33 d0		 xor	 edx, eax
  00d76	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  00d79	33 ce		 xor	 ecx, esi
  00d7b	0f ac df 0e	 shrd	 edi, ebx, 14
  00d7f	c1 e0 12	 shl	 eax, 18			; 00000012H
  00d82	33 f6		 xor	 esi, esi
  00d84	0b f7		 or	 esi, edi
  00d86	33 ce		 xor	 ecx, esi
  00d88	8b 75 c8	 mov	 esi, DWORD PTR _v$[ebp+12]
  00d8b	33 75 c0	 xor	 esi, DWORD PTR _v$[ebp+4]
  00d8e	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  00d91	23 75 f8	 and	 esi, DWORD PTR _v$[ebp+60]
  00d94	0b c3		 or	 eax, ebx
  00d96	33 75 c8	 xor	 esi, DWORD PTR _v$[ebp+12]
  00d99	33 d0		 xor	 edx, eax
  00d9b	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  00d9e	33 45 bc	 xor	 eax, DWORD PTR _v$[ebp]
  00da1	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  00da4	23 45 f4	 and	 eax, DWORD PTR _v$[ebp+56]
  00da7	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  00daa	33 45 c4	 xor	 eax, DWORD PTR _v$[ebp+8]
  00dad	03 c8		 add	 ecx, eax
  00daf	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  00db2	13 d6		 adc	 edx, esi
  00db4	03 88 28 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+40]
  00dba	8b 75 d8	 mov	 esi, DWORD PTR _v$[ebp+28]
  00dbd	13 90 2c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+44]
  00dc3	03 8d d0 fe ff
	ff		 add	 ecx, DWORD PTR tv638[ebp]
  00dc9	13 95 d4 fe ff
	ff		 adc	 edx, DWORD PTR tv638[ebp+4]
  00dcf	01 4d cc	 add	 DWORD PTR _v$[ebp+16], ecx
  00dd2	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  00dd5	11 55 d0	 adc	 DWORD PTR _v$[ebp+20], edx
  00dd8	01 45 ec	 add	 DWORD PTR _v$[ebp+48], eax
  00ddb	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+20]
  00dde	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+24]
  00de1	11 45 f0	 adc	 DWORD PTR _v$[ebp+52], eax
  00de4	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00de7	0f ac f2 1c	 shrd	 edx, esi, 28
  00deb	0f a4 fb 1e	 shld	 ebx, edi, 30
  00def	33 c9		 xor	 ecx, ecx
  00df1	0b ca		 or	 ecx, edx
  00df3	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00df6	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  00df9	c1 e0 04	 shl	 eax, 4
  00dfc	0b c6		 or	 eax, esi
  00dfe	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  00e01	c1 ea 02	 shr	 edx, 2
  00e04	0b d7		 or	 edx, edi
  00e06	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  00e09	33 f6		 xor	 esi, esi
  00e0b	0b f3		 or	 esi, ebx
  00e0d	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  00e10	0f a4 fb 19	 shld	 ebx, edi, 25
  00e14	33 ca		 xor	 ecx, edx
  00e16	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00e19	33 c6		 xor	 eax, esi
  00e1b	c1 ea 07	 shr	 edx, 7
  00e1e	c1 e7 19	 shl	 edi, 25			; 00000019H
  00e21	33 f6		 xor	 esi, esi
  00e23	0b d7		 or	 edx, edi
  00e25	8b 7d d8	 mov	 edi, DWORD PTR _v$[ebp+28]
  00e28	23 7d e0	 and	 edi, DWORD PTR _v$[ebp+36]
  00e2b	33 ca		 xor	 ecx, edx
  00e2d	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00e30	33 55 e0	 xor	 edx, DWORD PTR _v$[ebp+36]
  00e33	0b f3		 or	 esi, ebx
  00e35	23 55 e8	 and	 edx, DWORD PTR _v$[ebp+44]
  00e38	89 4d fc	 mov	 DWORD PTR tv4783[ebp], ecx
  00e3b	8b 4d d4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  00e3e	33 4d dc	 xor	 ecx, DWORD PTR _v$[ebp+32]
  00e41	33 c6		 xor	 eax, esi
  00e43	23 4d e4	 and	 ecx, DWORD PTR _v$[ebp+40]
  00e46	8b 75 d4	 mov	 esi, DWORD PTR _v$[ebp+24]
  00e49	23 75 dc	 and	 esi, DWORD PTR _v$[ebp+32]
  00e4c	0b d7		 or	 edx, edi
  00e4e	0b ce		 or	 ecx, esi
  00e50	8b 75 fc	 mov	 esi, DWORD PTR tv4783[ebp]
  00e53	03 f1		 add	 esi, ecx
  00e55	13 c2		 adc	 eax, edx
  00e57	01 75 cc	 add	 DWORD PTR _v$[ebp+16], esi
  00e5a	11 45 d0	 adc	 DWORD PTR _v$[ebp+20], eax

; 522  :         v_cycle( 6, j); v_cycle( 7, j);

  00e5d	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00e61	0f 84 e9 00 00
	00		 je	 $LN18@sha512_com
  00e67	8b 45 80	 mov	 eax, DWORD PTR tv2419[ebp]
  00e6a	8b 7d 84	 mov	 edi, DWORD PTR tv2419[ebp+4]
  00e6d	8b 5d 84	 mov	 ebx, DWORD PTR tv2419[ebp+4]
  00e70	8b f0		 mov	 esi, eax
  00e72	0f ac fe 08	 shrd	 esi, edi, 8
  00e76	33 d2		 xor	 edx, edx
  00e78	0b d6		 or	 edx, esi
  00e7a	8b c8		 mov	 ecx, eax
  00e7c	8b f0		 mov	 esi, eax
  00e7e	0f ac d8 01	 shrd	 eax, ebx, 1
  00e82	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00e85	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  00e88	c1 ef 08	 shr	 edi, 8
  00e8b	0b cf		 or	 ecx, edi
  00e8d	d1 eb		 shr	 ebx, 1
  00e8f	0b f3		 or	 esi, ebx
  00e91	33 ce		 xor	 ecx, esi
  00e93	8b 75 84	 mov	 esi, DWORD PTR tv2419[ebp+4]
  00e96	8b 9d 5c ff ff
	ff		 mov	 ebx, DWORD PTR tv2230[ebp+4]
  00e9c	33 ff		 xor	 edi, edi
  00e9e	0b f8		 or	 edi, eax
  00ea0	8b 45 80	 mov	 eax, DWORD PTR tv2419[ebp]
  00ea3	0f ac f0 07	 shrd	 eax, esi, 7
  00ea7	33 d7		 xor	 edx, edi
  00ea9	8b bd 58 ff ff
	ff		 mov	 edi, DWORD PTR tv2230[ebp]
  00eaf	33 d0		 xor	 edx, eax
  00eb1	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv2230[ebp]
  00eb7	c1 ee 07	 shr	 esi, 7
  00eba	33 ce		 xor	 ecx, esi
  00ebc	8b b5 5c ff ff
	ff		 mov	 esi, DWORD PTR tv2230[ebp+4]
  00ec2	89 55 fc	 mov	 DWORD PTR tv4777[ebp], edx
  00ec5	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR tv2230[ebp]
  00ecb	0f ac f2 13	 shrd	 edx, esi, 19
  00ecf	89 4d b8	 mov	 DWORD PTR tv4780[ebp], ecx
  00ed2	33 c9		 xor	 ecx, ecx
  00ed4	0b ca		 or	 ecx, edx
  00ed6	8b 95 5c ff ff
	ff		 mov	 edx, DWORD PTR tv2230[ebp+4]
  00edc	c1 ee 13	 shr	 esi, 19			; 00000013H
  00edf	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00ee2	0b c6		 or	 eax, esi
  00ee4	0f a4 fb 03	 shld	 ebx, edi, 3
  00ee8	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  00eeb	33 f6		 xor	 esi, esi
  00eed	0b f3		 or	 esi, ebx
  00eef	33 c6		 xor	 eax, esi
  00ef1	8b b5 5c ff ff
	ff		 mov	 esi, DWORD PTR tv2230[ebp+4]
  00ef7	c1 e7 03	 shl	 edi, 3
  00efa	0b d7		 or	 edx, edi
  00efc	33 ca		 xor	 ecx, edx
  00efe	8b 95 58 ff ff
	ff		 mov	 edx, DWORD PTR tv2230[ebp]
  00f04	0f ac f2 06	 shrd	 edx, esi, 6
  00f08	33 ca		 xor	 ecx, edx
  00f0a	8b 55 fc	 mov	 edx, DWORD PTR tv4777[ebp]
  00f0d	c1 ee 06	 shr	 esi, 6
  00f10	33 c6		 xor	 eax, esi
  00f12	03 d1		 add	 edx, ecx
  00f14	8b 4d b8	 mov	 ecx, DWORD PTR tv4780[ebp]
  00f17	13 c8		 adc	 ecx, eax
  00f19	03 55 a0	 add	 edx, DWORD PTR tv2359[ebp]
  00f1c	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00f1f	13 4d a4	 adc	 ecx, DWORD PTR tv2359[ebp+4]
  00f22	03 95 40 ff ff
	ff		 add	 edx, DWORD PTR tv2095[ebp]
  00f28	13 8d 44 ff ff
	ff		 adc	 ecx, DWORD PTR tv2095[ebp+4]
  00f2e	89 90 80 00 00
	00		 mov	 DWORD PTR [eax+128], edx
  00f34	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx
  00f3a	8b 80 84 00 00
	00		 mov	 eax, DWORD PTR [eax+132]
  00f40	8b ca		 mov	 ecx, edx
  00f42	89 4d a0	 mov	 DWORD PTR tv2359[ebp], ecx
  00f45	89 45 a4	 mov	 DWORD PTR tv2359[ebp+4], eax
  00f48	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv742[ebp], ecx
  00f4e	eb 0c		 jmp	 SHORT $LN47@sha512_com
$LN18@sha512_com:
  00f50	8b 45 a0	 mov	 eax, DWORD PTR tv2359[ebp]
  00f53	89 85 f0 fe ff
	ff		 mov	 DWORD PTR tv742[ebp], eax
  00f59	8b 45 a4	 mov	 eax, DWORD PTR tv2359[ebp+4]
$LN47@sha512_com:
  00f5c	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+52]
  00f5f	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+52]
  00f62	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  00f65	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  00f68	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv742[ebp+4], eax
  00f6e	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  00f71	0f a4 c6 17	 shld	 esi, eax, 23
  00f75	c1 e0 17	 shl	 eax, 23			; 00000017H
  00f78	0f ac df 12	 shrd	 edi, ebx, 18
  00f7c	33 d2		 xor	 edx, edx
  00f7e	0b d6		 or	 edx, esi
  00f80	33 f6		 xor	 esi, esi
  00f82	0b f7		 or	 esi, edi
  00f84	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  00f87	c1 e9 09	 shr	 ecx, 9
  00f8a	0b c8		 or	 ecx, eax
  00f8c	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  00f8f	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00f92	c1 eb 12	 shr	 ebx, 18			; 00000012H
  00f95	0b c3		 or	 eax, ebx
  00f97	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  00f9a	33 d0		 xor	 edx, eax
  00f9c	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  00f9f	33 ce		 xor	 ecx, esi
  00fa1	0f ac df 0e	 shrd	 edi, ebx, 14
  00fa5	c1 e0 12	 shl	 eax, 18			; 00000012H
  00fa8	33 f6		 xor	 esi, esi
  00faa	0b f7		 or	 esi, edi
  00fac	33 ce		 xor	 ecx, esi
  00fae	8b 75 c0	 mov	 esi, DWORD PTR _v$[ebp+4]
  00fb1	33 75 f8	 xor	 esi, DWORD PTR _v$[ebp+60]
  00fb4	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  00fb7	23 75 f0	 and	 esi, DWORD PTR _v$[ebp+52]
  00fba	0b c3		 or	 eax, ebx
  00fbc	33 75 c0	 xor	 esi, DWORD PTR _v$[ebp+4]
  00fbf	33 d0		 xor	 edx, eax
  00fc1	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  00fc4	33 45 f4	 xor	 eax, DWORD PTR _v$[ebp+56]
  00fc7	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  00fca	23 45 ec	 and	 eax, DWORD PTR _v$[ebp+48]
  00fcd	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  00fd0	33 45 bc	 xor	 eax, DWORD PTR _v$[ebp]
  00fd3	03 c8		 add	 ecx, eax
  00fd5	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  00fd8	13 d6		 adc	 edx, esi
  00fda	03 88 30 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+48]
  00fe0	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  00fe3	13 90 34 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+52]
  00fe9	03 8d f0 fe ff
	ff		 add	 ecx, DWORD PTR tv742[ebp]
  00fef	13 95 f4 fe ff
	ff		 adc	 edx, DWORD PTR tv742[ebp+4]
  00ff5	01 4d c4	 add	 DWORD PTR _v$[ebp+8], ecx
  00ff8	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  00ffb	11 55 c8	 adc	 DWORD PTR _v$[ebp+12], edx
  00ffe	01 45 e4	 add	 DWORD PTR _v$[ebp+40], eax
  01001	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+12]
  01004	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+16]
  01007	11 45 e8	 adc	 DWORD PTR _v$[ebp+44], eax
  0100a	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  0100d	0f ac f2 1c	 shrd	 edx, esi, 28
  01011	0f a4 fb 1e	 shld	 ebx, edi, 30
  01015	33 c9		 xor	 ecx, ecx
  01017	0b ca		 or	 ecx, edx
  01019	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0101c	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  0101f	c1 e0 04	 shl	 eax, 4
  01022	0b c6		 or	 eax, esi
  01024	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  01027	c1 ea 02	 shr	 edx, 2
  0102a	0b d7		 or	 edx, edi
  0102c	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  0102f	33 f6		 xor	 esi, esi
  01031	0b f3		 or	 esi, ebx
  01033	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  01036	0f a4 fb 19	 shld	 ebx, edi, 25
  0103a	33 ca		 xor	 ecx, edx
  0103c	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0103f	33 c6		 xor	 eax, esi
  01041	c1 ea 07	 shr	 edx, 7
  01044	c1 e7 19	 shl	 edi, 25			; 00000019H
  01047	33 f6		 xor	 esi, esi
  01049	0b d7		 or	 edx, edi
  0104b	8b 7d d0	 mov	 edi, DWORD PTR _v$[ebp+20]
  0104e	23 7d d8	 and	 edi, DWORD PTR _v$[ebp+28]
  01051	33 ca		 xor	 ecx, edx
  01053	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  01056	33 55 d8	 xor	 edx, DWORD PTR _v$[ebp+28]
  01059	0b f3		 or	 esi, ebx
  0105b	23 55 e0	 and	 edx, DWORD PTR _v$[ebp+36]
  0105e	89 4d fc	 mov	 DWORD PTR tv4774[ebp], ecx
  01061	8b 4d cc	 mov	 ecx, DWORD PTR _v$[ebp+16]
  01064	33 4d d4	 xor	 ecx, DWORD PTR _v$[ebp+24]
  01067	33 c6		 xor	 eax, esi
  01069	23 4d dc	 and	 ecx, DWORD PTR _v$[ebp+32]
  0106c	8b 75 cc	 mov	 esi, DWORD PTR _v$[ebp+16]
  0106f	23 75 d4	 and	 esi, DWORD PTR _v$[ebp+24]
  01072	0b d7		 or	 edx, edi
  01074	0b ce		 or	 ecx, esi
  01076	8b 75 fc	 mov	 esi, DWORD PTR tv4774[ebp]
  01079	03 f1		 add	 esi, ecx
  0107b	13 c2		 adc	 eax, edx
  0107d	01 75 c4	 add	 DWORD PTR _v$[ebp+8], esi
  01080	11 45 c8	 adc	 DWORD PTR _v$[ebp+12], eax
  01083	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01087	0f 84 f2 00 00
	00		 je	 $LN20@sha512_com
  0108d	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv2479[ebp]
  01093	8b bd 54 ff ff
	ff		 mov	 edi, DWORD PTR tv2479[ebp+4]
  01099	8b 9d 54 ff ff
	ff		 mov	 ebx, DWORD PTR tv2479[ebp+4]
  0109f	8b f0		 mov	 esi, eax
  010a1	0f ac fe 08	 shrd	 esi, edi, 8
  010a5	33 d2		 xor	 edx, edx
  010a7	0b d6		 or	 edx, esi
  010a9	8b c8		 mov	 ecx, eax
  010ab	8b f0		 mov	 esi, eax
  010ad	0f ac d8 01	 shrd	 eax, ebx, 1
  010b1	c1 e1 18	 shl	 ecx, 24			; 00000018H
  010b4	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  010b7	c1 ef 08	 shr	 edi, 8
  010ba	0b cf		 or	 ecx, edi
  010bc	d1 eb		 shr	 ebx, 1
  010be	0b f3		 or	 esi, ebx
  010c0	33 ce		 xor	 ecx, esi
  010c2	8b b5 54 ff ff
	ff		 mov	 esi, DWORD PTR tv2479[ebp+4]
  010c8	8b 9d 3c ff ff
	ff		 mov	 ebx, DWORD PTR tv2295[ebp+4]
  010ce	33 ff		 xor	 edi, edi
  010d0	0b f8		 or	 edi, eax
  010d2	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv2479[ebp]
  010d8	0f ac f0 07	 shrd	 eax, esi, 7
  010dc	33 d7		 xor	 edx, edi
  010de	8b bd 38 ff ff
	ff		 mov	 edi, DWORD PTR tv2295[ebp]
  010e4	33 d0		 xor	 edx, eax
  010e6	8b 85 38 ff ff
	ff		 mov	 eax, DWORD PTR tv2295[ebp]
  010ec	c1 ee 07	 shr	 esi, 7
  010ef	33 ce		 xor	 ecx, esi
  010f1	8b b5 3c ff ff
	ff		 mov	 esi, DWORD PTR tv2295[ebp+4]
  010f7	89 55 fc	 mov	 DWORD PTR tv4768[ebp], edx
  010fa	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR tv2295[ebp]
  01100	0f ac f2 13	 shrd	 edx, esi, 19
  01104	89 4d b8	 mov	 DWORD PTR tv4771[ebp], ecx
  01107	33 c9		 xor	 ecx, ecx
  01109	0b ca		 or	 ecx, edx
  0110b	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv2295[ebp+4]
  01111	c1 ee 13	 shr	 esi, 19			; 00000013H
  01114	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  01117	0b c6		 or	 eax, esi
  01119	0f a4 fb 03	 shld	 ebx, edi, 3
  0111d	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  01120	33 f6		 xor	 esi, esi
  01122	0b f3		 or	 esi, ebx
  01124	33 c6		 xor	 eax, esi
  01126	8b b5 3c ff ff
	ff		 mov	 esi, DWORD PTR tv2295[ebp+4]
  0112c	c1 e7 03	 shl	 edi, 3
  0112f	0b d7		 or	 edx, edi
  01131	33 ca		 xor	 ecx, edx
  01133	8b 95 38 ff ff
	ff		 mov	 edx, DWORD PTR tv2295[ebp]
  01139	0f ac f2 06	 shrd	 edx, esi, 6
  0113d	33 ca		 xor	 ecx, edx
  0113f	8b 55 fc	 mov	 edx, DWORD PTR tv4768[ebp]
  01142	c1 ee 06	 shr	 esi, 6
  01145	33 c6		 xor	 eax, esi
  01147	03 d1		 add	 edx, ecx
  01149	8b 4d b8	 mov	 ecx, DWORD PTR tv4771[ebp]
  0114c	13 c8		 adc	 ecx, eax
  0114e	03 55 80	 add	 edx, DWORD PTR tv2419[ebp]
  01151	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01154	13 4d 84	 adc	 ecx, DWORD PTR tv2419[ebp+4]
  01157	03 55 a8	 add	 edx, DWORD PTR tv2051[ebp]
  0115a	13 4d ac	 adc	 ecx, DWORD PTR tv2051[ebp+4]
  0115d	89 90 88 00 00
	00		 mov	 DWORD PTR [eax+136], edx
  01163	89 88 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ecx
  01169	8b 80 8c 00 00
	00		 mov	 eax, DWORD PTR [eax+140]
  0116f	8b ca		 mov	 ecx, edx
  01171	89 4d 80	 mov	 DWORD PTR tv2419[ebp], ecx
  01174	89 45 84	 mov	 DWORD PTR tv2419[ebp+4], eax
  01177	89 8d b0 fe ff
	ff		 mov	 DWORD PTR tv843[ebp], ecx
  0117d	eb 0c		 jmp	 SHORT $LN48@sha512_com
$LN20@sha512_com:
  0117f	8b 45 80	 mov	 eax, DWORD PTR tv2419[ebp]
  01182	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv843[ebp], eax
  01188	8b 45 84	 mov	 eax, DWORD PTR tv2419[ebp+4]
$LN48@sha512_com:
  0118b	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  0118e	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+44]
  01191	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  01194	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  01197	89 85 b4 fe ff
	ff		 mov	 DWORD PTR tv843[ebp+4], eax
  0119d	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  011a0	0f a4 c6 17	 shld	 esi, eax, 23
  011a4	c1 e0 17	 shl	 eax, 23			; 00000017H
  011a7	0f ac df 12	 shrd	 edi, ebx, 18
  011ab	33 d2		 xor	 edx, edx
  011ad	0b d6		 or	 edx, esi
  011af	33 f6		 xor	 esi, esi
  011b1	0b f7		 or	 esi, edi
  011b3	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  011b6	c1 e9 09	 shr	 ecx, 9
  011b9	0b c8		 or	 ecx, eax
  011bb	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  011be	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  011c1	c1 eb 12	 shr	 ebx, 18			; 00000012H
  011c4	0b c3		 or	 eax, ebx
  011c6	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  011c9	33 d0		 xor	 edx, eax
  011cb	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  011ce	33 ce		 xor	 ecx, esi
  011d0	0f ac df 0e	 shrd	 edi, ebx, 14
  011d4	c1 e0 12	 shl	 eax, 18			; 00000012H
  011d7	33 f6		 xor	 esi, esi
  011d9	0b f7		 or	 esi, edi
  011db	33 ce		 xor	 ecx, esi
  011dd	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+60]
  011e0	33 75 f0	 xor	 esi, DWORD PTR _v$[ebp+52]
  011e3	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  011e6	23 75 e8	 and	 esi, DWORD PTR _v$[ebp+44]
  011e9	0b c3		 or	 eax, ebx
  011eb	33 75 f8	 xor	 esi, DWORD PTR _v$[ebp+60]
  011ee	33 d0		 xor	 edx, eax
  011f0	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  011f3	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+48]
  011f6	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  011f9	23 45 e4	 and	 eax, DWORD PTR _v$[ebp+40]
  011fc	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  011ff	33 45 f4	 xor	 eax, DWORD PTR _v$[ebp+56]
  01202	03 c8		 add	 ecx, eax
  01204	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  01207	13 d6		 adc	 edx, esi
  01209	03 88 38 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+56]
  0120f	8b 75 c8	 mov	 esi, DWORD PTR _v$[ebp+12]
  01212	13 90 3c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+60]
  01218	03 8d b0 fe ff
	ff		 add	 ecx, DWORD PTR tv843[ebp]
  0121e	13 95 b4 fe ff
	ff		 adc	 edx, DWORD PTR tv843[ebp+4]
  01224	01 4d bc	 add	 DWORD PTR _v$[ebp], ecx
  01227	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  0122a	11 55 c0	 adc	 DWORD PTR _v$[ebp+4], edx
  0122d	01 45 dc	 add	 DWORD PTR _v$[ebp+32], eax
  01230	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+4]
  01233	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+8]
  01236	11 45 e0	 adc	 DWORD PTR _v$[ebp+36], eax
  01239	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  0123c	0f ac f2 1c	 shrd	 edx, esi, 28
  01240	0f a4 fb 1e	 shld	 ebx, edi, 30
  01244	33 c9		 xor	 ecx, ecx
  01246	0b ca		 or	 ecx, edx
  01248	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+12]
  0124b	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  0124e	c1 e0 04	 shl	 eax, 4
  01251	0b c6		 or	 eax, esi
  01253	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  01256	c1 ea 02	 shr	 edx, 2
  01259	0b d7		 or	 edx, edi
  0125b	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  0125e	33 f6		 xor	 esi, esi
  01260	0b f3		 or	 esi, ebx
  01262	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  01265	0f a4 fb 19	 shld	 ebx, edi, 25
  01269	33 ca		 xor	 ecx, edx
  0126b	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+12]
  0126e	33 c6		 xor	 eax, esi
  01270	c1 ea 07	 shr	 edx, 7
  01273	c1 e7 19	 shl	 edi, 25			; 00000019H
  01276	33 f6		 xor	 esi, esi
  01278	0b d7		 or	 edx, edi
  0127a	8b 7d d0	 mov	 edi, DWORD PTR _v$[ebp+20]
  0127d	23 7d c8	 and	 edi, DWORD PTR _v$[ebp+12]
  01280	33 ca		 xor	 ecx, edx
  01282	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  01285	33 55 c8	 xor	 edx, DWORD PTR _v$[ebp+12]
  01288	0b f3		 or	 esi, ebx
  0128a	23 55 d8	 and	 edx, DWORD PTR _v$[ebp+28]
  0128d	89 4d fc	 mov	 DWORD PTR tv4765[ebp], ecx
  01290	8b 4d cc	 mov	 ecx, DWORD PTR _v$[ebp+16]
  01293	33 4d c4	 xor	 ecx, DWORD PTR _v$[ebp+8]
  01296	33 c6		 xor	 eax, esi
  01298	23 4d d4	 and	 ecx, DWORD PTR _v$[ebp+24]
  0129b	8b 75 cc	 mov	 esi, DWORD PTR _v$[ebp+16]
  0129e	23 75 c4	 and	 esi, DWORD PTR _v$[ebp+8]
  012a1	0b d7		 or	 edx, edi
  012a3	0b ce		 or	 ecx, esi
  012a5	8b 75 fc	 mov	 esi, DWORD PTR tv4765[ebp]
  012a8	03 f1		 add	 esi, ecx
  012aa	13 c2		 adc	 eax, edx
  012ac	01 75 bc	 add	 DWORD PTR _v$[ebp], esi
  012af	11 45 c0	 adc	 DWORD PTR _v$[ebp+4], eax

; 523  :         v_cycle( 8, j); v_cycle( 9, j);

  012b2	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  012b6	0f 84 d3 00 00
	00		 je	 $LN22@sha512_com
  012bc	8b 55 a0	 mov	 edx, DWORD PTR tv2359[ebp]
  012bf	8b 75 a4	 mov	 esi, DWORD PTR tv2359[ebp+4]
  012c2	8b 7d a0	 mov	 edi, DWORD PTR tv2359[ebp]
  012c5	8b 5d a4	 mov	 ebx, DWORD PTR tv2359[ebp+4]
  012c8	0f ac f2 13	 shrd	 edx, esi, 19
  012cc	8b 45 a0	 mov	 eax, DWORD PTR tv2359[ebp]
  012cf	c1 ee 13	 shr	 esi, 19			; 00000013H
  012d2	0f a4 fb 03	 shld	 ebx, edi, 3
  012d6	33 c9		 xor	 ecx, ecx
  012d8	0b ca		 or	 ecx, edx
  012da	8b 55 a4	 mov	 edx, DWORD PTR tv2359[ebp+4]
  012dd	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  012e0	0b c6		 or	 eax, esi
  012e2	33 f6		 xor	 esi, esi
  012e4	0b f3		 or	 esi, ebx
  012e6	33 c6		 xor	 eax, esi
  012e8	8b 75 a4	 mov	 esi, DWORD PTR tv2359[ebp+4]
  012eb	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  012ee	c1 e7 03	 shl	 edi, 3
  012f1	0b d7		 or	 edx, edi
  012f3	33 ca		 xor	 ecx, edx
  012f5	8b 55 a0	 mov	 edx, DWORD PTR tv2359[ebp]
  012f8	0f ac f2 06	 shrd	 edx, esi, 6
  012fc	8b 7d 8c	 mov	 edi, DWORD PTR tv2048[ebp+4]
  012ff	8b 5d 8c	 mov	 ebx, DWORD PTR tv2048[ebp+4]
  01302	c1 ee 06	 shr	 esi, 6
  01305	33 c6		 xor	 eax, esi
  01307	33 ca		 xor	 ecx, edx
  01309	89 45 b8	 mov	 DWORD PTR tv4762[ebp], eax
  0130c	8b 45 88	 mov	 eax, DWORD PTR tv2048[ebp]
  0130f	8b f0		 mov	 esi, eax
  01311	0f ac fe 08	 shrd	 esi, edi, 8
  01315	33 d2		 xor	 edx, edx
  01317	0b d6		 or	 edx, esi
  01319	89 4d fc	 mov	 DWORD PTR tv4759[ebp], ecx
  0131c	8b c8		 mov	 ecx, eax
  0131e	8b f0		 mov	 esi, eax
  01320	0f ac d8 01	 shrd	 eax, ebx, 1
  01324	c1 e1 18	 shl	 ecx, 24			; 00000018H
  01327	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  0132a	c1 ef 08	 shr	 edi, 8
  0132d	0b cf		 or	 ecx, edi
  0132f	d1 eb		 shr	 ebx, 1
  01331	0b f3		 or	 esi, ebx
  01333	33 ce		 xor	 ecx, esi
  01335	8b 75 8c	 mov	 esi, DWORD PTR tv2048[ebp+4]
  01338	33 ff		 xor	 edi, edi
  0133a	0b f8		 or	 edi, eax
  0133c	8b 45 88	 mov	 eax, DWORD PTR tv2048[ebp]
  0133f	0f ac f0 07	 shrd	 eax, esi, 7
  01343	33 d7		 xor	 edx, edi
  01345	c1 ee 07	 shr	 esi, 7
  01348	33 d0		 xor	 edx, eax
  0134a	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0134d	33 ce		 xor	 ecx, esi
  0134f	8b 75 fc	 mov	 esi, DWORD PTR tv4759[ebp]
  01352	03 f2		 add	 esi, edx
  01354	8b 55 b8	 mov	 edx, DWORD PTR tv4762[ebp]
  01357	13 d1		 adc	 edx, ecx
  01359	03 75 98	 add	 esi, DWORD PTR tv2035[ebp]
  0135c	13 55 9c	 adc	 edx, DWORD PTR tv2035[ebp+4]
  0135f	03 b5 50 ff ff
	ff		 add	 esi, DWORD PTR tv2479[ebp]
  01365	13 95 54 ff ff
	ff		 adc	 edx, DWORD PTR tv2479[ebp+4]
  0136b	89 b0 90 00 00
	00		 mov	 DWORD PTR [eax+144], esi
  01371	89 90 94 00 00
	00		 mov	 DWORD PTR [eax+148], edx
  01377	8b ce		 mov	 ecx, esi
  01379	8b c2		 mov	 eax, edx
  0137b	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv2479[ebp], ecx
  01381	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv2479[ebp+4], eax
  01387	89 8d 20 ff ff
	ff		 mov	 DWORD PTR tv944[ebp], ecx
  0138d	eb 12		 jmp	 SHORT $LN49@sha512_com
$LN22@sha512_com:
  0138f	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv2479[ebp]
  01395	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv944[ebp], eax
  0139b	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR tv2479[ebp+4]
$LN49@sha512_com:
  013a1	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+36]
  013a4	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+36]
  013a7	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  013aa	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  013ad	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv944[ebp+4], eax
  013b3	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  013b6	0f a4 c6 17	 shld	 esi, eax, 23
  013ba	c1 e0 17	 shl	 eax, 23			; 00000017H
  013bd	0f ac df 12	 shrd	 edi, ebx, 18
  013c1	33 d2		 xor	 edx, edx
  013c3	0b d6		 or	 edx, esi
  013c5	33 f6		 xor	 esi, esi
  013c7	0b f7		 or	 esi, edi
  013c9	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  013cc	c1 e9 09	 shr	 ecx, 9
  013cf	0b c8		 or	 ecx, eax
  013d1	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  013d4	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  013d7	c1 eb 12	 shr	 ebx, 18			; 00000012H
  013da	0b c3		 or	 eax, ebx
  013dc	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  013df	33 d0		 xor	 edx, eax
  013e1	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  013e4	33 ce		 xor	 ecx, esi
  013e6	0f ac df 0e	 shrd	 edi, ebx, 14
  013ea	c1 e0 12	 shl	 eax, 18			; 00000012H
  013ed	33 f6		 xor	 esi, esi
  013ef	0b f7		 or	 esi, edi
  013f1	33 ce		 xor	 ecx, esi
  013f3	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  013f6	33 75 f0	 xor	 esi, DWORD PTR _v$[ebp+52]
  013f9	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  013fc	23 75 e0	 and	 esi, DWORD PTR _v$[ebp+36]
  013ff	0b c3		 or	 eax, ebx
  01401	33 75 f0	 xor	 esi, DWORD PTR _v$[ebp+52]
  01404	33 d0		 xor	 edx, eax
  01406	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  01409	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+48]
  0140c	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  0140f	23 45 dc	 and	 eax, DWORD PTR _v$[ebp+32]
  01412	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  01415	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+48]
  01418	03 c8		 add	 ecx, eax
  0141a	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  0141d	13 d6		 adc	 edx, esi
  0141f	03 88 40 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+64]
  01425	8b 75 c0	 mov	 esi, DWORD PTR _v$[ebp+4]
  01428	13 90 44 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+68]
  0142e	03 8d 20 ff ff
	ff		 add	 ecx, DWORD PTR tv944[ebp]
  01434	13 95 24 ff ff
	ff		 adc	 edx, DWORD PTR tv944[ebp+4]
  0143a	01 4d f4	 add	 DWORD PTR _v$[ebp+56], ecx
  0143d	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  01440	11 55 f8	 adc	 DWORD PTR _v$[ebp+60], edx
  01443	01 45 d4	 add	 DWORD PTR _v$[ebp+24], eax
  01446	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+60]
  01449	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp]
  0144c	11 45 d8	 adc	 DWORD PTR _v$[ebp+28], eax
  0144f	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  01452	0f ac f2 1c	 shrd	 edx, esi, 28
  01456	0f a4 fb 1e	 shld	 ebx, edi, 30
  0145a	33 c9		 xor	 ecx, ecx
  0145c	0b ca		 or	 ecx, edx
  0145e	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+4]
  01461	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  01464	c1 e0 04	 shl	 eax, 4
  01467	0b c6		 or	 eax, esi
  01469	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  0146c	c1 ea 02	 shr	 edx, 2
  0146f	0b d7		 or	 edx, edi
  01471	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  01474	33 f6		 xor	 esi, esi
  01476	0b f3		 or	 esi, ebx
  01478	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  0147b	0f a4 fb 19	 shld	 ebx, edi, 25
  0147f	33 ca		 xor	 ecx, edx
  01481	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+4]
  01484	33 c6		 xor	 eax, esi
  01486	c1 ea 07	 shr	 edx, 7
  01489	c1 e7 19	 shl	 edi, 25			; 00000019H
  0148c	33 f6		 xor	 esi, esi
  0148e	0b d7		 or	 edx, edi
  01490	8b 7d c8	 mov	 edi, DWORD PTR _v$[ebp+12]
  01493	23 7d c0	 and	 edi, DWORD PTR _v$[ebp+4]
  01496	33 ca		 xor	 ecx, edx
  01498	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+12]
  0149b	33 55 c0	 xor	 edx, DWORD PTR _v$[ebp+4]
  0149e	0b f3		 or	 esi, ebx
  014a0	23 55 d0	 and	 edx, DWORD PTR _v$[ebp+20]
  014a3	89 4d fc	 mov	 DWORD PTR tv4756[ebp], ecx
  014a6	8b 4d c4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  014a9	33 4d bc	 xor	 ecx, DWORD PTR _v$[ebp]
  014ac	33 c6		 xor	 eax, esi
  014ae	23 4d cc	 and	 ecx, DWORD PTR _v$[ebp+16]
  014b1	8b 75 c4	 mov	 esi, DWORD PTR _v$[ebp+8]
  014b4	23 75 bc	 and	 esi, DWORD PTR _v$[ebp]
  014b7	0b d7		 or	 edx, edi
  014b9	0b ce		 or	 ecx, esi
  014bb	8b 75 fc	 mov	 esi, DWORD PTR tv4756[ebp]
  014be	03 f1		 add	 esi, ecx
  014c0	13 c2		 adc	 eax, edx
  014c2	01 75 f4	 add	 DWORD PTR _v$[ebp+56], esi
  014c5	11 45 f8	 adc	 DWORD PTR _v$[ebp+60], eax
  014c8	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  014cc	0f 84 e0 00 00
	00		 je	 $LN24@sha512_com
  014d2	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv2120[ebp]
  014d8	8b bd 7c ff ff
	ff		 mov	 edi, DWORD PTR tv2120[ebp+4]
  014de	8b 9d 7c ff ff
	ff		 mov	 ebx, DWORD PTR tv2120[ebp+4]
  014e4	8b f0		 mov	 esi, eax
  014e6	0f ac fe 08	 shrd	 esi, edi, 8
  014ea	33 d2		 xor	 edx, edx
  014ec	0b d6		 or	 edx, esi
  014ee	8b c8		 mov	 ecx, eax
  014f0	8b f0		 mov	 esi, eax
  014f2	0f ac d8 01	 shrd	 eax, ebx, 1
  014f6	c1 e1 18	 shl	 ecx, 24			; 00000018H
  014f9	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  014fc	c1 ef 08	 shr	 edi, 8
  014ff	0b cf		 or	 ecx, edi
  01501	d1 eb		 shr	 ebx, 1
  01503	0b f3		 or	 esi, ebx
  01505	33 ce		 xor	 ecx, esi
  01507	8b b5 7c ff ff
	ff		 mov	 esi, DWORD PTR tv2120[ebp+4]
  0150d	8b 5d 84	 mov	 ebx, DWORD PTR tv2419[ebp+4]
  01510	33 ff		 xor	 edi, edi
  01512	0b f8		 or	 edi, eax
  01514	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv2120[ebp]
  0151a	0f ac f0 07	 shrd	 eax, esi, 7
  0151e	33 d7		 xor	 edx, edi
  01520	8b 7d 80	 mov	 edi, DWORD PTR tv2419[ebp]
  01523	33 d0		 xor	 edx, eax
  01525	8b 45 80	 mov	 eax, DWORD PTR tv2419[ebp]
  01528	c1 ee 07	 shr	 esi, 7
  0152b	33 ce		 xor	 ecx, esi
  0152d	8b 75 84	 mov	 esi, DWORD PTR tv2419[ebp+4]
  01530	89 55 fc	 mov	 DWORD PTR tv4750[ebp], edx
  01533	8b 55 80	 mov	 edx, DWORD PTR tv2419[ebp]
  01536	0f ac f2 13	 shrd	 edx, esi, 19
  0153a	89 4d b8	 mov	 DWORD PTR tv4753[ebp], ecx
  0153d	33 c9		 xor	 ecx, ecx
  0153f	0b ca		 or	 ecx, edx
  01541	8b 55 84	 mov	 edx, DWORD PTR tv2419[ebp+4]
  01544	c1 ee 13	 shr	 esi, 19			; 00000013H
  01547	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  0154a	0b c6		 or	 eax, esi
  0154c	0f a4 fb 03	 shld	 ebx, edi, 3
  01550	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  01553	33 f6		 xor	 esi, esi
  01555	0b f3		 or	 esi, ebx
  01557	33 c6		 xor	 eax, esi
  01559	8b 75 84	 mov	 esi, DWORD PTR tv2419[ebp+4]
  0155c	c1 e7 03	 shl	 edi, 3
  0155f	0b d7		 or	 edx, edi
  01561	33 ca		 xor	 ecx, edx
  01563	8b 55 80	 mov	 edx, DWORD PTR tv2419[ebp]
  01566	0f ac f2 06	 shrd	 edx, esi, 6
  0156a	33 ca		 xor	 ecx, edx
  0156c	8b 55 fc	 mov	 edx, DWORD PTR tv4750[ebp]
  0156f	c1 ee 06	 shr	 esi, 6
  01572	33 c6		 xor	 eax, esi
  01574	03 d1		 add	 edx, ecx
  01576	8b 4d b8	 mov	 ecx, DWORD PTR tv4753[ebp]
  01579	13 c8		 adc	 ecx, eax
  0157b	03 95 30 ff ff
	ff		 add	 edx, DWORD PTR tv2107[ebp]
  01581	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01584	13 8d 34 ff ff
	ff		 adc	 ecx, DWORD PTR tv2107[ebp+4]
  0158a	03 55 88	 add	 edx, DWORD PTR tv2048[ebp]
  0158d	13 4d 8c	 adc	 ecx, DWORD PTR tv2048[ebp+4]
  01590	89 90 98 00 00
	00		 mov	 DWORD PTR [eax+152], edx
  01596	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx
  0159c	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]
  015a2	8b ca		 mov	 ecx, edx
  015a4	89 4d 88	 mov	 DWORD PTR tv2048[ebp], ecx
  015a7	89 45 8c	 mov	 DWORD PTR tv2048[ebp+4], eax
  015aa	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv1041[ebp], ecx
  015b0	eb 0c		 jmp	 SHORT $LN50@sha512_com
$LN24@sha512_com:
  015b2	8b 45 88	 mov	 eax, DWORD PTR tv2048[ebp]
  015b5	89 85 18 ff ff
	ff		 mov	 DWORD PTR tv1041[ebp], eax
  015bb	8b 45 8c	 mov	 eax, DWORD PTR tv2048[ebp+4]
$LN50@sha512_com:
  015be	8b 75 d8	 mov	 esi, DWORD PTR _v$[ebp+28]
  015c1	8b 4d d8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  015c4	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  015c7	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  015ca	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv1041[ebp+4], eax
  015d0	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  015d3	0f a4 c6 17	 shld	 esi, eax, 23
  015d7	c1 e0 17	 shl	 eax, 23			; 00000017H
  015da	0f ac df 12	 shrd	 edi, ebx, 18
  015de	33 d2		 xor	 edx, edx
  015e0	0b d6		 or	 edx, esi
  015e2	33 f6		 xor	 esi, esi
  015e4	0b f7		 or	 esi, edi
  015e6	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  015e9	c1 e9 09	 shr	 ecx, 9
  015ec	0b c8		 or	 ecx, eax
  015ee	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  015f1	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  015f4	c1 eb 12	 shr	 ebx, 18			; 00000012H
  015f7	0b c3		 or	 eax, ebx
  015f9	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  015fc	33 d0		 xor	 edx, eax
  015fe	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  01601	33 ce		 xor	 ecx, esi
  01603	0f ac df 0e	 shrd	 edi, ebx, 14
  01607	c1 e0 12	 shl	 eax, 18			; 00000012H
  0160a	33 f6		 xor	 esi, esi
  0160c	0b f7		 or	 esi, edi
  0160e	33 ce		 xor	 ecx, esi
  01610	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  01613	33 75 e0	 xor	 esi, DWORD PTR _v$[ebp+36]
  01616	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  01619	23 75 d8	 and	 esi, DWORD PTR _v$[ebp+28]
  0161c	0b c3		 or	 eax, ebx
  0161e	33 75 e8	 xor	 esi, DWORD PTR _v$[ebp+44]
  01621	33 d0		 xor	 edx, eax
  01623	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  01626	33 45 dc	 xor	 eax, DWORD PTR _v$[ebp+32]
  01629	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  0162c	23 45 d4	 and	 eax, DWORD PTR _v$[ebp+24]
  0162f	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  01632	33 45 e4	 xor	 eax, DWORD PTR _v$[ebp+40]
  01635	03 c8		 add	 ecx, eax
  01637	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  0163a	13 d6		 adc	 edx, esi
  0163c	03 88 48 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+72]
  01642	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+60]
  01645	13 90 4c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+76]
  0164b	03 8d 18 ff ff
	ff		 add	 ecx, DWORD PTR tv1041[ebp]
  01651	13 95 1c ff ff
	ff		 adc	 edx, DWORD PTR tv1041[ebp+4]
  01657	01 4d ec	 add	 DWORD PTR _v$[ebp+48], ecx
  0165a	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  0165d	11 55 f0	 adc	 DWORD PTR _v$[ebp+52], edx
  01660	01 45 cc	 add	 DWORD PTR _v$[ebp+16], eax
  01663	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+52]
  01666	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+56]
  01669	11 45 d0	 adc	 DWORD PTR _v$[ebp+20], eax
  0166c	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  0166f	0f ac f2 1c	 shrd	 edx, esi, 28
  01673	0f a4 fb 1e	 shld	 ebx, edi, 30
  01677	33 c9		 xor	 ecx, ecx
  01679	0b ca		 or	 ecx, edx
  0167b	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+60]
  0167e	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  01681	c1 e0 04	 shl	 eax, 4
  01684	0b c6		 or	 eax, esi
  01686	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  01689	c1 ea 02	 shr	 edx, 2
  0168c	0b d7		 or	 edx, edi
  0168e	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  01691	33 f6		 xor	 esi, esi
  01693	0b f3		 or	 esi, ebx
  01695	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  01698	0f a4 fb 19	 shld	 ebx, edi, 25
  0169c	33 ca		 xor	 ecx, edx
  0169e	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+60]
  016a1	33 c6		 xor	 eax, esi
  016a3	c1 ea 07	 shr	 edx, 7
  016a6	c1 e7 19	 shl	 edi, 25			; 00000019H
  016a9	33 f6		 xor	 esi, esi
  016ab	0b d7		 or	 edx, edi
  016ad	8b 7d c0	 mov	 edi, DWORD PTR _v$[ebp+4]
  016b0	23 7d f8	 and	 edi, DWORD PTR _v$[ebp+60]
  016b3	33 ca		 xor	 ecx, edx
  016b5	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+4]
  016b8	33 55 f8	 xor	 edx, DWORD PTR _v$[ebp+60]
  016bb	0b f3		 or	 esi, ebx
  016bd	23 55 c8	 and	 edx, DWORD PTR _v$[ebp+12]
  016c0	89 4d fc	 mov	 DWORD PTR tv4747[ebp], ecx
  016c3	8b 4d bc	 mov	 ecx, DWORD PTR _v$[ebp]
  016c6	33 4d f4	 xor	 ecx, DWORD PTR _v$[ebp+56]
  016c9	33 c6		 xor	 eax, esi
  016cb	23 4d c4	 and	 ecx, DWORD PTR _v$[ebp+8]
  016ce	8b 75 bc	 mov	 esi, DWORD PTR _v$[ebp]
  016d1	23 75 f4	 and	 esi, DWORD PTR _v$[ebp+56]
  016d4	0b d7		 or	 edx, edi
  016d6	0b ce		 or	 ecx, esi
  016d8	8b 75 fc	 mov	 esi, DWORD PTR tv4747[ebp]
  016db	03 f1		 add	 esi, ecx
  016dd	13 c2		 adc	 eax, edx
  016df	01 75 ec	 add	 DWORD PTR _v$[ebp+48], esi
  016e2	11 45 f0	 adc	 DWORD PTR _v$[ebp+52], eax

; 524  :         v_cycle(10, j); v_cycle(11, j);

  016e5	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  016e9	0f 84 04 01 00
	00		 je	 $LN26@sha512_com
  016ef	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv2186[ebp]
  016f5	8b bd 6c ff ff
	ff		 mov	 edi, DWORD PTR tv2186[ebp+4]
  016fb	8b 9d 6c ff ff
	ff		 mov	 ebx, DWORD PTR tv2186[ebp+4]
  01701	8b f0		 mov	 esi, eax
  01703	0f ac fe 08	 shrd	 esi, edi, 8
  01707	33 d2		 xor	 edx, edx
  01709	0b d6		 or	 edx, esi
  0170b	8b c8		 mov	 ecx, eax
  0170d	8b f0		 mov	 esi, eax
  0170f	0f ac d8 01	 shrd	 eax, ebx, 1
  01713	c1 e1 18	 shl	 ecx, 24			; 00000018H
  01716	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  01719	c1 ef 08	 shr	 edi, 8
  0171c	0b cf		 or	 ecx, edi
  0171e	d1 eb		 shr	 ebx, 1
  01720	0b f3		 or	 esi, ebx
  01722	33 ce		 xor	 ecx, esi
  01724	8b b5 6c ff ff
	ff		 mov	 esi, DWORD PTR tv2186[ebp+4]
  0172a	8b 9d 54 ff ff
	ff		 mov	 ebx, DWORD PTR tv2479[ebp+4]
  01730	33 ff		 xor	 edi, edi
  01732	0b f8		 or	 edi, eax
  01734	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv2186[ebp]
  0173a	0f ac f0 07	 shrd	 eax, esi, 7
  0173e	33 d7		 xor	 edx, edi
  01740	8b bd 50 ff ff
	ff		 mov	 edi, DWORD PTR tv2479[ebp]
  01746	33 d0		 xor	 edx, eax
  01748	8b 85 50 ff ff
	ff		 mov	 eax, DWORD PTR tv2479[ebp]
  0174e	c1 ee 07	 shr	 esi, 7
  01751	33 ce		 xor	 ecx, esi
  01753	8b b5 54 ff ff
	ff		 mov	 esi, DWORD PTR tv2479[ebp+4]
  01759	89 55 fc	 mov	 DWORD PTR tv4741[ebp], edx
  0175c	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv2479[ebp]
  01762	0f ac f2 13	 shrd	 edx, esi, 19
  01766	89 4d b8	 mov	 DWORD PTR tv4744[ebp], ecx
  01769	33 c9		 xor	 ecx, ecx
  0176b	0b ca		 or	 ecx, edx
  0176d	8b 95 54 ff ff
	ff		 mov	 edx, DWORD PTR tv2479[ebp+4]
  01773	c1 ee 13	 shr	 esi, 19			; 00000013H
  01776	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  01779	0b c6		 or	 eax, esi
  0177b	0f a4 fb 03	 shld	 ebx, edi, 3
  0177f	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  01782	33 f6		 xor	 esi, esi
  01784	0b f3		 or	 esi, ebx
  01786	33 c6		 xor	 eax, esi
  01788	8b b5 54 ff ff
	ff		 mov	 esi, DWORD PTR tv2479[ebp+4]
  0178e	c1 e7 03	 shl	 edi, 3
  01791	0b d7		 or	 edx, edi
  01793	33 ca		 xor	 ecx, edx
  01795	8b 95 50 ff ff
	ff		 mov	 edx, DWORD PTR tv2479[ebp]
  0179b	0f ac f2 06	 shrd	 edx, esi, 6
  0179f	33 ca		 xor	 ecx, edx
  017a1	8b 55 fc	 mov	 edx, DWORD PTR tv4741[ebp]
  017a4	c1 ee 06	 shr	 esi, 6
  017a7	33 c6		 xor	 eax, esi
  017a9	03 d1		 add	 edx, ecx
  017ab	8b 4d b8	 mov	 ecx, DWORD PTR tv4744[ebp]
  017ae	13 c8		 adc	 ecx, eax
  017b0	03 95 48 ff ff
	ff		 add	 edx, DWORD PTR tv2164[ebp]
  017b6	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  017b9	13 8d 4c ff ff
	ff		 adc	 ecx, DWORD PTR tv2164[ebp+4]
  017bf	03 95 78 ff ff
	ff		 add	 edx, DWORD PTR tv2120[ebp]
  017c5	13 8d 7c ff ff
	ff		 adc	 ecx, DWORD PTR tv2120[ebp+4]
  017cb	89 90 a0 00 00
	00		 mov	 DWORD PTR [eax+160], edx
  017d1	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
  017d7	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [eax+164]
  017dd	8b ca		 mov	 ecx, edx
  017df	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv2120[ebp], ecx
  017e5	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv2120[ebp+4], eax
  017eb	89 8d 08 ff ff
	ff		 mov	 DWORD PTR tv1144[ebp], ecx
  017f1	eb 12		 jmp	 SHORT $LN51@sha512_com
$LN26@sha512_com:
  017f3	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv2120[ebp]
  017f9	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv1144[ebp], eax
  017ff	8b 85 7c ff ff
	ff		 mov	 eax, DWORD PTR tv2120[ebp+4]
$LN51@sha512_com:
  01805	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  01808	8b 4d d0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  0180b	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  0180e	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  01811	89 85 0c ff ff
	ff		 mov	 DWORD PTR tv1144[ebp+4], eax
  01817	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  0181a	0f a4 c6 17	 shld	 esi, eax, 23
  0181e	c1 e0 17	 shl	 eax, 23			; 00000017H
  01821	0f ac df 12	 shrd	 edi, ebx, 18
  01825	33 d2		 xor	 edx, edx
  01827	0b d6		 or	 edx, esi
  01829	33 f6		 xor	 esi, esi
  0182b	0b f7		 or	 esi, edi
  0182d	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  01830	c1 e9 09	 shr	 ecx, 9
  01833	0b c8		 or	 ecx, eax
  01835	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  01838	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  0183b	c1 eb 12	 shr	 ebx, 18			; 00000012H
  0183e	0b c3		 or	 eax, ebx
  01840	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  01843	33 d0		 xor	 edx, eax
  01845	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  01848	33 ce		 xor	 ecx, esi
  0184a	0f ac df 0e	 shrd	 edi, ebx, 14
  0184e	c1 e0 12	 shl	 eax, 18			; 00000012H
  01851	33 f6		 xor	 esi, esi
  01853	0b f7		 or	 esi, edi
  01855	33 ce		 xor	 ecx, esi
  01857	8b 75 d8	 mov	 esi, DWORD PTR _v$[ebp+28]
  0185a	33 75 e0	 xor	 esi, DWORD PTR _v$[ebp+36]
  0185d	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  01860	23 75 d0	 and	 esi, DWORD PTR _v$[ebp+20]
  01863	0b c3		 or	 eax, ebx
  01865	33 75 e0	 xor	 esi, DWORD PTR _v$[ebp+36]
  01868	33 d0		 xor	 edx, eax
  0186a	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  0186d	33 45 dc	 xor	 eax, DWORD PTR _v$[ebp+32]
  01870	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  01873	23 45 cc	 and	 eax, DWORD PTR _v$[ebp+16]
  01876	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  01879	33 45 dc	 xor	 eax, DWORD PTR _v$[ebp+32]
  0187c	03 c8		 add	 ecx, eax
  0187e	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  01881	13 d6		 adc	 edx, esi
  01883	03 88 50 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+80]
  01889	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+52]
  0188c	13 90 54 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+84]
  01892	03 8d 08 ff ff
	ff		 add	 ecx, DWORD PTR tv1144[ebp]
  01898	13 95 0c ff ff
	ff		 adc	 edx, DWORD PTR tv1144[ebp+4]
  0189e	01 4d e4	 add	 DWORD PTR _v$[ebp+40], ecx
  018a1	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  018a4	11 55 e8	 adc	 DWORD PTR _v$[ebp+44], edx
  018a7	01 45 c4	 add	 DWORD PTR _v$[ebp+8], eax
  018aa	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+44]
  018ad	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+48]
  018b0	11 45 c8	 adc	 DWORD PTR _v$[ebp+12], eax
  018b3	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  018b6	0f ac f2 1c	 shrd	 edx, esi, 28
  018ba	0f a4 fb 1e	 shld	 ebx, edi, 30
  018be	33 c9		 xor	 ecx, ecx
  018c0	0b ca		 or	 ecx, edx
  018c2	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+52]
  018c5	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  018c8	c1 e0 04	 shl	 eax, 4
  018cb	0b c6		 or	 eax, esi
  018cd	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  018d0	c1 ea 02	 shr	 edx, 2
  018d3	0b d7		 or	 edx, edi
  018d5	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  018d8	33 f6		 xor	 esi, esi
  018da	0b f3		 or	 esi, ebx
  018dc	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  018df	0f a4 fb 19	 shld	 ebx, edi, 25
  018e3	33 ca		 xor	 ecx, edx
  018e5	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+52]
  018e8	33 c6		 xor	 eax, esi
  018ea	c1 ea 07	 shr	 edx, 7
  018ed	c1 e7 19	 shl	 edi, 25			; 00000019H
  018f0	33 f6		 xor	 esi, esi
  018f2	0b d7		 or	 edx, edi
  018f4	8b 7d f8	 mov	 edi, DWORD PTR _v$[ebp+60]
  018f7	23 7d f0	 and	 edi, DWORD PTR _v$[ebp+52]
  018fa	33 ca		 xor	 ecx, edx
  018fc	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+60]
  018ff	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+52]
  01902	0b f3		 or	 esi, ebx
  01904	23 55 c0	 and	 edx, DWORD PTR _v$[ebp+4]
  01907	89 4d fc	 mov	 DWORD PTR tv4738[ebp], ecx
  0190a	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+56]
  0190d	33 4d ec	 xor	 ecx, DWORD PTR _v$[ebp+48]
  01910	33 c6		 xor	 eax, esi
  01912	23 4d bc	 and	 ecx, DWORD PTR _v$[ebp]
  01915	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+56]
  01918	23 75 ec	 and	 esi, DWORD PTR _v$[ebp+48]
  0191b	0b d7		 or	 edx, edi
  0191d	0b ce		 or	 ecx, esi
  0191f	8b 75 fc	 mov	 esi, DWORD PTR tv4738[ebp]
  01922	03 f1		 add	 esi, ecx
  01924	13 c2		 adc	 eax, edx
  01926	01 75 e4	 add	 DWORD PTR _v$[ebp+40], esi
  01929	11 45 e8	 adc	 DWORD PTR _v$[ebp+44], eax
  0192c	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01930	0f 84 dd 00 00
	00		 je	 $LN28@sha512_com
  01936	8b 45 90	 mov	 eax, DWORD PTR tv2252[ebp]
  01939	8b 7d 94	 mov	 edi, DWORD PTR tv2252[ebp+4]
  0193c	8b 5d 94	 mov	 ebx, DWORD PTR tv2252[ebp+4]
  0193f	8b f0		 mov	 esi, eax
  01941	0f ac fe 08	 shrd	 esi, edi, 8
  01945	33 d2		 xor	 edx, edx
  01947	0b d6		 or	 edx, esi
  01949	8b c8		 mov	 ecx, eax
  0194b	8b f0		 mov	 esi, eax
  0194d	0f ac d8 01	 shrd	 eax, ebx, 1
  01951	c1 e1 18	 shl	 ecx, 24			; 00000018H
  01954	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  01957	c1 ef 08	 shr	 edi, 8
  0195a	0b cf		 or	 ecx, edi
  0195c	d1 eb		 shr	 ebx, 1
  0195e	0b f3		 or	 esi, ebx
  01960	33 ce		 xor	 ecx, esi
  01962	8b 75 94	 mov	 esi, DWORD PTR tv2252[ebp+4]
  01965	8b 5d 8c	 mov	 ebx, DWORD PTR tv2048[ebp+4]
  01968	33 ff		 xor	 edi, edi
  0196a	0b f8		 or	 edi, eax
  0196c	8b 45 90	 mov	 eax, DWORD PTR tv2252[ebp]
  0196f	0f ac f0 07	 shrd	 eax, esi, 7
  01973	33 d7		 xor	 edx, edi
  01975	8b 7d 88	 mov	 edi, DWORD PTR tv2048[ebp]
  01978	33 d0		 xor	 edx, eax
  0197a	8b 45 88	 mov	 eax, DWORD PTR tv2048[ebp]
  0197d	c1 ee 07	 shr	 esi, 7
  01980	33 ce		 xor	 ecx, esi
  01982	8b 75 8c	 mov	 esi, DWORD PTR tv2048[ebp+4]
  01985	89 55 fc	 mov	 DWORD PTR tv4732[ebp], edx
  01988	8b 55 88	 mov	 edx, DWORD PTR tv2048[ebp]
  0198b	0f ac f2 13	 shrd	 edx, esi, 19
  0198f	89 4d b8	 mov	 DWORD PTR tv4735[ebp], ecx
  01992	33 c9		 xor	 ecx, ecx
  01994	0b ca		 or	 ecx, edx
  01996	8b 55 8c	 mov	 edx, DWORD PTR tv2048[ebp+4]
  01999	c1 ee 13	 shr	 esi, 19			; 00000013H
  0199c	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  0199f	0b c6		 or	 eax, esi
  019a1	0f a4 fb 03	 shld	 ebx, edi, 3
  019a5	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  019a8	33 f6		 xor	 esi, esi
  019aa	0b f3		 or	 esi, ebx
  019ac	33 c6		 xor	 eax, esi
  019ae	8b 75 8c	 mov	 esi, DWORD PTR tv2048[ebp+4]
  019b1	c1 e7 03	 shl	 edi, 3
  019b4	0b d7		 or	 edx, edi
  019b6	33 ca		 xor	 ecx, edx
  019b8	8b 55 88	 mov	 edx, DWORD PTR tv2048[ebp]
  019bb	0f ac f2 06	 shrd	 edx, esi, 6
  019bf	33 ca		 xor	 ecx, edx
  019c1	8b 55 fc	 mov	 edx, DWORD PTR tv4732[ebp]
  019c4	c1 ee 06	 shr	 esi, 6
  019c7	33 c6		 xor	 eax, esi
  019c9	03 d1		 add	 edx, ecx
  019cb	8b 4d b8	 mov	 ecx, DWORD PTR tv4735[ebp]
  019ce	13 c8		 adc	 ecx, eax
  019d0	03 95 58 ff ff
	ff		 add	 edx, DWORD PTR tv2230[ebp]
  019d6	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  019d9	13 8d 5c ff ff
	ff		 adc	 ecx, DWORD PTR tv2230[ebp+4]
  019df	03 95 68 ff ff
	ff		 add	 edx, DWORD PTR tv2186[ebp]
  019e5	13 8d 6c ff ff
	ff		 adc	 ecx, DWORD PTR tv2186[ebp+4]
  019eb	89 90 a8 00 00
	00		 mov	 DWORD PTR [eax+168], edx
  019f1	89 88 ac 00 00
	00		 mov	 DWORD PTR [eax+172], ecx
  019f7	8b 80 ac 00 00
	00		 mov	 eax, DWORD PTR [eax+172]
  019fd	8b ca		 mov	 ecx, edx
  019ff	89 8d 68 ff ff
	ff		 mov	 DWORD PTR tv2186[ebp], ecx
  01a05	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv2186[ebp+4], eax
  01a0b	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv1248[ebp], ecx
  01a11	eb 12		 jmp	 SHORT $LN52@sha512_com
$LN28@sha512_com:
  01a13	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv2186[ebp]
  01a19	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv1248[ebp], eax
  01a1f	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv2186[ebp+4]
$LN52@sha512_com:
  01a25	8b 75 c8	 mov	 esi, DWORD PTR _v$[ebp+12]
  01a28	8b 4d c8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  01a2b	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  01a2e	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  01a31	89 85 fc fe ff
	ff		 mov	 DWORD PTR tv1248[ebp+4], eax
  01a37	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  01a3a	0f a4 c6 17	 shld	 esi, eax, 23
  01a3e	c1 e0 17	 shl	 eax, 23			; 00000017H
  01a41	0f ac df 12	 shrd	 edi, ebx, 18
  01a45	33 d2		 xor	 edx, edx
  01a47	0b d6		 or	 edx, esi
  01a49	33 f6		 xor	 esi, esi
  01a4b	0b f7		 or	 esi, edi
  01a4d	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  01a50	c1 e9 09	 shr	 ecx, 9
  01a53	0b c8		 or	 ecx, eax
  01a55	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  01a58	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  01a5b	c1 eb 12	 shr	 ebx, 18			; 00000012H
  01a5e	0b c3		 or	 eax, ebx
  01a60	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  01a63	33 d0		 xor	 edx, eax
  01a65	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  01a68	33 ce		 xor	 ecx, esi
  01a6a	0f ac df 0e	 shrd	 edi, ebx, 14
  01a6e	c1 e0 12	 shl	 eax, 18			; 00000012H
  01a71	33 f6		 xor	 esi, esi
  01a73	0b f7		 or	 esi, edi
  01a75	33 ce		 xor	 ecx, esi
  01a77	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  01a7a	33 75 d8	 xor	 esi, DWORD PTR _v$[ebp+28]
  01a7d	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  01a80	23 75 c8	 and	 esi, DWORD PTR _v$[ebp+12]
  01a83	0b c3		 or	 eax, ebx
  01a85	33 75 d8	 xor	 esi, DWORD PTR _v$[ebp+28]
  01a88	33 d0		 xor	 edx, eax
  01a8a	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  01a8d	33 45 d4	 xor	 eax, DWORD PTR _v$[ebp+24]
  01a90	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  01a93	23 45 c4	 and	 eax, DWORD PTR _v$[ebp+8]
  01a96	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  01a99	33 45 d4	 xor	 eax, DWORD PTR _v$[ebp+24]
  01a9c	03 c8		 add	 ecx, eax
  01a9e	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  01aa1	13 d6		 adc	 edx, esi
  01aa3	03 88 58 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+88]
  01aa9	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  01aac	13 90 5c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+92]
  01ab2	03 8d f8 fe ff
	ff		 add	 ecx, DWORD PTR tv1248[ebp]
  01ab8	13 95 fc fe ff
	ff		 adc	 edx, DWORD PTR tv1248[ebp+4]
  01abe	01 4d dc	 add	 DWORD PTR _v$[ebp+32], ecx
  01ac1	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  01ac4	11 55 e0	 adc	 DWORD PTR _v$[ebp+36], edx
  01ac7	01 45 bc	 add	 DWORD PTR _v$[ebp], eax
  01aca	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+36]
  01acd	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+40]
  01ad0	11 45 c0	 adc	 DWORD PTR _v$[ebp+4], eax
  01ad3	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  01ad6	0f ac f2 1c	 shrd	 edx, esi, 28
  01ada	0f a4 fb 1e	 shld	 ebx, edi, 30
  01ade	33 c9		 xor	 ecx, ecx
  01ae0	0b ca		 or	 ecx, edx
  01ae2	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  01ae5	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  01ae8	c1 e0 04	 shl	 eax, 4
  01aeb	0b c6		 or	 eax, esi
  01aed	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  01af0	c1 ea 02	 shr	 edx, 2
  01af3	0b d7		 or	 edx, edi
  01af5	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  01af8	33 f6		 xor	 esi, esi
  01afa	0b f3		 or	 esi, ebx
  01afc	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  01aff	0f a4 fb 19	 shld	 ebx, edi, 25
  01b03	33 ca		 xor	 ecx, edx
  01b05	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  01b08	33 c6		 xor	 eax, esi
  01b0a	c1 ea 07	 shr	 edx, 7
  01b0d	c1 e7 19	 shl	 edi, 25			; 00000019H
  01b10	33 f6		 xor	 esi, esi
  01b12	0b d7		 or	 edx, edi
  01b14	8b 7d e8	 mov	 edi, DWORD PTR _v$[ebp+44]
  01b17	23 7d f0	 and	 edi, DWORD PTR _v$[ebp+52]
  01b1a	33 ca		 xor	 ecx, edx
  01b1c	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  01b1f	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+52]
  01b22	0b f3		 or	 esi, ebx
  01b24	23 55 f8	 and	 edx, DWORD PTR _v$[ebp+60]
  01b27	89 4d fc	 mov	 DWORD PTR tv4729[ebp], ecx
  01b2a	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+40]
  01b2d	33 4d ec	 xor	 ecx, DWORD PTR _v$[ebp+48]
  01b30	33 c6		 xor	 eax, esi
  01b32	23 4d f4	 and	 ecx, DWORD PTR _v$[ebp+56]
  01b35	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+40]
  01b38	23 75 ec	 and	 esi, DWORD PTR _v$[ebp+48]
  01b3b	0b d7		 or	 edx, edi
  01b3d	0b ce		 or	 ecx, esi
  01b3f	8b 75 fc	 mov	 esi, DWORD PTR tv4729[ebp]
  01b42	03 f1		 add	 esi, ecx
  01b44	13 c2		 adc	 eax, edx
  01b46	01 75 dc	 add	 DWORD PTR _v$[ebp+32], esi
  01b49	11 45 e0	 adc	 DWORD PTR _v$[ebp+36], eax

; 525  :         v_cycle(12, j); v_cycle(13, j);

  01b4c	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01b50	0f 84 f4 00 00
	00		 je	 $LN30@sha512_com
  01b56	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv2120[ebp]
  01b5c	8b b5 7c ff ff
	ff		 mov	 esi, DWORD PTR tv2120[ebp+4]
  01b62	8b bd 78 ff ff
	ff		 mov	 edi, DWORD PTR tv2120[ebp]
  01b68	8b 9d 7c ff ff
	ff		 mov	 ebx, DWORD PTR tv2120[ebp+4]
  01b6e	0f ac f2 13	 shrd	 edx, esi, 19
  01b72	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv2120[ebp]
  01b78	c1 ee 13	 shr	 esi, 19			; 00000013H
  01b7b	0f a4 fb 03	 shld	 ebx, edi, 3
  01b7f	33 c9		 xor	 ecx, ecx
  01b81	0b ca		 or	 ecx, edx
  01b83	8b 95 7c ff ff
	ff		 mov	 edx, DWORD PTR tv2120[ebp+4]
  01b89	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  01b8c	0b c6		 or	 eax, esi
  01b8e	33 f6		 xor	 esi, esi
  01b90	0b f3		 or	 esi, ebx
  01b92	33 c6		 xor	 eax, esi
  01b94	8b b5 7c ff ff
	ff		 mov	 esi, DWORD PTR tv2120[ebp+4]
  01b9a	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  01b9d	c1 e7 03	 shl	 edi, 3
  01ba0	0b d7		 or	 edx, edi
  01ba2	33 ca		 xor	 ecx, edx
  01ba4	8b 95 78 ff ff
	ff		 mov	 edx, DWORD PTR tv2120[ebp]
  01baa	0f ac f2 06	 shrd	 edx, esi, 6
  01bae	8b bd 64 ff ff
	ff		 mov	 edi, DWORD PTR tv2317[ebp+4]
  01bb4	8b 9d 64 ff ff
	ff		 mov	 ebx, DWORD PTR tv2317[ebp+4]
  01bba	c1 ee 06	 shr	 esi, 6
  01bbd	33 c6		 xor	 eax, esi
  01bbf	33 ca		 xor	 ecx, edx
  01bc1	89 45 b8	 mov	 DWORD PTR tv4726[ebp], eax
  01bc4	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv2317[ebp]
  01bca	8b f0		 mov	 esi, eax
  01bcc	0f ac fe 08	 shrd	 esi, edi, 8
  01bd0	33 d2		 xor	 edx, edx
  01bd2	0b d6		 or	 edx, esi
  01bd4	89 4d fc	 mov	 DWORD PTR tv4723[ebp], ecx
  01bd7	8b c8		 mov	 ecx, eax
  01bd9	8b f0		 mov	 esi, eax
  01bdb	0f ac d8 01	 shrd	 eax, ebx, 1
  01bdf	c1 e1 18	 shl	 ecx, 24			; 00000018H
  01be2	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  01be5	c1 ef 08	 shr	 edi, 8
  01be8	0b cf		 or	 ecx, edi
  01bea	d1 eb		 shr	 ebx, 1
  01bec	0b f3		 or	 esi, ebx
  01bee	33 ce		 xor	 ecx, esi
  01bf0	8b b5 64 ff ff
	ff		 mov	 esi, DWORD PTR tv2317[ebp+4]
  01bf6	33 ff		 xor	 edi, edi
  01bf8	0b f8		 or	 edi, eax
  01bfa	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv2317[ebp]
  01c00	0f ac f0 07	 shrd	 eax, esi, 7
  01c04	33 d7		 xor	 edx, edi
  01c06	c1 ee 07	 shr	 esi, 7
  01c09	33 d0		 xor	 edx, eax
  01c0b	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01c0e	33 ce		 xor	 ecx, esi
  01c10	8b 75 fc	 mov	 esi, DWORD PTR tv4723[ebp]
  01c13	03 f2		 add	 esi, edx
  01c15	8b 55 b8	 mov	 edx, DWORD PTR tv4726[ebp]
  01c18	13 d1		 adc	 edx, ecx
  01c1a	03 b5 38 ff ff
	ff		 add	 esi, DWORD PTR tv2295[ebp]
  01c20	13 95 3c ff ff
	ff		 adc	 edx, DWORD PTR tv2295[ebp+4]
  01c26	03 75 90	 add	 esi, DWORD PTR tv2252[ebp]
  01c29	13 55 94	 adc	 edx, DWORD PTR tv2252[ebp+4]
  01c2c	89 b0 b0 00 00
	00		 mov	 DWORD PTR [eax+176], esi
  01c32	89 90 b4 00 00
	00		 mov	 DWORD PTR [eax+180], edx
  01c38	8b ce		 mov	 ecx, esi
  01c3a	8b c2		 mov	 eax, edx
  01c3c	89 4d 90	 mov	 DWORD PTR tv2252[ebp], ecx
  01c3f	89 45 94	 mov	 DWORD PTR tv2252[ebp+4], eax
  01c42	89 8d e8 fe ff
	ff		 mov	 DWORD PTR tv1351[ebp], ecx
  01c48	eb 0c		 jmp	 SHORT $LN53@sha512_com
$LN30@sha512_com:
  01c4a	8b 45 90	 mov	 eax, DWORD PTR tv2252[ebp]
  01c4d	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv1351[ebp], eax
  01c53	8b 45 94	 mov	 eax, DWORD PTR tv2252[ebp+4]
$LN53@sha512_com:
  01c56	8b 75 c0	 mov	 esi, DWORD PTR _v$[ebp+4]
  01c59	8b 4d c0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  01c5c	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  01c5f	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  01c62	89 85 ec fe ff
	ff		 mov	 DWORD PTR tv1351[ebp+4], eax
  01c68	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  01c6b	0f a4 c6 17	 shld	 esi, eax, 23
  01c6f	c1 e0 17	 shl	 eax, 23			; 00000017H
  01c72	0f ac df 12	 shrd	 edi, ebx, 18
  01c76	33 d2		 xor	 edx, edx
  01c78	0b d6		 or	 edx, esi
  01c7a	33 f6		 xor	 esi, esi
  01c7c	0b f7		 or	 esi, edi
  01c7e	8b 7d bc	 mov	 edi, DWORD PTR _v$[ebp]
  01c81	c1 e9 09	 shr	 ecx, 9
  01c84	0b c8		 or	 ecx, eax
  01c86	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  01c89	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  01c8c	c1 eb 12	 shr	 ebx, 18			; 00000012H
  01c8f	0b c3		 or	 eax, ebx
  01c91	8b 5d c0	 mov	 ebx, DWORD PTR _v$[ebp+4]
  01c94	33 d0		 xor	 edx, eax
  01c96	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  01c99	33 ce		 xor	 ecx, esi
  01c9b	0f ac df 0e	 shrd	 edi, ebx, 14
  01c9f	c1 e0 12	 shl	 eax, 18			; 00000012H
  01ca2	33 f6		 xor	 esi, esi
  01ca4	0b f7		 or	 esi, edi
  01ca6	33 ce		 xor	 ecx, esi
  01ca8	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  01cab	33 75 c8	 xor	 esi, DWORD PTR _v$[ebp+12]
  01cae	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  01cb1	23 75 c0	 and	 esi, DWORD PTR _v$[ebp+4]
  01cb4	0b c3		 or	 eax, ebx
  01cb6	33 75 d0	 xor	 esi, DWORD PTR _v$[ebp+20]
  01cb9	33 d0		 xor	 edx, eax
  01cbb	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  01cbe	33 45 c4	 xor	 eax, DWORD PTR _v$[ebp+8]
  01cc1	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  01cc4	23 45 bc	 and	 eax, DWORD PTR _v$[ebp]
  01cc7	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  01cca	33 45 cc	 xor	 eax, DWORD PTR _v$[ebp+16]
  01ccd	03 c8		 add	 ecx, eax
  01ccf	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  01cd2	13 d6		 adc	 edx, esi
  01cd4	03 88 60 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+96]
  01cda	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+36]
  01cdd	13 90 64 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+100]
  01ce3	03 8d e8 fe ff
	ff		 add	 ecx, DWORD PTR tv1351[ebp]
  01ce9	13 95 ec fe ff
	ff		 adc	 edx, DWORD PTR tv1351[ebp+4]
  01cef	01 4d d4	 add	 DWORD PTR _v$[ebp+24], ecx
  01cf2	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  01cf5	11 55 d8	 adc	 DWORD PTR _v$[ebp+28], edx
  01cf8	01 45 f4	 add	 DWORD PTR _v$[ebp+56], eax
  01cfb	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+28]
  01cfe	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+32]
  01d01	11 45 f8	 adc	 DWORD PTR _v$[ebp+60], eax
  01d04	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+32]
  01d07	0f ac f2 1c	 shrd	 edx, esi, 28
  01d0b	0f a4 fb 1e	 shld	 ebx, edi, 30
  01d0f	33 c9		 xor	 ecx, ecx
  01d11	0b ca		 or	 ecx, edx
  01d13	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+36]
  01d16	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  01d19	c1 e0 04	 shl	 eax, 4
  01d1c	0b c6		 or	 eax, esi
  01d1e	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  01d21	c1 ea 02	 shr	 edx, 2
  01d24	0b d7		 or	 edx, edi
  01d26	8b 7d dc	 mov	 edi, DWORD PTR _v$[ebp+32]
  01d29	33 f6		 xor	 esi, esi
  01d2b	0b f3		 or	 esi, ebx
  01d2d	8b 5d e0	 mov	 ebx, DWORD PTR _v$[ebp+36]
  01d30	0f a4 fb 19	 shld	 ebx, edi, 25
  01d34	33 ca		 xor	 ecx, edx
  01d36	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+36]
  01d39	33 c6		 xor	 eax, esi
  01d3b	c1 ea 07	 shr	 edx, 7
  01d3e	c1 e7 19	 shl	 edi, 25			; 00000019H
  01d41	33 f6		 xor	 esi, esi
  01d43	0b d7		 or	 edx, edi
  01d45	8b 7d e8	 mov	 edi, DWORD PTR _v$[ebp+44]
  01d48	23 7d e0	 and	 edi, DWORD PTR _v$[ebp+36]
  01d4b	33 ca		 xor	 ecx, edx
  01d4d	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+44]
  01d50	33 55 e0	 xor	 edx, DWORD PTR _v$[ebp+36]
  01d53	0b f3		 or	 esi, ebx
  01d55	23 55 f0	 and	 edx, DWORD PTR _v$[ebp+52]
  01d58	89 4d fc	 mov	 DWORD PTR tv4720[ebp], ecx
  01d5b	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+40]
  01d5e	33 4d dc	 xor	 ecx, DWORD PTR _v$[ebp+32]
  01d61	33 c6		 xor	 eax, esi
  01d63	23 4d ec	 and	 ecx, DWORD PTR _v$[ebp+48]
  01d66	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+40]
  01d69	23 75 dc	 and	 esi, DWORD PTR _v$[ebp+32]
  01d6c	0b d7		 or	 edx, edi
  01d6e	0b ce		 or	 ecx, esi
  01d70	8b 75 fc	 mov	 esi, DWORD PTR tv4720[ebp]
  01d73	03 f1		 add	 esi, ecx
  01d75	13 c2		 adc	 eax, edx
  01d77	01 75 d4	 add	 DWORD PTR _v$[ebp+24], esi
  01d7a	11 45 d8	 adc	 DWORD PTR _v$[ebp+28], eax
  01d7d	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01d81	0f 84 fa 00 00
	00		 je	 $LN32@sha512_com
  01d87	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR tv2186[ebp]
  01d8d	8b b5 6c ff ff
	ff		 mov	 esi, DWORD PTR tv2186[ebp+4]
  01d93	8b bd 68 ff ff
	ff		 mov	 edi, DWORD PTR tv2186[ebp]
  01d99	8b 9d 6c ff ff
	ff		 mov	 ebx, DWORD PTR tv2186[ebp+4]
  01d9f	0f ac f2 13	 shrd	 edx, esi, 19
  01da3	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv2186[ebp]
  01da9	c1 ee 13	 shr	 esi, 19			; 00000013H
  01dac	0f a4 fb 03	 shld	 ebx, edi, 3
  01db0	33 c9		 xor	 ecx, ecx
  01db2	0b ca		 or	 ecx, edx
  01db4	8b 95 6c ff ff
	ff		 mov	 edx, DWORD PTR tv2186[ebp+4]
  01dba	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  01dbd	0b c6		 or	 eax, esi
  01dbf	33 f6		 xor	 esi, esi
  01dc1	0b f3		 or	 esi, ebx
  01dc3	33 c6		 xor	 eax, esi
  01dc5	8b b5 6c ff ff
	ff		 mov	 esi, DWORD PTR tv2186[ebp+4]
  01dcb	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  01dce	c1 e7 03	 shl	 edi, 3
  01dd1	0b d7		 or	 edx, edi
  01dd3	33 ca		 xor	 ecx, edx
  01dd5	8b 95 68 ff ff
	ff		 mov	 edx, DWORD PTR tv2186[ebp]
  01ddb	0f ac f2 06	 shrd	 edx, esi, 6
  01ddf	8b bd 74 ff ff
	ff		 mov	 edi, DWORD PTR tv2023[ebp+4]
  01de5	8b 9d 74 ff ff
	ff		 mov	 ebx, DWORD PTR tv2023[ebp+4]
  01deb	c1 ee 06	 shr	 esi, 6
  01dee	33 c6		 xor	 eax, esi
  01df0	33 ca		 xor	 ecx, edx
  01df2	89 45 b8	 mov	 DWORD PTR tv4717[ebp], eax
  01df5	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv2023[ebp]
  01dfb	8b f0		 mov	 esi, eax
  01dfd	0f ac fe 08	 shrd	 esi, edi, 8
  01e01	33 d2		 xor	 edx, edx
  01e03	0b d6		 or	 edx, esi
  01e05	89 4d fc	 mov	 DWORD PTR tv4714[ebp], ecx
  01e08	8b c8		 mov	 ecx, eax
  01e0a	8b f0		 mov	 esi, eax
  01e0c	0f ac d8 01	 shrd	 eax, ebx, 1
  01e10	c1 e1 18	 shl	 ecx, 24			; 00000018H
  01e13	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  01e16	c1 ef 08	 shr	 edi, 8
  01e19	0b cf		 or	 ecx, edi
  01e1b	d1 eb		 shr	 ebx, 1
  01e1d	0b f3		 or	 esi, ebx
  01e1f	33 ce		 xor	 ecx, esi
  01e21	8b b5 74 ff ff
	ff		 mov	 esi, DWORD PTR tv2023[ebp+4]
  01e27	33 ff		 xor	 edi, edi
  01e29	0b f8		 or	 edi, eax
  01e2b	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv2023[ebp]
  01e31	0f ac f0 07	 shrd	 eax, esi, 7
  01e35	33 d7		 xor	 edx, edi
  01e37	c1 ee 07	 shr	 esi, 7
  01e3a	33 d0		 xor	 edx, eax
  01e3c	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01e3f	33 ce		 xor	 ecx, esi
  01e41	8b 75 fc	 mov	 esi, DWORD PTR tv4714[ebp]
  01e44	03 f2		 add	 esi, edx
  01e46	8b 55 b8	 mov	 edx, DWORD PTR tv4717[ebp]
  01e49	13 d1		 adc	 edx, ecx
  01e4b	03 75 a0	 add	 esi, DWORD PTR tv2359[ebp]
  01e4e	13 55 a4	 adc	 edx, DWORD PTR tv2359[ebp+4]
  01e51	03 b5 60 ff ff
	ff		 add	 esi, DWORD PTR tv2317[ebp]
  01e57	13 95 64 ff ff
	ff		 adc	 edx, DWORD PTR tv2317[ebp+4]
  01e5d	89 b0 b8 00 00
	00		 mov	 DWORD PTR [eax+184], esi
  01e63	89 90 bc 00 00
	00		 mov	 DWORD PTR [eax+188], edx
  01e69	8b ce		 mov	 ecx, esi
  01e6b	8b c2		 mov	 eax, edx
  01e6d	89 8d 60 ff ff
	ff		 mov	 DWORD PTR tv2317[ebp], ecx
  01e73	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv2317[ebp+4], eax
  01e79	89 8d d8 fe ff
	ff		 mov	 DWORD PTR tv1449[ebp], ecx
  01e7f	eb 12		 jmp	 SHORT $LN54@sha512_com
$LN32@sha512_com:
  01e81	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv2317[ebp]
  01e87	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv1449[ebp], eax
  01e8d	8b 85 64 ff ff
	ff		 mov	 eax, DWORD PTR tv2317[ebp+4]
$LN54@sha512_com:
  01e93	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+60]
  01e96	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+60]
  01e99	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  01e9c	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  01e9f	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv1449[ebp+4], eax
  01ea5	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  01ea8	0f a4 c6 17	 shld	 esi, eax, 23
  01eac	c1 e0 17	 shl	 eax, 23			; 00000017H
  01eaf	0f ac df 12	 shrd	 edi, ebx, 18
  01eb3	33 d2		 xor	 edx, edx
  01eb5	0b d6		 or	 edx, esi
  01eb7	33 f6		 xor	 esi, esi
  01eb9	0b f7		 or	 esi, edi
  01ebb	8b 7d f4	 mov	 edi, DWORD PTR _v$[ebp+56]
  01ebe	c1 e9 09	 shr	 ecx, 9
  01ec1	0b c8		 or	 ecx, eax
  01ec3	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  01ec6	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  01ec9	c1 eb 12	 shr	 ebx, 18			; 00000012H
  01ecc	0b c3		 or	 eax, ebx
  01ece	8b 5d f8	 mov	 ebx, DWORD PTR _v$[ebp+60]
  01ed1	33 d0		 xor	 edx, eax
  01ed3	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  01ed6	33 ce		 xor	 ecx, esi
  01ed8	0f ac df 0e	 shrd	 edi, ebx, 14
  01edc	c1 e0 12	 shl	 eax, 18			; 00000012H
  01edf	33 f6		 xor	 esi, esi
  01ee1	0b f7		 or	 esi, edi
  01ee3	33 ce		 xor	 ecx, esi
  01ee5	8b 75 c8	 mov	 esi, DWORD PTR _v$[ebp+12]
  01ee8	33 75 c0	 xor	 esi, DWORD PTR _v$[ebp+4]
  01eeb	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  01eee	23 75 f8	 and	 esi, DWORD PTR _v$[ebp+60]
  01ef1	0b c3		 or	 eax, ebx
  01ef3	33 75 c8	 xor	 esi, DWORD PTR _v$[ebp+12]
  01ef6	33 d0		 xor	 edx, eax
  01ef8	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  01efb	33 45 bc	 xor	 eax, DWORD PTR _v$[ebp]
  01efe	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  01f01	23 45 f4	 and	 eax, DWORD PTR _v$[ebp+56]
  01f04	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  01f07	33 45 c4	 xor	 eax, DWORD PTR _v$[ebp+8]
  01f0a	03 c8		 add	 ecx, eax
  01f0c	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  01f0f	13 d6		 adc	 edx, esi
  01f11	03 88 68 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+104]
  01f17	8b 75 d8	 mov	 esi, DWORD PTR _v$[ebp+28]
  01f1a	13 90 6c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+108]
  01f20	03 8d d8 fe ff
	ff		 add	 ecx, DWORD PTR tv1449[ebp]
  01f26	13 95 dc fe ff
	ff		 adc	 edx, DWORD PTR tv1449[ebp+4]
  01f2c	01 4d cc	 add	 DWORD PTR _v$[ebp+16], ecx
  01f2f	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  01f32	11 55 d0	 adc	 DWORD PTR _v$[ebp+20], edx
  01f35	01 45 ec	 add	 DWORD PTR _v$[ebp+48], eax
  01f38	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+20]
  01f3b	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+24]
  01f3e	11 45 f0	 adc	 DWORD PTR _v$[ebp+52], eax
  01f41	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+24]
  01f44	0f ac f2 1c	 shrd	 edx, esi, 28
  01f48	0f a4 fb 1e	 shld	 ebx, edi, 30
  01f4c	33 c9		 xor	 ecx, ecx
  01f4e	0b ca		 or	 ecx, edx
  01f50	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+28]
  01f53	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  01f56	c1 e0 04	 shl	 eax, 4
  01f59	0b c6		 or	 eax, esi
  01f5b	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  01f5e	c1 ea 02	 shr	 edx, 2
  01f61	0b d7		 or	 edx, edi
  01f63	8b 7d d4	 mov	 edi, DWORD PTR _v$[ebp+24]
  01f66	33 f6		 xor	 esi, esi
  01f68	0b f3		 or	 esi, ebx
  01f6a	8b 5d d8	 mov	 ebx, DWORD PTR _v$[ebp+28]
  01f6d	0f a4 fb 19	 shld	 ebx, edi, 25
  01f71	33 ca		 xor	 ecx, edx
  01f73	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+28]
  01f76	33 c6		 xor	 eax, esi
  01f78	c1 ea 07	 shr	 edx, 7
  01f7b	c1 e7 19	 shl	 edi, 25			; 00000019H
  01f7e	33 f6		 xor	 esi, esi
  01f80	0b d7		 or	 edx, edi
  01f82	8b 7d d8	 mov	 edi, DWORD PTR _v$[ebp+28]
  01f85	23 7d e0	 and	 edi, DWORD PTR _v$[ebp+36]
  01f88	33 ca		 xor	 ecx, edx
  01f8a	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+28]
  01f8d	33 55 e0	 xor	 edx, DWORD PTR _v$[ebp+36]
  01f90	0b f3		 or	 esi, ebx
  01f92	23 55 e8	 and	 edx, DWORD PTR _v$[ebp+44]
  01f95	89 4d fc	 mov	 DWORD PTR tv4711[ebp], ecx
  01f98	8b 4d d4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  01f9b	33 4d dc	 xor	 ecx, DWORD PTR _v$[ebp+32]
  01f9e	33 c6		 xor	 eax, esi
  01fa0	23 4d e4	 and	 ecx, DWORD PTR _v$[ebp+40]
  01fa3	8b 75 d4	 mov	 esi, DWORD PTR _v$[ebp+24]
  01fa6	23 75 dc	 and	 esi, DWORD PTR _v$[ebp+32]
  01fa9	0b d7		 or	 edx, edi
  01fab	0b ce		 or	 ecx, esi
  01fad	8b 75 fc	 mov	 esi, DWORD PTR tv4711[ebp]
  01fb0	03 f1		 add	 esi, ecx
  01fb2	13 c2		 adc	 eax, edx
  01fb4	01 75 cc	 add	 DWORD PTR _v$[ebp+16], esi
  01fb7	11 45 d0	 adc	 DWORD PTR _v$[ebp+20], eax

; 526  :         v_cycle(14, j); v_cycle(15, j);

  01fba	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01fbe	0f 84 e6 00 00
	00		 je	 $LN34@sha512_com
  01fc4	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv2095[ebp]
  01fca	8b bd 44 ff ff
	ff		 mov	 edi, DWORD PTR tv2095[ebp+4]
  01fd0	8b 9d 44 ff ff
	ff		 mov	 ebx, DWORD PTR tv2095[ebp+4]
  01fd6	8b f0		 mov	 esi, eax
  01fd8	0f ac fe 08	 shrd	 esi, edi, 8
  01fdc	33 d2		 xor	 edx, edx
  01fde	0b d6		 or	 edx, esi
  01fe0	8b c8		 mov	 ecx, eax
  01fe2	8b f0		 mov	 esi, eax
  01fe4	0f ac d8 01	 shrd	 eax, ebx, 1
  01fe8	c1 e1 18	 shl	 ecx, 24			; 00000018H
  01feb	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  01fee	c1 ef 08	 shr	 edi, 8
  01ff1	0b cf		 or	 ecx, edi
  01ff3	d1 eb		 shr	 ebx, 1
  01ff5	0b f3		 or	 esi, ebx
  01ff7	33 ce		 xor	 ecx, esi
  01ff9	8b b5 44 ff ff
	ff		 mov	 esi, DWORD PTR tv2095[ebp+4]
  01fff	8b 5d 94	 mov	 ebx, DWORD PTR tv2252[ebp+4]
  02002	33 ff		 xor	 edi, edi
  02004	0b f8		 or	 edi, eax
  02006	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv2095[ebp]
  0200c	0f ac f0 07	 shrd	 eax, esi, 7
  02010	33 d7		 xor	 edx, edi
  02012	8b 7d 90	 mov	 edi, DWORD PTR tv2252[ebp]
  02015	33 d0		 xor	 edx, eax
  02017	8b 45 90	 mov	 eax, DWORD PTR tv2252[ebp]
  0201a	c1 ee 07	 shr	 esi, 7
  0201d	33 ce		 xor	 ecx, esi
  0201f	8b 75 94	 mov	 esi, DWORD PTR tv2252[ebp+4]
  02022	89 55 fc	 mov	 DWORD PTR tv4705[ebp], edx
  02025	8b 55 90	 mov	 edx, DWORD PTR tv2252[ebp]
  02028	0f ac f2 13	 shrd	 edx, esi, 19
  0202c	89 4d b8	 mov	 DWORD PTR tv4708[ebp], ecx
  0202f	33 c9		 xor	 ecx, ecx
  02031	0b ca		 or	 ecx, edx
  02033	8b 55 94	 mov	 edx, DWORD PTR tv2252[ebp+4]
  02036	c1 ee 13	 shr	 esi, 19			; 00000013H
  02039	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  0203c	0b c6		 or	 eax, esi
  0203e	0f a4 fb 03	 shld	 ebx, edi, 3
  02042	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  02045	33 f6		 xor	 esi, esi
  02047	0b f3		 or	 esi, ebx
  02049	33 c6		 xor	 eax, esi
  0204b	8b 75 94	 mov	 esi, DWORD PTR tv2252[ebp+4]
  0204e	c1 e7 03	 shl	 edi, 3
  02051	0b d7		 or	 edx, edi
  02053	33 ca		 xor	 ecx, edx
  02055	8b 55 90	 mov	 edx, DWORD PTR tv2252[ebp]
  02058	0f ac f2 06	 shrd	 edx, esi, 6
  0205c	33 ca		 xor	 ecx, edx
  0205e	8b 55 fc	 mov	 edx, DWORD PTR tv4705[ebp]
  02061	c1 ee 06	 shr	 esi, 6
  02064	33 c6		 xor	 eax, esi
  02066	03 d1		 add	 edx, ecx
  02068	8b 4d b8	 mov	 ecx, DWORD PTR tv4708[ebp]
  0206b	13 c8		 adc	 ecx, eax
  0206d	03 95 70 ff ff
	ff		 add	 edx, DWORD PTR tv2023[ebp]
  02073	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  02076	13 8d 74 ff ff
	ff		 adc	 ecx, DWORD PTR tv2023[ebp+4]
  0207c	03 55 80	 add	 edx, DWORD PTR tv2419[ebp]
  0207f	13 4d 84	 adc	 ecx, DWORD PTR tv2419[ebp+4]
  02082	89 90 c0 00 00
	00		 mov	 DWORD PTR [eax+192], edx
  02088	89 88 c4 00 00
	00		 mov	 DWORD PTR [eax+196], ecx
  0208e	8b 80 c4 00 00
	00		 mov	 eax, DWORD PTR [eax+196]
  02094	8b ca		 mov	 ecx, edx
  02096	89 8d 70 ff ff
	ff		 mov	 DWORD PTR tv2023[ebp], ecx
  0209c	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv2023[ebp+4], eax
  020a2	89 8d c8 fe ff
	ff		 mov	 DWORD PTR tv1553[ebp], ecx
  020a8	eb 12		 jmp	 SHORT $LN55@sha512_com
$LN34@sha512_com:
  020aa	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv2023[ebp]
  020b0	89 85 c8 fe ff
	ff		 mov	 DWORD PTR tv1553[ebp], eax
  020b6	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv2023[ebp+4]
$LN55@sha512_com:
  020bc	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+52]
  020bf	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+52]
  020c2	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  020c5	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  020c8	89 85 cc fe ff
	ff		 mov	 DWORD PTR tv1553[ebp+4], eax
  020ce	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  020d1	0f a4 c6 17	 shld	 esi, eax, 23
  020d5	c1 e0 17	 shl	 eax, 23			; 00000017H
  020d8	0f ac df 12	 shrd	 edi, ebx, 18
  020dc	33 d2		 xor	 edx, edx
  020de	0b d6		 or	 edx, esi
  020e0	33 f6		 xor	 esi, esi
  020e2	0b f7		 or	 esi, edi
  020e4	8b 7d ec	 mov	 edi, DWORD PTR _v$[ebp+48]
  020e7	c1 e9 09	 shr	 ecx, 9
  020ea	0b c8		 or	 ecx, eax
  020ec	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  020ef	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  020f2	c1 eb 12	 shr	 ebx, 18			; 00000012H
  020f5	0b c3		 or	 eax, ebx
  020f7	8b 5d f0	 mov	 ebx, DWORD PTR _v$[ebp+52]
  020fa	33 d0		 xor	 edx, eax
  020fc	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+48]
  020ff	33 ce		 xor	 ecx, esi
  02101	0f ac df 0e	 shrd	 edi, ebx, 14
  02105	c1 e0 12	 shl	 eax, 18			; 00000012H
  02108	33 f6		 xor	 esi, esi
  0210a	0b f7		 or	 esi, edi
  0210c	33 ce		 xor	 ecx, esi
  0210e	8b 75 c0	 mov	 esi, DWORD PTR _v$[ebp+4]
  02111	33 75 f8	 xor	 esi, DWORD PTR _v$[ebp+60]
  02114	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  02117	23 75 f0	 and	 esi, DWORD PTR _v$[ebp+52]
  0211a	0b c3		 or	 eax, ebx
  0211c	33 75 c0	 xor	 esi, DWORD PTR _v$[ebp+4]
  0211f	33 d0		 xor	 edx, eax
  02121	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  02124	33 45 f4	 xor	 eax, DWORD PTR _v$[ebp+56]
  02127	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  0212a	23 45 ec	 and	 eax, DWORD PTR _v$[ebp+48]
  0212d	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  02130	33 45 bc	 xor	 eax, DWORD PTR _v$[ebp]
  02133	03 c8		 add	 ecx, eax
  02135	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  02138	13 d6		 adc	 edx, esi
  0213a	03 88 70 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+112]
  02140	8b 75 d0	 mov	 esi, DWORD PTR _v$[ebp+20]
  02143	13 90 74 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+116]
  02149	03 8d c8 fe ff
	ff		 add	 ecx, DWORD PTR tv1553[ebp]
  0214f	13 95 cc fe ff
	ff		 adc	 edx, DWORD PTR tv1553[ebp+4]
  02155	01 4d c4	 add	 DWORD PTR _v$[ebp+8], ecx
  02158	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  0215b	11 55 c8	 adc	 DWORD PTR _v$[ebp+12], edx
  0215e	01 45 e4	 add	 DWORD PTR _v$[ebp+40], eax
  02161	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+12]
  02164	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+16]
  02167	11 45 e8	 adc	 DWORD PTR _v$[ebp+44], eax
  0216a	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+16]
  0216d	0f ac f2 1c	 shrd	 edx, esi, 28
  02171	0f a4 fb 1e	 shld	 ebx, edi, 30
  02175	33 c9		 xor	 ecx, ecx
  02177	0b ca		 or	 ecx, edx
  02179	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0217c	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  0217f	c1 e0 04	 shl	 eax, 4
  02182	0b c6		 or	 eax, esi
  02184	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  02187	c1 ea 02	 shr	 edx, 2
  0218a	0b d7		 or	 edx, edi
  0218c	8b 7d cc	 mov	 edi, DWORD PTR _v$[ebp+16]
  0218f	33 f6		 xor	 esi, esi
  02191	0b f3		 or	 esi, ebx
  02193	8b 5d d0	 mov	 ebx, DWORD PTR _v$[ebp+20]
  02196	0f a4 fb 19	 shld	 ebx, edi, 25
  0219a	33 ca		 xor	 ecx, edx
  0219c	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0219f	33 c6		 xor	 eax, esi
  021a1	c1 ea 07	 shr	 edx, 7
  021a4	c1 e7 19	 shl	 edi, 25			; 00000019H
  021a7	33 f6		 xor	 esi, esi
  021a9	0b d7		 or	 edx, edi
  021ab	8b 7d d0	 mov	 edi, DWORD PTR _v$[ebp+20]
  021ae	23 7d d8	 and	 edi, DWORD PTR _v$[ebp+28]
  021b1	33 ca		 xor	 ecx, edx
  021b3	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  021b6	33 55 d8	 xor	 edx, DWORD PTR _v$[ebp+28]
  021b9	0b f3		 or	 esi, ebx
  021bb	23 55 e0	 and	 edx, DWORD PTR _v$[ebp+36]
  021be	89 4d fc	 mov	 DWORD PTR tv4702[ebp], ecx
  021c1	8b 4d cc	 mov	 ecx, DWORD PTR _v$[ebp+16]
  021c4	33 4d d4	 xor	 ecx, DWORD PTR _v$[ebp+24]
  021c7	33 c6		 xor	 eax, esi
  021c9	23 4d dc	 and	 ecx, DWORD PTR _v$[ebp+32]
  021cc	8b 75 cc	 mov	 esi, DWORD PTR _v$[ebp+16]
  021cf	23 75 d4	 and	 esi, DWORD PTR _v$[ebp+24]
  021d2	0b d7		 or	 edx, edi
  021d4	0b ce		 or	 ecx, esi
  021d6	8b 75 fc	 mov	 esi, DWORD PTR tv4702[ebp]
  021d9	03 f1		 add	 esi, ecx
  021db	13 c2		 adc	 eax, edx
  021dd	01 75 c4	 add	 DWORD PTR _v$[ebp+8], esi
  021e0	11 45 c8	 adc	 DWORD PTR _v$[ebp+12], eax
  021e3	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  021e7	0f 84 f1 00 00
	00		 je	 $LN36@sha512_com
  021ed	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv2317[ebp]
  021f3	8b b5 64 ff ff
	ff		 mov	 esi, DWORD PTR tv2317[ebp+4]
  021f9	8b bd 60 ff ff
	ff		 mov	 edi, DWORD PTR tv2317[ebp]
  021ff	8b 9d 64 ff ff
	ff		 mov	 ebx, DWORD PTR tv2317[ebp+4]
  02205	0f ac f2 13	 shrd	 edx, esi, 19
  02209	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR tv2317[ebp]
  0220f	c1 ee 13	 shr	 esi, 19			; 00000013H
  02212	0f a4 fb 03	 shld	 ebx, edi, 3
  02216	33 c9		 xor	 ecx, ecx
  02218	0b ca		 or	 ecx, edx
  0221a	8b 95 64 ff ff
	ff		 mov	 edx, DWORD PTR tv2317[ebp+4]
  02220	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  02223	0b c6		 or	 eax, esi
  02225	33 f6		 xor	 esi, esi
  02227	0b f3		 or	 esi, ebx
  02229	33 c6		 xor	 eax, esi
  0222b	8b b5 64 ff ff
	ff		 mov	 esi, DWORD PTR tv2317[ebp+4]
  02231	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  02234	c1 e7 03	 shl	 edi, 3
  02237	0b d7		 or	 edx, edi
  02239	33 ca		 xor	 ecx, edx
  0223b	8b 95 60 ff ff
	ff		 mov	 edx, DWORD PTR tv2317[ebp]
  02241	0f ac f2 06	 shrd	 edx, esi, 6
  02245	8b 7d ac	 mov	 edi, DWORD PTR tv2051[ebp+4]
  02248	8b 5d ac	 mov	 ebx, DWORD PTR tv2051[ebp+4]
  0224b	c1 ee 06	 shr	 esi, 6
  0224e	33 c6		 xor	 eax, esi
  02250	33 ca		 xor	 ecx, edx
  02252	89 45 b8	 mov	 DWORD PTR tv4699[ebp], eax
  02255	8b 45 a8	 mov	 eax, DWORD PTR tv2051[ebp]
  02258	8b f0		 mov	 esi, eax
  0225a	0f ac fe 08	 shrd	 esi, edi, 8
  0225e	33 d2		 xor	 edx, edx
  02260	0b d6		 or	 edx, esi
  02262	89 4d fc	 mov	 DWORD PTR tv4696[ebp], ecx
  02265	8b c8		 mov	 ecx, eax
  02267	8b f0		 mov	 esi, eax
  02269	0f ac d8 01	 shrd	 eax, ebx, 1
  0226d	c1 e1 18	 shl	 ecx, 24			; 00000018H
  02270	c1 e6 1f	 shl	 esi, 31			; 0000001fH
  02273	c1 ef 08	 shr	 edi, 8
  02276	0b cf		 or	 ecx, edi
  02278	d1 eb		 shr	 ebx, 1
  0227a	0b f3		 or	 esi, ebx
  0227c	33 ce		 xor	 ecx, esi
  0227e	8b 75 ac	 mov	 esi, DWORD PTR tv2051[ebp+4]
  02281	33 ff		 xor	 edi, edi
  02283	0b f8		 or	 edi, eax
  02285	8b 45 a8	 mov	 eax, DWORD PTR tv2051[ebp]
  02288	0f ac f0 07	 shrd	 eax, esi, 7
  0228c	33 d7		 xor	 edx, edi
  0228e	c1 ee 07	 shr	 esi, 7
  02291	33 d0		 xor	 edx, eax
  02293	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  02296	33 ce		 xor	 ecx, esi
  02298	8b 75 fc	 mov	 esi, DWORD PTR tv4696[ebp]
  0229b	03 f2		 add	 esi, edx
  0229d	8b 55 b8	 mov	 edx, DWORD PTR tv4699[ebp]
  022a0	13 d1		 adc	 edx, ecx
  022a2	03 b5 50 ff ff
	ff		 add	 esi, DWORD PTR tv2479[ebp]
  022a8	13 95 54 ff ff
	ff		 adc	 edx, DWORD PTR tv2479[ebp+4]
  022ae	03 b5 40 ff ff
	ff		 add	 esi, DWORD PTR tv2095[ebp]
  022b4	13 95 44 ff ff
	ff		 adc	 edx, DWORD PTR tv2095[ebp+4]
  022ba	89 b0 c8 00 00
	00		 mov	 DWORD PTR [eax+200], esi
  022c0	89 90 cc 00 00
	00		 mov	 DWORD PTR [eax+204], edx
  022c6	8b ce		 mov	 ecx, esi
  022c8	8b c2		 mov	 eax, edx
  022ca	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv2095[ebp], ecx
  022d0	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv2095[ebp+4], eax
  022d6	89 8d b8 fe ff
	ff		 mov	 DWORD PTR tv1650[ebp], ecx
  022dc	eb 12		 jmp	 SHORT $LN56@sha512_com
$LN36@sha512_com:
  022de	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv2095[ebp]
  022e4	89 85 b8 fe ff
	ff		 mov	 DWORD PTR tv1650[ebp], eax
  022ea	8b 85 44 ff ff
	ff		 mov	 eax, DWORD PTR tv2095[ebp+4]
$LN56@sha512_com:
  022f0	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+44]
  022f3	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+44]
  022f6	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  022f9	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  022fc	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv1650[ebp+4], eax
  02302	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  02305	0f a4 c6 17	 shld	 esi, eax, 23
  02309	c1 e0 17	 shl	 eax, 23			; 00000017H
  0230c	0f ac df 12	 shrd	 edi, ebx, 18
  02310	33 d2		 xor	 edx, edx
  02312	0b d6		 or	 edx, esi
  02314	33 f6		 xor	 esi, esi
  02316	0b f7		 or	 esi, edi
  02318	8b 7d e4	 mov	 edi, DWORD PTR _v$[ebp+40]
  0231b	c1 e9 09	 shr	 ecx, 9
  0231e	0b c8		 or	 ecx, eax
  02320	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  02323	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  02326	c1 eb 12	 shr	 ebx, 18			; 00000012H
  02329	0b c3		 or	 eax, ebx
  0232b	8b 5d e8	 mov	 ebx, DWORD PTR _v$[ebp+44]
  0232e	33 d0		 xor	 edx, eax
  02330	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+40]
  02333	33 ce		 xor	 ecx, esi
  02335	0f ac df 0e	 shrd	 edi, ebx, 14
  02339	c1 e0 12	 shl	 eax, 18			; 00000012H
  0233c	33 f6		 xor	 esi, esi
  0233e	0b f7		 or	 esi, edi
  02340	33 ce		 xor	 ecx, esi
  02342	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+60]
  02345	33 75 f0	 xor	 esi, DWORD PTR _v$[ebp+52]
  02348	c1 eb 0e	 shr	 ebx, 14			; 0000000eH
  0234b	23 75 e8	 and	 esi, DWORD PTR _v$[ebp+44]
  0234e	0b c3		 or	 eax, ebx
  02350	33 75 f8	 xor	 esi, DWORD PTR _v$[ebp+60]
  02353	33 d0		 xor	 edx, eax
  02355	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+56]
  02358	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+48]
  0235b	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  0235e	23 45 e4	 and	 eax, DWORD PTR _v$[ebp+40]
  02361	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  02364	33 45 f4	 xor	 eax, DWORD PTR _v$[ebp+56]
  02367	03 c8		 add	 ecx, eax
  02369	8b 45 b0	 mov	 eax, DWORD PTR tv2068[ebp]
  0236c	13 d6		 adc	 edx, esi
  0236e	03 88 78 00 00
	00		 add	 ecx, DWORD PTR _k512[eax+120]
  02374	8b 75 c8	 mov	 esi, DWORD PTR _v$[ebp+12]
  02377	13 90 7c 00 00
	00		 adc	 edx, DWORD PTR _k512[eax+124]
  0237d	03 8d b8 fe ff
	ff		 add	 ecx, DWORD PTR tv1650[ebp]
  02383	13 95 bc fe ff
	ff		 adc	 edx, DWORD PTR tv1650[ebp+4]
  02389	01 4d bc	 add	 DWORD PTR _v$[ebp], ecx
  0238c	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp]
  0238f	11 55 c0	 adc	 DWORD PTR _v$[ebp+4], edx
  02392	01 45 dc	 add	 DWORD PTR _v$[ebp+32], eax
  02395	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+4]
  02398	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+8]
  0239b	11 45 e0	 adc	 DWORD PTR _v$[ebp+36], eax
  0239e	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+8]
  023a1	0f ac f2 1c	 shrd	 edx, esi, 28
  023a5	0f a4 fb 1e	 shld	 ebx, edi, 30
  023a9	33 c9		 xor	 ecx, ecx
  023ab	0b ca		 or	 ecx, edx
  023ad	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+12]
  023b0	c1 ee 1c	 shr	 esi, 28			; 0000001cH
  023b3	c1 e0 04	 shl	 eax, 4
  023b6	0b c6		 or	 eax, esi
  023b8	c1 e7 1e	 shl	 edi, 30			; 0000001eH
  023bb	c1 ea 02	 shr	 edx, 2
  023be	0b d7		 or	 edx, edi
  023c0	8b 7d c4	 mov	 edi, DWORD PTR _v$[ebp+8]
  023c3	33 f6		 xor	 esi, esi
  023c5	0b f3		 or	 esi, ebx
  023c7	8b 5d c8	 mov	 ebx, DWORD PTR _v$[ebp+12]
  023ca	0f a4 fb 19	 shld	 ebx, edi, 25
  023ce	33 ca		 xor	 ecx, edx
  023d0	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+12]
  023d3	33 c6		 xor	 eax, esi
  023d5	c1 ea 07	 shr	 edx, 7
  023d8	c1 e7 19	 shl	 edi, 25			; 00000019H
  023db	33 f6		 xor	 esi, esi
  023dd	0b d7		 or	 edx, edi
  023df	8b 7d d0	 mov	 edi, DWORD PTR _v$[ebp+20]
  023e2	23 7d c8	 and	 edi, DWORD PTR _v$[ebp+12]
  023e5	33 ca		 xor	 ecx, edx
  023e7	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+20]
  023ea	33 55 c8	 xor	 edx, DWORD PTR _v$[ebp+12]
  023ed	0b f3		 or	 esi, ebx
  023ef	23 55 d8	 and	 edx, DWORD PTR _v$[ebp+28]
  023f2	89 4d fc	 mov	 DWORD PTR tv4693[ebp], ecx
  023f5	8b 4d cc	 mov	 ecx, DWORD PTR _v$[ebp+16]
  023f8	33 4d c4	 xor	 ecx, DWORD PTR _v$[ebp+8]
  023fb	33 c6		 xor	 eax, esi
  023fd	23 4d d4	 and	 ecx, DWORD PTR _v$[ebp+24]
  02400	8b 75 cc	 mov	 esi, DWORD PTR _v$[ebp+16]
  02403	23 75 c4	 and	 esi, DWORD PTR _v$[ebp+8]
  02406	0b d7		 or	 edx, edi
  02408	0b ce		 or	 ecx, esi
  0240a	8b 75 fc	 mov	 esi, DWORD PTR tv4693[ebp]
  0240d	03 f1		 add	 esi, ecx
  0240f	13 c2		 adc	 eax, edx
  02411	01 75 bc	 add	 DWORD PTR _v$[ebp], esi
  02414	11 45 c0	 adc	 DWORD PTR _v$[ebp+4], eax
  02417	83 45 b4 10	 add	 DWORD PTR _j$[ebp], 16	; 00000010H
  0241b	83 7d b4 50	 cmp	 DWORD PTR _j$[ebp], 80	; 00000050H
  0241f	0f 82 3b dd ff
	ff		 jb	 $LL40@sha512_com

; 527  :     }
; 528  : 
; 529  :     ctx->hash[0] += v[0]; ctx->hash[1] += v[1];

  02425	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR tv2017[ebp]
  0242b	8b 4d bc	 mov	 ecx, DWORD PTR _v$[ebp]
  0242e	01 08		 add	 DWORD PTR [eax], ecx
  02430	8b 4d c0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  02433	5f		 pop	 edi
  02434	11 48 04	 adc	 DWORD PTR [eax+4], ecx
  02437	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0243a	8b 4d c4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  0243d	01 48 18	 add	 DWORD PTR [eax+24], ecx
  02440	8b 4d c8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  02443	5e		 pop	 esi
  02444	11 48 1c	 adc	 DWORD PTR [eax+28], ecx

; 530  :     ctx->hash[2] += v[2]; ctx->hash[3] += v[3];

  02447	8b 4d cc	 mov	 ecx, DWORD PTR _v$[ebp+16]
  0244a	01 48 20	 add	 DWORD PTR [eax+32], ecx
  0244d	8b 4d d0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  02450	5b		 pop	 ebx
  02451	11 48 24	 adc	 DWORD PTR [eax+36], ecx
  02454	8b 4d d4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  02457	01 48 28	 add	 DWORD PTR [eax+40], ecx
  0245a	8b 4d d8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  0245d	11 48 2c	 adc	 DWORD PTR [eax+44], ecx

; 531  :     ctx->hash[4] += v[4]; ctx->hash[5] += v[5];

  02460	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp+32]
  02463	01 48 30	 add	 DWORD PTR [eax+48], ecx
  02466	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+36]
  02469	11 48 34	 adc	 DWORD PTR [eax+52], ecx
  0246c	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+40]
  0246f	01 48 38	 add	 DWORD PTR [eax+56], ecx
  02472	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+44]
  02475	11 48 3c	 adc	 DWORD PTR [eax+60], ecx

; 532  :     ctx->hash[6] += v[6]; ctx->hash[7] += v[7];

  02478	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+48]
  0247b	01 48 40	 add	 DWORD PTR [eax+64], ecx
  0247e	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+52]
  02481	11 48 44	 adc	 DWORD PTR [eax+68], ecx
  02484	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+56]
  02487	01 48 48	 add	 DWORD PTR [eax+72], ecx
  0248a	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+60]
  0248d	11 48 4c	 adc	 DWORD PTR [eax+76], ecx

; 533  : }

  02490	c9		 leave
  02491	c2 04 00	 ret	 4
_sha512_compile@4 ENDP
_TEXT	ENDS
PUBLIC	_sha512_hash@12
; Function compile flags: /Ogsp
;	COMDAT _sha512_hash@12
_TEXT	SEGMENT
tv422 = -8						; size = 4
_space$ = -4						; size = 4
__i$25004 = 8						; size = 4
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_sp$ = 16						; size = 4
_ctx$ = 16						; size = 4
_sha512_hash@12 PROC					; COMDAT

; 543  : {   uint_32t pos = (uint_32t)(ctx->count[0] & SHA512_MASK),

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
  00006	51		 push	 ecx

; 544  :              space = SHA512_BLOCK_SIZE - pos;
; 545  :     const unsigned char *sp = data;

  00007	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]

; 546  : 
; 547  :     if((ctx->count[0] += len) < len)

  0000a	8b 4d 0c	 mov	 ecx, DWORD PTR _len$[ebp]
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	8b 75 10	 mov	 esi, DWORD PTR _ctx$[ebp]
  00012	57		 push	 edi
  00013	8b 3e		 mov	 edi, DWORD PTR [esi]
  00015	83 e7 7f	 and	 edi, 127		; 0000007fH
  00018	bb 80 00 00 00	 mov	 ebx, 128		; 00000080H
  0001d	2b df		 sub	 ebx, edi
  0001f	89 45 10	 mov	 DWORD PTR _sp$[ebp], eax
  00022	33 c0		 xor	 eax, eax
  00024	01 0e		 add	 DWORD PTR [esi], ecx
  00026	11 46 04	 adc	 DWORD PTR [esi+4], eax
  00029	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002c	3b c8		 cmp	 ecx, eax
  0002e	77 10		 ja	 SHORT $LN17@sha512_has
  00030	72 07		 jb	 SHORT $LN16@sha512_has
  00032	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00034	3b 4d 0c	 cmp	 ecx, DWORD PTR _len$[ebp]
  00037	73 07		 jae	 SHORT $LN17@sha512_has
$LN16@sha512_has:

; 548  :         ++(ctx->count[1]);

  00039	83 46 08 01	 add	 DWORD PTR [esi+8], 1
  0003d	11 46 0c	 adc	 DWORD PTR [esi+12], eax
$LN17@sha512_has:

; 549  : 
; 550  :     while(len >= space)     /* tranfer whole blocks while possible  */

  00040	39 5d 0c	 cmp	 DWORD PTR _len$[ebp], ebx
  00043	0f 82 94 00 00
	00		 jb	 $LN18@sha512_has
  00049	eb 03		 jmp	 SHORT $LN4@sha512_has
$LL14@sha512_has:
  0004b	8b 5d fc	 mov	 ebx, DWORD PTR _space$[ebp]
$LN4@sha512_has:

; 551  :     {
; 552  :         memcpy(((unsigned char*)ctx->wbuf) + pos, sp, space);

  0004e	53		 push	 ebx
  0004f	ff 75 10	 push	 DWORD PTR _sp$[ebp]
  00052	8d 44 3e 50	 lea	 eax, DWORD PTR [esi+edi+80]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 _memcpy

; 553  :         sp += space; len -= space; space = SHA512_BLOCK_SIZE; pos = 0;

  0005c	01 5d 10	 add	 DWORD PTR _sp$[ebp], ebx
  0005f	29 5d 0c	 sub	 DWORD PTR _len$[ebp], ebx
  00062	83 c4 0c	 add	 esp, 12			; 0000000cH
  00065	c7 45 fc 80 00
	00 00		 mov	 DWORD PTR _space$[ebp], 128 ; 00000080H
  0006c	33 ff		 xor	 edi, edi

; 554  :         bsw_64(ctx->wbuf, SHA512_BLOCK_SIZE >> 3);

  0006e	c7 45 08 10 00
	00 00		 mov	 DWORD PTR __i$25004[ebp], 16 ; 00000010H
  00075	8d 86 d0 00 00
	00		 lea	 eax, DWORD PTR [esi+208]
$LL2@sha512_has:
  0007b	83 e8 08	 sub	 eax, 8
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	ff 4d 08	 dec	 DWORD PTR __i$25004[ebp]
  00083	8b d1		 mov	 edx, ecx
  00085	c1 ca 08	 ror	 edx, 8
  00088	81 e2 00 ff 00
	ff		 and	 edx, -16711936		; ff00ff00H
  0008e	c1 c1 08	 rol	 ecx, 8
  00091	89 45 f8	 mov	 DWORD PTR tv422[ebp], eax
  00094	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00097	81 e1 ff 00 ff
	00		 and	 ecx, 16711935		; 00ff00ffH
  0009d	0b d1		 or	 edx, ecx
  0009f	8b d8		 mov	 ebx, eax
  000a1	33 c9		 xor	 ecx, ecx
  000a3	c1 cb 08	 ror	 ebx, 8
  000a6	81 e3 00 ff 00
	ff		 and	 ebx, -16711936		; ff00ff00H
  000ac	c1 c0 08	 rol	 eax, 8
  000af	25 ff 00 ff 00	 and	 eax, 16711935		; 00ff00ffH
  000b4	0b d8		 or	 ebx, eax
  000b6	33 c0		 xor	 eax, eax
  000b8	0b d0		 or	 edx, eax
  000ba	8b 45 f8	 mov	 eax, DWORD PTR tv422[ebp]
  000bd	0b cb		 or	 ecx, ebx
  000bf	83 7d 08 00	 cmp	 DWORD PTR __i$25004[ebp], 0
  000c3	89 08		 mov	 DWORD PTR [eax], ecx
  000c5	89 50 04	 mov	 DWORD PTR [eax+4], edx
  000c8	75 b1		 jne	 SHORT $LL2@sha512_has

; 555  :         sha512_compile(ctx);

  000ca	56		 push	 esi
  000cb	e8 00 00 00 00	 call	 _sha512_compile@4
  000d0	81 7d 0c 80 00
	00 00		 cmp	 DWORD PTR _len$[ebp], 128 ; 00000080H
  000d7	0f 83 6e ff ff
	ff		 jae	 $LL14@sha512_has
$LN18@sha512_has:

; 556  :     }
; 557  : 
; 558  :     memcpy(((unsigned char*)ctx->wbuf) + pos, sp, len);

  000dd	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  000e0	8d 44 37 50	 lea	 eax, DWORD PTR [edi+esi+80]
  000e4	ff 75 10	 push	 DWORD PTR _sp$[ebp]
  000e7	50		 push	 eax
  000e8	e8 00 00 00 00	 call	 _memcpy
  000ed	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5b		 pop	 ebx

; 559  : }

  000f3	c9		 leave
  000f4	c2 0c 00	 ret	 12			; 0000000cH
_sha512_hash@12 ENDP
_TEXT	ENDS
EXTRN	__aullshr:PROC
EXTRN	__allshl:PROC
; Function compile flags: /Ogsp
;	COMDAT _sha_end2@12
_TEXT	SEGMENT
tv380 = -12						; size = 8
tv352 = -8						; size = 4
_i$ = -8						; size = 4
tv354 = -4						; size = 4
__i$25037 = -4						; size = 4
_hval$ = 8						; size = 4
_hlen$ = 12						; size = 4
_sha_end2@12 PROC					; COMDAT
; _ctx$ = ebx

; 564  : {   uint_32t    i = (uint_32t)(ctx->count[0] & SHA512_MASK);

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b 3b		 mov	 edi, DWORD PTR [ebx]
  0000c	83 e7 7f	 and	 edi, 127		; 0000007fH

; 565  : 
; 566  :     /* put bytes in the buffer in an order in which references to   */
; 567  :     /* 32-bit words will put bytes with lower addresses into the    */
; 568  :     /* top of 32 bit words on BOTH big and little endian machines   */
; 569  :     bsw_64(ctx->wbuf, (i + 7) >> 3);

  0000f	8d 4f 07	 lea	 ecx, DWORD PTR [edi+7]
  00012	c1 e9 03	 shr	 ecx, 3
  00015	89 7d f8	 mov	 DWORD PTR _i$[ebp], edi
  00018	85 c9		 test	 ecx, ecx
  0001a	74 53		 je	 SHORT $LN16@sha_end2

; 564  : {   uint_32t    i = (uint_32t)(ctx->count[0] & SHA512_MASK);

  0001c	8d 44 cb 50	 lea	 eax, DWORD PTR [ebx+ecx*8+80]
$LL10@sha_end2:

; 565  : 
; 566  :     /* put bytes in the buffer in an order in which references to   */
; 567  :     /* 32-bit words will put bytes with lower addresses into the    */
; 568  :     /* top of 32 bit words on BOTH big and little endian machines   */
; 569  :     bsw_64(ctx->wbuf, (i + 7) >> 3);

  00020	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00023	49		 dec	 ecx
  00024	83 e8 08	 sub	 eax, 8
  00027	89 4d fc	 mov	 DWORD PTR __i$25037[ebp], ecx
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	8b f1		 mov	 esi, ecx
  0002e	c1 ce 08	 ror	 esi, 8
  00031	81 e6 00 ff 00
	ff		 and	 esi, -16711936		; ff00ff00H
  00037	c1 c1 08	 rol	 ecx, 8
  0003a	81 e1 ff 00 ff
	00		 and	 ecx, 16711935		; 00ff00ffH
  00040	0b f1		 or	 esi, ecx
  00042	33 c9		 xor	 ecx, ecx
  00044	8b fa		 mov	 edi, edx
  00046	c1 cf 08	 ror	 edi, 8
  00049	81 e7 00 ff 00
	ff		 and	 edi, -16711936		; ff00ff00H
  0004f	c1 c2 08	 rol	 edx, 8
  00052	81 e2 ff 00 ff
	00		 and	 edx, 16711935		; 00ff00ffH
  00058	0b fa		 or	 edi, edx
  0005a	0b cf		 or	 ecx, edi
  0005c	33 d2		 xor	 edx, edx
  0005e	89 08		 mov	 DWORD PTR [eax], ecx
  00060	8b 4d fc	 mov	 ecx, DWORD PTR __i$25037[ebp]
  00063	0b f2		 or	 esi, edx
  00065	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00068	85 c9		 test	 ecx, ecx
  0006a	75 b4		 jne	 SHORT $LL10@sha_end2
  0006c	8b 7d f8	 mov	 edi, DWORD PTR _i$[ebp]
$LN16@sha_end2:

; 570  : 
; 571  :     /* we now need to mask valid bytes and add the padding which is */
; 572  :     /* a single 1 bit and as many zero bits as necessary. Note that */
; 573  :     /* we can always add the first padding byte here because the    */
; 574  :     /* buffer always has at least one empty slot                    */
; 575  :     ctx->wbuf[i >> 3] &= li_64(ffffffffffffff00) << 8 * (~i & 7);

  0006f	8b c7		 mov	 eax, edi
  00071	f7 d0		 not	 eax
  00073	83 e0 07	 and	 eax, 7
  00076	8b c8		 mov	 ecx, eax
  00078	8b c7		 mov	 eax, edi
  0007a	c1 e8 03	 shr	 eax, 3
  0007d	c1 e1 03	 shl	 ecx, 3
  00080	89 45 fc	 mov	 DWORD PTR tv354[ebp], eax
  00083	8d 74 c3 50	 lea	 esi, DWORD PTR [ebx+eax*8+80]
  00087	b8 00 ff ff ff	 mov	 eax, -256		; ffffff00H
  0008c	83 ca ff	 or	 edx, -1
  0008f	89 4d f8	 mov	 DWORD PTR tv352[ebp], ecx
  00092	e8 00 00 00 00	 call	 __allshl
  00097	21 06		 and	 DWORD PTR [esi], eax
  00099	21 56 04	 and	 DWORD PTR [esi+4], edx

; 576  :     ctx->wbuf[i >> 3] |= li_64(0000000000000080) << 8 * (~i & 7);

  0009c	8b 4d f8	 mov	 ecx, DWORD PTR tv352[ebp]
  0009f	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  000a4	33 d2		 xor	 edx, edx
  000a6	e8 00 00 00 00	 call	 __allshl
  000ab	09 06		 or	 DWORD PTR [esi], eax
  000ad	09 56 04	 or	 DWORD PTR [esi+4], edx

; 577  : 
; 578  :     /* we need 17 or more empty byte positions, one for the padding */
; 579  :     /* byte (above) and sixteen for the length count.  If there is  */
; 580  :     /* not enough space pad and empty the buffer                    */
; 581  :     if(i > SHA512_BLOCK_SIZE - 17)

  000b0	83 ff 6f	 cmp	 edi, 111		; 0000006fH
  000b3	76 1d		 jbe	 SHORT $LN8@sha_end2

; 582  :     {
; 583  :         if(i < 120) ctx->wbuf[15] = 0;

  000b5	83 ff 78	 cmp	 edi, 120		; 00000078H
  000b8	73 0e		 jae	 SHORT $LN24@sha_end2
  000ba	83 a3 c8 00 00
	00 00		 and	 DWORD PTR [ebx+200], 0
  000c1	83 a3 cc 00 00
	00 00		 and	 DWORD PTR [ebx+204], 0
$LN24@sha_end2:

; 584  :         sha512_compile(ctx);

  000c8	53		 push	 ebx
  000c9	e8 00 00 00 00	 call	 _sha512_compile@4

; 585  :         i = 0;

  000ce	33 c0		 xor	 eax, eax

; 586  :     }
; 587  :     else

  000d0	eb 09		 jmp	 SHORT $LN21@sha_end2
$LN8@sha_end2:

; 588  :         i = (i >> 3) + 1;

  000d2	8b 45 fc	 mov	 eax, DWORD PTR tv354[ebp]
  000d5	40		 inc	 eax

; 589  : 
; 590  :     while(i < 14)

  000d6	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  000d9	73 1b		 jae	 SHORT $LN5@sha_end2
$LN21@sha_end2:

; 591  :         ctx->wbuf[i++] = 0;

  000db	6a 0d		 push	 13			; 0000000dH
  000dd	8d 74 c3 50	 lea	 esi, DWORD PTR [ebx+eax*8+80]
  000e1	83 26 00	 and	 DWORD PTR [esi], 0
  000e4	83 66 04 00	 and	 DWORD PTR [esi+4], 0
  000e8	59		 pop	 ecx
  000e9	2b c8		 sub	 ecx, eax
  000eb	c1 e1 03	 shl	 ecx, 3
  000ee	c1 e9 02	 shr	 ecx, 2
  000f1	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  000f4	f3 a5		 rep movsd
$LN5@sha_end2:

; 592  : 
; 593  :     /* the following 64-bit length fields are assembled in the      */
; 594  :     /* wrong byte order on little endian machines but this is       */
; 595  :     /* corrected later since they are only ever used as 64-bit      */
; 596  :     /* word values.                                                 */
; 597  :     ctx->wbuf[14] = (ctx->count[1] << 3) | (ctx->count[0] >> 61);

  000f6	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  000f9	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
  000fc	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000ff	8b 03		 mov	 eax, DWORD PTR [ebx]
  00101	0f a4 d6 03	 shld	 esi, edx, 3
  00105	89 4d f8	 mov	 DWORD PTR tv380[ebp+4], ecx
  00108	c1 e9 1d	 shr	 ecx, 29			; 0000001dH
  0010b	c1 e2 03	 shl	 edx, 3
  0010e	0b d1		 or	 edx, ecx

; 598  :     ctx->wbuf[15] = ctx->count[0] << 3;

  00110	8b 4d f8	 mov	 ecx, DWORD PTR tv380[ebp+4]
  00113	0f a4 c1 03	 shld	 ecx, eax, 3
  00117	33 ff		 xor	 edi, edi
  00119	c1 e0 03	 shl	 eax, 3
  0011c	0b f7		 or	 esi, edi

; 599  :     sha512_compile(ctx);

  0011e	53		 push	 ebx
  0011f	89 93 c0 00 00
	00		 mov	 DWORD PTR [ebx+192], edx
  00125	89 b3 c4 00 00
	00		 mov	 DWORD PTR [ebx+196], esi
  0012b	89 83 c8 00 00
	00		 mov	 DWORD PTR [ebx+200], eax
  00131	89 8b cc 00 00
	00		 mov	 DWORD PTR [ebx+204], ecx
  00137	e8 00 00 00 00	 call	 _sha512_compile@4

; 600  : 
; 601  :     /* extract the hash value as bytes in case the hash buffer is   */
; 602  :     /* misaligned for 32-bit words                                  */
; 603  :     for(i = 0; i < hlen; ++i)

  0013c	33 f6		 xor	 esi, esi
  0013e	39 75 0c	 cmp	 DWORD PTR _hlen$[ebp], esi
  00141	76 28		 jbe	 SHORT $LN1@sha_end2
$LL3@sha_end2:

; 604  :         hval[i] = (unsigned char)(ctx->hash[i >> 3] >> (8 * (~i & 7)));

  00143	8b d6		 mov	 edx, esi
  00145	c1 ea 03	 shr	 edx, 3
  00148	8b 44 d3 10	 mov	 eax, DWORD PTR [ebx+edx*8+16]
  0014c	8b 54 d3 14	 mov	 edx, DWORD PTR [ebx+edx*8+20]
  00150	8b ce		 mov	 ecx, esi
  00152	f7 d1		 not	 ecx
  00154	83 e1 07	 and	 ecx, 7
  00157	c1 e1 03	 shl	 ecx, 3
  0015a	e8 00 00 00 00	 call	 __aullshr
  0015f	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  00162	88 04 0e	 mov	 BYTE PTR [esi+ecx], al
  00165	46		 inc	 esi
  00166	3b 75 0c	 cmp	 esi, DWORD PTR _hlen$[ebp]
  00169	72 d8		 jb	 SHORT $LL3@sha_end2
$LN1@sha_end2:
  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi

; 605  : }

  0016d	c9		 leave
  0016e	c2 08 00	 ret	 8
_sha_end2@12 ENDP
_TEXT	ENDS
PUBLIC	_sha384_begin@4
; Function compile flags: /Ogsp
;	COMDAT _sha384_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha384_begin@4 PROC					; COMDAT

; 622  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 623  :     ctx->count[0] = ctx->count[1] = 0;

  00005	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	33 c9		 xor	 ecx, ecx

; 624  :     memcpy(ctx->hash, i384, 8 * sizeof(uint_64t));

  0000c	6a 10		 push	 16			; 00000010H
  0000e	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00011	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00019	59		 pop	 ecx
  0001a	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0001d	be 00 00 00 00	 mov	 esi, OFFSET _i384
  00022	f3 a5		 rep movsd
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 625  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
_sha384_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha384_end@8
; Function compile flags: /Ogsp
;	COMDAT _sha384_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha384_end@8 PROC					; COMDAT

; 628  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	53		 push	 ebx

; 629  :     sha_end2(hval, ctx, SHA384_DIGEST_SIZE);

  00006	8b 5d 0c	 mov	 ebx, DWORD PTR _ctx$[ebp]
  00009	6a 30		 push	 48			; 00000030H
  0000b	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0000e	e8 00 00 00 00	 call	 _sha_end2@12
  00013	5b		 pop	 ebx

; 630  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha384_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha384@12
; Function compile flags: /Ogsp
;	COMDAT _sha384@12
_TEXT	SEGMENT
_cx$ = -208						; size = 208
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha384@12 PROC						; COMDAT

; 633  : {   sha384_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  0000b	53		 push	 ebx

; 634  : 
; 635  :     sha384_begin(cx);

  0000c	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _sha384_begin@4

; 636  :     sha384_hash(data, len, cx);

  00018	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  0001e	50		 push	 eax
  0001f	ff 75 10	 push	 DWORD PTR _len$[ebp]
  00022	ff 75 0c	 push	 DWORD PTR _data$[ebp]
  00025	e8 00 00 00 00	 call	 _sha512_hash@12

; 637  :     sha_end2(hval, cx, SHA384_DIGEST_SIZE);

  0002a	6a 30		 push	 48			; 00000030H
  0002c	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0002f	8d 9d 30 ff ff
	ff		 lea	 ebx, DWORD PTR _cx$[ebp]
  00035	e8 00 00 00 00	 call	 _sha_end2@12
  0003a	5b		 pop	 ebx

; 638  : }

  0003b	c9		 leave
  0003c	c2 0c 00	 ret	 12			; 0000000cH
_sha384@12 ENDP
_TEXT	ENDS
PUBLIC	_sha512_begin@4
; Function compile flags: /Ogsp
;	COMDAT _sha512_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha512_begin@4 PROC					; COMDAT

; 655  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 656  :     ctx->count[0] = ctx->count[1] = 0;

  00005	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	33 c9		 xor	 ecx, ecx

; 657  :     memcpy(ctx->hash, i512, 8 * sizeof(uint_64t));

  0000c	6a 10		 push	 16			; 00000010H
  0000e	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00011	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00014	89 08		 mov	 DWORD PTR [eax], ecx
  00016	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00019	59		 pop	 ecx
  0001a	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0001d	be 00 00 00 00	 mov	 esi, OFFSET _i512
  00022	f3 a5		 rep movsd
  00024	5f		 pop	 edi
  00025	5e		 pop	 esi

; 658  : }

  00026	5d		 pop	 ebp
  00027	c2 04 00	 ret	 4
_sha512_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha512_end@8
; Function compile flags: /Ogsp
;	COMDAT _sha512_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha512_end@8 PROC					; COMDAT

; 661  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	53		 push	 ebx

; 662  :     sha_end2(hval, ctx, SHA512_DIGEST_SIZE);

  00006	8b 5d 0c	 mov	 ebx, DWORD PTR _ctx$[ebp]
  00009	6a 40		 push	 64			; 00000040H
  0000b	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0000e	e8 00 00 00 00	 call	 _sha_end2@12
  00013	5b		 pop	 ebx

; 663  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha512_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha512@12
; Function compile flags: /Ogsp
;	COMDAT _sha512@12
_TEXT	SEGMENT
_cx$ = -208						; size = 208
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha512@12 PROC						; COMDAT

; 666  : {   sha512_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  0000b	53		 push	 ebx

; 667  : 
; 668  :     sha512_begin(cx);

  0000c	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _sha512_begin@4

; 669  :     sha512_hash(data, len, cx);

  00018	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  0001e	50		 push	 eax
  0001f	ff 75 10	 push	 DWORD PTR _len$[ebp]
  00022	ff 75 0c	 push	 DWORD PTR _data$[ebp]
  00025	e8 00 00 00 00	 call	 _sha512_hash@12

; 670  :     sha_end2(hval, cx, SHA512_DIGEST_SIZE);

  0002a	6a 40		 push	 64			; 00000040H
  0002c	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0002f	8d 9d 30 ff ff
	ff		 lea	 ebx, DWORD PTR _cx$[ebp]
  00035	e8 00 00 00 00	 call	 _sha_end2@12
  0003a	5b		 pop	 ebx

; 671  : }

  0003b	c9		 leave
  0003c	c2 0c 00	 ret	 12			; 0000000cH
_sha512@12 ENDP
_TEXT	ENDS
PUBLIC	_sha2_begin@8
; Function compile flags: /Ogsp
;	COMDAT _sha2_begin@8
_TEXT	SEGMENT
_len$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha2_begin@8 PROC					; COMDAT

; 685  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 686  :     switch(len)

  00005	8b 4d 08	 mov	 ecx, DWORD PTR _len$[ebp]
  00008	b8 e0 00 00 00	 mov	 eax, 224		; 000000e0H
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	3b c8		 cmp	 ecx, eax
  00011	77 3e		 ja	 SHORT $LN10@sha2_begin
  00013	6a 1c		 push	 28			; 0000001cH
  00015	5a		 pop	 edx
  00016	74 17		 je	 SHORT $LN5@sha2_begin
  00018	3b ca		 cmp	 ecx, edx
  0001a	74 13		 je	 SHORT $LN5@sha2_begin
  0001c	83 f9 20	 cmp	 ecx, 32			; 00000020H
  0001f	0f 84 9b 00 00
	00		 je	 $LN4@sha2_begin
  00025	83 f9 30	 cmp	 ecx, 48			; 00000030H
  00028	74 6d		 je	 SHORT $LN12@sha2_begin
  0002a	83 f9 40	 cmp	 ecx, 64			; 00000040H
  0002d	eb 38		 jmp	 SHORT $LN13@sha2_begin
$LN5@sha2_begin:

; 687  :     {
; 688  : #if defined(SHA_224)
; 689  :         case 224:
; 690  :         case  28:   CTX_256(ctx)->count[0] = CTX_256(ctx)->count[1] = 0;

  0002f	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00032	33 c9		 xor	 ecx, ecx
  00034	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00037	89 08		 mov	 DWORD PTR [eax], ecx

; 691  :                     memcpy(CTX_256(ctx)->hash, i224, 32);

  00039	6a 08		 push	 8
  0003b	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  0003e	59		 pop	 ecx
  0003f	be 00 00 00 00	 mov	 esi, OFFSET _i224
  00044	f3 a5		 rep movsd

; 692  :                     ctx->sha2_len = 28; return EXIT_SUCCESS;

  00046	89 90 d0 00 00
	00		 mov	 DWORD PTR [eax+208], edx
  0004c	e9 90 00 00 00	 jmp	 $LN14@sha2_begin
$LN10@sha2_begin:

; 686  :     switch(len)

  00051	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  00057	74 67		 je	 SHORT $LN4@sha2_begin
  00059	81 f9 80 01 00
	00		 cmp	 ecx, 384		; 00000180H
  0005f	74 36		 je	 SHORT $LN12@sha2_begin
  00061	81 f9 00 02 00
	00		 cmp	 ecx, 512		; 00000200H
$LN13@sha2_begin:
  00067	74 05		 je	 SHORT $LN11@sha2_begin

; 711  : #endif
; 712  :         default:    return EXIT_FAILURE;

  00069	33 c0		 xor	 eax, eax
  0006b	40		 inc	 eax
  0006c	eb 75		 jmp	 SHORT $LN6@sha2_begin
$LN11@sha2_begin:

; 705  : #endif
; 706  : #if defined(SHA_512)
; 707  :         case 512:
; 708  :         case  64:   CTX_512(ctx)->count[0] = CTX_512(ctx)->count[1] = 0;

  0006e	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00071	33 c9		 xor	 ecx, ecx
  00073	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00076	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00079	89 08		 mov	 DWORD PTR [eax], ecx
  0007b	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 709  :                     memcpy(CTX_512(ctx)->hash, i512, 64);

  0007e	6a 10		 push	 16			; 00000010H
  00080	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00083	59		 pop	 ecx
  00084	be 00 00 00 00	 mov	 esi, OFFSET _i512
  00089	f3 a5		 rep movsd

; 710  :                     ctx->sha2_len = 64; return EXIT_SUCCESS;

  0008b	c7 80 d0 00 00
	00 40 00 00 00	 mov	 DWORD PTR [eax+208], 64	; 00000040H
  00095	eb 4a		 jmp	 SHORT $LN14@sha2_begin
$LN12@sha2_begin:

; 699  : #endif
; 700  : #if defined(SHA_384)
; 701  :         case 384:
; 702  :         case  48:   CTX_384(ctx)->count[0] = CTX_384(ctx)->count[1] = 0;

  00097	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0009a	33 c9		 xor	 ecx, ecx
  0009c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0009f	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  000a2	89 08		 mov	 DWORD PTR [eax], ecx
  000a4	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 703  :                     memcpy(CTX_384(ctx)->hash, i384, 64);

  000a7	6a 10		 push	 16			; 00000010H
  000a9	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  000ac	59		 pop	 ecx
  000ad	be 00 00 00 00	 mov	 esi, OFFSET _i384
  000b2	f3 a5		 rep movsd

; 704  :                     ctx->sha2_len = 48; return EXIT_SUCCESS;

  000b4	c7 80 d0 00 00
	00 30 00 00 00	 mov	 DWORD PTR [eax+208], 48	; 00000030H
  000be	eb 21		 jmp	 SHORT $LN14@sha2_begin
$LN4@sha2_begin:

; 693  : #endif
; 694  : #if defined(SHA_256)
; 695  :         case 256:
; 696  :         case  32:   CTX_256(ctx)->count[0] = CTX_256(ctx)->count[1] = 0;

  000c0	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  000c3	33 c9		 xor	 ecx, ecx
  000c5	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  000c8	89 08		 mov	 DWORD PTR [eax], ecx

; 697  :                     memcpy(CTX_256(ctx)->hash, i256, 32);

  000ca	6a 08		 push	 8
  000cc	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  000cf	59		 pop	 ecx
  000d0	be 00 00 00 00	 mov	 esi, OFFSET _i256
  000d5	f3 a5		 rep movsd

; 698  :                     ctx->sha2_len = 32; return EXIT_SUCCESS;

  000d7	c7 80 d0 00 00
	00 20 00 00 00	 mov	 DWORD PTR [eax+208], 32	; 00000020H
$LN14@sha2_begin:
  000e1	33 c0		 xor	 eax, eax
$LN6@sha2_begin:
  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi

; 713  :     }
; 714  : }

  000e5	5d		 pop	 ebp
  000e6	c2 08 00	 ret	 8
_sha2_begin@8 ENDP
_TEXT	ENDS
PUBLIC	_sha2_hash@12
; Function compile flags: /Ogsp
;	COMDAT _sha2_hash@12
_TEXT	SEGMENT
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_ctx$ = 16						; size = 4
_sha2_hash@12 PROC					; COMDAT

; 717  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 718  :     switch(ctx->sha2_len)

  00005	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00008	8b 81 d0 00 00
	00		 mov	 eax, DWORD PTR [ecx+208]
  0000e	83 f8 1c	 cmp	 eax, 28			; 0000001cH
  00011	74 1d		 je	 SHORT $LN4@sha2_hash
  00013	83 f8 20	 cmp	 eax, 32			; 00000020H
  00016	74 18		 je	 SHORT $LN4@sha2_hash
  00018	83 f8 30	 cmp	 eax, 48			; 00000030H
  0001b	74 05		 je	 SHORT $LN2@sha2_hash
  0001d	83 f8 40	 cmp	 eax, 64			; 00000040H
  00020	75 1a		 jne	 SHORT $LN5@sha2_hash
$LN2@sha2_hash:

; 722  : #endif
; 723  : #if defined(SHA_256)
; 724  :         case 32: sha256_hash(data, len, CTX_256(ctx)); return;
; 725  : #endif
; 726  : #if defined(SHA_384)
; 727  :         case 48: sha384_hash(data, len, CTX_384(ctx)); return;

  00022	51		 push	 ecx
  00023	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  00026	ff 75 08	 push	 DWORD PTR _data$[ebp]
  00029	e8 00 00 00 00	 call	 _sha512_hash@12
  0002e	eb 0c		 jmp	 SHORT $LN5@sha2_hash
$LN4@sha2_hash:

; 719  :     {
; 720  : #if defined(SHA_224)
; 721  :         case 28: sha224_hash(data, len, CTX_224(ctx)); return;

  00030	51		 push	 ecx
  00031	ff 75 0c	 push	 DWORD PTR _len$[ebp]
  00034	ff 75 08	 push	 DWORD PTR _data$[ebp]
  00037	e8 00 00 00 00	 call	 _sha256_hash@12
$LN5@sha2_hash:

; 728  : #endif
; 729  : #if defined(SHA_512)
; 730  :         case 64: sha512_hash(data, len, CTX_512(ctx)); return;
; 731  : #endif
; 732  :     }
; 733  : }

  0003c	5d		 pop	 ebp
  0003d	c2 0c 00	 ret	 12			; 0000000cH
_sha2_hash@12 ENDP
_TEXT	ENDS
PUBLIC	_sha2_end@8
; Function compile flags: /Ogsp
;	COMDAT _sha2_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha2_end@8 PROC					; COMDAT

; 736  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	53		 push	 ebx
  00006	56		 push	 esi

; 737  :     switch(ctx->sha2_len)

  00007	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  0000a	8b 86 d0 00 00
	00		 mov	 eax, DWORD PTR [esi+208]
  00010	83 f8 1c	 cmp	 eax, 28			; 0000001cH
  00013	74 24		 je	 SHORT $LN4@sha2_end
  00015	83 f8 20	 cmp	 eax, 32			; 00000020H
  00018	74 1b		 je	 SHORT $LN3@sha2_end
  0001a	83 f8 30	 cmp	 eax, 48			; 00000030H
  0001d	74 08		 je	 SHORT $LN2@sha2_end
  0001f	83 f8 40	 cmp	 eax, 64			; 00000040H
  00022	75 1f		 jne	 SHORT $LN5@sha2_end

; 747  : #endif
; 748  : #if defined(SHA_512)
; 749  :         case 64: sha_end2(hval, CTX_512(ctx), SHA512_DIGEST_SIZE); return;

  00024	50		 push	 eax
  00025	eb 02		 jmp	 SHORT $LN10@sha2_end
$LN2@sha2_end:

; 744  : #endif
; 745  : #if defined(SHA_384)
; 746  :         case 48: sha_end2(hval, CTX_384(ctx), SHA384_DIGEST_SIZE); return;

  00027	6a 30		 push	 48			; 00000030H
$LN10@sha2_end:
  00029	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0002c	8b de		 mov	 ebx, esi
  0002e	e8 00 00 00 00	 call	 _sha_end2@12
  00033	eb 0e		 jmp	 SHORT $LN5@sha2_end
$LN3@sha2_end:

; 741  : #endif
; 742  : #if defined(SHA_256)
; 743  :         case 32: sha_end1(hval, CTX_256(ctx), SHA256_DIGEST_SIZE); return;

  00035	6a 20		 push	 32			; 00000020H
  00037	eb 02		 jmp	 SHORT $LN9@sha2_end
$LN4@sha2_end:

; 738  :     {
; 739  : #if defined(SHA_224)
; 740  :         case 28: sha_end1(hval, CTX_224(ctx), SHA224_DIGEST_SIZE); return;

  00039	6a 1c		 push	 28			; 0000001cH
$LN9@sha2_end:
  0003b	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0003e	e8 00 00 00 00	 call	 _sha_end1@12
$LN5@sha2_end:
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx

; 750  : #endif
; 751  :     }
; 752  : }

  00045	5d		 pop	 ebp
  00046	c2 08 00	 ret	 8
_sha2_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha2@16
; Function compile flags: /Ogsp
;	COMDAT _sha2@16
_TEXT	SEGMENT
_cx$ = -216						; size = 216
_hval$ = 8						; size = 4
_size$ = 12						; size = 4
_data$ = 16						; size = 4
_len$ = 20						; size = 4
_sha2@16 PROC						; COMDAT

; 756  : {   sha2_ctx    cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H

; 757  : 
; 758  :     if(sha2_begin(size, cx) == EXIT_SUCCESS)

  0000b	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00011	50		 push	 eax
  00012	ff 75 0c	 push	 DWORD PTR _size$[ebp]
  00015	e8 00 00 00 00	 call	 _sha2_begin@8
  0001a	85 c0		 test	 eax, eax
  0001c	75 25		 jne	 SHORT $LN2@sha2

; 759  :     {
; 760  :         sha2_hash(data, len, cx); sha2_end(hval, cx); return EXIT_SUCCESS;

  0001e	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00024	50		 push	 eax
  00025	ff 75 14	 push	 DWORD PTR _len$[ebp]
  00028	ff 75 10	 push	 DWORD PTR _data$[ebp]
  0002b	e8 00 00 00 00	 call	 _sha2_hash@12
  00030	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00036	50		 push	 eax
  00037	ff 75 08	 push	 DWORD PTR _hval$[ebp]
  0003a	e8 00 00 00 00	 call	 _sha2_end@8
  0003f	33 c0		 xor	 eax, eax
  00041	eb 03		 jmp	 SHORT $LN1@sha2
$LN2@sha2:

; 761  :     }
; 762  :     else
; 763  :         return EXIT_FAILURE;

  00043	33 c0		 xor	 eax, eax
  00045	40		 inc	 eax
$LN1@sha2:

; 764  : }

  00046	c9		 leave
  00047	c2 10 00	 ret	 16			; 00000010H
_sha2@16 ENDP
_TEXT	ENDS
END
