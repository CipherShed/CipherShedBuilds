; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\home\public\desktop\projects\ciphershed.build\src\crypto\aeskey.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_aes_encrypt_key256@8
EXTRN	_t_rc:BYTE
EXTRN	_t_fl:BYTE
; Function compile flags: /Ogsp
; File c:\home\public\desktop\projects\ciphershed.build\src\crypto\aeskey.c
;	COMDAT _aes_encrypt_key256@8
_TEXT	SEGMENT
_ss$ = -32						; size = 32
tv1258 = 8						; size = 4
_key$ = 8						; size = 4
_cx$ = 12						; size = 4
_aes_encrypt_key256@8 PROC				; COMDAT

; 175  : {   uint_32t    ss[8];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 20	 sub	 esp, 32			; 00000020H

; 176  : 
; 177  :     cx->ks[0] = ss[0] = word_in(key, 0);

  00008	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0000b	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	8b 32		 mov	 esi, DWORD PTR [edx]
  00012	89 30		 mov	 DWORD PTR [eax], esi

; 178  :     cx->ks[1] = ss[1] = word_in(key, 1);

  00014	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00017	57		 push	 edi
  00018	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0001b	89 4d e4	 mov	 DWORD PTR _ss$[ebp+4], ecx

; 179  :     cx->ks[2] = ss[2] = word_in(key, 2);

  0001e	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  00021	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00024	89 4d e8	 mov	 DWORD PTR _ss$[ebp+8], ecx

; 180  :     cx->ks[3] = ss[3] = word_in(key, 3);

  00027	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  0002a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 181  :     cx->ks[4] = ss[4] = word_in(key, 4);

  0002d	8b 7a 10	 mov	 edi, DWORD PTR [edx+16]
  00030	89 7d f0	 mov	 DWORD PTR _ss$[ebp+16], edi
  00033	89 78 10	 mov	 DWORD PTR [eax+16], edi

; 182  :     cx->ks[5] = ss[5] = word_in(key, 5);

  00036	8b 7a 14	 mov	 edi, DWORD PTR [edx+20]
  00039	89 7d f4	 mov	 DWORD PTR _ss$[ebp+20], edi
  0003c	89 78 14	 mov	 DWORD PTR [eax+20], edi

; 183  :     cx->ks[6] = ss[6] = word_in(key, 6);

  0003f	8b 7a 18	 mov	 edi, DWORD PTR [edx+24]
  00042	89 78 18	 mov	 DWORD PTR [eax+24], edi

; 184  :     cx->ks[7] = ss[7] = word_in(key, 7);

  00045	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  00048	89 7d f8	 mov	 DWORD PTR _ss$[ebp+24], edi
  0004b	89 50 1c	 mov	 DWORD PTR [eax+28], edx

; 185  : 
; 186  : #if ENC_UNROLL == NONE
; 187  :     {   uint_32t i;
; 188  :         for(i = 0; i < 6; ++i)
; 189  :             ke8(cx->ks,  i);
; 190  :     }
; 191  : #else
; 192  :     ke8(cx->ks, 0); ke8(cx->ks, 1);

  0004e	8b da		 mov	 ebx, edx
  00050	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00053	0f b6 db	 movzx	 ebx, bl
  00056	8b fa		 mov	 edi, edx
  00058	c1 ef 18	 shr	 edi, 24			; 00000018H
  0005b	8b 3c bd 00 08
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+2048]
  00062	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  00069	8b da		 mov	 ebx, edx
  0006b	c1 eb 08	 shr	 ebx, 8
  0006e	0f b6 db	 movzx	 ebx, bl
  00071	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  00078	0f b6 da	 movzx	 ebx, dl
  0007b	33 3c 9d 00 0c
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+3072]
  00082	33 3d 00 00 00
	00		 xor	 edi, DWORD PTR _t_rc
  00088	33 f7		 xor	 esi, edi
  0008a	8b 7d e4	 mov	 edi, DWORD PTR _ss$[ebp+4]
  0008d	33 fe		 xor	 edi, esi
  0008f	31 7d e8	 xor	 DWORD PTR _ss$[ebp+8], edi
  00092	89 7d e4	 mov	 DWORD PTR _ss$[ebp+4], edi
  00095	89 78 24	 mov	 DWORD PTR [eax+36], edi
  00098	8b 7d e8	 mov	 edi, DWORD PTR _ss$[ebp+8]
  0009b	33 cf		 xor	 ecx, edi
  0009d	89 78 28	 mov	 DWORD PTR [eax+40], edi
  000a0	8b d9		 mov	 ebx, ecx
  000a2	c1 eb 10	 shr	 ebx, 16			; 00000010H
  000a5	0f b6 db	 movzx	 ebx, bl
  000a8	89 70 20	 mov	 DWORD PTR [eax+32], esi
  000ab	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
  000ae	8b f9		 mov	 edi, ecx
  000b0	c1 ef 18	 shr	 edi, 24			; 00000018H
  000b3	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+3072]
  000ba	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+2048]
  000c1	8b d9		 mov	 ebx, ecx
  000c3	c1 eb 08	 shr	 ebx, 8
  000c6	0f b6 db	 movzx	 ebx, bl
  000c9	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  000d0	0f b6 d9	 movzx	 ebx, cl
  000d3	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  000da	31 7d f0	 xor	 DWORD PTR _ss$[ebp+16], edi
  000dd	8b 7d f0	 mov	 edi, DWORD PTR _ss$[ebp+16]
  000e0	89 78 30	 mov	 DWORD PTR [eax+48], edi
  000e3	8b 7d f4	 mov	 edi, DWORD PTR _ss$[ebp+20]
  000e6	33 7d f0	 xor	 edi, DWORD PTR _ss$[ebp+16]
  000e9	31 7d f8	 xor	 DWORD PTR _ss$[ebp+24], edi
  000ec	89 7d f4	 mov	 DWORD PTR _ss$[ebp+20], edi
  000ef	89 78 34	 mov	 DWORD PTR [eax+52], edi
  000f2	8b 7d f8	 mov	 edi, DWORD PTR _ss$[ebp+24]
  000f5	33 d7		 xor	 edx, edi
  000f7	89 78 38	 mov	 DWORD PTR [eax+56], edi
  000fa	8b fa		 mov	 edi, edx
  000fc	8b da		 mov	 ebx, edx
  000fe	c1 ef 18	 shr	 edi, 24			; 00000018H
  00101	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00104	89 50 3c	 mov	 DWORD PTR [eax+60], edx
  00107	0f b6 db	 movzx	 ebx, bl
  0010a	8b 3c bd 00 08
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+2048]
  00111	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  00118	8b da		 mov	 ebx, edx
  0011a	c1 eb 08	 shr	 ebx, 8
  0011d	0f b6 db	 movzx	 ebx, bl
  00120	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  00127	0f b6 da	 movzx	 ebx, dl
  0012a	33 3c 9d 00 0c
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+3072]
  00131	33 3d 04 00 00
	00		 xor	 edi, DWORD PTR _t_rc+4
  00137	33 f7		 xor	 esi, edi
  00139	8b 7d e4	 mov	 edi, DWORD PTR _ss$[ebp+4]
  0013c	33 fe		 xor	 edi, esi
  0013e	31 7d e8	 xor	 DWORD PTR _ss$[ebp+8], edi
  00141	89 7d e4	 mov	 DWORD PTR _ss$[ebp+4], edi
  00144	89 78 44	 mov	 DWORD PTR [eax+68], edi
  00147	8b 7d e8	 mov	 edi, DWORD PTR _ss$[ebp+8]
  0014a	33 cf		 xor	 ecx, edi
  0014c	89 78 48	 mov	 DWORD PTR [eax+72], edi
  0014f	89 70 40	 mov	 DWORD PTR [eax+64], esi
  00152	89 48 4c	 mov	 DWORD PTR [eax+76], ecx
  00155	8b d9		 mov	 ebx, ecx
  00157	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0015a	0f b6 db	 movzx	 ebx, bl
  0015d	8b f9		 mov	 edi, ecx
  0015f	c1 ef 18	 shr	 edi, 24			; 00000018H
  00162	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+3072]
  00169	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+2048]
  00170	8b d9		 mov	 ebx, ecx
  00172	c1 eb 08	 shr	 ebx, 8
  00175	0f b6 db	 movzx	 ebx, bl
  00178	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  0017f	0f b6 d9	 movzx	 ebx, cl
  00182	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  00189	31 7d f0	 xor	 DWORD PTR _ss$[ebp+16], edi
  0018c	8b 7d f0	 mov	 edi, DWORD PTR _ss$[ebp+16]
  0018f	89 78 50	 mov	 DWORD PTR [eax+80], edi
  00192	8b 7d f4	 mov	 edi, DWORD PTR _ss$[ebp+20]
  00195	33 7d f0	 xor	 edi, DWORD PTR _ss$[ebp+16]
  00198	31 7d f8	 xor	 DWORD PTR _ss$[ebp+24], edi
  0019b	89 7d f4	 mov	 DWORD PTR _ss$[ebp+20], edi
  0019e	89 78 54	 mov	 DWORD PTR [eax+84], edi
  001a1	8b 7d f8	 mov	 edi, DWORD PTR _ss$[ebp+24]
  001a4	33 d7		 xor	 edx, edi
  001a6	89 78 58	 mov	 DWORD PTR [eax+88], edi
  001a9	89 50 5c	 mov	 DWORD PTR [eax+92], edx

; 193  :     ke8(cx->ks, 2); ke8(cx->ks, 3);

  001ac	8b da		 mov	 ebx, edx
  001ae	c1 eb 10	 shr	 ebx, 16			; 00000010H
  001b1	0f b6 db	 movzx	 ebx, bl
  001b4	8b fa		 mov	 edi, edx
  001b6	c1 ef 18	 shr	 edi, 24			; 00000018H
  001b9	8b 3c bd 00 08
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+2048]
  001c0	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  001c7	8b da		 mov	 ebx, edx
  001c9	c1 eb 08	 shr	 ebx, 8
  001cc	0f b6 db	 movzx	 ebx, bl
  001cf	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  001d6	0f b6 da	 movzx	 ebx, dl
  001d9	33 3c 9d 00 0c
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+3072]
  001e0	33 3d 08 00 00
	00		 xor	 edi, DWORD PTR _t_rc+8
  001e6	33 f7		 xor	 esi, edi
  001e8	8b 7d e4	 mov	 edi, DWORD PTR _ss$[ebp+4]
  001eb	33 fe		 xor	 edi, esi
  001ed	31 7d e8	 xor	 DWORD PTR _ss$[ebp+8], edi
  001f0	89 7d e4	 mov	 DWORD PTR _ss$[ebp+4], edi
  001f3	89 78 64	 mov	 DWORD PTR [eax+100], edi
  001f6	8b 7d e8	 mov	 edi, DWORD PTR _ss$[ebp+8]
  001f9	33 cf		 xor	 ecx, edi
  001fb	89 78 68	 mov	 DWORD PTR [eax+104], edi
  001fe	8b d9		 mov	 ebx, ecx
  00200	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00203	0f b6 db	 movzx	 ebx, bl
  00206	8b f9		 mov	 edi, ecx
  00208	c1 ef 18	 shr	 edi, 24			; 00000018H
  0020b	89 70 60	 mov	 DWORD PTR [eax+96], esi
  0020e	89 48 6c	 mov	 DWORD PTR [eax+108], ecx
  00211	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+3072]
  00218	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+2048]
  0021f	8b d9		 mov	 ebx, ecx
  00221	c1 eb 08	 shr	 ebx, 8
  00224	0f b6 db	 movzx	 ebx, bl
  00227	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  0022e	0f b6 d9	 movzx	 ebx, cl
  00231	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  00238	31 7d f0	 xor	 DWORD PTR _ss$[ebp+16], edi
  0023b	8b 7d f0	 mov	 edi, DWORD PTR _ss$[ebp+16]
  0023e	89 78 70	 mov	 DWORD PTR [eax+112], edi
  00241	8b 7d f4	 mov	 edi, DWORD PTR _ss$[ebp+20]
  00244	33 7d f0	 xor	 edi, DWORD PTR _ss$[ebp+16]
  00247	31 7d f8	 xor	 DWORD PTR _ss$[ebp+24], edi
  0024a	89 7d f4	 mov	 DWORD PTR _ss$[ebp+20], edi
  0024d	89 78 74	 mov	 DWORD PTR [eax+116], edi
  00250	8b 7d f8	 mov	 edi, DWORD PTR _ss$[ebp+24]
  00253	33 d7		 xor	 edx, edi
  00255	89 78 78	 mov	 DWORD PTR [eax+120], edi
  00258	89 50 7c	 mov	 DWORD PTR [eax+124], edx
  0025b	8b da		 mov	 ebx, edx
  0025d	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00260	0f b6 db	 movzx	 ebx, bl
  00263	8b fa		 mov	 edi, edx
  00265	c1 ef 18	 shr	 edi, 24			; 00000018H
  00268	8b 3c bd 00 08
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+2048]
  0026f	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  00276	8b da		 mov	 ebx, edx
  00278	c1 eb 08	 shr	 ebx, 8
  0027b	0f b6 db	 movzx	 ebx, bl
  0027e	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  00285	0f b6 da	 movzx	 ebx, dl
  00288	33 3c 9d 00 0c
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+3072]
  0028f	33 3d 0c 00 00
	00		 xor	 edi, DWORD PTR _t_rc+12
  00295	33 f7		 xor	 esi, edi
  00297	8b 7d e4	 mov	 edi, DWORD PTR _ss$[ebp+4]
  0029a	33 fe		 xor	 edi, esi
  0029c	31 7d e8	 xor	 DWORD PTR _ss$[ebp+8], edi
  0029f	89 7d e4	 mov	 DWORD PTR _ss$[ebp+4], edi
  002a2	89 b8 84 00 00
	00		 mov	 DWORD PTR [eax+132], edi
  002a8	8b 7d e8	 mov	 edi, DWORD PTR _ss$[ebp+8]
  002ab	33 cf		 xor	 ecx, edi
  002ad	89 b8 88 00 00
	00		 mov	 DWORD PTR [eax+136], edi
  002b3	89 b0 80 00 00
	00		 mov	 DWORD PTR [eax+128], esi
  002b9	89 88 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ecx
  002bf	8b d9		 mov	 ebx, ecx
  002c1	c1 eb 10	 shr	 ebx, 16			; 00000010H
  002c4	0f b6 db	 movzx	 ebx, bl
  002c7	8b f9		 mov	 edi, ecx
  002c9	c1 ef 18	 shr	 edi, 24			; 00000018H
  002cc	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+3072]
  002d3	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+2048]
  002da	8b d9		 mov	 ebx, ecx
  002dc	c1 eb 08	 shr	 ebx, 8
  002df	0f b6 db	 movzx	 ebx, bl
  002e2	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  002e9	0f b6 d9	 movzx	 ebx, cl
  002ec	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  002f3	31 7d f0	 xor	 DWORD PTR _ss$[ebp+16], edi
  002f6	8b 7d f0	 mov	 edi, DWORD PTR _ss$[ebp+16]
  002f9	89 b8 90 00 00
	00		 mov	 DWORD PTR [eax+144], edi
  002ff	8b 7d f4	 mov	 edi, DWORD PTR _ss$[ebp+20]
  00302	33 7d f0	 xor	 edi, DWORD PTR _ss$[ebp+16]
  00305	31 7d f8	 xor	 DWORD PTR _ss$[ebp+24], edi
  00308	89 7d f4	 mov	 DWORD PTR _ss$[ebp+20], edi
  0030b	89 b8 94 00 00
	00		 mov	 DWORD PTR [eax+148], edi
  00311	8b 7d f8	 mov	 edi, DWORD PTR _ss$[ebp+24]
  00314	33 d7		 xor	 edx, edi
  00316	89 b8 98 00 00
	00		 mov	 DWORD PTR [eax+152], edi

; 194  :     ke8(cx->ks, 4); ke8(cx->ks, 5);

  0031c	8b da		 mov	 ebx, edx
  0031e	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00321	0f b6 db	 movzx	 ebx, bl
  00324	89 90 9c 00 00
	00		 mov	 DWORD PTR [eax+156], edx
  0032a	8b fa		 mov	 edi, edx
  0032c	c1 ef 18	 shr	 edi, 24			; 00000018H
  0032f	8b 3c bd 00 08
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+2048]
  00336	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  0033d	8b da		 mov	 ebx, edx
  0033f	c1 eb 08	 shr	 ebx, 8
  00342	0f b6 db	 movzx	 ebx, bl
  00345	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  0034c	0f b6 da	 movzx	 ebx, dl
  0034f	33 3c 9d 00 0c
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+3072]
  00356	33 3d 10 00 00
	00		 xor	 edi, DWORD PTR _t_rc+16
  0035c	33 f7		 xor	 esi, edi
  0035e	8b 7d e4	 mov	 edi, DWORD PTR _ss$[ebp+4]
  00361	89 b0 a0 00 00
	00		 mov	 DWORD PTR [eax+160], esi
  00367	33 fe		 xor	 edi, esi
  00369	31 7d e8	 xor	 DWORD PTR _ss$[ebp+8], edi
  0036c	89 7d e4	 mov	 DWORD PTR _ss$[ebp+4], edi
  0036f	89 b8 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edi
  00375	8b 7d e8	 mov	 edi, DWORD PTR _ss$[ebp+8]
  00378	33 cf		 xor	 ecx, edi
  0037a	89 b8 a8 00 00
	00		 mov	 DWORD PTR [eax+168], edi
  00380	89 88 ac 00 00
	00		 mov	 DWORD PTR [eax+172], ecx
  00386	8b d9		 mov	 ebx, ecx
  00388	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0038b	0f b6 db	 movzx	 ebx, bl
  0038e	8b f9		 mov	 edi, ecx
  00390	c1 ef 18	 shr	 edi, 24			; 00000018H
  00393	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+3072]
  0039a	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+2048]
  003a1	8b d9		 mov	 ebx, ecx
  003a3	c1 eb 08	 shr	 ebx, 8
  003a6	0f b6 db	 movzx	 ebx, bl
  003a9	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  003b0	0f b6 d9	 movzx	 ebx, cl
  003b3	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  003ba	31 7d f0	 xor	 DWORD PTR _ss$[ebp+16], edi
  003bd	8b 7d f0	 mov	 edi, DWORD PTR _ss$[ebp+16]
  003c0	89 b8 b0 00 00
	00		 mov	 DWORD PTR [eax+176], edi
  003c6	8b 7d f4	 mov	 edi, DWORD PTR _ss$[ebp+20]
  003c9	33 7d f0	 xor	 edi, DWORD PTR _ss$[ebp+16]
  003cc	31 7d f8	 xor	 DWORD PTR _ss$[ebp+24], edi
  003cf	89 7d f4	 mov	 DWORD PTR _ss$[ebp+20], edi
  003d2	89 b8 b4 00 00
	00		 mov	 DWORD PTR [eax+180], edi
  003d8	8b 7d f8	 mov	 edi, DWORD PTR _ss$[ebp+24]
  003db	33 d7		 xor	 edx, edi
  003dd	89 b8 b8 00 00
	00		 mov	 DWORD PTR [eax+184], edi
  003e3	89 90 bc 00 00
	00		 mov	 DWORD PTR [eax+188], edx
  003e9	8b da		 mov	 ebx, edx
  003eb	c1 eb 10	 shr	 ebx, 16			; 00000010H
  003ee	0f b6 db	 movzx	 ebx, bl
  003f1	8b fa		 mov	 edi, edx
  003f3	c1 ef 18	 shr	 edi, 24			; 00000018H
  003f6	8b 3c bd 00 08
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+2048]
  003fd	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  00404	8b da		 mov	 ebx, edx
  00406	c1 eb 08	 shr	 ebx, 8
  00409	0f b6 db	 movzx	 ebx, bl
  0040c	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  00413	0f b6 da	 movzx	 ebx, dl
  00416	33 3c 9d 00 0c
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+3072]
  0041d	33 3d 14 00 00
	00		 xor	 edi, DWORD PTR _t_rc+20
  00423	33 f7		 xor	 esi, edi
  00425	8b 7d e4	 mov	 edi, DWORD PTR _ss$[ebp+4]
  00428	33 fe		 xor	 edi, esi
  0042a	31 7d e8	 xor	 DWORD PTR _ss$[ebp+8], edi
  0042d	89 7d e4	 mov	 DWORD PTR _ss$[ebp+4], edi
  00430	89 b8 c4 00 00
	00		 mov	 DWORD PTR [eax+196], edi
  00436	8b 7d e8	 mov	 edi, DWORD PTR _ss$[ebp+8]
  00439	33 cf		 xor	 ecx, edi
  0043b	89 b8 c8 00 00
	00		 mov	 DWORD PTR [eax+200], edi
  00441	8b d9		 mov	 ebx, ecx
  00443	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00446	0f b6 db	 movzx	 ebx, bl
  00449	89 b0 c0 00 00
	00		 mov	 DWORD PTR [eax+192], esi
  0044f	89 88 cc 00 00
	00		 mov	 DWORD PTR [eax+204], ecx
  00455	8b f9		 mov	 edi, ecx
  00457	c1 ef 18	 shr	 edi, 24			; 00000018H
  0045a	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+3072]
  00461	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+2048]
  00468	8b d9		 mov	 ebx, ecx
  0046a	c1 eb 08	 shr	 ebx, 8
  0046d	0f b6 db	 movzx	 ebx, bl
  00470	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  00477	0f b6 d9	 movzx	 ebx, cl
  0047a	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  00481	8b df		 mov	 ebx, edi
  00483	8b 7d f0	 mov	 edi, DWORD PTR _ss$[ebp+16]
  00486	33 fb		 xor	 edi, ebx
  00488	8b 5d f4	 mov	 ebx, DWORD PTR _ss$[ebp+20]
  0048b	33 df		 xor	 ebx, edi
  0048d	89 b8 d0 00 00
	00		 mov	 DWORD PTR [eax+208], edi
  00493	8b 7d f8	 mov	 edi, DWORD PTR _ss$[ebp+24]
  00496	89 98 d4 00 00
	00		 mov	 DWORD PTR [eax+212], ebx
  0049c	33 fb		 xor	 edi, ebx
  0049e	33 d7		 xor	 edx, edi
  004a0	89 b8 d8 00 00
	00		 mov	 DWORD PTR [eax+216], edi
  004a6	89 90 dc 00 00
	00		 mov	 DWORD PTR [eax+220], edx

; 195  : #endif
; 196  :     kef8(cx->ks, 6);

  004ac	8b da		 mov	 ebx, edx
  004ae	c1 eb 10	 shr	 ebx, 16			; 00000010H
  004b1	8b fa		 mov	 edi, edx
  004b3	c1 ef 18	 shr	 edi, 24			; 00000018H
  004b6	8b 3c bd 00 08
	00 00		 mov	 edi, DWORD PTR _t_fl[edi*4+2048]
  004bd	0f b6 db	 movzx	 ebx, bl
  004c0	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4+1024]
  004c7	8b da		 mov	 ebx, edx
  004c9	c1 eb 08	 shr	 ebx, 8
  004cc	0f b6 db	 movzx	 ebx, bl
  004cf	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_fl[ebx*4]
  004d6	0f b6 d2	 movzx	 edx, dl
  004d9	33 3c 95 00 0c
	00 00		 xor	 edi, DWORD PTR _t_fl[edx*4+3072]
  004e0	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+4]
  004e3	33 3d 18 00 00
	00		 xor	 edi, DWORD PTR _t_rc+24

; 197  :     cx->inf.l = 0;

  004e9	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  004ee	83 20 00	 and	 DWORD PTR [eax], 0
  004f1	33 f7		 xor	 esi, edi
  004f3	89 70 f0	 mov	 DWORD PTR [eax-16], esi
  004f6	33 d6		 xor	 edx, esi
  004f8	8b 75 e8	 mov	 esi, DWORD PTR _ss$[ebp+8]
  004fb	33 f2		 xor	 esi, edx
  004fd	33 ce		 xor	 ecx, esi
  004ff	89 70 f8	 mov	 DWORD PTR [eax-8], esi
  00502	89 50 f4	 mov	 DWORD PTR [eax-12], edx
  00505	89 48 fc	 mov	 DWORD PTR [eax-4], ecx
  00508	5f		 pop	 edi
  00509	5e		 pop	 esi

; 198  :     cx->inf.b[0] = 14 * 16;

  0050a	c6 00 e0	 mov	 BYTE PTR [eax], 224	; 000000e0H

; 199  : 
; 200  : #ifdef USE_VIA_ACE_IF_PRESENT
; 201  :     if(VIA_ACE_AVAILABLE)
; 202  :         cx->inf.b[1] = 0xff;
; 203  : #endif
; 204  : 
; 205  : #if defined( AES_ERR_CHK )
; 206  :     return EXIT_SUCCESS;

  0050d	33 c0		 xor	 eax, eax
  0050f	5b		 pop	 ebx

; 207  : #endif
; 208  : }

  00510	c9		 leave
  00511	c2 08 00	 ret	 8
_aes_encrypt_key256@8 ENDP
_TEXT	ENDS
PUBLIC	_aes_decrypt_key256@8
EXTRN	_t_im:BYTE
; Function compile flags: /Ogsp
;	COMDAT _aes_decrypt_key256@8
_TEXT	SEGMENT
_ss$ = -40						; size = 36
tv2114 = -4						; size = 4
tv2252 = 8						; size = 4
tv2120 = 8						; size = 4
_key$ = 8						; size = 4
tv2105 = 12						; size = 4
_cx$ = 12						; size = 4
_aes_decrypt_key256@8 PROC				; COMDAT

; 498  : {   uint_32t    ss[9];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 28	 sub	 esp, 40			; 00000028H

; 499  : #if defined( d_vars )
; 500  :         d_vars;
; 501  : #endif
; 502  :     cx->ks[v(56,(0))] = ss[0] = word_in(key, 0);

  00008	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	8b 75 08	 mov	 esi, DWORD PTR _key$[ebp]
  00010	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00012	89 88 e0 00 00
	00		 mov	 DWORD PTR [eax+224], ecx

; 503  :     cx->ks[v(56,(1))] = ss[1] = word_in(key, 1);

  00018	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0001b	89 90 e4 00 00
	00		 mov	 DWORD PTR [eax+228], edx
  00021	57		 push	 edi
  00022	89 4d d8	 mov	 DWORD PTR _ss$[ebp], ecx

; 504  :     cx->ks[v(56,(2))] = ss[2] = word_in(key, 2);

  00025	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00028	89 88 e8 00 00
	00		 mov	 DWORD PTR [eax+232], ecx
  0002e	89 4d e0	 mov	 DWORD PTR _ss$[ebp+8], ecx

; 505  :     cx->ks[v(56,(3))] = ss[3] = word_in(key, 3);

  00031	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00034	89 88 ec 00 00
	00		 mov	 DWORD PTR [eax+236], ecx

; 506  : 
; 507  : #if DEC_UNROLL == NONE
; 508  :     cx->ks[v(56,(4))] = ss[4] = word_in(key, 4);
; 509  :     cx->ks[v(56,(5))] = ss[5] = word_in(key, 5);
; 510  :     cx->ks[v(56,(6))] = ss[6] = word_in(key, 6);
; 511  :     cx->ks[v(56,(7))] = ss[7] = word_in(key, 7);
; 512  :     {   uint_32t i;
; 513  : 
; 514  :         for(i = 0; i < 6; ++i)
; 515  :             k8e(cx->ks,  i);
; 516  :         k8ef(cx->ks,  6);
; 517  : #if !(DEC_ROUND == NO_TABLES)
; 518  :         for(i = N_COLS; i < 14 * N_COLS; ++i)
; 519  :             cx->ks[i] = inv_mcol(cx->ks[i]);
; 520  : 
; 521  : #endif
; 522  :     }
; 523  : #else
; 524  :     cx->ks[v(56,(4))] = ff(ss[4] = word_in(key, 4));

  0003a	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0003d	89 7d e8	 mov	 DWORD PTR _ss$[ebp+16], edi
  00040	8b 5d e8	 mov	 ebx, DWORD PTR _ss$[ebp+16]
  00043	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00046	0f b6 db	 movzx	 ebx, bl
  00049	c1 ef 18	 shr	 edi, 24			; 00000018H
  0004c	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_im[edi*4+3072]
  00053	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+2048]
  0005a	8b 5d e8	 mov	 ebx, DWORD PTR _ss$[ebp+16]
  0005d	c1 eb 08	 shr	 ebx, 8
  00060	0f b6 db	 movzx	 ebx, bl
  00063	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+1024]
  0006a	0f b6 5d e8	 movzx	 ebx, BYTE PTR _ss$[ebp+16]
  0006e	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4]
  00075	89 b8 d0 00 00
	00		 mov	 DWORD PTR [eax+208], edi

; 525  :     cx->ks[v(56,(5))] = ff(ss[5] = word_in(key, 5));

  0007b	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  0007e	89 7d ec	 mov	 DWORD PTR _ss$[ebp+20], edi
  00081	8b 5d ec	 mov	 ebx, DWORD PTR _ss$[ebp+20]
  00084	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00087	0f b6 db	 movzx	 ebx, bl
  0008a	c1 ef 18	 shr	 edi, 24			; 00000018H
  0008d	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_im[edi*4+3072]
  00094	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+2048]
  0009b	8b 5d ec	 mov	 ebx, DWORD PTR _ss$[ebp+20]
  0009e	c1 eb 08	 shr	 ebx, 8
  000a1	0f b6 db	 movzx	 ebx, bl
  000a4	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+1024]
  000ab	0f b6 5d ec	 movzx	 ebx, BYTE PTR _ss$[ebp+20]
  000af	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4]
  000b6	89 b8 d4 00 00
	00		 mov	 DWORD PTR [eax+212], edi

; 526  :     cx->ks[v(56,(6))] = ff(ss[6] = word_in(key, 6));

  000bc	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  000bf	89 7d f0	 mov	 DWORD PTR _ss$[ebp+24], edi
  000c2	8b 5d f0	 mov	 ebx, DWORD PTR _ss$[ebp+24]
  000c5	c1 eb 10	 shr	 ebx, 16			; 00000010H
  000c8	0f b6 db	 movzx	 ebx, bl
  000cb	c1 ef 18	 shr	 edi, 24			; 00000018H
  000ce	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_im[edi*4+3072]
  000d5	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+2048]
  000dc	8b 5d f0	 mov	 ebx, DWORD PTR _ss$[ebp+24]
  000df	c1 eb 08	 shr	 ebx, 8
  000e2	0f b6 db	 movzx	 ebx, bl
  000e5	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+1024]
  000ec	0f b6 5d f0	 movzx	 ebx, BYTE PTR _ss$[ebp+24]
  000f0	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4]
  000f7	89 b8 d8 00 00
	00		 mov	 DWORD PTR [eax+216], edi

; 527  :     cx->ks[v(56,(7))] = ff(ss[7] = word_in(key, 7));

  000fd	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
  00100	89 75 f4	 mov	 DWORD PTR _ss$[ebp+28], esi
  00103	8b 5d f4	 mov	 ebx, DWORD PTR _ss$[ebp+28]
  00106	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00109	0f b6 fb	 movzx	 edi, bl
  0010c	8b 5d f4	 mov	 ebx, DWORD PTR _ss$[ebp+28]
  0010f	c1 e7 02	 shl	 edi, 2
  00112	c1 eb 08	 shr	 ebx, 8
  00115	89 7d 0c	 mov	 DWORD PTR tv2105[ebp], edi
  00118	0f b6 fb	 movzx	 edi, bl
  0011b	0f b6 5d f4	 movzx	 ebx, BYTE PTR _ss$[ebp+28]
  0011f	c1 e3 02	 shl	 ebx, 2
  00122	c1 e7 02	 shl	 edi, 2
  00125	89 5d 08	 mov	 DWORD PTR tv2120[ebp], ebx
  00128	8b 9b 00 00 00
	00		 mov	 ebx, DWORD PTR _t_im[ebx]
  0012e	33 9f 00 04 00
	00		 xor	 ebx, DWORD PTR _t_im[edi+1024]
  00134	c1 ee 18	 shr	 esi, 24			; 00000018H
  00137	89 7d fc	 mov	 DWORD PTR tv2114[ebp], edi
  0013a	8b 7d 0c	 mov	 edi, DWORD PTR tv2105[ebp]
  0013d	c1 e6 02	 shl	 esi, 2
  00140	33 9f 00 08 00
	00		 xor	 ebx, DWORD PTR _t_im[edi+2048]
  00146	33 9e 00 0c 00
	00		 xor	 ebx, DWORD PTR _t_im[esi+3072]

; 528  :     kdf8(cx->ks, 0); kd8(cx->ks, 1);

  0014c	8b 7d 08	 mov	 edi, DWORD PTR tv2120[ebp]
  0014f	89 98 dc 00 00
	00		 mov	 DWORD PTR [eax+220], ebx
  00155	8b bf 00 0c 00
	00		 mov	 edi, DWORD PTR _t_fl[edi+3072]
  0015b	8b 5d fc	 mov	 ebx, DWORD PTR tv2114[ebp]
  0015e	33 bb 00 00 00
	00		 xor	 edi, DWORD PTR _t_fl[ebx]
  00164	8b 5d 0c	 mov	 ebx, DWORD PTR tv2105[ebp]
  00167	33 bb 00 04 00
	00		 xor	 edi, DWORD PTR _t_fl[ebx+1024]
  0016d	33 be 00 08 00
	00		 xor	 edi, DWORD PTR _t_fl[esi+2048]
  00173	33 3d 00 00 00
	00		 xor	 edi, DWORD PTR _t_rc
  00179	31 7d d8	 xor	 DWORD PTR _ss$[ebp], edi
  0017c	33 55 d8	 xor	 edx, DWORD PTR _ss$[ebp]
  0017f	8b 5d d8	 mov	 ebx, DWORD PTR _ss$[ebp]
  00182	8b 75 d8	 mov	 esi, DWORD PTR _ss$[ebp]
  00185	c1 ee 18	 shr	 esi, 24			; 00000018H
  00188	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  0018f	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00192	0f b6 fb	 movzx	 edi, bl
  00195	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0019c	8b 5d d8	 mov	 ebx, DWORD PTR _ss$[ebp]
  0019f	c1 eb 08	 shr	 ebx, 8
  001a2	0f b6 fb	 movzx	 edi, bl
  001a5	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  001ac	0f b6 7d d8	 movzx	 edi, BYTE PTR _ss$[ebp]
  001b0	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4]
  001b7	8b da		 mov	 ebx, edx
  001b9	89 b0 c0 00 00
	00		 mov	 DWORD PTR [eax+192], esi
  001bf	8b f2		 mov	 esi, edx
  001c1	c1 ee 18	 shr	 esi, 24			; 00000018H
  001c4	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  001cb	c1 eb 10	 shr	 ebx, 16			; 00000010H
  001ce	89 55 dc	 mov	 DWORD PTR _ss$[ebp+4], edx
  001d1	0f b6 fb	 movzx	 edi, bl
  001d4	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  001db	8b da		 mov	 ebx, edx
  001dd	0f b6 d2	 movzx	 edx, dl
  001e0	c1 eb 08	 shr	 ebx, 8
  001e3	0f b6 fb	 movzx	 edi, bl
  001e6	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  001ed	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  001f4	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp+8]
  001f7	33 55 dc	 xor	 edx, DWORD PTR _ss$[ebp+4]
  001fa	89 b0 c4 00 00
	00		 mov	 DWORD PTR [eax+196], esi
  00200	8b da		 mov	 ebx, edx
  00202	8b f2		 mov	 esi, edx
  00204	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00207	c1 ee 18	 shr	 esi, 24			; 00000018H
  0020a	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00211	0f b6 fb	 movzx	 edi, bl
  00214	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0021b	8b da		 mov	 ebx, edx
  0021d	33 ca		 xor	 ecx, edx
  0021f	89 55 e0	 mov	 DWORD PTR _ss$[ebp+8], edx
  00222	c1 eb 08	 shr	 ebx, 8
  00225	0f b6 fb	 movzx	 edi, bl
  00228	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0022f	0f b6 fa	 movzx	 edi, dl
  00232	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4]
  00239	8b d1		 mov	 edx, ecx
  0023b	c1 ea 18	 shr	 edx, 24			; 00000018H
  0023e	89 b0 c8 00 00
	00		 mov	 DWORD PTR [eax+200], esi
  00244	8b f2		 mov	 esi, edx
  00246	8b d1		 mov	 edx, ecx
  00248	c1 ea 10	 shr	 edx, 16			; 00000010H
  0024b	0f b6 fa	 movzx	 edi, dl
  0024e	8b d1		 mov	 edx, ecx
  00250	c1 ea 08	 shr	 edx, 8
  00253	0f b6 da	 movzx	 ebx, dl
  00256	0f b6 d1	 movzx	 edx, cl
  00259	c1 e2 02	 shl	 edx, 2
  0025c	89 55 08	 mov	 DWORD PTR tv2252[ebp], edx
  0025f	8b 92 00 00 00
	00		 mov	 edx, DWORD PTR _t_im[edx]
  00265	c1 e3 02	 shl	 ebx, 2
  00268	33 93 00 04 00
	00		 xor	 edx, DWORD PTR _t_im[ebx+1024]
  0026e	c1 e7 02	 shl	 edi, 2
  00271	33 97 00 08 00
	00		 xor	 edx, DWORD PTR _t_im[edi+2048]
  00277	c1 e6 02	 shl	 esi, 2
  0027a	33 96 00 0c 00
	00		 xor	 edx, DWORD PTR _t_im[esi+3072]
  00280	89 90 cc 00 00
	00		 mov	 DWORD PTR [eax+204], edx
  00286	8b 55 08	 mov	 edx, DWORD PTR tv2252[ebp]
  00289	8b 92 00 00 00
	00		 mov	 edx, DWORD PTR _t_fl[edx]
  0028f	33 93 00 04 00
	00		 xor	 edx, DWORD PTR _t_fl[ebx+1024]
  00295	33 97 00 08 00
	00		 xor	 edx, DWORD PTR _t_fl[edi+2048]
  0029b	33 96 00 0c 00
	00		 xor	 edx, DWORD PTR _t_fl[esi+3072]
  002a1	31 55 e8	 xor	 DWORD PTR _ss$[ebp+16], edx
  002a4	8b 5d e8	 mov	 ebx, DWORD PTR _ss$[ebp+16]
  002a7	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+16]
  002aa	c1 ea 18	 shr	 edx, 24			; 00000018H
  002ad	8b 14 95 00 0c
	00 00		 mov	 edx, DWORD PTR _t_im[edx*4+3072]
  002b4	c1 eb 10	 shr	 ebx, 16			; 00000010H
  002b7	0f b6 f3	 movzx	 esi, bl
  002ba	33 14 b5 00 08
	00 00		 xor	 edx, DWORD PTR _t_im[esi*4+2048]
  002c1	8b 5d e8	 mov	 ebx, DWORD PTR _ss$[ebp+16]
  002c4	c1 eb 08	 shr	 ebx, 8
  002c7	0f b6 f3	 movzx	 esi, bl
  002ca	33 14 b5 00 04
	00 00		 xor	 edx, DWORD PTR _t_im[esi*4+1024]
  002d1	0f b6 75 e8	 movzx	 esi, BYTE PTR _ss$[ebp+16]
  002d5	33 14 b5 00 00
	00 00		 xor	 edx, DWORD PTR _t_im[esi*4]
  002dc	89 90 b0 00 00
	00		 mov	 DWORD PTR [eax+176], edx
  002e2	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+20]
  002e5	33 55 e8	 xor	 edx, DWORD PTR _ss$[ebp+16]
  002e8	8b da		 mov	 ebx, edx
  002ea	8b f2		 mov	 esi, edx
  002ec	c1 eb 10	 shr	 ebx, 16			; 00000010H
  002ef	c1 ee 18	 shr	 esi, 24			; 00000018H
  002f2	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  002f9	0f b6 fb	 movzx	 edi, bl
  002fc	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00303	8b da		 mov	 ebx, edx
  00305	89 55 ec	 mov	 DWORD PTR _ss$[ebp+20], edx
  00308	0f b6 d2	 movzx	 edx, dl
  0030b	c1 eb 08	 shr	 ebx, 8
  0030e	0f b6 fb	 movzx	 edi, bl
  00311	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00318	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  0031f	8b 55 f0	 mov	 edx, DWORD PTR _ss$[ebp+24]
  00322	33 55 ec	 xor	 edx, DWORD PTR _ss$[ebp+20]
  00325	89 b0 b4 00 00
	00		 mov	 DWORD PTR [eax+180], esi
  0032b	8b da		 mov	 ebx, edx
  0032d	8b f2		 mov	 esi, edx
  0032f	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00332	0f b6 fb	 movzx	 edi, bl
  00335	8b da		 mov	 ebx, edx
  00337	89 55 f0	 mov	 DWORD PTR _ss$[ebp+24], edx
  0033a	c1 ee 18	 shr	 esi, 24			; 00000018H
  0033d	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00344	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0034b	0f b6 d2	 movzx	 edx, dl
  0034e	c1 eb 08	 shr	 ebx, 8
  00351	0f b6 fb	 movzx	 edi, bl
  00354	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0035b	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00362	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00365	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+24]
  00368	89 b0 b8 00 00
	00		 mov	 DWORD PTR [eax+184], esi
  0036e	8b da		 mov	 ebx, edx
  00370	8b f2		 mov	 esi, edx
  00372	89 55 f4	 mov	 DWORD PTR _ss$[ebp+28], edx
  00375	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00378	0f b6 fb	 movzx	 edi, bl
  0037b	8b da		 mov	 ebx, edx
  0037d	0f b6 d2	 movzx	 edx, dl
  00380	c1 e2 02	 shl	 edx, 2
  00383	89 55 08	 mov	 DWORD PTR tv2120[ebp], edx
  00386	8b 92 00 00 00
	00		 mov	 edx, DWORD PTR _t_im[edx]
  0038c	c1 eb 08	 shr	 ebx, 8
  0038f	0f b6 db	 movzx	 ebx, bl
  00392	c1 e3 02	 shl	 ebx, 2
  00395	33 93 00 04 00
	00		 xor	 edx, DWORD PTR _t_im[ebx+1024]
  0039b	c1 e7 02	 shl	 edi, 2
  0039e	33 97 00 08 00
	00		 xor	 edx, DWORD PTR _t_im[edi+2048]
  003a4	c1 ee 18	 shr	 esi, 24			; 00000018H
  003a7	c1 e6 02	 shl	 esi, 2
  003aa	33 96 00 0c 00
	00		 xor	 edx, DWORD PTR _t_im[esi+3072]
  003b0	89 90 bc 00 00
	00		 mov	 DWORD PTR [eax+188], edx
  003b6	8b 55 08	 mov	 edx, DWORD PTR tv2120[ebp]
  003b9	8b 92 00 0c 00
	00		 mov	 edx, DWORD PTR _t_fl[edx+3072]
  003bf	33 93 00 00 00
	00		 xor	 edx, DWORD PTR _t_fl[ebx]
  003c5	33 97 00 04 00
	00		 xor	 edx, DWORD PTR _t_fl[edi+1024]
  003cb	33 96 00 08 00
	00		 xor	 edx, DWORD PTR _t_fl[esi+2048]
  003d1	33 15 04 00 00
	00		 xor	 edx, DWORD PTR _t_rc+4
  003d7	89 55 f8	 mov	 DWORD PTR _ss$[ebp+32], edx
  003da	31 55 d8	 xor	 DWORD PTR _ss$[ebp], edx
  003dd	8b da		 mov	 ebx, edx
  003df	8b f2		 mov	 esi, edx
  003e1	c1 ee 18	 shr	 esi, 24			; 00000018H
  003e4	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  003eb	c1 eb 10	 shr	 ebx, 16			; 00000010H
  003ee	0f b6 fb	 movzx	 edi, bl
  003f1	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  003f8	8b da		 mov	 ebx, edx
  003fa	c1 eb 08	 shr	 ebx, 8
  003fd	0f b6 fb	 movzx	 edi, bl
  00400	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00407	8b 7d e0	 mov	 edi, DWORD PTR _ss$[ebp+8]
  0040a	0f b6 d2	 movzx	 edx, dl
  0040d	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00414	8b 55 d8	 mov	 edx, DWORD PTR _ss$[ebp]
  00417	33 b0 c0 00 00
	00		 xor	 esi, DWORD PTR [eax+192]
  0041d	31 55 dc	 xor	 DWORD PTR _ss$[ebp+4], edx
  00420	33 7d dc	 xor	 edi, DWORD PTR _ss$[ebp+4]
  00423	89 b0 a0 00 00
	00		 mov	 DWORD PTR [eax+160], esi
  00429	33 b0 c4 00 00
	00		 xor	 esi, DWORD PTR [eax+196]
  0042f	33 cf		 xor	 ecx, edi
  00431	89 b0 a4 00 00
	00		 mov	 DWORD PTR [eax+164], esi
  00437	33 b0 c8 00 00
	00		 xor	 esi, DWORD PTR [eax+200]
  0043d	8b d1		 mov	 edx, ecx
  0043f	89 b0 a8 00 00
	00		 mov	 DWORD PTR [eax+168], esi
  00445	33 b0 cc 00 00
	00		 xor	 esi, DWORD PTR [eax+204]
  0044b	c1 ea 18	 shr	 edx, 24			; 00000018H
  0044e	89 b0 ac 00 00
	00		 mov	 DWORD PTR [eax+172], esi
  00454	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  0045b	89 7d e0	 mov	 DWORD PTR _ss$[ebp+8], edi
  0045e	8b d9		 mov	 ebx, ecx
  00460	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00463	0f b6 fb	 movzx	 edi, bl
  00466	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  0046d	8b d1		 mov	 edx, ecx
  0046f	c1 ea 08	 shr	 edx, 8
  00472	0f b6 d2	 movzx	 edx, dl
  00475	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  0047c	0f b6 d1	 movzx	 edx, cl
  0047f	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  00486	8b d6		 mov	 edx, esi
  00488	31 55 e8	 xor	 DWORD PTR _ss$[ebp+16], edx
  0048b	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  0048e	c1 ee 18	 shr	 esi, 24			; 00000018H
  00491	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00498	8b da		 mov	 ebx, edx
  0049a	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0049d	0f b6 fb	 movzx	 edi, bl
  004a0	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  004a7	8b da		 mov	 ebx, edx
  004a9	c1 eb 08	 shr	 ebx, 8
  004ac	0f b6 fb	 movzx	 edi, bl
  004af	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  004b6	0f b6 d2	 movzx	 edx, dl
  004b9	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  004c0	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+16]
  004c3	33 b0 b0 00 00
	00		 xor	 esi, DWORD PTR [eax+176]
  004c9	31 55 ec	 xor	 DWORD PTR _ss$[ebp+20], edx
  004cc	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+20]
  004cf	31 55 f0	 xor	 DWORD PTR _ss$[ebp+24], edx
  004d2	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+28]
  004d5	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+24]
  004d8	89 b0 90 00 00
	00		 mov	 DWORD PTR [eax+144], esi
  004de	33 b0 b4 00 00
	00		 xor	 esi, DWORD PTR [eax+180]

; 529  :     kd8(cx->ks, 2);  kd8(cx->ks, 3);

  004e4	8b da		 mov	 ebx, edx
  004e6	89 b0 94 00 00
	00		 mov	 DWORD PTR [eax+148], esi
  004ec	33 b0 b8 00 00
	00		 xor	 esi, DWORD PTR [eax+184]
  004f2	c1 eb 10	 shr	 ebx, 16			; 00000010H
  004f5	89 b0 98 00 00
	00		 mov	 DWORD PTR [eax+152], esi
  004fb	33 b0 bc 00 00
	00		 xor	 esi, DWORD PTR [eax+188]
  00501	0f b6 fb	 movzx	 edi, bl
  00504	89 b0 9c 00 00
	00		 mov	 DWORD PTR [eax+156], esi
  0050a	8b f2		 mov	 esi, edx
  0050c	c1 ee 18	 shr	 esi, 24			; 00000018H
  0050f	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  00516	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  0051d	8b da		 mov	 ebx, edx
  0051f	c1 eb 08	 shr	 ebx, 8
  00522	89 55 f4	 mov	 DWORD PTR _ss$[ebp+28], edx
  00525	0f b6 fb	 movzx	 edi, bl
  00528	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  0052f	0f b6 d2	 movzx	 edx, dl
  00532	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  00539	33 35 08 00 00
	00		 xor	 esi, DWORD PTR _t_rc+8
  0053f	8b d6		 mov	 edx, esi
  00541	31 55 d8	 xor	 DWORD PTR _ss$[ebp], edx
  00544	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  00547	c1 ee 18	 shr	 esi, 24			; 00000018H
  0054a	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00551	8b da		 mov	 ebx, edx
  00553	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00556	0f b6 fb	 movzx	 edi, bl
  00559	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00560	8b da		 mov	 ebx, edx
  00562	c1 eb 08	 shr	 ebx, 8
  00565	0f b6 d2	 movzx	 edx, dl
  00568	0f b6 fb	 movzx	 edi, bl
  0056b	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00572	8b 7d e0	 mov	 edi, DWORD PTR _ss$[ebp+8]
  00575	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  0057c	8b 55 d8	 mov	 edx, DWORD PTR _ss$[ebp]
  0057f	33 b0 a0 00 00
	00		 xor	 esi, DWORD PTR [eax+160]
  00585	31 55 dc	 xor	 DWORD PTR _ss$[ebp+4], edx
  00588	33 7d dc	 xor	 edi, DWORD PTR _ss$[ebp+4]
  0058b	89 b0 80 00 00
	00		 mov	 DWORD PTR [eax+128], esi
  00591	33 b0 a4 00 00
	00		 xor	 esi, DWORD PTR [eax+164]
  00597	33 cf		 xor	 ecx, edi
  00599	89 b0 84 00 00
	00		 mov	 DWORD PTR [eax+132], esi
  0059f	33 b0 a8 00 00
	00		 xor	 esi, DWORD PTR [eax+168]
  005a5	8b d1		 mov	 edx, ecx
  005a7	89 b0 88 00 00
	00		 mov	 DWORD PTR [eax+136], esi
  005ad	33 b0 ac 00 00
	00		 xor	 esi, DWORD PTR [eax+172]
  005b3	c1 ea 18	 shr	 edx, 24			; 00000018H
  005b6	89 b0 8c 00 00
	00		 mov	 DWORD PTR [eax+140], esi
  005bc	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  005c3	89 7d e0	 mov	 DWORD PTR _ss$[ebp+8], edi
  005c6	8b d9		 mov	 ebx, ecx
  005c8	c1 eb 10	 shr	 ebx, 16			; 00000010H
  005cb	0f b6 fb	 movzx	 edi, bl
  005ce	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  005d5	8b d1		 mov	 edx, ecx
  005d7	c1 ea 08	 shr	 edx, 8
  005da	0f b6 d2	 movzx	 edx, dl
  005dd	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  005e4	0f b6 d1	 movzx	 edx, cl
  005e7	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  005ee	8b d6		 mov	 edx, esi
  005f0	31 55 e8	 xor	 DWORD PTR _ss$[ebp+16], edx
  005f3	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  005f6	c1 ee 18	 shr	 esi, 24			; 00000018H
  005f9	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00600	8b da		 mov	 ebx, edx
  00602	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00605	0f b6 fb	 movzx	 edi, bl
  00608	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0060f	8b da		 mov	 ebx, edx
  00611	c1 eb 08	 shr	 ebx, 8
  00614	0f b6 fb	 movzx	 edi, bl
  00617	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0061e	0f b6 d2	 movzx	 edx, dl
  00621	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00628	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+16]
  0062b	33 b0 90 00 00
	00		 xor	 esi, DWORD PTR [eax+144]
  00631	31 55 ec	 xor	 DWORD PTR _ss$[ebp+20], edx
  00634	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+20]
  00637	31 55 f0	 xor	 DWORD PTR _ss$[ebp+24], edx
  0063a	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+28]
  0063d	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+24]
  00640	89 70 70	 mov	 DWORD PTR [eax+112], esi
  00643	33 b0 94 00 00
	00		 xor	 esi, DWORD PTR [eax+148]
  00649	8b da		 mov	 ebx, edx
  0064b	89 70 74	 mov	 DWORD PTR [eax+116], esi
  0064e	33 b0 98 00 00
	00		 xor	 esi, DWORD PTR [eax+152]
  00654	89 55 f4	 mov	 DWORD PTR _ss$[ebp+28], edx
  00657	89 70 78	 mov	 DWORD PTR [eax+120], esi
  0065a	33 b0 9c 00 00
	00		 xor	 esi, DWORD PTR [eax+156]
  00660	89 70 7c	 mov	 DWORD PTR [eax+124], esi
  00663	8b f2		 mov	 esi, edx
  00665	c1 ee 18	 shr	 esi, 24			; 00000018H
  00668	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0066b	0f b6 fb	 movzx	 edi, bl
  0066e	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  00675	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  0067c	8b da		 mov	 ebx, edx
  0067e	c1 eb 08	 shr	 ebx, 8
  00681	0f b6 d2	 movzx	 edx, dl
  00684	0f b6 fb	 movzx	 edi, bl
  00687	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  0068e	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  00695	33 35 0c 00 00
	00		 xor	 esi, DWORD PTR _t_rc+12
  0069b	8b d6		 mov	 edx, esi
  0069d	31 55 d8	 xor	 DWORD PTR _ss$[ebp], edx
  006a0	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  006a3	c1 ee 18	 shr	 esi, 24			; 00000018H
  006a6	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  006ad	8b da		 mov	 ebx, edx
  006af	c1 eb 10	 shr	 ebx, 16			; 00000010H
  006b2	0f b6 fb	 movzx	 edi, bl
  006b5	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  006bc	8b da		 mov	 ebx, edx
  006be	0f b6 d2	 movzx	 edx, dl
  006c1	c1 eb 08	 shr	 ebx, 8
  006c4	0f b6 fb	 movzx	 edi, bl
  006c7	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  006ce	8b 7d e0	 mov	 edi, DWORD PTR _ss$[ebp+8]
  006d1	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  006d8	8b 55 d8	 mov	 edx, DWORD PTR _ss$[ebp]
  006db	33 b0 80 00 00
	00		 xor	 esi, DWORD PTR [eax+128]
  006e1	31 55 dc	 xor	 DWORD PTR _ss$[ebp+4], edx
  006e4	33 7d dc	 xor	 edi, DWORD PTR _ss$[ebp+4]
  006e7	89 70 60	 mov	 DWORD PTR [eax+96], esi
  006ea	33 b0 84 00 00
	00		 xor	 esi, DWORD PTR [eax+132]
  006f0	33 cf		 xor	 ecx, edi
  006f2	89 70 64	 mov	 DWORD PTR [eax+100], esi
  006f5	33 b0 88 00 00
	00		 xor	 esi, DWORD PTR [eax+136]
  006fb	8b d1		 mov	 edx, ecx
  006fd	89 70 68	 mov	 DWORD PTR [eax+104], esi
  00700	33 b0 8c 00 00
	00		 xor	 esi, DWORD PTR [eax+140]
  00706	c1 ea 18	 shr	 edx, 24			; 00000018H
  00709	89 70 6c	 mov	 DWORD PTR [eax+108], esi
  0070c	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  00713	8b d9		 mov	 ebx, ecx
  00715	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00718	89 7d e0	 mov	 DWORD PTR _ss$[ebp+8], edi
  0071b	0f b6 fb	 movzx	 edi, bl
  0071e	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  00725	8b d1		 mov	 edx, ecx
  00727	c1 ea 08	 shr	 edx, 8
  0072a	0f b6 d2	 movzx	 edx, dl
  0072d	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  00734	0f b6 d1	 movzx	 edx, cl
  00737	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  0073e	8b d6		 mov	 edx, esi
  00740	31 55 e8	 xor	 DWORD PTR _ss$[ebp+16], edx
  00743	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  00746	8b da		 mov	 ebx, edx
  00748	c1 ee 18	 shr	 esi, 24			; 00000018H
  0074b	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00752	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00755	0f b6 fb	 movzx	 edi, bl
  00758	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0075f	8b da		 mov	 ebx, edx
  00761	c1 eb 08	 shr	 ebx, 8
  00764	0f b6 d2	 movzx	 edx, dl
  00767	0f b6 fb	 movzx	 edi, bl
  0076a	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00771	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00778	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+16]
  0077b	33 70 70	 xor	 esi, DWORD PTR [eax+112]
  0077e	31 55 ec	 xor	 DWORD PTR _ss$[ebp+20], edx
  00781	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+20]
  00784	31 55 f0	 xor	 DWORD PTR _ss$[ebp+24], edx
  00787	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+28]
  0078a	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+24]
  0078d	89 70 50	 mov	 DWORD PTR [eax+80], esi
  00790	33 70 74	 xor	 esi, DWORD PTR [eax+116]
  00793	89 55 f4	 mov	 DWORD PTR _ss$[ebp+28], edx
  00796	89 70 54	 mov	 DWORD PTR [eax+84], esi
  00799	33 70 78	 xor	 esi, DWORD PTR [eax+120]
  0079c	89 70 58	 mov	 DWORD PTR [eax+88], esi
  0079f	33 70 7c	 xor	 esi, DWORD PTR [eax+124]
  007a2	89 70 5c	 mov	 DWORD PTR [eax+92], esi

; 530  :     kd8(cx->ks, 4);  kd8(cx->ks, 5);

  007a5	8b da		 mov	 ebx, edx
  007a7	8b f2		 mov	 esi, edx
  007a9	c1 ee 18	 shr	 esi, 24			; 00000018H
  007ac	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  007b3	c1 eb 10	 shr	 ebx, 16			; 00000010H
  007b6	0f b6 fb	 movzx	 edi, bl
  007b9	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  007c0	8b da		 mov	 ebx, edx
  007c2	c1 eb 08	 shr	 ebx, 8
  007c5	0f b6 fb	 movzx	 edi, bl
  007c8	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  007cf	0f b6 d2	 movzx	 edx, dl
  007d2	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  007d9	33 35 10 00 00
	00		 xor	 esi, DWORD PTR _t_rc+16
  007df	8b d6		 mov	 edx, esi
  007e1	31 55 d8	 xor	 DWORD PTR _ss$[ebp], edx
  007e4	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  007e7	c1 ee 18	 shr	 esi, 24			; 00000018H
  007ea	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  007f1	8b da		 mov	 ebx, edx
  007f3	c1 eb 10	 shr	 ebx, 16			; 00000010H
  007f6	0f b6 fb	 movzx	 edi, bl
  007f9	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00800	8b da		 mov	 ebx, edx
  00802	c1 eb 08	 shr	 ebx, 8
  00805	0f b6 d2	 movzx	 edx, dl
  00808	0f b6 fb	 movzx	 edi, bl
  0080b	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00812	8b 7d e0	 mov	 edi, DWORD PTR _ss$[ebp+8]
  00815	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  0081c	8b 55 d8	 mov	 edx, DWORD PTR _ss$[ebp]
  0081f	33 70 60	 xor	 esi, DWORD PTR [eax+96]
  00822	31 55 dc	 xor	 DWORD PTR _ss$[ebp+4], edx
  00825	33 7d dc	 xor	 edi, DWORD PTR _ss$[ebp+4]
  00828	89 70 40	 mov	 DWORD PTR [eax+64], esi
  0082b	33 70 64	 xor	 esi, DWORD PTR [eax+100]
  0082e	33 cf		 xor	 ecx, edi
  00830	89 70 44	 mov	 DWORD PTR [eax+68], esi
  00833	33 70 68	 xor	 esi, DWORD PTR [eax+104]
  00836	8b d1		 mov	 edx, ecx
  00838	89 70 48	 mov	 DWORD PTR [eax+72], esi
  0083b	33 70 6c	 xor	 esi, DWORD PTR [eax+108]
  0083e	c1 ea 18	 shr	 edx, 24			; 00000018H
  00841	89 70 4c	 mov	 DWORD PTR [eax+76], esi
  00844	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  0084b	8b d9		 mov	 ebx, ecx
  0084d	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00850	89 7d e0	 mov	 DWORD PTR _ss$[ebp+8], edi
  00853	0f b6 fb	 movzx	 edi, bl
  00856	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  0085d	8b d1		 mov	 edx, ecx
  0085f	c1 ea 08	 shr	 edx, 8
  00862	0f b6 d2	 movzx	 edx, dl
  00865	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  0086c	0f b6 d1	 movzx	 edx, cl
  0086f	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  00876	8b d6		 mov	 edx, esi
  00878	31 55 e8	 xor	 DWORD PTR _ss$[ebp+16], edx
  0087b	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  0087e	8b da		 mov	 ebx, edx
  00880	c1 ee 18	 shr	 esi, 24			; 00000018H
  00883	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  0088a	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0088d	0f b6 fb	 movzx	 edi, bl
  00890	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00897	8b da		 mov	 ebx, edx
  00899	c1 eb 08	 shr	 ebx, 8
  0089c	0f b6 fb	 movzx	 edi, bl
  0089f	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  008a6	0f b6 d2	 movzx	 edx, dl
  008a9	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  008b0	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+16]
  008b3	33 70 50	 xor	 esi, DWORD PTR [eax+80]
  008b6	31 55 ec	 xor	 DWORD PTR _ss$[ebp+20], edx
  008b9	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+20]
  008bc	31 55 f0	 xor	 DWORD PTR _ss$[ebp+24], edx
  008bf	89 70 30	 mov	 DWORD PTR [eax+48], esi
  008c2	33 70 54	 xor	 esi, DWORD PTR [eax+84]
  008c5	89 70 34	 mov	 DWORD PTR [eax+52], esi
  008c8	33 70 58	 xor	 esi, DWORD PTR [eax+88]
  008cb	89 70 38	 mov	 DWORD PTR [eax+56], esi
  008ce	33 70 5c	 xor	 esi, DWORD PTR [eax+92]
  008d1	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+28]
  008d4	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+24]
  008d7	89 70 3c	 mov	 DWORD PTR [eax+60], esi
  008da	8b da		 mov	 ebx, edx
  008dc	8b f2		 mov	 esi, edx
  008de	c1 ee 18	 shr	 esi, 24			; 00000018H
  008e1	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  008e8	c1 eb 10	 shr	 ebx, 16			; 00000010H
  008eb	0f b6 fb	 movzx	 edi, bl
  008ee	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  008f5	8b da		 mov	 ebx, edx
  008f7	c1 eb 08	 shr	 ebx, 8
  008fa	0f b6 fb	 movzx	 edi, bl
  008fd	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  00904	89 55 f4	 mov	 DWORD PTR _ss$[ebp+28], edx
  00907	0f b6 d2	 movzx	 edx, dl
  0090a	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  00911	33 35 14 00 00
	00		 xor	 esi, DWORD PTR _t_rc+20
  00917	8b d6		 mov	 edx, esi
  00919	31 55 d8	 xor	 DWORD PTR _ss$[ebp], edx
  0091c	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  0091f	c1 ee 18	 shr	 esi, 24			; 00000018H
  00922	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00929	8b da		 mov	 ebx, edx
  0092b	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0092e	0f b6 fb	 movzx	 edi, bl
  00931	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00938	8b da		 mov	 ebx, edx
  0093a	c1 eb 08	 shr	 ebx, 8
  0093d	0f b6 fb	 movzx	 edi, bl
  00940	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00947	8b 7d e0	 mov	 edi, DWORD PTR _ss$[ebp+8]
  0094a	0f b6 d2	 movzx	 edx, dl
  0094d	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00954	8b 55 d8	 mov	 edx, DWORD PTR _ss$[ebp]
  00957	33 70 40	 xor	 esi, DWORD PTR [eax+64]
  0095a	31 55 dc	 xor	 DWORD PTR _ss$[ebp+4], edx
  0095d	33 7d dc	 xor	 edi, DWORD PTR _ss$[ebp+4]
  00960	89 70 20	 mov	 DWORD PTR [eax+32], esi
  00963	33 70 44	 xor	 esi, DWORD PTR [eax+68]
  00966	33 cf		 xor	 ecx, edi
  00968	89 70 24	 mov	 DWORD PTR [eax+36], esi
  0096b	33 70 48	 xor	 esi, DWORD PTR [eax+72]
  0096e	8b d1		 mov	 edx, ecx
  00970	89 70 28	 mov	 DWORD PTR [eax+40], esi
  00973	33 70 4c	 xor	 esi, DWORD PTR [eax+76]
  00976	c1 ea 18	 shr	 edx, 24			; 00000018H
  00979	89 70 2c	 mov	 DWORD PTR [eax+44], esi
  0097c	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  00983	8b d9		 mov	 ebx, ecx
  00985	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00988	89 7d e0	 mov	 DWORD PTR _ss$[ebp+8], edi
  0098b	0f b6 fb	 movzx	 edi, bl
  0098e	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  00995	8b d1		 mov	 edx, ecx
  00997	c1 ea 08	 shr	 edx, 8
  0099a	0f b6 d2	 movzx	 edx, dl
  0099d	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  009a4	0f b6 d1	 movzx	 edx, cl
  009a7	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  009ae	8b d6		 mov	 edx, esi
  009b0	31 55 e8	 xor	 DWORD PTR _ss$[ebp+16], edx
  009b3	89 75 f8	 mov	 DWORD PTR _ss$[ebp+32], esi
  009b6	8b da		 mov	 ebx, edx
  009b8	c1 ee 18	 shr	 esi, 24			; 00000018H
  009bb	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  009c2	c1 eb 10	 shr	 ebx, 16			; 00000010H
  009c5	0f b6 fb	 movzx	 edi, bl
  009c8	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  009cf	8b da		 mov	 ebx, edx
  009d1	c1 eb 08	 shr	 ebx, 8
  009d4	0f b6 fb	 movzx	 edi, bl
  009d7	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  009de	0f b6 d2	 movzx	 edx, dl
  009e1	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  009e8	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+16]
  009eb	33 70 30	 xor	 esi, DWORD PTR [eax+48]
  009ee	31 55 ec	 xor	 DWORD PTR _ss$[ebp+20], edx
  009f1	89 70 10	 mov	 DWORD PTR [eax+16], esi
  009f4	33 70 34	 xor	 esi, DWORD PTR [eax+52]
  009f7	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+20]
  009fa	31 55 f0	 xor	 DWORD PTR _ss$[ebp+24], edx
  009fd	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00a00	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+24]
  00a03	89 70 14	 mov	 DWORD PTR [eax+20], esi
  00a06	33 70 38	 xor	 esi, DWORD PTR [eax+56]

; 531  :     kdl8(cx->ks, 6);

  00a09	8b da		 mov	 ebx, edx
  00a0b	89 70 18	 mov	 DWORD PTR [eax+24], esi
  00a0e	33 70 3c	 xor	 esi, DWORD PTR [eax+60]
  00a11	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00a14	89 70 1c	 mov	 DWORD PTR [eax+28], esi
  00a17	8b f2		 mov	 esi, edx
  00a19	c1 ee 18	 shr	 esi, 24			; 00000018H
  00a1c	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  00a23	0f b6 fb	 movzx	 edi, bl
  00a26	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  00a2d	8b da		 mov	 ebx, edx
  00a2f	c1 eb 08	 shr	 ebx, 8
  00a32	0f b6 fb	 movzx	 edi, bl
  00a35	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  00a3c	0f b6 d2	 movzx	 edx, dl
  00a3f	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  00a46	5f		 pop	 edi
  00a47	33 35 18 00 00
	00		 xor	 esi, DWORD PTR _t_rc+24
  00a4d	31 75 d8	 xor	 DWORD PTR _ss$[ebp], esi
  00a50	8b 55 d8	 mov	 edx, DWORD PTR _ss$[ebp]
  00a53	8b 75 dc	 mov	 esi, DWORD PTR _ss$[ebp+4]
  00a56	33 f2		 xor	 esi, edx
  00a58	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00a5b	89 75 dc	 mov	 DWORD PTR _ss$[ebp+4], esi
  00a5e	8b 75 e0	 mov	 esi, DWORD PTR _ss$[ebp+8]
  00a61	33 75 dc	 xor	 esi, DWORD PTR _ss$[ebp+4]
  00a64	89 10		 mov	 DWORD PTR [eax], edx
  00a66	33 ce		 xor	 ecx, esi
  00a68	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00a6b	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 532  : #endif
; 533  :     cx->inf.l = 0;

  00a6e	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  00a73	83 20 00	 and	 DWORD PTR [eax], 0
  00a76	5e		 pop	 esi

; 534  :     cx->inf.b[0] = 14 * 16;

  00a77	c6 00 e0	 mov	 BYTE PTR [eax], 224	; 000000e0H

; 535  : 
; 536  : #ifdef USE_VIA_ACE_IF_PRESENT
; 537  :     if(VIA_ACE_AVAILABLE)
; 538  :         cx->inf.b[1] = 0xff;
; 539  : #endif
; 540  : 
; 541  : #if defined( AES_ERR_CHK )
; 542  :     return EXIT_SUCCESS;

  00a7a	33 c0		 xor	 eax, eax
  00a7c	5b		 pop	 ebx

; 543  : #endif
; 544  : }

  00a7d	c9		 leave
  00a7e	c2 08 00	 ret	 8
_aes_decrypt_key256@8 ENDP
_TEXT	ENDS
END
