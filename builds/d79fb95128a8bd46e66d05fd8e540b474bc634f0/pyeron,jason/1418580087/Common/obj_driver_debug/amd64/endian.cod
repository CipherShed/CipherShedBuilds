; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	MirrorBytes64
;	COMDAT pdata
; File c:\home\public\desktop\projects\ciphershed.build\src\common\endian.c
pdata	SEGMENT
$pdata$MirrorBytes64 DD imagerel $LN3
	DD	imagerel $LN3+259
	DD	imagerel $unwind$MirrorBytes64
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$MirrorBytes64 DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT MirrorBytes64
_TEXT	SEGMENT
n$ = 0
x$ = 32
MirrorBytes64 PROC					; COMDAT

; 32   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 33   : 	uint64 n = (unsigned __int8) x;

  00009	0f b6 44 24 20	 movzx	 eax, BYTE PTR x$[rsp]
  0000e	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax

; 34   : 	n <<= 8; n |= (unsigned __int8) (x >> 8);

  00012	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  00016	48 c1 e0 08	 shl	 rax, 8
  0001a	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax
  0001e	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  00023	48 c1 e8 08	 shr	 rax, 8
  00027	0f b6 c8	 movzx	 ecx, al
  0002a	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  0002e	48 0b c1	 or	 rax, rcx
  00031	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax

; 35   : 	n <<= 8; n |= (unsigned __int8) (x >> 16);

  00035	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  00039	48 c1 e0 08	 shl	 rax, 8
  0003d	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax
  00041	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  00046	48 c1 e8 10	 shr	 rax, 16
  0004a	0f b6 c8	 movzx	 ecx, al
  0004d	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  00051	48 0b c1	 or	 rax, rcx
  00054	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax

; 36   : 	n <<= 8; n |= (unsigned __int8) (x >> 24);

  00058	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  0005c	48 c1 e0 08	 shl	 rax, 8
  00060	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax
  00064	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  00069	48 c1 e8 18	 shr	 rax, 24
  0006d	0f b6 c8	 movzx	 ecx, al
  00070	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  00074	48 0b c1	 or	 rax, rcx
  00077	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax

; 37   : 	n <<= 8; n |= (unsigned __int8) (x >> 32);

  0007b	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  0007f	48 c1 e0 08	 shl	 rax, 8
  00083	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax
  00087	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  0008c	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00090	0f b6 c8	 movzx	 ecx, al
  00093	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  00097	48 0b c1	 or	 rax, rcx
  0009a	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax

; 38   : 	n <<= 8; n |= (unsigned __int8) (x >> 40);

  0009e	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  000a2	48 c1 e0 08	 shl	 rax, 8
  000a6	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax
  000aa	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  000af	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  000b3	0f b6 c8	 movzx	 ecx, al
  000b6	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  000ba	48 0b c1	 or	 rax, rcx
  000bd	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax

; 39   : 	n <<= 8; n |= (unsigned __int8) (x >> 48);

  000c1	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  000c5	48 c1 e0 08	 shl	 rax, 8
  000c9	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax
  000cd	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  000d2	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  000d6	0f b6 c8	 movzx	 ecx, al
  000d9	48 8b 04 24	 mov	 rax, QWORD PTR n$[rsp]
  000dd	48 0b c1	 or	 rax, rcx
  000e0	48 89 04 24	 mov	 QWORD PTR n$[rsp], rax

; 40   : 	return (n << 8) | (unsigned __int8) (x >> 56);

  000e4	48 8b 14 24	 mov	 rdx, QWORD PTR n$[rsp]
  000e8	48 c1 e2 08	 shl	 rdx, 8
  000ec	48 8b 44 24 20	 mov	 rax, QWORD PTR x$[rsp]
  000f1	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  000f5	0f b6 c8	 movzx	 ecx, al
  000f8	48 8b c2	 mov	 rax, rdx
  000fb	48 0b c1	 or	 rax, rcx

; 41   : }

  000fe	48 83 c4 18	 add	 rsp, 24
  00102	c3		 ret	 0
MirrorBytes64 ENDP
_TEXT	ENDS
PUBLIC	MirrorBytes32
;	COMDAT pdata
pdata	SEGMENT
$pdata$MirrorBytes32 DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$MirrorBytes32
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$MirrorBytes32 DD 010801H
	DD	02208H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT MirrorBytes32
_TEXT	SEGMENT
n$ = 0
x$ = 32
MirrorBytes32 PROC					; COMDAT

; 23   : {

$LN3:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	48 83 ec 18	 sub	 rsp, 24

; 24   : 	unsigned __int32 n = (unsigned __int8) x;

  00008	0f b6 44 24 20	 movzx	 eax, BYTE PTR x$[rsp]
  0000d	89 04 24	 mov	 DWORD PTR n$[rsp], eax

; 25   : 	n <<= 8; n |= (unsigned __int8) (x >> 8);

  00010	8b 04 24	 mov	 eax, DWORD PTR n$[rsp]
  00013	c1 e0 08	 shl	 eax, 8
  00016	89 04 24	 mov	 DWORD PTR n$[rsp], eax
  00019	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  0001d	c1 e8 08	 shr	 eax, 8
  00020	0f b6 c8	 movzx	 ecx, al
  00023	8b 04 24	 mov	 eax, DWORD PTR n$[rsp]
  00026	0b c1		 or	 eax, ecx
  00028	89 04 24	 mov	 DWORD PTR n$[rsp], eax

; 26   : 	n <<= 8; n |= (unsigned __int8) (x >> 16);

  0002b	8b 04 24	 mov	 eax, DWORD PTR n$[rsp]
  0002e	c1 e0 08	 shl	 eax, 8
  00031	89 04 24	 mov	 DWORD PTR n$[rsp], eax
  00034	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00038	c1 e8 10	 shr	 eax, 16
  0003b	0f b6 c8	 movzx	 ecx, al
  0003e	8b 04 24	 mov	 eax, DWORD PTR n$[rsp]
  00041	0b c1		 or	 eax, ecx
  00043	89 04 24	 mov	 DWORD PTR n$[rsp], eax

; 27   : 	return (n << 8) | (unsigned __int8) (x >> 24);

  00046	8b 14 24	 mov	 edx, DWORD PTR n$[rsp]
  00049	c1 e2 08	 shl	 edx, 8
  0004c	8b 44 24 20	 mov	 eax, DWORD PTR x$[rsp]
  00050	c1 e8 18	 shr	 eax, 24
  00053	0f b6 c8	 movzx	 ecx, al
  00056	8b c2		 mov	 eax, edx
  00058	0b c1		 or	 eax, ecx

; 28   : }

  0005a	48 83 c4 18	 add	 rsp, 24
  0005e	c3		 ret	 0
MirrorBytes32 ENDP
_TEXT	ENDS
PUBLIC	MirrorBytes16
; Function compile flags: /Odtp
;	COMDAT MirrorBytes16
_TEXT	SEGMENT
x$ = 8
MirrorBytes16 PROC					; COMDAT

; 17   : {

  00000	66 89 4c 24 08	 mov	 WORD PTR [rsp+8], cx

; 18   : 	return (x << 8) | (x >> 8);

  00005	0f b7 44 24 08	 movzx	 eax, WORD PTR x$[rsp]
  0000a	c1 e0 08	 shl	 eax, 8
  0000d	0f b7 4c 24 08	 movzx	 ecx, WORD PTR x$[rsp]
  00012	c1 f9 08	 sar	 ecx, 8
  00015	0b c1		 or	 eax, ecx

; 19   : }

  00017	c3		 ret	 0
MirrorBytes16 ENDP
END
