; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\Public\Desktop\projects\ciphershed\src\Mount\MainCom.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0P@GHFPNOJB@bad?5allocation?$AA@		; `string'
PUBLIC	?_Min@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Min
PUBLIC	?_Max@?$AtlLimits@H@ATL@@2HB			; ATL::AtlLimits<int>::_Max
PUBLIC	?_Min@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Min
PUBLIC	?_Max@?$AtlLimits@I@ATL@@2IB			; ATL::AtlLimits<unsigned int>::_Max
PUBLIC	?_Min@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Min
PUBLIC	?_Max@?$AtlLimits@J@ATL@@2JB			; ATL::AtlLimits<long>::_Max
PUBLIC	?_Min@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Min
PUBLIC	?_Max@?$AtlLimits@K@ATL@@2KB			; ATL::AtlLimits<unsigned long>::_Max
PUBLIC	?_Min@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_J@ATL@@2_JB			; ATL::AtlLimits<__int64>::_Max
PUBLIC	?_Min@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Min
PUBLIC	?_Max@?$AtlLimits@_K@ATL@@2_KB			; ATL::AtlLimits<unsigned __int64>::_Max
PUBLIC	?m_bInitFailed@CAtlBaseModule@ATL@@2_NA		; ATL::CAtlBaseModule::m_bInitFailed
PUBLIC	?VT@?$CVarTypeInfo@D@ATL@@2GB			; ATL::CVarTypeInfo<char>::VT
PUBLIC	?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ ; ATL::CVarTypeInfo<char>::pmField
PUBLIC	?VT@?$CVarTypeInfo@E@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char>::VT
PUBLIC	?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ ; ATL::CVarTypeInfo<unsigned char>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAD@ATL@@2GB			; ATL::CVarTypeInfo<char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ ; ATL::CVarTypeInfo<char *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAE@ATL@@2GB			; ATL::CVarTypeInfo<unsigned char *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ ; ATL::CVarTypeInfo<unsigned char *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@F@ATL@@2GB			; ATL::CVarTypeInfo<short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ ; ATL::CVarTypeInfo<short>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAF@ATL@@2GB			; ATL::CVarTypeInfo<short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ ; ATL::CVarTypeInfo<short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@G@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short>::VT
PUBLIC	?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ ; ATL::CVarTypeInfo<unsigned short>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAG@ATL@@2GB			; ATL::CVarTypeInfo<unsigned short *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ ; ATL::CVarTypeInfo<unsigned short *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@H@ATL@@2GB			; ATL::CVarTypeInfo<int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ ; ATL::CVarTypeInfo<int>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAH@ATL@@2GB			; ATL::CVarTypeInfo<int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ ; ATL::CVarTypeInfo<int *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@I@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int>::VT
PUBLIC	?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ ; ATL::CVarTypeInfo<unsigned int>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAI@ATL@@2GB			; ATL::CVarTypeInfo<unsigned int *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ ; ATL::CVarTypeInfo<unsigned int *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@J@ATL@@2GB			; ATL::CVarTypeInfo<long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ ; ATL::CVarTypeInfo<long>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAJ@ATL@@2GB			; ATL::CVarTypeInfo<long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ ; ATL::CVarTypeInfo<long *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long>::VT
PUBLIC	?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ ; ATL::CVarTypeInfo<unsigned long>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAK@ATL@@2GB			; ATL::CVarTypeInfo<unsigned long *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ ; ATL::CVarTypeInfo<unsigned long *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@_J@ATL@@2GB			; ATL::CVarTypeInfo<__int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ ; ATL::CVarTypeInfo<__int64>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PA_J@ATL@@2GB		; ATL::CVarTypeInfo<__int64 *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ ; ATL::CVarTypeInfo<__int64 *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@_K@ATL@@2GB			; ATL::CVarTypeInfo<unsigned __int64>::VT
PUBLIC	?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PA_K@ATL@@2GB		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@M@ATL@@2GB			; ATL::CVarTypeInfo<float>::VT
PUBLIC	?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ ; ATL::CVarTypeInfo<float>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAM@ATL@@2GB			; ATL::CVarTypeInfo<float *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ ; ATL::CVarTypeInfo<float *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@N@ATL@@2GB			; ATL::CVarTypeInfo<double>::VT
PUBLIC	?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ ; ATL::CVarTypeInfo<double>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAN@ATL@@2GB			; ATL::CVarTypeInfo<double *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ ; ATL::CVarTypeInfo<double *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@UtagVARIANT@@@ATL@@2GB	; ATL::CVarTypeInfo<tagVARIANT>::VT
PUBLIC	?VT@?$CVarTypeInfo@PA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ ; ATL::CVarTypeInfo<wchar_t *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB		; ATL::CVarTypeInfo<wchar_t * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ ; ATL::CVarTypeInfo<wchar_t * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB	; ATL::CVarTypeInfo<IUnknown * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ ; ATL::CVarTypeInfo<IUnknown * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB	; ATL::CVarTypeInfo<IDispatch * *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ ; ATL::CVarTypeInfo<IDispatch * *>::pmField
PUBLIC	?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY>::VT
PUBLIC	?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY>::pmField
PUBLIC	?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB		; ATL::CVarTypeInfo<tagCY *>::VT
PUBLIC	?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ ; ATL::CVarTypeInfo<tagCY *>::pmField
PUBLIC	?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
PUBLIC	?collate@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::collate
PUBLIC	?ctype@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::ctype
PUBLIC	?monetary@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::monetary
PUBLIC	?numeric@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::numeric
PUBLIC	?time@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::time
PUBLIC	?messages@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::messages
PUBLIC	?all@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::all
PUBLIC	?none@?$_Locbase@H@std@@2HB			; std::_Locbase<int>::none
PUBLIC	?table_size@?$ctype@D@std@@2IB			; std::ctype<char>::table_size
PUBLIC	?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::skipws
PUBLIC	?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::unitbuf
PUBLIC	?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::uppercase
PUBLIC	?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showbase
PUBLIC	?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpoint
PUBLIC	?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::showpos
PUBLIC	?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::left
PUBLIC	?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::right
PUBLIC	?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::internal
PUBLIC	?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::dec
PUBLIC	?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::oct
PUBLIC	?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::hex
PUBLIC	?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::scientific
PUBLIC	?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B		; std::_Iosb<int>::fixed
PUBLIC	?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::hexfloat
PUBLIC	?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::boolalpha
PUBLIC	?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::_Stdio
PUBLIC	?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::adjustfield
PUBLIC	?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::basefield
PUBLIC	?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B	; std::_Iosb<int>::floatfield
PUBLIC	?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::goodbit
PUBLIC	?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::eofbit
PUBLIC	?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::failbit
PUBLIC	?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B		; std::_Iosb<int>::badbit
PUBLIC	?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B	; std::_Iosb<int>::_Hardfail
PUBLIC	?in@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::in
PUBLIC	?out@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::out
PUBLIC	?ate@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::ate
PUBLIC	?app@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::app
PUBLIC	?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B		; std::_Iosb<int>::trunc
PUBLIC	?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Nocreate
PUBLIC	?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::_Noreplace
PUBLIC	?binary@?$_Iosb@H@std@@2W4_Openmode@12@B	; std::_Iosb<int>::binary
PUBLIC	?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::beg
PUBLIC	?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::cur
PUBLIC	?end@?$_Iosb@H@std@@2W4_Seekdir@12@B		; std::_Iosb<int>::end
PUBLIC	?value@?$integral_constant@_N$0A@@tr1@std@@2_NB	; std::tr1::integral_constant<bool,0>::value
PUBLIC	?value@?$integral_constant@_N$00@tr1@std@@2_NB	; std::tr1::integral_constant<bool,1>::value
PUBLIC	?RescueIsoImageSize@BootEncryption@CipherShed@@1IB ; CipherShed::BootEncryption::RescueIsoImageSize
PUBLIC	_LIBID_CipherShedMainCom
PUBLIC	_IID_ICipherShedMainCom
PUBLIC	_CLSID_CipherShedMainCom
;	COMDAT ?m_bInitFailed@CAtlBaseModule@ATL@@2_NA
_BSS	SEGMENT
?m_bInitFailed@CAtlBaseModule@ATL@@2_NA DB 01H DUP (?)	; ATL::CAtlBaseModule::m_bInitFailed
_BSS	ENDS
_BSS	SEGMENT
_ObjectCount DD	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_LIBID_CipherShedMainCom DD 01770f56cH
	DW	07881H
	DW	04591H
	DB	0a1H
	DB	079H
	DB	079H
	DB	0b8H
	DB	00H
	DB	01cH
	DB	07dH
	DB	042H
_IID_ICipherShedMainCom DD 0252c9de6H
	DW	0d4b9H
	DW	04a59H
	DB	08aH
	DB	010H
	DB	09cH
	DB	0a7H
	DB	032H
	DB	017H
	DB	0b3H
	DB	0d0H
_CLSID_CipherShedMainCom DD 0cecbc0eeH
	DW	078d9H
	DW	041e6H
	DB	0bcH
	DB	0f1H
	DB	0bcH
	DB	022H
	DB	02bH
	DB	0b2H
	DB	024H
	DB	0baH
CONST	ENDS
;	COMDAT ?RescueIsoImageSize@BootEncryption@CipherShed@@1IB
CONST	SEGMENT
?RescueIsoImageSize@BootEncryption@CipherShed@@1IB DD 01c0000H ; CipherShed::BootEncryption::RescueIsoImageSize
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$00@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$00@tr1@std@@2_NB DB 01H	; std::tr1::integral_constant<bool,1>::value
CONST	ENDS
;	COMDAT ?value@?$integral_constant@_N$0A@@tr1@std@@2_NB
CONST	SEGMENT
?value@?$integral_constant@_N$0A@@tr1@std@@2_NB DB 00H	; std::tr1::integral_constant<bool,0>::value
CONST	ENDS
;	COMDAT ?end@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?end@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 02H		; std::_Iosb<int>::end
CONST	ENDS
;	COMDAT ?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?cur@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 01H		; std::_Iosb<int>::cur
CONST	ENDS
;	COMDAT ?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B
CONST	SEGMENT
?beg@?$_Iosb@H@std@@2W4_Seekdir@12@B DD 00H		; std::_Iosb<int>::beg
CONST	ENDS
;	COMDAT ?binary@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?binary@?$_Iosb@H@std@@2W4_Openmode@12@B DD 020H	; std::_Iosb<int>::binary
CONST	ENDS
;	COMDAT ?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Noreplace@?$_Iosb@H@std@@2W4_Openmode@12@B DD 080H	; std::_Iosb<int>::_Noreplace
CONST	ENDS
;	COMDAT ?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?_Nocreate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 040H	; std::_Iosb<int>::_Nocreate
CONST	ENDS
;	COMDAT ?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?trunc@?$_Iosb@H@std@@2W4_Openmode@12@B DD 010H		; std::_Iosb<int>::trunc
CONST	ENDS
;	COMDAT ?app@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?app@?$_Iosb@H@std@@2W4_Openmode@12@B DD 08H		; std::_Iosb<int>::app
CONST	ENDS
;	COMDAT ?ate@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?ate@?$_Iosb@H@std@@2W4_Openmode@12@B DD 04H		; std::_Iosb<int>::ate
CONST	ENDS
;	COMDAT ?out@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?out@?$_Iosb@H@std@@2W4_Openmode@12@B DD 02H		; std::_Iosb<int>::out
CONST	ENDS
;	COMDAT ?in@?$_Iosb@H@std@@2W4_Openmode@12@B
CONST	SEGMENT
?in@?$_Iosb@H@std@@2W4_Openmode@12@B DD 01H		; std::_Iosb<int>::in
CONST	ENDS
;	COMDAT ?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?_Hardfail@?$_Iosb@H@std@@2W4_Iostate@12@B DD 010H	; std::_Iosb<int>::_Hardfail
CONST	ENDS
;	COMDAT ?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?badbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 04H		; std::_Iosb<int>::badbit
CONST	ENDS
;	COMDAT ?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?failbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 02H		; std::_Iosb<int>::failbit
CONST	ENDS
;	COMDAT ?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?eofbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 01H		; std::_Iosb<int>::eofbit
CONST	ENDS
;	COMDAT ?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B
CONST	SEGMENT
?goodbit@?$_Iosb@H@std@@2W4_Iostate@12@B DD 00H		; std::_Iosb<int>::goodbit
CONST	ENDS
;	COMDAT ?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?floatfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::floatfield
CONST	ENDS
;	COMDAT ?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?basefield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0e00H	; std::_Iosb<int>::basefield
CONST	ENDS
;	COMDAT ?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?adjustfield@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01c0H	; std::_Iosb<int>::adjustfield
CONST	ENDS
;	COMDAT ?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?_Stdio@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08000H	; std::_Iosb<int>::_Stdio
CONST	ENDS
;	COMDAT ?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?boolalpha@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04000H	; std::_Iosb<int>::boolalpha
CONST	ENDS
;	COMDAT ?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hexfloat@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 03000H	; std::_Iosb<int>::hexfloat
CONST	ENDS
;	COMDAT ?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?fixed@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02000H	; std::_Iosb<int>::fixed
CONST	ENDS
;	COMDAT ?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?scientific@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01000H	; std::_Iosb<int>::scientific
CONST	ENDS
;	COMDAT ?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?hex@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0800H		; std::_Iosb<int>::hex
CONST	ENDS
;	COMDAT ?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?oct@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0400H		; std::_Iosb<int>::oct
CONST	ENDS
;	COMDAT ?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?dec@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0200H		; std::_Iosb<int>::dec
CONST	ENDS
;	COMDAT ?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?internal@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 0100H	; std::_Iosb<int>::internal
CONST	ENDS
;	COMDAT ?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?right@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 080H		; std::_Iosb<int>::right
CONST	ENDS
;	COMDAT ?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?left@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 040H		; std::_Iosb<int>::left
CONST	ENDS
;	COMDAT ?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpos@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 020H	; std::_Iosb<int>::showpos
CONST	ENDS
;	COMDAT ?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showpoint@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 010H	; std::_Iosb<int>::showpoint
CONST	ENDS
;	COMDAT ?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?showbase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 08H	; std::_Iosb<int>::showbase
CONST	ENDS
;	COMDAT ?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?uppercase@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 04H	; std::_Iosb<int>::uppercase
CONST	ENDS
;	COMDAT ?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?unitbuf@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 02H	; std::_Iosb<int>::unitbuf
CONST	ENDS
;	COMDAT ?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B
CONST	SEGMENT
?skipws@?$_Iosb@H@std@@2W4_Fmtflags@12@B DD 01H		; std::_Iosb<int>::skipws
CONST	ENDS
;	COMDAT ?table_size@?$ctype@D@std@@2IB
CONST	SEGMENT
?table_size@?$ctype@D@std@@2IB DD 0100H			; std::ctype<char>::table_size
CONST	ENDS
;	COMDAT ?none@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?none@?$_Locbase@H@std@@2HB DD 00H			; std::_Locbase<int>::none
CONST	ENDS
;	COMDAT ?all@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?all@?$_Locbase@H@std@@2HB DD 03fH			; std::_Locbase<int>::all
CONST	ENDS
;	COMDAT ?messages@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?messages@?$_Locbase@H@std@@2HB DD 020H			; std::_Locbase<int>::messages
CONST	ENDS
;	COMDAT ?time@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?time@?$_Locbase@H@std@@2HB DD 010H			; std::_Locbase<int>::time
CONST	ENDS
;	COMDAT ?numeric@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?numeric@?$_Locbase@H@std@@2HB DD 08H			; std::_Locbase<int>::numeric
CONST	ENDS
;	COMDAT ?monetary@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?monetary@?$_Locbase@H@std@@2HB DD 04H			; std::_Locbase<int>::monetary
CONST	ENDS
;	COMDAT ?ctype@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?ctype@?$_Locbase@H@std@@2HB DD 02H			; std::_Locbase<int>::ctype
CONST	ENDS
;	COMDAT ?collate@?$_Locbase@H@std@@2HB
CONST	SEGMENT
?collate@?$_Locbase@H@std@@2HB DD 01H			; std::_Locbase<int>::collate
CONST	ENDS
;	COMDAT ?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB
CONST	SEGMENT
?_Value@?$_Is_swap_move@U_Swap_move_tag@std@@@std@@2_NB DB 01H ; std::_Is_swap_move<std::_Swap_move_tag>::_Value
CONST	ENDS
_DATA	SEGMENT
__bad_alloc_Message DD FLAT:??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
_DATA	ENDS
;	COMDAT ??_C@_0P@GHFPNOJB@bad?5allocation?$AA@
CONST	SEGMENT
??_C@_0P@GHFPNOJB@bad?5allocation?$AA@ DB 'bad allocation', 00H ; `string'
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PATtagCY@@@ATL@@2QQtagVARIANT@@PATtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PATtagCY@@@ATL@@2GB DW 04006H	; ATL::CVarTypeInfo<tagCY *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@TtagCY@@@ATL@@2QQtagVARIANT@@TtagCY@@Q3@ DD 08H ; ATL::CVarTypeInfo<tagCY>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@TtagCY@@@ATL@@2GB DW 06H		; ATL::CVarTypeInfo<tagCY>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2QQtagVARIANT@@PAPAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIDispatch@@@ATL@@2GB DW 04009H	; ATL::CVarTypeInfo<IDispatch * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2QQtagVARIANT@@PAUIDispatch@@Q3@ DD 08H ; ATL::CVarTypeInfo<IDispatch *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIDispatch@@@ATL@@2GB DW 09H	; ATL::CVarTypeInfo<IDispatch *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2QQtagVARIANT@@PAPAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPAUIUnknown@@@ATL@@2GB DW 0400dH	; ATL::CVarTypeInfo<IUnknown * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2QQtagVARIANT@@PAUIUnknown@@Q3@ DD 08H ; ATL::CVarTypeInfo<IUnknown *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAUIUnknown@@@ATL@@2GB DW 0dH	; ATL::CVarTypeInfo<IUnknown *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAPA_W@ATL@@2QQtagVARIANT@@PAPA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t * *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAPA_W@ATL@@2GB DW 04008H		; ATL::CVarTypeInfo<wchar_t * *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_W@ATL@@2QQtagVARIANT@@PA_WQ3@ DD 08H ; ATL::CVarTypeInfo<wchar_t *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_W@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_W@ATL@@2GB DW 08H			; ATL::CVarTypeInfo<wchar_t *>::VT
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@UtagVARIANT@@@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@UtagVARIANT@@@ATL@@2GB DW 0cH	; ATL::CVarTypeInfo<tagVARIANT>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAN@ATL@@2QQtagVARIANT@@PANQ3@ DD 08H ; ATL::CVarTypeInfo<double *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAN@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAN@ATL@@2GB DW 04005H		; ATL::CVarTypeInfo<double *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@N@ATL@@2QQtagVARIANT@@NQ3@ DD 08H ; ATL::CVarTypeInfo<double>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@N@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@N@ATL@@2GB DW 05H			; ATL::CVarTypeInfo<double>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAM@ATL@@2QQtagVARIANT@@PAMQ3@ DD 08H ; ATL::CVarTypeInfo<float *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAM@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAM@ATL@@2GB DW 04004H		; ATL::CVarTypeInfo<float *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@M@ATL@@2QQtagVARIANT@@MQ3@ DD 08H ; ATL::CVarTypeInfo<float>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@M@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@M@ATL@@2GB DW 04H			; ATL::CVarTypeInfo<float>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_K@ATL@@2QQtagVARIANT@@PA_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_K@ATL@@2GB DW 04015H		; ATL::CVarTypeInfo<unsigned __int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_K@ATL@@2QQtagVARIANT@@_KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned __int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_K@ATL@@2GB DW 015H			; ATL::CVarTypeInfo<unsigned __int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PA_J@ATL@@2QQtagVARIANT@@PA_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64 *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PA_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PA_J@ATL@@2GB DW 04014H		; ATL::CVarTypeInfo<__int64 *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@_J@ATL@@2QQtagVARIANT@@_JQ3@ DD 08H ; ATL::CVarTypeInfo<__int64>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@_J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@_J@ATL@@2GB DW 014H			; ATL::CVarTypeInfo<__int64>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAK@ATL@@2QQtagVARIANT@@PAKQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAK@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAK@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@K@ATL@@2QQtagVARIANT@@KQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@K@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@K@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAJ@ATL@@2QQtagVARIANT@@PAJQ3@ DD 08H ; ATL::CVarTypeInfo<long *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAJ@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAJ@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<long *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@J@ATL@@2QQtagVARIANT@@JQ3@ DD 08H ; ATL::CVarTypeInfo<long>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@J@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@J@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<long>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAI@ATL@@2QQtagVARIANT@@PAIQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAI@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAI@ATL@@2GB DW 04013H		; ATL::CVarTypeInfo<unsigned int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@I@ATL@@2QQtagVARIANT@@IQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@I@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@I@ATL@@2GB DW 013H			; ATL::CVarTypeInfo<unsigned int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAH@ATL@@2QQtagVARIANT@@PAHQ3@ DD 08H ; ATL::CVarTypeInfo<int *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAH@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAH@ATL@@2GB DW 04003H		; ATL::CVarTypeInfo<int *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@H@ATL@@2QQtagVARIANT@@HQ3@ DD 08H ; ATL::CVarTypeInfo<int>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@H@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@H@ATL@@2GB DW 03H			; ATL::CVarTypeInfo<int>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAG@ATL@@2QQtagVARIANT@@PAGQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAG@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAG@ATL@@2GB DW 04012H		; ATL::CVarTypeInfo<unsigned short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@G@ATL@@2QQtagVARIANT@@GQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@G@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@G@ATL@@2GB DW 012H			; ATL::CVarTypeInfo<unsigned short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAF@ATL@@2QQtagVARIANT@@PAFQ3@ DD 08H ; ATL::CVarTypeInfo<short *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAF@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAF@ATL@@2GB DW 04002H		; ATL::CVarTypeInfo<short *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@F@ATL@@2QQtagVARIANT@@FQ3@ DD 08H ; ATL::CVarTypeInfo<short>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@F@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@F@ATL@@2GB DW 02H			; ATL::CVarTypeInfo<short>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAE@ATL@@2QQtagVARIANT@@PAEQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAE@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAE@ATL@@2GB DW 04011H		; ATL::CVarTypeInfo<unsigned char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@PAD@ATL@@2QQtagVARIANT@@PADQ3@ DD 08H ; ATL::CVarTypeInfo<char *>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@PAD@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@PAD@ATL@@2GB DW 04010H		; ATL::CVarTypeInfo<char *>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@E@ATL@@2QQtagVARIANT@@EQ3@ DD 08H ; ATL::CVarTypeInfo<unsigned char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@E@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@E@ATL@@2GB DW 011H			; ATL::CVarTypeInfo<unsigned char>::VT
CONST	ENDS
;	COMDAT ?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@
CONST	SEGMENT
?pmField@?$CVarTypeInfo@D@ATL@@2QQtagVARIANT@@DQ3@ DD 08H ; ATL::CVarTypeInfo<char>::pmField
CONST	ENDS
;	COMDAT ?VT@?$CVarTypeInfo@D@ATL@@2GB
CONST	SEGMENT
?VT@?$CVarTypeInfo@D@ATL@@2GB DW 010H			; ATL::CVarTypeInfo<char>::VT
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Max@?$AtlLimits@_K@ATL@@2_KB DQ ffffffffffffffffH	; ATL::AtlLimits<unsigned __int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_K@ATL@@2_KB
CONST	SEGMENT
?_Min@?$AtlLimits@_K@ATL@@2_KB DQ 0000000000000000H	; ATL::AtlLimits<unsigned __int64>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Max@?$AtlLimits@_J@ATL@@2_JB DQ 7fffffffffffffffH	; ATL::AtlLimits<__int64>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@_J@ATL@@2_JB
CONST	SEGMENT
?_Min@?$AtlLimits@_J@ATL@@2_JB DQ 8000000000000000H	; ATL::AtlLimits<__int64>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Max@?$AtlLimits@K@ATL@@2KB DD 0ffffffffH		; ATL::AtlLimits<unsigned long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@K@ATL@@2KB
CONST	SEGMENT
?_Min@?$AtlLimits@K@ATL@@2KB DD 00H			; ATL::AtlLimits<unsigned long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Max@?$AtlLimits@J@ATL@@2JB DD 07fffffffH		; ATL::AtlLimits<long>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@J@ATL@@2JB
CONST	SEGMENT
?_Min@?$AtlLimits@J@ATL@@2JB DD 080000000H		; ATL::AtlLimits<long>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Max@?$AtlLimits@I@ATL@@2IB DD 0ffffffffH		; ATL::AtlLimits<unsigned int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@I@ATL@@2IB
CONST	SEGMENT
?_Min@?$AtlLimits@I@ATL@@2IB DD 00H			; ATL::AtlLimits<unsigned int>::_Min
CONST	ENDS
;	COMDAT ?_Max@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Max@?$AtlLimits@H@ATL@@2HB DD 07fffffffH		; ATL::AtlLimits<int>::_Max
CONST	ENDS
;	COMDAT ?_Min@?$AtlLimits@H@ATL@@2HB
CONST	SEGMENT
?_Min@?$AtlLimits@H@ATL@@2HB DD 080000000H		; ATL::AtlLimits<int>::_Min
CONST	ENDS
PUBLIC	??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@	; Define_the_symbol__ATL_MIXED::Thank_you::`vftable'
PUBLIC	??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ ; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you
PUBLIC	??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 ; Define_the_symbol__ATL_MIXED::Thank_you `RTTI Type Descriptor'
PUBLIC	??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ ; Define_the_symbol__ATL_MIXED::Thank_you::one
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 DD FLAT:??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8 DD FLAT:??_R1A@?0A@EA@Thank_you@Define_the_symbol__ATL_MIXED@@8 ; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	SEGMENT
??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8 DD 00H	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8
_DATA	SEGMENT
??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8 DD FLAT:??_7type_info@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUThank_you@Define_the_symbol__ATL_MIXED@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@
rdata$r	SEGMENT
??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ DD 00H	; Define_the_symbol__ATL_MIXED::Thank_you::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUThank_you@Define_the_symbol__ATL_MIXED@@@8
	DD	FLAT:??_R3Thank_you@Define_the_symbol__ATL_MIXED@@8
rdata$r	ENDS
;	COMDAT ??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@
CONST	SEGMENT
??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@ DD FLAT:??_R4Thank_you@Define_the_symbol__ATL_MIXED@@6B@ ; Define_the_symbol__ATL_MIXED::Thank_you::`vftable'
	DD	FLAT:?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ
_TEXT	SEGMENT
??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ PROC	; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@
  00008	c3		 ret	 0
??0Thank_you@Define_the_symbol__ATL_MIXED@@QAE@XZ ENDP	; Define_the_symbol__ATL_MIXED::Thank_you::Thank_you
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atldef.h
_TEXT	ENDS
;	COMDAT ?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ
_TEXT	SEGMENT
?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ PROC ; Define_the_symbol__ATL_MIXED::Thank_you::one, COMDAT
; _this$ = ecx

; 80   : 	struct Thank_you { virtual void one(){} };

  00000	c3		 ret	 0
?one@Thank_you@Define_the_symbol__ATL_MIXED@@UAEXXZ ENDP ; Define_the_symbol__ATL_MIXED::Thank_you::one
_TEXT	ENDS
PUBLIC	?Free@CCRTAllocator@ATL@@SAXPAX@Z		; ATL::CCRTAllocator::Free
EXTRN	_free:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?Free@CCRTAllocator@ATL@@SAXPAX@Z PROC			; ATL::CCRTAllocator::Free, COMDAT

; 248  : 		free(p);

  00000	e9 00 00 00 00	 jmp	 _free
?Free@CCRTAllocator@ATL@@SAXPAX@Z ENDP			; ATL::CCRTAllocator::Free
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC			; ATL::_AtlGetConversionACP, COMDAT

; 104  : #ifdef _CONVERSION_DONT_USE_THREAD_LOCALE
; 105  : 	return CP_ACP;
; 106  : #else
; 107  : 	return CP_THREAD_ACP;

  00000	b8 03 00 00 00	 mov	 eax, 3

; 108  : #endif
; 109  : }

  00005	c3		 ret	 0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlexcept.h
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 42   : 	{

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR _hr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 43   : 	}

  00008	c2 04 00	 ret	 4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	?AtlThrowImpl@ATL@@YGXJ@Z			; ATL::AtlThrowImpl
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
EXTRN	__CxxThrowException@8:PROC
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
; Function compile flags: /Ogtpy
xdata$x	ENDS
;	COMDAT ?AtlThrowImpl@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T117868 = 8						; size = 4
_hr$ = 8						; size = 4
?AtlThrowImpl@ATL@@YGXJ@Z PROC				; ATL::AtlThrowImpl, COMDAT

; 64   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 65   : #ifdef _AFX
; 66   : 	if( hr == E_OUTOFMEMORY )
; 67   : 	{
; 68   : 		AfxThrowMemoryException();
; 69   : 	}
; 70   : 	else
; 71   : 	{
; 72   : 		AfxThrowOleException( hr );
; 73   : 	}
; 74   : #else
; 75   : 	throw CAtlException( hr );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hr$[esp-4]
  00004	68 00 00 00 00	 push	 OFFSET __TI1?AVCAtlException@ATL@@
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR $T117868[esp]
  0000d	51		 push	 ecx
  0000e	89 44 24 0c	 mov	 DWORD PTR $T117868[esp+4], eax
  00012	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN5@AtlThrowIm:
  00017	cc		 int	 3
?AtlThrowImpl@ATL@@YGXJ@Z ENDP				; ATL::AtlThrowImpl
_TEXT	ENDS
PUBLIC	??BCComBSTR@ATL@@QBEPA_WXZ			; ATL::CComBSTR::operator wchar_t *
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??BCComBSTR@ATL@@QBEPA_WXZ
_TEXT	SEGMENT
??BCComBSTR@ATL@@QBEPA_WXZ PROC				; ATL::CComBSTR::operator wchar_t *, COMDAT
; _this$ = ecx

; 711  : 		return m_str;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 712  : 	}

  00002	c3		 ret	 0
??BCComBSTR@ATL@@QBEPA_WXZ ENDP				; ATL::CComBSTR::operator wchar_t *
_TEXT	ENDS
PUBLIC	??7CComBSTR@ATL@@QBE_NXZ			; ATL::CComBSTR::operator!
; Function compile flags: /Ogtpy
;	COMDAT ??7CComBSTR@ATL@@QBE_NXZ
_TEXT	SEGMENT
??7CComBSTR@ATL@@QBE_NXZ PROC				; ATL::CComBSTR::operator!, COMDAT
; _this$ = ecx

; 823  : #pragma warning(push)
; 824  : #pragma warning(disable:4068)
; 825  : #pragma prefast(push)
; 826  : #pragma prefast(disable:325, "The semantics of this function are about allocation, not content")
; 827  : 		return (m_str == NULL);

  00000	33 c0		 xor	 eax, eax
  00002	39 01		 cmp	 DWORD PTR [ecx], eax
  00004	0f 94 c0	 sete	 al

; 828  : #pragma prefast(pop)
; 829  : #pragma warning(pop)
; 830  : 	}

  00007	c3		 ret	 0
??7CComBSTR@ATL@@QBE_NXZ ENDP				; ATL::CComBSTR::operator!
_TEXT	ENDS
PUBLIC	??1CComBSTR@ATL@@QAE@XZ				; ATL::CComBSTR::~CComBSTR
EXTRN	__imp__SysFreeString@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??1CComBSTR@ATL@@QAE@XZ
_TEXT	SEGMENT
??1CComBSTR@ATL@@QAE@XZ PROC				; ATL::CComBSTR::~CComBSTR, COMDAT
; _this$ = ecx

; 1455 : 		::SysFreeString(m_str);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	50		 push	 eax
  00003	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 1456 : 	}

  00009	c3		 ret	 0
??1CComBSTR@ATL@@QAE@XZ ENDP				; ATL::CComBSTR::~CComBSTR
_TEXT	ENDS
PUBLIC	??_7Exception@CipherShed@@6B@			; CipherShed::Exception::`vftable'
PUBLIC	??0Exception@CipherShed@@QAE@XZ			; CipherShed::Exception::Exception
PUBLIC	??_R4Exception@CipherShed@@6B@			; CipherShed::Exception::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUException@CipherShed@@@8		; CipherShed::Exception `RTTI Type Descriptor'
PUBLIC	??_R3Exception@CipherShed@@8			; CipherShed::Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@CipherShed@@8			; CipherShed::Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@CipherShed@@8		; CipherShed::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
;	COMDAT ??_R1A@?0A@EA@Exception@CipherShed@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@CipherShed@@8 DD FLAT:??_R0?AUException@CipherShed@@@8 ; CipherShed::Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@CipherShed@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@CipherShed@@8
rdata$r	SEGMENT
??_R2Exception@CipherShed@@8 DD FLAT:??_R1A@?0A@EA@Exception@CipherShed@@8 ; CipherShed::Exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Exception@CipherShed@@8
rdata$r	SEGMENT
??_R3Exception@CipherShed@@8 DD 00H			; CipherShed::Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Exception@CipherShed@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUException@CipherShed@@@8
_DATA	SEGMENT
??_R0?AUException@CipherShed@@@8 DD FLAT:??_7type_info@@6B@ ; CipherShed::Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUException@CipherShed@@', 00H
_DATA	ENDS
;	COMDAT ??_R4Exception@CipherShed@@6B@
rdata$r	SEGMENT
??_R4Exception@CipherShed@@6B@ DD 00H			; CipherShed::Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUException@CipherShed@@@8
	DD	FLAT:??_R3Exception@CipherShed@@8
rdata$r	ENDS
;	COMDAT ??_7Exception@CipherShed@@6B@
CONST	SEGMENT
??_7Exception@CipherShed@@6B@ DD FLAT:??_R4Exception@CipherShed@@6B@ ; CipherShed::Exception::`vftable'
	DD	FLAT:__purecall
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0Exception@CipherShed@@QAE@XZ
_TEXT	SEGMENT
??0Exception@CipherShed@@QAE@XZ PROC			; CipherShed::Exception::Exception, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@CipherShed@@6B@
  00008	c3		 ret	 0
??0Exception@CipherShed@@QAE@XZ ENDP			; CipherShed::Exception::Exception
_TEXT	ENDS
PUBLIC	??_7UserAbort@CipherShed@@6B@			; CipherShed::UserAbort::`vftable'
PUBLIC	??0UserAbort@CipherShed@@QAE@PBD@Z		; CipherShed::UserAbort::UserAbort
PUBLIC	??_R4UserAbort@CipherShed@@6B@			; CipherShed::UserAbort::`RTTI Complete Object Locator'
PUBLIC	??_R0?AUUserAbort@CipherShed@@@8		; CipherShed::UserAbort `RTTI Type Descriptor'
PUBLIC	??_R3UserAbort@CipherShed@@8			; CipherShed::UserAbort::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2UserAbort@CipherShed@@8			; CipherShed::UserAbort::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@UserAbort@CipherShed@@8		; CipherShed::UserAbort::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	?Show@UserAbort@CipherShed@@UBEXPAUHWND__@@@Z	; CipherShed::UserAbort::Show
;	COMDAT ??_R1A@?0A@EA@UserAbort@CipherShed@@8
; File c:\users\public\desktop\projects\ciphershed\src\common\exception.h
rdata$r	SEGMENT
??_R1A@?0A@EA@UserAbort@CipherShed@@8 DD FLAT:??_R0?AUUserAbort@CipherShed@@@8 ; CipherShed::UserAbort::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3UserAbort@CipherShed@@8
rdata$r	ENDS
;	COMDAT ??_R2UserAbort@CipherShed@@8
rdata$r	SEGMENT
??_R2UserAbort@CipherShed@@8 DD FLAT:??_R1A@?0A@EA@UserAbort@CipherShed@@8 ; CipherShed::UserAbort::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@CipherShed@@8
rdata$r	ENDS
;	COMDAT ??_R3UserAbort@CipherShed@@8
rdata$r	SEGMENT
??_R3UserAbort@CipherShed@@8 DD 00H			; CipherShed::UserAbort::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2UserAbort@CipherShed@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUUserAbort@CipherShed@@@8
_DATA	SEGMENT
??_R0?AUUserAbort@CipherShed@@@8 DD FLAT:??_7type_info@@6B@ ; CipherShed::UserAbort `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUUserAbort@CipherShed@@', 00H
_DATA	ENDS
;	COMDAT ??_R4UserAbort@CipherShed@@6B@
rdata$r	SEGMENT
??_R4UserAbort@CipherShed@@6B@ DD 00H			; CipherShed::UserAbort::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AUUserAbort@CipherShed@@@8
	DD	FLAT:??_R3UserAbort@CipherShed@@8
rdata$r	ENDS
;	COMDAT ??_7UserAbort@CipherShed@@6B@
CONST	SEGMENT
??_7UserAbort@CipherShed@@6B@ DD FLAT:??_R4UserAbort@CipherShed@@6B@ ; CipherShed::UserAbort::`vftable'
	DD	FLAT:?Show@UserAbort@CipherShed@@UBEXPAUHWND__@@@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??0UserAbort@CipherShed@@QAE@PBD@Z
_TEXT	SEGMENT
_srcPos$ = 8						; size = 4
??0UserAbort@CipherShed@@QAE@PBD@Z PROC			; CipherShed::UserAbort::UserAbort, COMDAT
; _this$ = ecx

; 74   : 		UserAbort (const char *srcPos) { }

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7UserAbort@CipherShed@@6B@
  00008	c2 04 00	 ret	 4
??0UserAbort@CipherShed@@QAE@PBD@Z ENDP			; CipherShed::UserAbort::UserAbort
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Show@UserAbort@CipherShed@@UBEXPAUHWND__@@@Z
_TEXT	SEGMENT
_parent$ = 8						; size = 4
?Show@UserAbort@CipherShed@@UBEXPAUHWND__@@@Z PROC	; CipherShed::UserAbort::Show, COMDAT
; _this$ = ecx

; 75   : 		void Show (HWND parent) const { }

  00000	c2 04 00	 ret	 4
?Show@UserAbort@CipherShed@@UBEXPAUHWND__@@@Z ENDP	; CipherShed::UserAbort::Show
_TEXT	ENDS
PUBLIC	??0IUnknown@@QAE@XZ				; IUnknown::IUnknown
; Function compile flags: /Ogtpy
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT
??0IUnknown@@QAE@XZ PROC				; IUnknown::IUnknown, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0IUnknown@@QAE@XZ ENDP				; IUnknown::IUnknown
_TEXT	ENDS
EXTRN	?ComGetInstanceBase@@YAHPAUHWND__@@ABU_GUID@@1PAPAX@Z:PROC ; ComGetInstanceBase
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\mount\maincom.cpp
;	COMDAT ?ComGetInstance@@YAHPAUHWND__@@PAPAUICipherShedMainCom@@@Z
_TEXT	SEGMENT
?ComGetInstance@@YAHPAUHWND__@@PAPAUICipherShedMainCom@@@Z PROC ; ComGetInstance, COMDAT
; _hWnd$ = ecx
; _tcServer$ = eax

; 184  : 	return ComGetInstanceBase (hWnd, CLSID_CipherShedMainCom, IID_ICipherShedMainCom, (void **) tcServer);

  00000	50		 push	 eax
  00001	68 00 00 00 00	 push	 OFFSET _IID_ICipherShedMainCom
  00006	68 00 00 00 00	 push	 OFFSET _CLSID_CipherShedMainCom
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ?ComGetInstanceBase@@YAHPAUHWND__@@ABU_GUID@@1PAPAX@Z ; ComGetInstanceBase
  00011	83 c4 10	 add	 esp, 16			; 00000010H

; 185  : }

  00014	c3		 ret	 0
?ComGetInstance@@YAHPAUHWND__@@PAPAUICipherShedMainCom@@@Z ENDP ; ComGetInstance
_TEXT	ENDS
PUBLIC	__TI2?AUUserAbort@CipherShed@@
PUBLIC	?GetElevatedInstance@@YAPAUICipherShedMainCom@@PAUHWND__@@@Z ; GetElevatedInstance
PUBLIC	__CTA2?AUUserAbort@CipherShed@@
PUBLIC	__CT??_R0?AUUserAbort@CipherShed@@@8??0UserAbort@CipherShed@@QAE@ABU01@@Z4
PUBLIC	??0UserAbort@CipherShed@@QAE@ABU01@@Z		; CipherShed::UserAbort::UserAbort
PUBLIC	__CT??_R0?AUException@CipherShed@@@8??0Exception@CipherShed@@QAE@ABU01@@Z4
PUBLIC	??0Exception@CipherShed@@QAE@ABU01@@Z		; CipherShed::Exception::Exception
;	COMDAT __CT??_R0?AUException@CipherShed@@@8??0Exception@CipherShed@@QAE@ABU01@@Z4
; File c:\users\public\desktop\projects\ciphershed\src\common\exception.h
xdata$x	SEGMENT
__CT??_R0?AUException@CipherShed@@@8??0Exception@CipherShed@@QAE@ABU01@@Z4 DD 00H
	DD	FLAT:??_R0?AUException@CipherShed@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	FLAT:??0Exception@CipherShed@@QAE@ABU01@@Z
xdata$x	ENDS
;	COMDAT __CT??_R0?AUUserAbort@CipherShed@@@8??0UserAbort@CipherShed@@QAE@ABU01@@Z4
xdata$x	SEGMENT
__CT??_R0?AUUserAbort@CipherShed@@@8??0UserAbort@CipherShed@@QAE@ABU01@@Z4 DD 00H
	DD	FLAT:??_R0?AUUserAbort@CipherShed@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	FLAT:??0UserAbort@CipherShed@@QAE@ABU01@@Z
xdata$x	ENDS
;	COMDAT __CTA2?AUUserAbort@CipherShed@@
xdata$x	SEGMENT
__CTA2?AUUserAbort@CipherShed@@ DD 02H
	DD	FLAT:__CT??_R0?AUUserAbort@CipherShed@@@8??0UserAbort@CipherShed@@QAE@ABU01@@Z4
	DD	FLAT:__CT??_R0?AUException@CipherShed@@@8??0Exception@CipherShed@@QAE@ABU01@@Z4
xdata$x	ENDS
;	COMDAT __TI2?AUUserAbort@CipherShed@@
xdata$x	SEGMENT
__TI2?AUUserAbort@CipherShed@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA2?AUUserAbort@CipherShed@@
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\mount\maincom.cpp
xdata$x	ENDS
;	COMDAT ?GetElevatedInstance@@YAPAUICipherShedMainCom@@PAUHWND__@@@Z
_TEXT	SEGMENT
$T117896 = -8						; size = 4
_instance$ = -4						; size = 4
_parent$ = 8						; size = 4
?GetElevatedInstance@@YAPAUICipherShedMainCom@@PAUHWND__@@@Z PROC ; GetElevatedInstance, COMDAT

; 190  : 	ICipherShedMainCom *instance;
; 191  : 
; 192  : 	if (!ComGetInstance (parent, &instance))

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _parent$[esp-4]
  00004	83 ec 08	 sub	 esp, 8
  00007	8d 44 24 04	 lea	 eax, DWORD PTR _instance$[esp+8]
  0000b	50		 push	 eax
  0000c	68 00 00 00 00	 push	 OFFSET _IID_ICipherShedMainCom
  00011	68 00 00 00 00	 push	 OFFSET _CLSID_CipherShedMainCom
  00016	51		 push	 ecx
  00017	e8 00 00 00 00	 call	 ?ComGetInstanceBase@@YAHPAUHWND__@@ABU_GUID@@1PAPAX@Z ; ComGetInstanceBase
  0001c	83 c4 10	 add	 esp, 16			; 00000010H
  0001f	85 c0		 test	 eax, eax
  00021	75 17		 jne	 SHORT $LN1@GetElevate

; 193  : 		throw UserAbort (SRC_POS);

  00023	68 00 00 00 00	 push	 OFFSET __TI2?AUUserAbort@CipherShed@@
  00028	8d 54 24 04	 lea	 edx, DWORD PTR $T117896[esp+12]
  0002c	52		 push	 edx
  0002d	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR $T117896[esp+16], OFFSET ??_7UserAbort@CipherShed@@6B@
  00035	e8 00 00 00 00	 call	 __CxxThrowException@8
$LN1@GetElevate:

; 194  : 
; 195  : 	return instance;

  0003a	8b 44 24 04	 mov	 eax, DWORD PTR _instance$[esp+8]

; 196  : }

  0003e	83 c4 08	 add	 esp, 8
  00041	c3		 ret	 0
$LN10@GetElevate:
?GetElevatedInstance@@YAPAUICipherShedMainCom@@PAUHWND__@@@Z ENDP ; GetElevatedInstance
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0Exception@CipherShed@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0Exception@CipherShed@@QAE@ABU01@@Z PROC		; CipherShed::Exception::Exception, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7Exception@CipherShed@@6B@
  00008	c2 04 00	 ret	 4
??0Exception@CipherShed@@QAE@ABU01@@Z ENDP		; CipherShed::Exception::Exception
_TEXT	ENDS
PUBLIC	??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlalloc.h
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 640  : 	CAtlSafeAllocBufferManager() : m_pHead(NULL) {};

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  00008	c3		 ret	 0
??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ PROC ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>, COMDAT
; _this$ = ecx

; 654  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 655  : 		// Walk the list and free the buffers
; 656  : 		while (m_pHead != NULL)

  00003	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00006	74 14		 je	 SHORT $LN1@CAtlSafeAl
$LL2@CAtlSafeAl:

; 657  : 		{
; 658  : 			CAtlSafeAllocBufferNode* p = m_pHead;

  00008	8b 06		 mov	 eax, DWORD PTR [esi]

; 659  : 			m_pHead = m_pHead->m_pNext;

  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]

; 660  : 			Allocator::Free(p);

  0000c	50		 push	 eax
  0000d	89 0e		 mov	 DWORD PTR [esi], ecx
  0000f	e8 00 00 00 00	 call	 _free
  00014	83 c4 04	 add	 esp, 4
  00017	83 3e 00	 cmp	 DWORD PTR [esi], 0
  0001a	75 ec		 jne	 SHORT $LL2@CAtlSafeAl
$LN1@CAtlSafeAl:
  0001c	5e		 pop	 esi

; 661  : 		}
; 662  : 	}

  0001d	c3		 ret	 0
??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ENDP ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
_TEXT	ENDS
PUBLIC	??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@ ; CipherShedFactory<CipherShedMainCom>::`vftable'
PUBLIC	??1?$CipherShedFactory@VCipherShedMainCom@@@@QAE@XZ ; CipherShedFactory<CipherShedMainCom>::~CipherShedFactory<CipherShedMainCom>
PUBLIC	??_R4?$CipherShedFactory@VCipherShedMainCom@@@@6B@ ; CipherShedFactory<CipherShedMainCom>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$CipherShedFactory@VCipherShedMainCom@@@@@8 ; CipherShedFactory<CipherShedMainCom> `RTTI Type Descriptor'
PUBLIC	??_R3?$CipherShedFactory@VCipherShedMainCom@@@@8 ; CipherShedFactory<CipherShedMainCom>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CipherShedFactory@VCipherShedMainCom@@@@8 ; CipherShedFactory<CipherShedMainCom>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CipherShedFactory@VCipherShedMainCom@@@@8 ; CipherShedFactory<CipherShedMainCom>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@IClassFactory@@8			; IClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIClassFactory@@@8			; IClassFactory `RTTI Type Descriptor'
PUBLIC	??_R3IClassFactory@@8				; IClassFactory::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IClassFactory@@8				; IClassFactory::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@IUnknown@@8			; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUIUnknown@@@8				; IUnknown `RTTI Type Descriptor'
PUBLIC	??_R3IUnknown@@8				; IUnknown::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2IUnknown@@8				; IUnknown::`RTTI Base Class Array'
PUBLIC	?QueryInterface@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJABU_GUID@@PAPAX@Z ; CipherShedFactory<CipherShedMainCom>::QueryInterface
PUBLIC	?AddRef@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ ; CipherShedFactory<CipherShedMainCom>::AddRef
PUBLIC	?Release@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ ; CipherShedFactory<CipherShedMainCom>::Release
PUBLIC	?CreateInstance@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ; CipherShedFactory<CipherShedMainCom>::CreateInstance
PUBLIC	?LockServer@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJH@Z ; CipherShedFactory<CipherShedMainCom>::LockServer
PUBLIC	?IsServerLocked@?$CipherShedFactory@VCipherShedMainCom@@@@UAE_NXZ ; CipherShedFactory<CipherShedMainCom>::IsServerLocked
;	COMDAT ??_R2IUnknown@@8
; File c:\users\public\desktop\projects\ciphershed\src\common\basecom.h
rdata$r	SEGMENT
??_R2IUnknown@@8 DD FLAT:??_R1A@?0A@EA@IUnknown@@8	; IUnknown::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3IUnknown@@8
rdata$r	SEGMENT
??_R3IUnknown@@8 DD 00H					; IUnknown::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIUnknown@@@8
_DATA	SEGMENT
??_R0?AUIUnknown@@@8 DD FLAT:??_7type_info@@6B@		; IUnknown `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIUnknown@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IUnknown@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IUnknown@@8 DD FLAT:??_R0?AUIUnknown@@@8	; IUnknown::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R2IClassFactory@@8
rdata$r	SEGMENT
??_R2IClassFactory@@8 DD FLAT:??_R1A@?0A@EA@IClassFactory@@8 ; IClassFactory::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3IClassFactory@@8
rdata$r	SEGMENT
??_R3IClassFactory@@8 DD 00H				; IClassFactory::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2IClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUIClassFactory@@@8
_DATA	SEGMENT
??_R0?AUIClassFactory@@@8 DD FLAT:??_7type_info@@6B@	; IClassFactory `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUIClassFactory@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@IClassFactory@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@IClassFactory@@8 DD FLAT:??_R0?AUIClassFactory@@@8 ; IClassFactory::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3IClassFactory@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CipherShedFactory@VCipherShedMainCom@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CipherShedFactory@VCipherShedMainCom@@@@8 DD FLAT:??_R0?AV?$CipherShedFactory@VCipherShedMainCom@@@@@8 ; CipherShedFactory<CipherShedMainCom>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CipherShedFactory@VCipherShedMainCom@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CipherShedFactory@VCipherShedMainCom@@@@8
rdata$r	SEGMENT
??_R2?$CipherShedFactory@VCipherShedMainCom@@@@8 DD FLAT:??_R1A@?0A@EA@?$CipherShedFactory@VCipherShedMainCom@@@@8 ; CipherShedFactory<CipherShedMainCom>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IClassFactory@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CipherShedFactory@VCipherShedMainCom@@@@8
rdata$r	SEGMENT
??_R3?$CipherShedFactory@VCipherShedMainCom@@@@8 DD 00H	; CipherShedFactory<CipherShedMainCom>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$CipherShedFactory@VCipherShedMainCom@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CipherShedFactory@VCipherShedMainCom@@@@@8
_DATA	SEGMENT
??_R0?AV?$CipherShedFactory@VCipherShedMainCom@@@@@8 DD FLAT:??_7type_info@@6B@ ; CipherShedFactory<CipherShedMainCom> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CipherShedFactory@VCipherShedMainCom@@@@', 00H
_DATA	ENDS
;	COMDAT ??_R4?$CipherShedFactory@VCipherShedMainCom@@@@6B@
rdata$r	SEGMENT
??_R4?$CipherShedFactory@VCipherShedMainCom@@@@6B@ DD 00H ; CipherShedFactory<CipherShedMainCom>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CipherShedFactory@VCipherShedMainCom@@@@@8
	DD	FLAT:??_R3?$CipherShedFactory@VCipherShedMainCom@@@@8
rdata$r	ENDS
;	COMDAT ??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@
CONST	SEGMENT
??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@ DD FLAT:??_R4?$CipherShedFactory@VCipherShedMainCom@@@@6B@ ; CipherShedFactory<CipherShedMainCom>::`vftable'
	DD	FLAT:?QueryInterface@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ
	DD	FLAT:?Release@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ
	DD	FLAT:?CreateInstance@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
	DD	FLAT:?LockServer@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJH@Z
	DD	FLAT:?IsServerLocked@?$CipherShedFactory@VCipherShedMainCom@@@@UAE_NXZ
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??1?$CipherShedFactory@VCipherShedMainCom@@@@QAE@XZ
_TEXT	SEGMENT
??1?$CipherShedFactory@VCipherShedMainCom@@@@QAE@XZ PROC ; CipherShedFactory<CipherShedMainCom>::~CipherShedFactory<CipherShedMainCom>, COMDAT
; _this$ = ecx

; 22   : 	~CipherShedFactory () { }

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET ??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@
  00006	c3		 ret	 0
??1?$CipherShedFactory@VCipherShedMainCom@@@@QAE@XZ ENDP ; CipherShedFactory<CipherShedMainCom>::~CipherShedFactory<CipherShedMainCom>
_TEXT	ENDS
PUBLIC	_IsEqualGUID
; Function compile flags: /Ogtpy
; File c:\program files\microsoft sdks\windows\v7.0\include\guiddef.h
;	COMDAT _IsEqualGUID
_TEXT	SEGMENT
_rguid1$ = 8						; size = 4
_rguid2$ = 12						; size = 4
_IsEqualGUID PROC					; COMDAT

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR _rguid2$[esp-4]
  00004	8b 54 24 04	 mov	 edx, DWORD PTR _rguid1$[esp-4]
  00008	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0000d	56		 push	 esi
  0000e	8b ff		 npad	 2
$LL4@IsEqualGUI:
  00010	8b 32		 mov	 esi, DWORD PTR [edx]
  00012	3b 31		 cmp	 esi, DWORD PTR [ecx]
  00014	75 1b		 jne	 SHORT $LN5@IsEqualGUI
  00016	83 e8 04	 sub	 eax, 4
  00019	83 c1 04	 add	 ecx, 4
  0001c	83 c2 04	 add	 edx, 4
  0001f	83 f8 04	 cmp	 eax, 4
  00022	73 ec		 jae	 SHORT $LL4@IsEqualGUI
  00024	33 c0		 xor	 eax, eax
  00026	33 d2		 xor	 edx, edx
  00028	85 c0		 test	 eax, eax
  0002a	0f 94 c2	 sete	 dl
  0002d	5e		 pop	 esi
  0002e	8b c2		 mov	 eax, edx

; 162  : }

  00030	c3		 ret	 0
$LN5@IsEqualGUI:

; 161  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00031	0f b6 02	 movzx	 eax, BYTE PTR [edx]
  00034	0f b6 31	 movzx	 esi, BYTE PTR [ecx]
  00037	2b c6		 sub	 eax, esi
  00039	75 22		 jne	 SHORT $LN7@IsEqualGUI
  0003b	0f b6 42 01	 movzx	 eax, BYTE PTR [edx+1]
  0003f	0f b6 71 01	 movzx	 esi, BYTE PTR [ecx+1]
  00043	2b c6		 sub	 eax, esi
  00045	75 16		 jne	 SHORT $LN7@IsEqualGUI
  00047	0f b6 42 02	 movzx	 eax, BYTE PTR [edx+2]
  0004b	0f b6 71 02	 movzx	 esi, BYTE PTR [ecx+2]
  0004f	2b c6		 sub	 eax, esi
  00051	75 0a		 jne	 SHORT $LN7@IsEqualGUI
  00053	0f b6 42 03	 movzx	 eax, BYTE PTR [edx+3]
  00057	0f b6 49 03	 movzx	 ecx, BYTE PTR [ecx+3]
  0005b	2b c1		 sub	 eax, ecx
$LN7@IsEqualGUI:
  0005d	c1 f8 1f	 sar	 eax, 31			; 0000001fH
  00060	83 c8 01	 or	 eax, 1
  00063	33 d2		 xor	 edx, edx
  00065	85 c0		 test	 eax, eax
  00067	0f 94 c2	 sete	 dl
  0006a	5e		 pop	 esi
  0006b	8b c2		 mov	 eax, edx

; 162  : }

  0006d	c3		 ret	 0
_IsEqualGUID ENDP
_TEXT	ENDS
PUBLIC	_==
; Function compile flags: /Ogtpy
;	COMDAT _==
_TEXT	SEGMENT
_guidOne$ = 8						; size = 4
_guidOther$ = 12					; size = 4
_==	PROC						; COMDAT

; 194  :     return IsEqualGUID(guidOne,guidOther);

  00000	e9 00 00 00 00	 jmp	 _IsEqualGUID
_==	ENDP
_TEXT	ENDS
PUBLIC	??_7CipherShedMainCom@@6B@			; CipherShedMainCom::`vftable'
PUBLIC	??1CipherShedMainCom@@QAE@XZ			; CipherShedMainCom::~CipherShedMainCom
PUBLIC	??_R4CipherShedMainCom@@6B@			; CipherShedMainCom::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCipherShedMainCom@@@8			; CipherShedMainCom `RTTI Type Descriptor'
PUBLIC	??_R3CipherShedMainCom@@8			; CipherShedMainCom::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CipherShedMainCom@@8			; CipherShedMainCom::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CipherShedMainCom@@8		; CipherShedMainCom::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ICipherShedMainCom@@8		; ICipherShedMainCom::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AUICipherShedMainCom@@@8			; ICipherShedMainCom `RTTI Type Descriptor'
PUBLIC	??_R3ICipherShedMainCom@@8			; ICipherShedMainCom::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ICipherShedMainCom@@8			; ICipherShedMainCom::`RTTI Base Class Array'
PUBLIC	?QueryInterface@CipherShedMainCom@@UAGJABU_GUID@@PAPAX@Z ; CipherShedMainCom::QueryInterface
PUBLIC	?AddRef@CipherShedMainCom@@UAGKXZ		; CipherShedMainCom::AddRef
PUBLIC	?Release@CipherShedMainCom@@UAGKXZ		; CipherShedMainCom::Release
PUBLIC	?AnalyzeKernelMiniDump@CipherShedMainCom@@UAGXJ@Z ; CipherShedMainCom::AnalyzeKernelMiniDump
PUBLIC	?BackupVolumeHeader@CipherShedMainCom@@UAGHJHPA_W@Z ; CipherShedMainCom::BackupVolumeHeader
PUBLIC	?CallDriver@CipherShedMainCom@@UAGKKPA_WPAPA_W@Z ; CipherShedMainCom::CallDriver
PUBLIC	?ChangePassword@CipherShedMainCom@@UAGHPA_WPAUPassword@@1HJ@Z ; CipherShedMainCom::ChangePassword
PUBLIC	?CopyFileA@CipherShedMainCom@@UAGKPA_W0@Z	; CipherShedMainCom::CopyFileA
PUBLIC	?DeleteFileA@CipherShedMainCom@@UAGKPA_W@Z	; CipherShedMainCom::DeleteFileA
PUBLIC	?IsPagingFileActive@CipherShedMainCom@@UAGHH@Z	; CipherShedMainCom::IsPagingFileActive
PUBLIC	?ReadWriteFile@CipherShedMainCom@@UAGKHHPA_WPAPA_W_KIPAK@Z ; CipherShedMainCom::ReadWriteFile
PUBLIC	?RegisterFilterDriver@CipherShedMainCom@@UAGKHH@Z ; CipherShedMainCom::RegisterFilterDriver
PUBLIC	?RegisterSystemFavoritesService@CipherShedMainCom@@UAGKH@Z ; CipherShedMainCom::RegisterSystemFavoritesService
PUBLIC	?RestoreVolumeHeader@CipherShedMainCom@@UAGHJPA_W@Z ; CipherShedMainCom::RestoreVolumeHeader
PUBLIC	?SetDriverServiceStartType@CipherShedMainCom@@UAGKK@Z ; CipherShedMainCom::SetDriverServiceStartType
PUBLIC	?WriteLocalMachineRegistryDwordValue@CipherShedMainCom@@UAGKPA_W0K@Z ; CipherShedMainCom::WriteLocalMachineRegistryDwordValue
EXTRN	__imp__PostThreadMessageA@16:PROC
EXTRN	__imp__InterlockedDecrement@4:PROC
;	COMDAT ??_R2ICipherShedMainCom@@8
; File c:\users\public\desktop\projects\ciphershed\src\mount\maincom.cpp
rdata$r	SEGMENT
??_R2ICipherShedMainCom@@8 DD FLAT:??_R1A@?0A@EA@ICipherShedMainCom@@8 ; ICipherShedMainCom::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3ICipherShedMainCom@@8
rdata$r	SEGMENT
??_R3ICipherShedMainCom@@8 DD 00H			; ICipherShedMainCom::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ICipherShedMainCom@@8
rdata$r	ENDS
;	COMDAT ??_R0?AUICipherShedMainCom@@@8
_DATA	SEGMENT
??_R0?AUICipherShedMainCom@@@8 DD FLAT:??_7type_info@@6B@ ; ICipherShedMainCom `RTTI Type Descriptor'
	DD	00H
	DB	'.?AUICipherShedMainCom@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ICipherShedMainCom@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ICipherShedMainCom@@8 DD FLAT:??_R0?AUICipherShedMainCom@@@8 ; ICipherShedMainCom::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ICipherShedMainCom@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CipherShedMainCom@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CipherShedMainCom@@8 DD FLAT:??_R0?AVCipherShedMainCom@@@8 ; CipherShedMainCom::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CipherShedMainCom@@8
rdata$r	ENDS
;	COMDAT ??_R2CipherShedMainCom@@8
rdata$r	SEGMENT
??_R2CipherShedMainCom@@8 DD FLAT:??_R1A@?0A@EA@CipherShedMainCom@@8 ; CipherShedMainCom::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ICipherShedMainCom@@8
	DD	FLAT:??_R1A@?0A@EA@IUnknown@@8
rdata$r	ENDS
;	COMDAT ??_R3CipherShedMainCom@@8
rdata$r	SEGMENT
??_R3CipherShedMainCom@@8 DD 00H			; CipherShedMainCom::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2CipherShedMainCom@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCipherShedMainCom@@@8
_DATA	SEGMENT
??_R0?AVCipherShedMainCom@@@8 DD FLAT:??_7type_info@@6B@ ; CipherShedMainCom `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCipherShedMainCom@@', 00H
_DATA	ENDS
;	COMDAT ??_R4CipherShedMainCom@@6B@
rdata$r	SEGMENT
??_R4CipherShedMainCom@@6B@ DD 00H			; CipherShedMainCom::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCipherShedMainCom@@@8
	DD	FLAT:??_R3CipherShedMainCom@@8
rdata$r	ENDS
;	COMDAT ??_7CipherShedMainCom@@6B@
CONST	SEGMENT
??_7CipherShedMainCom@@6B@ DD FLAT:??_R4CipherShedMainCom@@6B@ ; CipherShedMainCom::`vftable'
	DD	FLAT:?QueryInterface@CipherShedMainCom@@UAGJABU_GUID@@PAPAX@Z
	DD	FLAT:?AddRef@CipherShedMainCom@@UAGKXZ
	DD	FLAT:?Release@CipherShedMainCom@@UAGKXZ
	DD	FLAT:?AnalyzeKernelMiniDump@CipherShedMainCom@@UAGXJ@Z
	DD	FLAT:?BackupVolumeHeader@CipherShedMainCom@@UAGHJHPA_W@Z
	DD	FLAT:?CallDriver@CipherShedMainCom@@UAGKKPA_WPAPA_W@Z
	DD	FLAT:?ChangePassword@CipherShedMainCom@@UAGHPA_WPAUPassword@@1HJ@Z
	DD	FLAT:?CopyFileA@CipherShedMainCom@@UAGKPA_W0@Z
	DD	FLAT:?DeleteFileA@CipherShedMainCom@@UAGKPA_W@Z
	DD	FLAT:?IsPagingFileActive@CipherShedMainCom@@UAGHH@Z
	DD	FLAT:?ReadWriteFile@CipherShedMainCom@@UAGKHHPA_WPAPA_W_KIPAK@Z
	DD	FLAT:?RegisterFilterDriver@CipherShedMainCom@@UAGKHH@Z
	DD	FLAT:?RegisterSystemFavoritesService@CipherShedMainCom@@UAGKH@Z
	DD	FLAT:?RestoreVolumeHeader@CipherShedMainCom@@UAGHJPA_W@Z
	DD	FLAT:?SetDriverServiceStartType@CipherShedMainCom@@UAGKK@Z
	DD	FLAT:?WriteLocalMachineRegistryDwordValue@CipherShedMainCom@@UAGKPA_W0K@Z
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ??1CipherShedMainCom@@QAE@XZ
_TEXT	SEGMENT
??1CipherShedMainCom@@QAE@XZ PROC			; CipherShedMainCom::~CipherShedMainCom, COMDAT
; _this$ = ecx

; 35   : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 36   : 		if (InterlockedDecrement (&ObjectCount) == 0)

  00003	68 00 00 00 00	 push	 OFFSET _ObjectCount
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CipherShedMainCom@@6B@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedDecrement@4
  00014	85 c0		 test	 eax, eax
  00016	75 11		 jne	 SHORT $LN1@CipherShed

; 37   : 			PostThreadMessage (MessageThreadId, WM_APP, 0, 0);

  00018	50		 push	 eax
  00019	50		 push	 eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	68 00 80 00 00	 push	 32768			; 00008000H
  00022	50		 push	 eax
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostThreadMessageA@16
$LN1@CipherShed:
  00029	5e		 pop	 esi

; 38   : 	}

  0002a	c3		 ret	 0
??1CipherShedMainCom@@QAE@XZ ENDP			; CipherShedMainCom::~CipherShedMainCom
_TEXT	ENDS
PUBLIC	_HRESULT_FROM_WIN32
; Function compile flags: /Ogtpy
; File c:\program files\microsoft sdks\windows\v7.0\include\winerror.h
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT

; 23841: FORCEINLINE HRESULT HRESULT_FROM_WIN32(unsigned long x) { return (HRESULT)(x) <= 0 ? (HRESULT)(x) : (HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000);}

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _x$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7e 0a		 jle	 SHORT $LN4@HRESULT_FR
  00008	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000d	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
$LN4@HRESULT_FR:
  00012	c3		 ret	 0
_HRESULT_FROM_WIN32 ENDP
_TEXT	ENDS
PUBLIC	?AtlThrowLastWin32@ATL@@YGXXZ			; ATL::AtlThrowLastWin32
EXTRN	__imp__GetLastError@0:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlexcept.h
;	COMDAT ?AtlThrowLastWin32@ATL@@YGXXZ
_TEXT	SEGMENT
?AtlThrowLastWin32@ATL@@YGXXZ PROC			; ATL::AtlThrowLastWin32, COMDAT

; 83   : 	DWORD dwError = ::GetLastError();

  00000	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0

; 84   : 	AtlThrow( HRESULT_FROM_WIN32( dwError ) );

  00006	85 c0		 test	 eax, eax
  00008	7e 0a		 jle	 SHORT $LN6@AtlThrowLa
  0000a	25 ff ff 00 00	 and	 eax, 65535		; 0000ffffH
  0000f	0d 00 00 07 80	 or	 eax, -2147024896	; 80070000H
$LN6@AtlThrowLa:
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN7@AtlThrowLa:
  0001a	cc		 int	 3
?AtlThrowLastWin32@ATL@@YGXXZ ENDP			; ATL::AtlThrowLastWin32
_TEXT	ENDS
EXTRN	__imp__InterlockedIncrement@4:PROC
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\mount\maincom.cpp
;	COMDAT ?AddRef@CipherShedMainCom@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@CipherShedMainCom@@UAGKXZ PROC			; CipherShedMainCom::AddRef, COMDAT

; 42   : 		return InterlockedIncrement (&RefCount);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _this$[esp-4]
  00004	83 c0 08	 add	 eax, 8
  00007	89 44 24 04	 mov	 DWORD PTR _this$[esp-4], eax
  0000b	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedIncrement@4
?AddRef@CipherShedMainCom@@UAGKXZ ENDP			; CipherShedMainCom::AddRef
_TEXT	ENDS
EXTRN	_IID_IUnknown:BYTE
; Function compile flags: /Ogtpy
;	COMDAT ?QueryInterface@CipherShedMainCom@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@CipherShedMainCom@@UAGJABU_GUID@@PAPAX@Z PROC ; CipherShedMainCom::QueryInterface, COMDAT

; 57   : 	{

  00000	56		 push	 esi

; 58   : 		if (riid == IID_IUnknown || riid == IID_ICipherShedMainCom)

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR _riid$[esp]
  00005	68 00 00 00 00	 push	 OFFSET _IID_IUnknown
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _IsEqualGUID
  00010	83 c4 08	 add	 esp, 8
  00013	85 c0		 test	 eax, eax
  00015	75 25		 jne	 SHORT $LN2@QueryInter
  00017	68 00 00 00 00	 push	 OFFSET _IID_ICipherShedMainCom
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _IsEqualGUID
  00022	83 c4 08	 add	 esp, 8
  00025	85 c0		 test	 eax, eax
  00027	75 13		 jne	 SHORT $LN2@QueryInter

; 60   : 		else
; 61   : 		{
; 62   : 			*ppvObject = NULL;

  00029	8b 44 24 10	 mov	 eax, DWORD PTR _ppvObject$[esp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 63   : 			return E_NOINTERFACE;

  00033	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
  00038	5e		 pop	 esi

; 68   : 	}

  00039	c2 0c 00	 ret	 12			; 0000000cH
$LN2@QueryInter:

; 59   : 			*ppvObject = this;

  0003c	8b 44 24 08	 mov	 eax, DWORD PTR _this$[esp]
  00040	8b 4c 24 10	 mov	 ecx, DWORD PTR _ppvObject$[esp]
  00044	89 01		 mov	 DWORD PTR [ecx], eax

; 64   : 		}
; 65   : 
; 66   : 		AddRef ();

  00046	8b 10		 mov	 edx, DWORD PTR [eax]
  00048	50		 push	 eax
  00049	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004c	ff d0		 call	 eax

; 67   : 		return S_OK;

  0004e	33 c0		 xor	 eax, eax
  00050	5e		 pop	 esi

; 68   : 	}

  00051	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@CipherShedMainCom@@UAGJABU_GUID@@PAPAX@Z ENDP ; CipherShedMainCom::QueryInterface
_TEXT	ENDS
EXTRN	_AnalyzeKernelMiniDump:PROC
EXTRN	_MainDlg:DWORD
; Function compile flags: /Ogtpy
;	COMDAT ?AnalyzeKernelMiniDump@CipherShedMainCom@@UAGXJ@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_hwndDlg$ = 12						; size = 4
?AnalyzeKernelMiniDump@CipherShedMainCom@@UAGXJ@Z PROC	; CipherShedMainCom::AnalyzeKernelMiniDump, COMDAT

; 72   : 		MainDlg = (HWND) hwndDlg;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _hwndDlg$[esp-4]

; 73   : 		::AnalyzeKernelMiniDump ((HWND) hwndDlg);

  00004	50		 push	 eax
  00005	a3 00 00 00 00	 mov	 DWORD PTR _MainDlg, eax
  0000a	e8 00 00 00 00	 call	 _AnalyzeKernelMiniDump
  0000f	59		 pop	 ecx

; 74   : 	}

  00010	c2 08 00	 ret	 8
?AnalyzeKernelMiniDump@CipherShedMainCom@@UAGXJ@Z ENDP	; CipherShedMainCom::AnalyzeKernelMiniDump
_TEXT	ENDS
EXTRN	?CallDriver@BaseCom@@SAKKPA_WPAPA_W@Z:PROC	; BaseCom::CallDriver
; Function compile flags: /Ogtpy
;	COMDAT ?CallDriver@CipherShedMainCom@@UAGKKPA_WPAPA_W@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_ioctl$ = 12						; size = 4
_input$ = 16						; size = 4
_output$ = 20						; size = 4
?CallDriver@CipherShedMainCom@@UAGKKPA_WPAPA_W@Z PROC	; CipherShedMainCom::CallDriver, COMDAT

; 92   : 		return BaseCom::CallDriver (ioctl, input, output);

  00000	8b 44 24 10	 mov	 eax, DWORD PTR _output$[esp-4]
  00004	8b 4c 24 0c	 mov	 ecx, DWORD PTR _input$[esp-4]
  00008	8b 54 24 08	 mov	 edx, DWORD PTR _ioctl$[esp-4]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?CallDriver@BaseCom@@SAKKPA_WPAPA_W@Z ; BaseCom::CallDriver
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 93   : 	}

  00017	c2 10 00	 ret	 16			; 00000010H
?CallDriver@CipherShedMainCom@@UAGKKPA_WPAPA_W@Z ENDP	; CipherShedMainCom::CallDriver
_TEXT	ENDS
EXTRN	?CopyFileA@BaseCom@@SAKPA_W0@Z:PROC		; BaseCom::CopyFileA
; Function compile flags: /Ogtpy
;	COMDAT ?CopyFileA@CipherShedMainCom@@UAGKPA_W0@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_sourceFile$ = 12					; size = 4
_destinationFile$ = 16					; size = 4
?CopyFileA@CipherShedMainCom@@UAGKPA_W0@Z PROC		; CipherShedMainCom::CopyFileA, COMDAT

; 104  : 		return BaseCom::CopyFile (sourceFile, destinationFile);

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _destinationFile$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR _sourceFile$[esp-4]
  00008	50		 push	 eax
  00009	51		 push	 ecx
  0000a	e8 00 00 00 00	 call	 ?CopyFileA@BaseCom@@SAKPA_W0@Z ; BaseCom::CopyFileA
  0000f	83 c4 08	 add	 esp, 8

; 105  : 	}

  00012	c2 0c 00	 ret	 12			; 0000000cH
?CopyFileA@CipherShedMainCom@@UAGKPA_W0@Z ENDP		; CipherShedMainCom::CopyFileA
_TEXT	ENDS
EXTRN	?DeleteFileA@BaseCom@@SAKPA_W@Z:PROC		; BaseCom::DeleteFileA
; Function compile flags: /Ogtpy
;	COMDAT ?DeleteFileA@CipherShedMainCom@@UAGKPA_W@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_file$ = 12						; size = 4
?DeleteFileA@CipherShedMainCom@@UAGKPA_W@Z PROC		; CipherShedMainCom::DeleteFileA, COMDAT

; 109  : 		return BaseCom::DeleteFile (file);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _file$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ?DeleteFileA@BaseCom@@SAKPA_W@Z ; BaseCom::DeleteFileA
  0000a	83 c4 04	 add	 esp, 4

; 110  : 	}

  0000d	c2 08 00	 ret	 8
?DeleteFileA@CipherShedMainCom@@UAGKPA_W@Z ENDP		; CipherShedMainCom::DeleteFileA
_TEXT	ENDS
EXTRN	?IsPagingFileActive@BaseCom@@SAHH@Z:PROC	; BaseCom::IsPagingFileActive
; Function compile flags: /Ogtpy
;	COMDAT ?IsPagingFileActive@CipherShedMainCom@@UAGHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_checkNonWindowsPartitionsOnly$ = 12			; size = 4
?IsPagingFileActive@CipherShedMainCom@@UAGHH@Z PROC	; CipherShedMainCom::IsPagingFileActive, COMDAT

; 114  : 		return BaseCom::IsPagingFileActive (checkNonWindowsPartitionsOnly);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _checkNonWindowsPartitionsOnly$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ?IsPagingFileActive@BaseCom@@SAHH@Z ; BaseCom::IsPagingFileActive
  0000a	83 c4 04	 add	 esp, 4

; 115  : 	}

  0000d	c2 08 00	 ret	 8
?IsPagingFileActive@CipherShedMainCom@@UAGHH@Z ENDP	; CipherShedMainCom::IsPagingFileActive
_TEXT	ENDS
EXTRN	?ReadWriteFile@BaseCom@@SAKHHPA_WPAPA_W_KIPAK@Z:PROC ; BaseCom::ReadWriteFile
; Function compile flags: /Ogtpy
;	COMDAT ?ReadWriteFile@CipherShedMainCom@@UAGKHHPA_WPAPA_W_KIPAK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_write$ = 12						; size = 4
_device$ = 16						; size = 4
_filePath$ = 20						; size = 4
_bufferBstr$ = 24					; size = 4
_offset$ = 28						; size = 8
_size$ = 36						; size = 4
_sizeDone$ = 40						; size = 4
?ReadWriteFile@CipherShedMainCom@@UAGKHHPA_WPAPA_W_KIPAK@Z PROC ; CipherShedMainCom::ReadWriteFile, COMDAT

; 119  : 		return BaseCom::ReadWriteFile (write, device, filePath, bufferBstr, offset, size, sizeDone);

  00000	8b 44 24 24	 mov	 eax, DWORD PTR _sizeDone$[esp-4]
  00004	8b 4c 24 20	 mov	 ecx, DWORD PTR _size$[esp-4]
  00008	8b 54 24 1c	 mov	 edx, DWORD PTR _offset$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 1c	 mov	 eax, DWORD PTR _offset$[esp]
  00011	51		 push	 ecx
  00012	8b 4c 24 1c	 mov	 ecx, DWORD PTR _bufferBstr$[esp+4]
  00016	52		 push	 edx
  00017	8b 54 24 1c	 mov	 edx, DWORD PTR _filePath$[esp+8]
  0001b	50		 push	 eax
  0001c	8b 44 24 1c	 mov	 eax, DWORD PTR _device$[esp+12]
  00020	51		 push	 ecx
  00021	8b 4c 24 1c	 mov	 ecx, DWORD PTR _write$[esp+16]
  00025	52		 push	 edx
  00026	50		 push	 eax
  00027	51		 push	 ecx
  00028	e8 00 00 00 00	 call	 ?ReadWriteFile@BaseCom@@SAKHHPA_WPAPA_W_KIPAK@Z ; BaseCom::ReadWriteFile
  0002d	83 c4 20	 add	 esp, 32			; 00000020H

; 120  : 	}

  00030	c2 24 00	 ret	 36			; 00000024H
?ReadWriteFile@CipherShedMainCom@@UAGKHHPA_WPAPA_W_KIPAK@Z ENDP ; CipherShedMainCom::ReadWriteFile
_TEXT	ENDS
EXTRN	?RegisterFilterDriver@BaseCom@@SAKHH@Z:PROC	; BaseCom::RegisterFilterDriver
; Function compile flags: /Ogtpy
;	COMDAT ?RegisterFilterDriver@CipherShedMainCom@@UAGKHH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_registerDriver$ = 12					; size = 4
_filterType$ = 16					; size = 4
?RegisterFilterDriver@CipherShedMainCom@@UAGKHH@Z PROC	; CipherShedMainCom::RegisterFilterDriver, COMDAT

; 124  : 		return BaseCom::RegisterFilterDriver (registerDriver, filterType);

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _filterType$[esp-4]
  00004	8b 4c 24 08	 mov	 ecx, DWORD PTR _registerDriver$[esp-4]
  00008	50		 push	 eax
  00009	51		 push	 ecx
  0000a	e8 00 00 00 00	 call	 ?RegisterFilterDriver@BaseCom@@SAKHH@Z ; BaseCom::RegisterFilterDriver
  0000f	83 c4 08	 add	 esp, 8

; 125  : 	}

  00012	c2 0c 00	 ret	 12			; 0000000cH
?RegisterFilterDriver@CipherShedMainCom@@UAGKHH@Z ENDP	; CipherShedMainCom::RegisterFilterDriver
_TEXT	ENDS
EXTRN	?RegisterSystemFavoritesService@BaseCom@@SAKH@Z:PROC ; BaseCom::RegisterSystemFavoritesService
; Function compile flags: /Ogtpy
;	COMDAT ?RegisterSystemFavoritesService@CipherShedMainCom@@UAGKH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_registerService$ = 12					; size = 4
?RegisterSystemFavoritesService@CipherShedMainCom@@UAGKH@Z PROC ; CipherShedMainCom::RegisterSystemFavoritesService, COMDAT

; 129  : 		return BaseCom::RegisterSystemFavoritesService (registerService);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _registerService$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ?RegisterSystemFavoritesService@BaseCom@@SAKH@Z ; BaseCom::RegisterSystemFavoritesService
  0000a	83 c4 04	 add	 esp, 4

; 130  : 	}

  0000d	c2 08 00	 ret	 8
?RegisterSystemFavoritesService@CipherShedMainCom@@UAGKH@Z ENDP ; CipherShedMainCom::RegisterSystemFavoritesService
_TEXT	ENDS
EXTRN	?SetDriverServiceStartType@BaseCom@@SAKK@Z:PROC	; BaseCom::SetDriverServiceStartType
; Function compile flags: /Ogtpy
;	COMDAT ?SetDriverServiceStartType@CipherShedMainCom@@UAGKK@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_startType$ = 12					; size = 4
?SetDriverServiceStartType@CipherShedMainCom@@UAGKK@Z PROC ; CipherShedMainCom::SetDriverServiceStartType, COMDAT

; 134  : 		return BaseCom::SetDriverServiceStartType (startType);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _startType$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ?SetDriverServiceStartType@BaseCom@@SAKK@Z ; BaseCom::SetDriverServiceStartType
  0000a	83 c4 04	 add	 esp, 4

; 135  : 	}

  0000d	c2 08 00	 ret	 8
?SetDriverServiceStartType@CipherShedMainCom@@UAGKK@Z ENDP ; CipherShedMainCom::SetDriverServiceStartType
_TEXT	ENDS
EXTRN	?WriteLocalMachineRegistryDwordValue@BaseCom@@SAKPA_W0K@Z:PROC ; BaseCom::WriteLocalMachineRegistryDwordValue
; Function compile flags: /Ogtpy
;	COMDAT ?WriteLocalMachineRegistryDwordValue@CipherShedMainCom@@UAGKPA_W0K@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_keyPath$ = 12						; size = 4
_valueName$ = 16					; size = 4
_value$ = 20						; size = 4
?WriteLocalMachineRegistryDwordValue@CipherShedMainCom@@UAGKPA_W0K@Z PROC ; CipherShedMainCom::WriteLocalMachineRegistryDwordValue, COMDAT

; 139  : 		return BaseCom::WriteLocalMachineRegistryDwordValue (keyPath, valueName, value);

  00000	8b 44 24 10	 mov	 eax, DWORD PTR _value$[esp-4]
  00004	8b 4c 24 0c	 mov	 ecx, DWORD PTR _valueName$[esp-4]
  00008	8b 54 24 08	 mov	 edx, DWORD PTR _keyPath$[esp-4]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?WriteLocalMachineRegistryDwordValue@BaseCom@@SAKPA_W0K@Z ; BaseCom::WriteLocalMachineRegistryDwordValue
  00014	83 c4 0c	 add	 esp, 12			; 0000000cH

; 140  : 	}

  00017	c2 10 00	 ret	 16			; 00000010H
?WriteLocalMachineRegistryDwordValue@CipherShedMainCom@@UAGKPA_W0K@Z ENDP ; CipherShedMainCom::WriteLocalMachineRegistryDwordValue
_TEXT	ENDS
PUBLIC	??_GCipherShedMainCom@@QAEPAXI@Z		; CipherShedMainCom::`scalar deleting destructor'
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogtpy
;	COMDAT ??_GCipherShedMainCom@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCipherShedMainCom@@QAEPAXI@Z PROC			; CipherShedMainCom::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	68 00 00 00 00	 push	 OFFSET _ObjectCount
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CipherShedMainCom@@6B@
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedDecrement@4
  00014	85 c0		 test	 eax, eax
  00016	75 11		 jne	 SHORT $LN4@scalar
  00018	50		 push	 eax
  00019	50		 push	 eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	68 00 80 00 00	 push	 32768			; 00008000H
  00022	50		 push	 eax
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostThreadMessageA@16
$LN4@scalar:
  00029	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0002e	74 09		 je	 SHORT $LN7@scalar
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00036	83 c4 04	 add	 esp, 4
$LN7@scalar:
  00039	8b c6		 mov	 eax, esi
  0003b	5e		 pop	 esi
  0003c	c2 04 00	 ret	 4
??_GCipherShedMainCom@@QAEPAXI@Z ENDP			; CipherShedMainCom::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ			; ATL::CW2AEX<128>::operator char *
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlconv.h
;	COMDAT ??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ
_TEXT	SEGMENT
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ PROC			; ATL::CW2AEX<128>::operator char *, COMDAT
; _this$ = ecx

; 415  : 		return( m_psz );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 416  : 	}

  00002	c3		 ret	 0
??B?$CW2AEX@$0IA@@ATL@@QBEPADXZ ENDP			; ATL::CW2AEX<128>::operator char *
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\common\basecom.h
_TEXT	ENDS
;	COMDAT ?AddRef@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?AddRef@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ PROC ; CipherShedFactory<CipherShedMainCom>::AddRef, COMDAT

; 26   : 		return InterlockedIncrement (&RefCount) - 1;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _this$[esp-4]
  00004	83 c0 08	 add	 eax, 8
  00007	50		 push	 eax
  00008	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedIncrement@4
  0000e	48		 dec	 eax

; 27   : 	}

  0000f	c2 04 00	 ret	 4
?AddRef@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ ENDP ; CipherShedFactory<CipherShedMainCom>::AddRef
_TEXT	ENDS
EXTRN	_IID_IClassFactory:BYTE
; Function compile flags: /Ogtpy
;	COMDAT ?QueryInterface@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_riid$ = 12						; size = 4
_ppvObject$ = 16					; size = 4
?QueryInterface@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJABU_GUID@@PAPAX@Z PROC ; CipherShedFactory<CipherShedMainCom>::QueryInterface, COMDAT

; 40   : 	{

  00000	56		 push	 esi

; 41   : 		if (riid == IID_IUnknown || riid == IID_IClassFactory)

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR _riid$[esp]
  00005	68 00 00 00 00	 push	 OFFSET _IID_IUnknown
  0000a	56		 push	 esi
  0000b	e8 00 00 00 00	 call	 _IsEqualGUID
  00010	83 c4 08	 add	 esp, 8
  00013	85 c0		 test	 eax, eax
  00015	75 25		 jne	 SHORT $LN2@QueryInter@2
  00017	68 00 00 00 00	 push	 OFFSET _IID_IClassFactory
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 _IsEqualGUID
  00022	83 c4 08	 add	 esp, 8
  00025	85 c0		 test	 eax, eax
  00027	75 13		 jne	 SHORT $LN2@QueryInter@2

; 43   : 		else
; 44   : 		{
; 45   : 			*ppvObject = NULL;

  00029	8b 44 24 10	 mov	 eax, DWORD PTR _ppvObject$[esp]
  0002d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 46   : 			return E_NOINTERFACE;

  00033	b8 02 40 00 80	 mov	 eax, -2147467262	; 80004002H
  00038	5e		 pop	 esi

; 51   : 	}

  00039	c2 0c 00	 ret	 12			; 0000000cH
$LN2@QueryInter@2:

; 42   : 			*ppvObject = this;

  0003c	8b 44 24 08	 mov	 eax, DWORD PTR _this$[esp]
  00040	8b 4c 24 10	 mov	 ecx, DWORD PTR _ppvObject$[esp]
  00044	89 01		 mov	 DWORD PTR [ecx], eax

; 47   : 		}
; 48   : 
; 49   : 		AddRef ();

  00046	8b 10		 mov	 edx, DWORD PTR [eax]
  00048	50		 push	 eax
  00049	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004c	ff d0		 call	 eax

; 50   : 		return S_OK;

  0004e	33 c0		 xor	 eax, eax
  00050	5e		 pop	 esi

; 51   : 	}

  00051	c2 0c 00	 ret	 12			; 0000000cH
?QueryInterface@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJABU_GUID@@PAPAX@Z ENDP ; CipherShedFactory<CipherShedMainCom>::QueryInterface
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?LockServer@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJH@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_fLock$ = 12						; size = 4
?LockServer@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJH@Z PROC ; CipherShedFactory<CipherShedMainCom>::LockServer, COMDAT

; 72   : 		if (fLock)

  00000	83 7c 24 08 00	 cmp	 DWORD PTR _fLock$[esp-4], 0
  00005	74 13		 je	 SHORT $LN3@LockServer

; 73   : 		{
; 74   : 			InterlockedIncrement (&ServerLockCount);

  00007	8b 44 24 04	 mov	 eax, DWORD PTR _this$[esp-4]
  0000b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0000e	50		 push	 eax
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedIncrement@4

; 80   : 		}
; 81   : 
; 82   : 		return S_OK;

  00015	33 c0		 xor	 eax, eax

; 83   : 	}

  00017	c2 08 00	 ret	 8
$LN3@LockServer:
  0001a	56		 push	 esi

; 75   : 		}
; 76   : 		else
; 77   : 		{
; 78   : 			if (!InterlockedDecrement (&ServerLockCount))

  0001b	8b 74 24 08	 mov	 esi, DWORD PTR _this$[esp]
  0001f	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00022	51		 push	 ecx
  00023	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedDecrement@4
  00029	85 c0		 test	 eax, eax
  0002b	75 11		 jne	 SHORT $LN6@LockServer

; 79   : 				PostThreadMessage (MessageThreadId, WM_APP, 0, 0);

  0002d	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00030	50		 push	 eax
  00031	50		 push	 eax
  00032	68 00 80 00 00	 push	 32768			; 00008000H
  00037	52		 push	 edx
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostThreadMessageA@16
$LN6@LockServer:
  0003e	5e		 pop	 esi

; 80   : 		}
; 81   : 
; 82   : 		return S_OK;

  0003f	33 c0		 xor	 eax, eax

; 83   : 	}

  00041	c2 08 00	 ret	 8
?LockServer@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJH@Z ENDP ; CipherShedFactory<CipherShedMainCom>::LockServer
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?IsServerLocked@?$CipherShedFactory@VCipherShedMainCom@@@@UAE_NXZ
_TEXT	SEGMENT
?IsServerLocked@?$CipherShedFactory@VCipherShedMainCom@@@@UAE_NXZ PROC ; CipherShedFactory<CipherShedMainCom>::IsServerLocked, COMDAT
; _this$ = ecx

; 87   : 		return ServerLockCount > 0;

  00000	33 c0		 xor	 eax, eax
  00002	39 41 0c	 cmp	 DWORD PTR [ecx+12], eax
  00005	0f 9f c0	 setg	 al

; 88   : 	}

  00008	c3		 ret	 0
?IsServerLocked@?$CipherShedFactory@VCipherShedMainCom@@@@UAE_NXZ ENDP ; CipherShedFactory<CipherShedMainCom>::IsServerLocked
_TEXT	ENDS
PUBLIC	??1?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAE@XZ ; ATL::CComPtrBase<ICipherShedMainCom>::~CComPtrBase<ICipherShedMainCom>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??1?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAE@XZ PROC	; ATL::CComPtrBase<ICipherShedMainCom>::~CComPtrBase<ICipherShedMainCom>, COMDAT
; _this$ = ecx

; 151  : 		if (p)

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	85 c0		 test	 eax, eax
  00004	74 08		 je	 SHORT $LN1@CComPtrBas

; 152  : 			p->Release();

  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000b	50		 push	 eax
  0000c	ff d2		 call	 edx
$LN1@CComPtrBas:

; 153  : 	}

  0000e	c3		 ret	 0
??1?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAE@XZ ENDP	; ATL::CComPtrBase<ICipherShedMainCom>::~CComPtrBase<ICipherShedMainCom>
_TEXT	ENDS
PUBLIC	??I?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAEPAPAUICipherShedMainCom@@XZ ; ATL::CComPtrBase<ICipherShedMainCom>::operator&
; Function compile flags: /Ogtpy
;	COMDAT ??I?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAEPAPAUICipherShedMainCom@@XZ
_TEXT	SEGMENT
??I?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAEPAPAUICipherShedMainCom@@XZ PROC ; ATL::CComPtrBase<ICipherShedMainCom>::operator&, COMDAT
; _this$ = ecx

; 166  : 	{

  00000	8b c1		 mov	 eax, ecx

; 167  : 		ATLASSERT(p==NULL);
; 168  : 		return &p;
; 169  : 	}

  00002	c3		 ret	 0
??I?$CComPtrBase@UICipherShedMainCom@@@ATL@@QAEPAPAUICipherShedMainCom@@XZ ENDP ; ATL::CComPtrBase<ICipherShedMainCom>::operator&
_TEXT	ENDS
PUBLIC	??C?$CComPtrBase@UICipherShedMainCom@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICipherShedMainCom@@@1@XZ ; ATL::CComPtrBase<ICipherShedMainCom>::operator->
; Function compile flags: /Ogtpy
;	COMDAT ??C?$CComPtrBase@UICipherShedMainCom@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICipherShedMainCom@@@1@XZ
_TEXT	SEGMENT
??C?$CComPtrBase@UICipherShedMainCom@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICipherShedMainCom@@@1@XZ PROC ; ATL::CComPtrBase<ICipherShedMainCom>::operator->, COMDAT
; _this$ = ecx

; 172  : 		ATLASSERT(p!=NULL);
; 173  : 		return (_NoAddRefReleaseOnCComPtr<T>*)p;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 174  : 	}

  00002	c3		 ret	 0
??C?$CComPtrBase@UICipherShedMainCom@@@ATL@@QBEPAV?$_NoAddRefReleaseOnCComPtr@UICipherShedMainCom@@@1@XZ ENDP ; ATL::CComPtrBase<ICipherShedMainCom>::operator->
_TEXT	ENDS
PUBLIC	??0IClassFactory@@QAE@XZ			; IClassFactory::IClassFactory
; Function compile flags: /Ogtpy
;	COMDAT ??0IClassFactory@@QAE@XZ
_TEXT	SEGMENT
??0IClassFactory@@QAE@XZ PROC				; IClassFactory::IClassFactory, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0IClassFactory@@QAE@XZ ENDP				; IClassFactory::IClassFactory
_TEXT	ENDS
PUBLIC	??_G?$CipherShedFactory@VCipherShedMainCom@@@@QAEPAXI@Z ; CipherShedFactory<CipherShedMainCom>::`scalar deleting destructor'
; Function compile flags: /Ogtpy
;	COMDAT ??_G?$CipherShedFactory@VCipherShedMainCom@@@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CipherShedFactory@VCipherShedMainCom@@@@QAEPAXI@Z PROC ; CipherShedFactory<CipherShedMainCom>::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	f6 44 24 04 01	 test	 BYTE PTR ___flags$[esp-4], 1
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@
  0000e	74 09		 je	 SHORT $LN6@scalar@2
  00010	56		 push	 esi
  00011	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00016	83 c4 04	 add	 esp, 4
$LN6@scalar@2:
  00019	8b c6		 mov	 eax, esi
  0001b	5e		 pop	 esi
  0001c	c2 04 00	 ret	 4
??_G?$CipherShedFactory@VCipherShedMainCom@@@@QAEPAXI@Z ENDP ; CipherShedFactory<CipherShedMainCom>::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$CComPtrBase@UICipherShedMainCom@@@ATL@@IAE@XZ ; ATL::CComPtrBase<ICipherShedMainCom>::CComPtrBase<ICipherShedMainCom>
; Function compile flags: /Ogtpy
;	COMDAT ??0?$CComPtrBase@UICipherShedMainCom@@@ATL@@IAE@XZ
_TEXT	SEGMENT
??0?$CComPtrBase@UICipherShedMainCom@@@ATL@@IAE@XZ PROC	; ATL::CComPtrBase<ICipherShedMainCom>::CComPtrBase<ICipherShedMainCom>, COMDAT
; _this$ = ecx

; 131  : 	CComPtrBase() throw()

  00000	8b c1		 mov	 eax, ecx

; 132  : 	{
; 133  : 		p = NULL;

  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 134  : 	}

  00008	c3		 ret	 0
??0?$CComPtrBase@UICipherShedMainCom@@@ATL@@IAE@XZ ENDP	; ATL::CComPtrBase<ICipherShedMainCom>::CComPtrBase<ICipherShedMainCom>
_TEXT	ENDS
PUBLIC	??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z		; ATL::AtlConvFreeMemory<char>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlconv.h
;	COMDAT ??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z
_TEXT	SEGMENT
_pBuff$ = 8						; size = 4
_pszFixedBuffer$ = 12					; size = 4
_nFixedBufferLength$ = 16				; size = 4
??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z PROC		; ATL::AtlConvFreeMemory<char>, COMDAT

; 156  : 	(nFixedBufferLength);
; 157  : 	if( pBuff != pszFixedBuffer )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pBuff$[esp-4]
  00004	3b 44 24 08	 cmp	 eax, DWORD PTR _pszFixedBuffer$[esp-4]
  00008	74 07		 je	 SHORT $LN1@AtlConvFre

; 158  : 	{
; 159  : 		free( pBuff );

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 _free
  00010	59		 pop	 ecx
$LN1@AtlConvFre:

; 160  : 	} 	
; 161  : #ifdef _DEBUG
; 162  : 	else
; 163  : 	{		
; 164  : 		memset(pszFixedBuffer,ATLCONV_DEADLAND_FILL,nFixedBufferLength*sizeof(_CharType));
; 165  : 	}
; 166  : #endif
; 167  : 
; 168  : }

  00011	c3		 ret	 0
??$AtlConvFreeMemory@D@ATL@@YAXPAD0H@Z ENDP		; ATL::AtlConvFreeMemory<char>
_TEXT	ENDS
PUBLIC	??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z	; ATL::AtlConvAllocMemory<char>
EXTRN	_calloc:PROC
EXTRN	__recalloc:PROC
; Function compile flags: /Ogtpy
;	COMDAT ??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z
_TEXT	SEGMENT
_ppBuff$ = 8						; size = 4
_nLength$ = 12						; size = 4
_pszFixedBuffer$ = 16					; size = 4
_nFixedBufferLength$ = 20				; size = 4
??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z PROC	; ATL::AtlConvAllocMemory<char>, COMDAT

; 113  : {

  00000	56		 push	 esi

; 114  : 	ATLENSURE_THROW(ppBuff != NULL, E_INVALIDARG);

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _ppBuff$[esp]
  00005	85 f6		 test	 esi, esi
  00007	75 0a		 jne	 SHORT $LN19@AtlConvAll
  00009	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0000e	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN19@AtlConvAll:

; 115  : 	ATLENSURE_THROW(nLength >= 0, E_INVALIDARG);

  00013	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nLength$[esp]
  00017	85 c9		 test	 ecx, ecx
  00019	7d 0a		 jge	 SHORT $LN15@AtlConvAll
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN15@AtlConvAll:
  00025	57		 push	 edi

; 116  : 	ATLENSURE_THROW(pszFixedBuffer != NULL, E_INVALIDARG);

  00026	8b 7c 24 14	 mov	 edi, DWORD PTR _pszFixedBuffer$[esp+4]
  0002a	85 ff		 test	 edi, edi
  0002c	75 0a		 jne	 SHORT $LN11@AtlConvAll
  0002e	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00033	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN11@AtlConvAll:

; 117  : 
; 118  : 	//if buffer malloced, try to realloc.
; 119  : 	if (*ppBuff != pszFixedBuffer)

  00038	8b 06		 mov	 eax, DWORD PTR [esi]
  0003a	3b c7		 cmp	 eax, edi
  0003c	74 3a		 je	 SHORT $LN8@AtlConvAll

; 120  : 	{
; 121  : 		if( nLength > nFixedBufferLength )

  0003e	3b 4c 24 18	 cmp	 ecx, DWORD PTR _nFixedBufferLength$[esp+4]
  00042	7e 1a		 jle	 SHORT $LN7@AtlConvAll

; 122  : 		{
; 123  : 			_CharType* ppReallocBuf = static_cast< _CharType* >( _recalloc(*ppBuff, nLength,sizeof( _CharType ) ) );

  00044	6a 01		 push	 1
  00046	51		 push	 ecx
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 __recalloc
  0004d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 124  : 			if (ppReallocBuf == NULL) 

  00050	85 c0		 test	 eax, eax
  00052	75 35		 jne	 SHORT $LN6@AtlConvAll

; 125  : 			{
; 126  : 				AtlThrow( E_OUTOFMEMORY );

  00054	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00059	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN7@AtlConvAll:

; 127  : 			}
; 128  : 			*ppBuff = ppReallocBuf;
; 129  : 		} else
; 130  : 		{
; 131  : 			free(*ppBuff);

  0005e	50		 push	 eax
  0005f	e8 00 00 00 00	 call	 _free
  00064	83 c4 04	 add	 esp, 4
$LN3@AtlConvAll:

; 141  : 		{			
; 142  : 			*ppBuff=pszFixedBuffer;

  00067	89 3e		 mov	 DWORD PTR [esi], edi
$LN2@AtlConvAll:

; 143  : 		}
; 144  : 	}
; 145  : 
; 146  : 	if (*ppBuff == NULL)

  00069	83 3e 00	 cmp	 DWORD PTR [esi], 0
  0006c	75 1f		 jne	 SHORT $LN23@AtlConvAll

; 147  : 	{
; 148  : 		AtlThrow( E_OUTOFMEMORY );

  0006e	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00073	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN8@AtlConvAll:

; 132  : 			*ppBuff=pszFixedBuffer;
; 133  : 		}
; 134  : 
; 135  : 	} else //Buffer is not currently malloced.
; 136  : 	{
; 137  : 		if( nLength > nFixedBufferLength )

  00078	3b 4c 24 18	 cmp	 ecx, DWORD PTR _nFixedBufferLength$[esp+4]
  0007c	7e e9		 jle	 SHORT $LN3@AtlConvAll

; 138  : 		{
; 139  : 			*ppBuff = static_cast< _CharType* >( calloc(nLength,sizeof( _CharType ) ) );

  0007e	6a 01		 push	 1
  00080	51		 push	 ecx
  00081	e8 00 00 00 00	 call	 _calloc
  00086	83 c4 08	 add	 esp, 8
$LN6@AtlConvAll:
  00089	89 06		 mov	 DWORD PTR [esi], eax

; 140  : 		} else

  0008b	eb dc		 jmp	 SHORT $LN2@AtlConvAll
$LN23@AtlConvAll:
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi

; 149  : 	}
; 150  : 
; 151  : }

  0008f	c3		 ret	 0
$LN24@AtlConvAll:
??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z ENDP	; ATL::AtlConvAllocMemory<char>
_TEXT	ENDS
PUBLIC	?A2WBSTR@@YAPA_WPBDH@Z				; A2WBSTR
EXTRN	__imp__SysAllocStringLen@8:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?A2WBSTR@@YAPA_WPBDH@Z
_TEXT	SEGMENT
__AtlSafeAllocaManager$ = 8				; size = 4
_lp$ = 8						; size = 4
_nLen$ = 12						; size = 4
?A2WBSTR@@YAPA_WPBDH@Z PROC				; A2WBSTR, COMDAT

; 871  : {

  00000	55		 push	 ebp

; 872  : 	if (lp == NULL || nLen == 0)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR _lp$[esp]
  00005	57		 push	 edi
  00006	85 ed		 test	 ebp, ebp
  00008	74 74		 je	 SHORT $LN4@A2WBSTR
  0000a	8b 7c 24 10	 mov	 edi, DWORD PTR _nLen$[esp+4]
  0000e	85 ff		 test	 edi, edi
  00010	74 6c		 je	 SHORT $LN4@A2WBSTR
  00012	56		 push	 esi

; 874  : 	USES_CONVERSION_EX;
; 875  : 	BSTR str = NULL;
; 876  : #pragma warning(push)
; 877  : #pragma warning(disable: 6385)
; 878  : 	int nConvertedLen = MultiByteToWideChar(_acp_ex, 0, lp,
; 879  : 		nLen, NULL, NULL);

  00013	6a 00		 push	 0
  00015	6a 00		 push	 0
  00017	57		 push	 edi
  00018	55		 push	 ebp
  00019	6a 00		 push	 0
  0001b	6a 03		 push	 3
  0001d	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR __AtlSafeAllocaManager$[esp+32], 0
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0002b	8b f0		 mov	 esi, eax

; 880  : #pragma warning(pop)
; 881  : 	int nAllocLen = nConvertedLen;
; 882  : 	if (nLen == -1)

  0002d	83 ff ff	 cmp	 edi, -1
  00030	75 03		 jne	 SHORT $LN3@A2WBSTR

; 883  : 		nAllocLen -= 1;  // Don't allocate terminating '\0'

  00032	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
$LN3@A2WBSTR:
  00035	53		 push	 ebx

; 884  : 	str = ::SysAllocStringLen(NULL, nAllocLen);

  00036	50		 push	 eax
  00037	6a 00		 push	 0
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringLen@8
  0003f	8b d8		 mov	 ebx, eax

; 885  : 
; 886  : 	if (str != NULL)

  00041	85 db		 test	 ebx, ebx
  00043	74 29		 je	 SHORT $LN1@A2WBSTR

; 887  : 	{
; 888  : 		int nResult;
; 889  : 		nResult = MultiByteToWideChar(_acp_ex, 0, lp, nLen, str, nConvertedLen);

  00045	56		 push	 esi
  00046	53		 push	 ebx
  00047	57		 push	 edi
  00048	55		 push	 ebp
  00049	6a 00		 push	 0
  0004b	6a 03		 push	 3
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24

; 890  : 		ATLASSERT(nResult == nConvertedLen);
; 891  : 		if(nResult != nConvertedLen)

  00053	3b c6		 cmp	 eax, esi
  00055	74 17		 je	 SHORT $LN1@A2WBSTR

; 892  : 		{
; 893  : 			SysFreeString(str);

  00057	53		 push	 ebx
  00058	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 894  : 			return NULL;

  0005e	8d 4c 24 14	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[esp+12]
  00062	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00067	5b		 pop	 ebx
  00068	5e		 pop	 esi
  00069	5f		 pop	 edi
  0006a	33 c0		 xor	 eax, eax
  0006c	5d		 pop	 ebp

; 899  : }

  0006d	c3		 ret	 0
$LN1@A2WBSTR:

; 895  : 		}
; 896  : 
; 897  : 	}
; 898  : 	return str;

  0006e	8d 4c 24 14	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$[esp+12]
  00072	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00077	8b c3		 mov	 eax, ebx
  00079	5b		 pop	 ebx
  0007a	5e		 pop	 esi
  0007b	5f		 pop	 edi
  0007c	5d		 pop	 ebp

; 899  : }

  0007d	c3		 ret	 0
$LN4@A2WBSTR:
  0007e	5f		 pop	 edi

; 873  : 		return NULL;

  0007f	33 c0		 xor	 eax, eax
  00081	5d		 pop	 ebp

; 899  : }

  00082	c3		 ret	 0
?A2WBSTR@@YAPA_WPBDH@Z ENDP				; A2WBSTR
_TEXT	ENDS
PUBLIC	??0CComBSTR@ATL@@QAE@PBD@Z			; ATL::CComBSTR::CComBSTR
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0CComBSTR@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__AtlSafeAllocaManager$118067 = 8			; size = 4
_pSrc$ = 8						; size = 4
??0CComBSTR@ATL@@QAE@PBD@Z PROC				; ATL::CComBSTR::CComBSTR, COMDAT
; _this$ = ecx

; 1167 : 	CComBSTR(_In_opt_ LPCSTR pSrc)

  00000	51		 push	 ecx
  00001	53		 push	 ebx

; 1168 : 	{
; 1169 : 		if (pSrc != NULL)

  00002	8b 5c 24 0c	 mov	 ebx, DWORD PTR _pSrc$[esp+4]
  00006	8b c1		 mov	 eax, ecx
  00008	89 44 24 04	 mov	 DWORD PTR _this$[esp+8], eax
  0000c	85 db		 test	 ebx, ebx
  0000e	74 75		 je	 SHORT $LN3@CComBSTR
  00010	55		 push	 ebp

; 1170 : 		{
; 1171 : 			m_str = A2WBSTR(pSrc);

  00011	8b 2d 00 00 00
	00		 mov	 ebp, DWORD PTR __imp__MultiByteToWideChar@24
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	6a 00		 push	 0
  0001b	6a 00		 push	 0
  0001d	6a ff		 push	 -1
  0001f	53		 push	 ebx
  00020	6a 00		 push	 0
  00022	6a 03		 push	 3
  00024	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR __AtlSafeAllocaManager$118067[esp+40], 0
  0002c	ff d5		 call	 ebp
  0002e	8b f0		 mov	 esi, eax
  00030	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00033	50		 push	 eax
  00034	6a 00		 push	 0
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysAllocStringLen@8
  0003c	8b f8		 mov	 edi, eax
  0003e	85 ff		 test	 edi, edi
  00040	74 23		 je	 SHORT $LN6@CComBSTR
  00042	56		 push	 esi
  00043	57		 push	 edi
  00044	6a ff		 push	 -1
  00046	53		 push	 ebx
  00047	6a 00		 push	 0
  00049	6a 03		 push	 3
  0004b	ff d5		 call	 ebp
  0004d	3b c6		 cmp	 eax, esi
  0004f	74 14		 je	 SHORT $LN6@CComBSTR
  00051	57		 push	 edi
  00052	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4
  00058	8d 4c 24 18	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$118067[esp+16]
  0005c	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
  00061	33 ff		 xor	 edi, edi
  00063	eb 09		 jmp	 SHORT $LN11@CComBSTR
$LN6@CComBSTR:
  00065	8d 4c 24 18	 lea	 ecx, DWORD PTR __AtlSafeAllocaManager$118067[esp+16]
  00069	e8 00 00 00 00	 call	 ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ ; ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager<ATL::CCRTAllocator>::~CAtlSafeAllocBufferManager<ATL::CCRTAllocator>
$LN11@CComBSTR:
  0006e	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  00072	89 39		 mov	 DWORD PTR [ecx], edi

; 1172 : 			if (!*this)

  00074	85 ff		 test	 edi, edi
  00076	5f		 pop	 edi
  00077	5e		 pop	 esi
  00078	5d		 pop	 ebp
  00079	75 15		 jne	 SHORT $LN20@CComBSTR

; 1173 :             {
; 1174 : 				AtlThrow(E_OUTOFMEMORY);

  0007b	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00080	e8 00 00 00 00	 call	 ?AtlThrowImpl@ATL@@YGXJ@Z ; ATL::AtlThrowImpl
$LN3@CComBSTR:

; 1175 :             }
; 1176 : 		}
; 1177 : 		else
; 1178 :         {
; 1179 : 			m_str = NULL;

  00085	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  0008b	5b		 pop	 ebx

; 1180 :         }
; 1181 : 	}

  0008c	59		 pop	 ecx
  0008d	c2 04 00	 ret	 4
$LN20@CComBSTR:

; 1175 :             }
; 1176 : 		}
; 1177 : 		else
; 1178 :         {
; 1179 : 			m_str = NULL;

  00090	8b c1		 mov	 eax, ecx
  00092	5b		 pop	 ebx

; 1180 :         }
; 1181 : 	}

  00093	59		 pop	 ecx
  00094	c2 04 00	 ret	 4
$LN21@CComBSTR:
??0CComBSTR@ATL@@QAE@PBD@Z ENDP				; ATL::CComBSTR::CComBSTR
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\mount\maincom.cpp
_TEXT	ENDS
;	COMDAT ?Release@CipherShedMainCom@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@CipherShedMainCom@@UAGKXZ PROC			; CipherShedMainCom::Release, COMDAT

; 46   : 	{

  00000	53		 push	 ebx

; 47   : 		if (!InterlockedDecrement (&RefCount))

  00001	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__InterlockedDecrement@4
  00007	56		 push	 esi
  00008	8b 74 24 0c	 mov	 esi, DWORD PTR _this$[esp+4]
  0000c	57		 push	 edi
  0000d	8d 7e 08	 lea	 edi, DWORD PTR [esi+8]
  00010	57		 push	 edi
  00011	ff d3		 call	 ebx
  00013	85 c0		 test	 eax, eax
  00015	75 37		 jne	 SHORT $LN1@Release

; 48   : 		{
; 49   : 			delete this;

  00017	85 f6		 test	 esi, esi
  00019	74 2b		 je	 SHORT $LN4@Release
  0001b	68 00 00 00 00	 push	 OFFSET _ObjectCount
  00020	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CipherShedMainCom@@6B@
  00026	ff d3		 call	 ebx
  00028	85 c0		 test	 eax, eax
  0002a	75 11		 jne	 SHORT $LN9@Release
  0002c	50		 push	 eax
  0002d	50		 push	 eax
  0002e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00031	68 00 80 00 00	 push	 32768			; 00008000H
  00036	50		 push	 eax
  00037	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostThreadMessageA@16
$LN9@Release:
  0003d	56		 push	 esi
  0003e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00043	83 c4 04	 add	 esp, 4
$LN4@Release:
  00046	5f		 pop	 edi
  00047	5e		 pop	 esi

; 50   : 			return 0;

  00048	33 c0		 xor	 eax, eax
  0004a	5b		 pop	 ebx

; 54   : 	}

  0004b	c2 04 00	 ret	 4
$LN1@Release:

; 51   : 		}
; 52   : 
; 53   : 		return RefCount;

  0004e	8b 07		 mov	 eax, DWORD PTR [edi]
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx

; 54   : 	}

  00053	c2 04 00	 ret	 4
?Release@CipherShedMainCom@@UAGKXZ ENDP			; CipherShedMainCom::Release
_TEXT	ENDS
PUBLIC	??0ICipherShedMainCom@@QAE@XZ			; ICipherShedMainCom::ICipherShedMainCom
; Function compile flags: /Ogtpy
;	COMDAT ??0ICipherShedMainCom@@QAE@XZ
_TEXT	SEGMENT
??0ICipherShedMainCom@@QAE@XZ PROC			; ICipherShedMainCom::ICipherShedMainCom, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0ICipherShedMainCom@@QAE@XZ ENDP			; ICipherShedMainCom::ICipherShedMainCom
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ??0UserAbort@CipherShed@@QAE@ABU01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0UserAbort@CipherShed@@QAE@ABU01@@Z PROC		; CipherShed::UserAbort::UserAbort, COMDAT
; _this$ = ecx
  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7UserAbort@CipherShed@@6B@
  00008	c2 04 00	 ret	 4
??0UserAbort@CipherShed@@QAE@ABU01@@Z ENDP		; CipherShed::UserAbort::UserAbort
_TEXT	ENDS
PUBLIC	??1?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ	; ATL::CComPtr<ICipherShedMainCom>::~CComPtr<ICipherShedMainCom>
; Function compile flags: /Ogtpy
;	COMDAT ??1?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<ICipherShedMainCom>::~CComPtr<ICipherShedMainCom>, COMDAT
; _this$ = ecx
  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	85 c0		 test	 eax, eax
  00004	74 08		 je	 SHORT $LN3@CComPtr
  00006	8b 08		 mov	 ecx, DWORD PTR [eax]
  00008	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0000b	50		 push	 eax
  0000c	ff d2		 call	 edx
$LN3@CComPtr:
  0000e	c3		 ret	 0
??1?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<ICipherShedMainCom>::~CComPtr<ICipherShedMainCom>
_TEXT	ENDS
PUBLIC	??1?$CW2AEX@$0IA@@ATL@@QAE@XZ			; ATL::CW2AEX<128>::~CW2AEX<128>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlconv.h
;	COMDAT ??1?$CW2AEX@$0IA@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ PROC			; ATL::CW2AEX<128>::~CW2AEX<128>, COMDAT
; _this$ = ecx

; 410  : 		AtlConvFreeMemory(m_psz,m_szBuffer,t_nBufferLength);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c1 04	 add	 ecx, 4
  00005	3b c1		 cmp	 eax, ecx
  00007	74 07		 je	 SHORT $LN3@CW2AEX
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 _free
  0000f	59		 pop	 ecx
$LN3@CW2AEX:

; 411  : 	}

  00010	c3		 ret	 0
??1?$CW2AEX@$0IA@@ATL@@QAE@XZ ENDP			; ATL::CW2AEX<128>::~CW2AEX<128>
_TEXT	ENDS
PUBLIC	??0?$CipherShedFactory@VCipherShedMainCom@@@@QAE@K@Z ; CipherShedFactory<CipherShedMainCom>::CipherShedFactory<CipherShedMainCom>
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\common\basecom.h
;	COMDAT ??0?$CipherShedFactory@VCipherShedMainCom@@@@QAE@K@Z
_TEXT	SEGMENT
_messageThreadId$ = 8					; size = 4
??0?$CipherShedFactory@VCipherShedMainCom@@@@QAE@K@Z PROC ; CipherShedFactory<CipherShedMainCom>::CipherShedFactory<CipherShedMainCom>, COMDAT
; _this$ = ecx

; 20   : 		RefCount (1), ServerLockCount (0), MessageThreadId (messageThreadId) { }

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR _messageThreadId$[esp-4]
  00006	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], OFFSET ??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@
  0000c	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0000f	c7 40 08 01 00
	00 00		 mov	 DWORD PTR [eax+8], 1
  00016	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  0001d	c2 04 00	 ret	 4
??0?$CipherShedFactory@VCipherShedMainCom@@@@QAE@K@Z ENDP ; CipherShedFactory<CipherShedMainCom>::CipherShedFactory<CipherShedMainCom>
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT ?Release@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Release@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ PROC ; CipherShedFactory<CipherShedMainCom>::Release, COMDAT

; 30   : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 31   : 		ULONG r = InterlockedDecrement (&RefCount) + 1;

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _this$[esp+4]
  00006	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  00009	50		 push	 eax
  0000a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedDecrement@4
  00010	8b f0		 mov	 esi, eax
  00012	83 c6 01	 add	 esi, 1

; 32   : 
; 33   : 		if (r == 0)

  00015	75 13		 jne	 SHORT $LN12@Release@2

; 34   : 			delete this;

  00017	85 ff		 test	 edi, edi
  00019	74 0f		 je	 SHORT $LN12@Release@2
  0001b	57		 push	 edi
  0001c	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], OFFSET ??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@
  00022	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00027	83 c4 04	 add	 esp, 4
$LN12@Release@2:
  0002a	5f		 pop	 edi

; 35   : 
; 36   : 		return r;

  0002b	8b c6		 mov	 eax, esi
  0002d	5e		 pop	 esi

; 37   : 	}

  0002e	c2 04 00	 ret	 4
?Release@?$CipherShedFactory@VCipherShedMainCom@@@@UAGKXZ ENDP ; CipherShedFactory<CipherShedMainCom>::Release
_TEXT	ENDS
PUBLIC	??0?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ	; ATL::CComPtr<ICipherShedMainCom>::CComPtr<ICipherShedMainCom>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlcomcli.h
;	COMDAT ??0?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ PROC	; ATL::CComPtr<ICipherShedMainCom>::CComPtr<ICipherShedMainCom>, COMDAT
; _this$ = ecx

; 276  : 	CComPtr() throw()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 277  : 	{
; 278  : 	}

  00008	c3		 ret	 0
??0?$CComPtr@UICipherShedMainCom@@@ATL@@QAE@XZ ENDP	; ATL::CComPtr<ICipherShedMainCom>::CComPtr<ICipherShedMainCom>
_TEXT	ENDS
PUBLIC	?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z		; ATL::CW2AEX<128>::Init
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	__imp__lstrlenW@4:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlconv.h
;	COMDAT ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
_nConvertCodePage$ = 12					; size = 4
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z PROC		; ATL::CW2AEX<128>::Init, COMDAT
; _this$ = ecx

; 420  : 	{

  00000	53		 push	 ebx
  00001	55		 push	 ebp

; 421  : 		if (psz == NULL)

  00002	8b 6c 24 0c	 mov	 ebp, DWORD PTR _psz$[esp+4]
  00006	8b d9		 mov	 ebx, ecx
  00008	85 ed		 test	 ebp, ebp
  0000a	75 07		 jne	 SHORT $LN4@Init

; 422  : 		{
; 423  : 			m_psz = NULL;

  0000c	89 2b		 mov	 DWORD PTR [ebx], ebp
  0000e	5d		 pop	 ebp
  0000f	5b		 pop	 ebx

; 444  : 		}
; 445  : 	}

  00010	c2 08 00	 ret	 8
$LN4@Init:
  00013	56		 push	 esi
  00014	57		 push	 edi

; 424  : 			return;
; 425  : 		}
; 426  : 		int nLengthW = lstrlenW( psz )+1;		 

  00015	55		 push	 ebp
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenW@4
  0001c	8b f8		 mov	 edi, eax

; 427  : 		int nLengthA = nLengthW*4;
; 428  : 		
; 429  : 		AtlConvAllocMemory(&m_psz,nLengthA,m_szBuffer,t_nBufferLength);

  0001e	68 80 00 00 00	 push	 128			; 00000080H
  00023	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00026	47		 inc	 edi
  00027	50		 push	 eax
  00028	8d 34 bd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*4]
  0002f	56		 push	 esi
  00030	53		 push	 ebx
  00031	e8 00 00 00 00	 call	 ??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z ; ATL::AtlConvAllocMemory<char>

; 430  : 
; 431  : 		BOOL bFailed=(0 == ::WideCharToMultiByte( nConvertCodePage, 0, psz, nLengthW, m_psz, nLengthA, NULL, NULL ));

  00036	8b 03		 mov	 eax, DWORD PTR [ebx]
  00038	8b 4c 24 28	 mov	 ecx, DWORD PTR _nConvertCodePage$[esp+28]
  0003c	83 c4 10	 add	 esp, 16			; 00000010H
  0003f	6a 00		 push	 0
  00041	6a 00		 push	 0
  00043	56		 push	 esi
  00044	50		 push	 eax
  00045	57		 push	 edi
  00046	55		 push	 ebp
  00047	6a 00		 push	 0
  00049	51		 push	 ecx
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  00050	8b f0		 mov	 esi, eax
  00052	f7 de		 neg	 esi
  00054	1b f6		 sbb	 esi, esi
  00056	83 c6 01	 add	 esi, 1

; 432  : 		if (bFailed)

  00059	74 5e		 je	 SHORT $LN7@Init

; 433  : 		{
; 434  : 			if (GetLastError()==ERROR_INSUFFICIENT_BUFFER)

  0005b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLastError@0
  00061	83 f8 7a	 cmp	 eax, 122		; 0000007aH
  00064	75 4a		 jne	 SHORT $LN2@Init

; 435  : 			{
; 436  : 				nLengthA = ::WideCharToMultiByte( nConvertCodePage, 0, psz, nLengthW, NULL, 0, NULL, NULL );

  00066	8b 54 24 18	 mov	 edx, DWORD PTR _nConvertCodePage$[esp+12]
  0006a	6a 00		 push	 0
  0006c	6a 00		 push	 0
  0006e	6a 00		 push	 0
  00070	6a 00		 push	 0
  00072	57		 push	 edi
  00073	55		 push	 ebp
  00074	6a 00		 push	 0
  00076	52		 push	 edx
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0007d	8b f0		 mov	 esi, eax

; 437  : 				AtlConvAllocMemory(&m_psz,nLengthA,m_szBuffer,t_nBufferLength);

  0007f	68 80 00 00 00	 push	 128			; 00000080H
  00084	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00087	50		 push	 eax
  00088	56		 push	 esi
  00089	53		 push	 ebx
  0008a	e8 00 00 00 00	 call	 ??$AtlConvAllocMemory@D@ATL@@YAXPAPADHPADH@Z ; ATL::AtlConvAllocMemory<char>

; 438  : 				bFailed=(0 == ::WideCharToMultiByte( nConvertCodePage, 0, psz, nLengthW, m_psz, nLengthA, NULL, NULL ));

  0008f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00091	8b 4c 24 28	 mov	 ecx, DWORD PTR _nConvertCodePage$[esp+28]
  00095	83 c4 10	 add	 esp, 16			; 00000010H
  00098	6a 00		 push	 0
  0009a	6a 00		 push	 0
  0009c	56		 push	 esi
  0009d	50		 push	 eax
  0009e	57		 push	 edi
  0009f	55		 push	 ebp
  000a0	6a 00		 push	 0
  000a2	51		 push	 ecx
  000a3	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  000a9	8b f0		 mov	 esi, eax
  000ab	f7 de		 neg	 esi
  000ad	1b f6		 sbb	 esi, esi
  000af	46		 inc	 esi
$LN2@Init:

; 439  : 			}			
; 440  : 		}
; 441  : 		if (bFailed)

  000b0	85 f6		 test	 esi, esi
  000b2	74 05		 je	 SHORT $LN7@Init

; 442  : 		{
; 443  : 			AtlThrowLastWin32();

  000b4	e8 00 00 00 00	 call	 ?AtlThrowLastWin32@ATL@@YGXXZ ; ATL::AtlThrowLastWin32
$LN7@Init:
  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi
  000bb	5d		 pop	 ebp
  000bc	5b		 pop	 ebx

; 444  : 		}
; 445  : 	}

  000bd	c2 08 00	 ret	 8
$LN9@Init:
?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ENDP		; ATL::CW2AEX<128>::Init
_TEXT	ENDS
PUBLIC	??0CipherShedMainCom@@QAE@K@Z			; CipherShedMainCom::CipherShedMainCom
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\mount\maincom.cpp
;	COMDAT ??0CipherShedMainCom@@QAE@K@Z
_TEXT	SEGMENT
_messageThreadId$ = 8					; size = 4
??0CipherShedMainCom@@QAE@K@Z PROC			; CipherShedMainCom::CipherShedMainCom, COMDAT
; _this$ = ecx

; 30   : 	{

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _messageThreadId$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 31   : 		InterlockedIncrement (&ObjectCount);

  00007	68 00 00 00 00	 push	 OFFSET _ObjectCount
  0000c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CipherShedMainCom@@6B@
  00012	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00015	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedIncrement@4

; 32   : 	}

  00022	8b c6		 mov	 eax, esi
  00024	5e		 pop	 esi
  00025	c2 04 00	 ret	 4
??0CipherShedMainCom@@QAE@K@Z ENDP			; CipherShedMainCom::CipherShedMainCom
_TEXT	ENDS
PUBLIC	_ComServerMain
EXTRN	__imp__CoRevokeClassObject@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__CoRegisterClassObject@20:PROC
EXTRN	_UacElevated:DWORD
EXTRN	_IsUacSupported:PROC
EXTRN	__imp__GetCurrentThreadId@0:PROC
EXTRN	__imp__SetProcessShutdownParameters@8:PROC
; Function compile flags: /Ogtpy
;	COMDAT _ComServerMain
_TEXT	SEGMENT
_cookie$ = -48						; size = 4
_factory$ = -44						; size = 16
_msg$ = -28						; size = 28
_ComServerMain PROC					; COMDAT

; 149  : {

  00000	83 ec 30	 sub	 esp, 48			; 00000030H
  00003	56		 push	 esi

; 150  : 	SetProcessShutdownParameters (0x100, 0);

  00004	6a 00		 push	 0
  00006	68 00 01 00 00	 push	 256			; 00000100H
  0000b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetProcessShutdownParameters@8

; 151  : 
; 152  : 	CipherShedFactory<CipherShedMainCom> factory (GetCurrentThreadId ());

  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetCurrentThreadId@0
  00017	be 01 00 00 00	 mov	 esi, 1
  0001c	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR _factory$[esp+52], OFFSET ??_7?$CipherShedFactory@VCipherShedMainCom@@@@6B@
  00024	89 44 24 0c	 mov	 DWORD PTR _factory$[esp+56], eax
  00028	89 74 24 10	 mov	 DWORD PTR _factory$[esp+60], esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR _factory$[esp+64], 0

; 153  : 	DWORD cookie;
; 154  : 
; 155  : 	if (IsUacSupported ())

  00034	e8 00 00 00 00	 call	 _IsUacSupported
  00039	85 c0		 test	 eax, eax
  0003b	74 06		 je	 SHORT $LN6@ComServerM

; 156  : 		UacElevated = TRUE;

  0003d	89 35 00 00 00
	00		 mov	 DWORD PTR _UacElevated, esi
$LN6@ComServerM:

; 157  : 
; 158  : 	if (CoRegisterClassObject (CLSID_CipherShedMainCom, (LPUNKNOWN) &factory,
; 159  : 		CLSCTX_LOCAL_SERVER, REGCLS_SINGLEUSE, &cookie) != S_OK)

  00043	8d 44 24 04	 lea	 eax, DWORD PTR _cookie$[esp+52]
  00047	50		 push	 eax
  00048	6a 00		 push	 0
  0004a	6a 04		 push	 4
  0004c	8d 4c 24 14	 lea	 ecx, DWORD PTR _factory$[esp+64]
  00050	51		 push	 ecx
  00051	68 00 00 00 00	 push	 OFFSET _CLSID_CipherShedMainCom
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoRegisterClassObject@20
  0005c	85 c0		 test	 eax, eax
  0005e	74 07		 je	 SHORT $LN19@ComServerM

; 160  : 		return FALSE;

  00060	33 c0		 xor	 eax, eax
  00062	5e		 pop	 esi

; 179  : }

  00063	83 c4 30	 add	 esp, 48			; 00000030H
  00066	c3		 ret	 0
$LN19@ComServerM:

; 161  : 
; 162  : 	MSG msg;
; 163  : 	while (int r = GetMessage (&msg, NULL, 0, 0))

  00067	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetMessageA@16
  0006d	53		 push	 ebx
  0006e	57		 push	 edi
  0006f	6a 00		 push	 0
  00071	6a 00		 push	 0
  00073	6a 00		 push	 0
  00075	8d 54 24 2c	 lea	 edx, DWORD PTR _msg$[esp+72]
  00079	52		 push	 edx
  0007a	ff d6		 call	 esi
  0007c	85 c0		 test	 eax, eax
  0007e	74 50		 je	 SHORT $LN23@ComServerM
  00080	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__TranslateMessage@4
  00086	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__DispatchMessageA@4
  0008c	8d 64 24 00	 npad	 4
$LL4@ComServerM:

; 164  : 	{
; 165  : 		if (r == -1)

  00090	83 f8 ff	 cmp	 eax, -1
  00093	74 52		 je	 SHORT $LN20@ComServerM

; 167  : 
; 168  : 		TranslateMessage (&msg);

  00095	8d 44 24 20	 lea	 eax, DWORD PTR _msg$[esp+60]
  00099	50		 push	 eax
  0009a	ff d7		 call	 edi

; 169  : 		DispatchMessage (&msg);

  0009c	8d 4c 24 20	 lea	 ecx, DWORD PTR _msg$[esp+60]
  000a0	51		 push	 ecx
  000a1	ff d3		 call	 ebx

; 170  : 
; 171  : 		if (msg.message == WM_APP
; 172  : 			&& ObjectCount < 1
; 173  : 			&& !factory.IsServerLocked ())

  000a3	81 7c 24 24 00
	80 00 00	 cmp	 DWORD PTR _msg$[esp+64], 32768 ; 00008000H
  000ab	75 12		 jne	 SHORT $LN22@ComServerM
  000ad	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _ObjectCount
  000b3	83 fa 01	 cmp	 edx, 1
  000b6	7d 07		 jge	 SHORT $LN22@ComServerM
  000b8	83 7c 24 1c 00	 cmp	 DWORD PTR _factory$[esp+72], 0
  000bd	7e 11		 jle	 SHORT $LN23@ComServerM
$LN22@ComServerM:

; 161  : 
; 162  : 	MSG msg;
; 163  : 	while (int r = GetMessage (&msg, NULL, 0, 0))

  000bf	6a 00		 push	 0
  000c1	6a 00		 push	 0
  000c3	6a 00		 push	 0
  000c5	8d 44 24 2c	 lea	 eax, DWORD PTR _msg$[esp+72]
  000c9	50		 push	 eax
  000ca	ff d6		 call	 esi
  000cc	85 c0		 test	 eax, eax
  000ce	75 c0		 jne	 SHORT $LL4@ComServerM
$LN23@ComServerM:

; 174  : 			break;
; 175  : 	}
; 176  : 	CoRevokeClassObject (cookie);

  000d0	8b 4c 24 0c	 mov	 ecx, DWORD PTR _cookie$[esp+60]
  000d4	51		 push	 ecx
  000d5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoRevokeClassObject@4
  000db	5f		 pop	 edi
  000dc	5b		 pop	 ebx

; 177  : 
; 178  : 	return TRUE;

  000dd	b8 01 00 00 00	 mov	 eax, 1
  000e2	5e		 pop	 esi

; 179  : }

  000e3	83 c4 30	 add	 esp, 48			; 00000030H
  000e6	c3		 ret	 0
$LN20@ComServerM:
  000e7	5f		 pop	 edi
  000e8	5b		 pop	 ebx

; 166  : 			return FALSE;

  000e9	33 c0		 xor	 eax, eax
  000eb	5e		 pop	 esi

; 179  : }

  000ec	83 c4 30	 add	 esp, 48			; 00000030H
  000ef	c3		 ret	 0
_ComServerMain ENDP
_TEXT	ENDS
PUBLIC	_UacAnalyzeKernelMiniDump
EXTRN	__imp__CoUninitialize@0:PROC
EXTRN	_NormalCursor:PROC
EXTRN	_WaitCursor:PROC
EXTRN	__imp__CoInitialize@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT _UacAnalyzeKernelMiniDump
_TEXT	SEGMENT
_tc$ = -4						; size = 4
_hwndDlg$ = 8						; size = 4
_UacAnalyzeKernelMiniDump PROC				; COMDAT

; 200  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi

; 201  : 	CComPtr<ICipherShedMainCom> tc;
; 202  : 
; 203  : 	CoInitialize (NULL);

  00002	6a 00		 push	 0
  00004	c7 44 24 08 00
	00 00 00	 mov	 DWORD PTR _tc$[esp+12], 0
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoInitialize@4

; 204  : 
; 205  : 	if (ComGetInstance (hwndDlg, &tc))

  00012	8b 74 24 0c	 mov	 esi, DWORD PTR _hwndDlg$[esp+4]
  00016	8d 44 24 04	 lea	 eax, DWORD PTR _tc$[esp+8]
  0001a	50		 push	 eax
  0001b	68 00 00 00 00	 push	 OFFSET _IID_ICipherShedMainCom
  00020	68 00 00 00 00	 push	 OFFSET _CLSID_CipherShedMainCom
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ?ComGetInstanceBase@@YAHPAUHWND__@@ABU_GUID@@1PAPAX@Z ; ComGetInstanceBase
  0002b	83 c4 10	 add	 esp, 16			; 00000010H
  0002e	85 c0		 test	 eax, eax
  00030	74 17		 je	 SHORT $LN1@UacAnalyze

; 206  : 	{
; 207  : 		WaitCursor();

  00032	e8 00 00 00 00	 call	 _WaitCursor

; 208  : 		tc->AnalyzeKernelMiniDump ((LONG_PTR) hwndDlg);

  00037	8b 44 24 04	 mov	 eax, DWORD PTR _tc$[esp+8]
  0003b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0003d	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00040	56		 push	 esi
  00041	50		 push	 eax
  00042	ff d2		 call	 edx

; 209  : 		NormalCursor();

  00044	e8 00 00 00 00	 call	 _NormalCursor
$LN1@UacAnalyze:

; 210  : 	}
; 211  : 
; 212  : 	CoUninitialize ();

  00049	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoUninitialize@0

; 213  : }

  0004f	8b 44 24 04	 mov	 eax, DWORD PTR _tc$[esp+8]
  00053	5e		 pop	 esi
  00054	85 c0		 test	 eax, eax
  00056	74 08		 je	 SHORT $LN16@UacAnalyze
  00058	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0005d	50		 push	 eax
  0005e	ff d2		 call	 edx
$LN16@UacAnalyze:
  00060	59		 pop	 ecx
  00061	c3		 ret	 0
_UacAnalyzeKernelMiniDump ENDP
_TEXT	ENDS
PUBLIC	_UacBackupVolumeHeader
; Function compile flags: /Ogtpy
;	COMDAT _UacBackupVolumeHeader
_TEXT	SEGMENT
_tc$ = -8						; size = 4
$T118219 = -4						; size = 4
_hwndDlg$ = 8						; size = 4
_bRequireConfirmation$ = 12				; size = 4
_lpszVolume$ = 16					; size = 4
_UacBackupVolumeHeader PROC				; COMDAT

; 217  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	56		 push	 esi
  00004	57		 push	 edi

; 218  : 	CComPtr<ICipherShedMainCom> tc;
; 219  : 	int r;
; 220  : 
; 221  : 	CoInitialize (NULL);

  00005	6a 00		 push	 0
  00007	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR _tc$[esp+20], 0
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoInitialize@4

; 222  : 
; 223  : 	if (ComGetInstance (hwndDlg, &tc))

  00015	8b 7c 24 14	 mov	 edi, DWORD PTR _hwndDlg$[esp+12]
  00019	8d 44 24 08	 lea	 eax, DWORD PTR _tc$[esp+16]
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET _IID_ICipherShedMainCom
  00023	68 00 00 00 00	 push	 OFFSET _CLSID_CipherShedMainCom
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?ComGetInstanceBase@@YAHPAUHWND__@@ABU_GUID@@1PAPAX@Z ; ComGetInstanceBase
  0002e	83 c4 10	 add	 esp, 16			; 00000010H
  00031	85 c0		 test	 eax, eax
  00033	74 32		 je	 SHORT $LN2@UacBackupV

; 224  : 		r = tc->BackupVolumeHeader ((LONG_PTR) hwndDlg, bRequireConfirmation, CComBSTR (lpszVolume));

  00035	8b 4c 24 1c	 mov	 ecx, DWORD PTR _lpszVolume$[esp+12]
  00039	8b 74 24 08	 mov	 esi, DWORD PTR _tc$[esp+16]
  0003d	51		 push	 ecx
  0003e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T118219[esp+20]
  00042	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  00047	8b 00		 mov	 eax, DWORD PTR [eax]
  00049	8b 16		 mov	 edx, DWORD PTR [esi]
  0004b	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  0004e	50		 push	 eax
  0004f	8b 44 24 1c	 mov	 eax, DWORD PTR _bRequireConfirmation$[esp+16]
  00053	50		 push	 eax
  00054	57		 push	 edi
  00055	56		 push	 esi
  00056	ff d1		 call	 ecx
  00058	8b 54 24 0c	 mov	 edx, DWORD PTR $T118219[esp+16]
  0005c	52		 push	 edx
  0005d	8b f0		 mov	 esi, eax
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 225  : 	else

  00065	eb 03		 jmp	 SHORT $LN1@UacBackupV
$LN2@UacBackupV:

; 226  : 		r = -1;

  00067	83 ce ff	 or	 esi, -1
$LN1@UacBackupV:

; 227  : 
; 228  : 	CoUninitialize ();

  0006a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoUninitialize@0

; 229  : 
; 230  : 	return r;

  00070	8b 44 24 08	 mov	 eax, DWORD PTR _tc$[esp+16]
  00074	85 c0		 test	 eax, eax
  00076	74 08		 je	 SHORT $LN24@UacBackupV
  00078	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007a	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0007d	50		 push	 eax
  0007e	ff d2		 call	 edx
$LN24@UacBackupV:
  00080	5f		 pop	 edi
  00081	8b c6		 mov	 eax, esi
  00083	5e		 pop	 esi

; 231  : }

  00084	83 c4 08	 add	 esp, 8
  00087	c3		 ret	 0
_UacBackupVolumeHeader ENDP
_TEXT	ENDS
PUBLIC	_UacRestoreVolumeHeader
; Function compile flags: /Ogtpy
;	COMDAT _UacRestoreVolumeHeader
_TEXT	SEGMENT
_tc$ = -8						; size = 4
$T118259 = -4						; size = 4
_hwndDlg$ = 8						; size = 4
_lpszVolume$ = 12					; size = 4
_UacRestoreVolumeHeader PROC				; COMDAT

; 235  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	56		 push	 esi
  00004	57		 push	 edi

; 236  : 	CComPtr<ICipherShedMainCom> tc;
; 237  : 	int r;
; 238  : 
; 239  : 	CoInitialize (NULL);

  00005	6a 00		 push	 0
  00007	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR _tc$[esp+20], 0
  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoInitialize@4

; 240  : 
; 241  : 	if (ComGetInstance (hwndDlg, &tc))

  00015	8b 7c 24 14	 mov	 edi, DWORD PTR _hwndDlg$[esp+12]
  00019	8d 44 24 08	 lea	 eax, DWORD PTR _tc$[esp+16]
  0001d	50		 push	 eax
  0001e	68 00 00 00 00	 push	 OFFSET _IID_ICipherShedMainCom
  00023	68 00 00 00 00	 push	 OFFSET _CLSID_CipherShedMainCom
  00028	57		 push	 edi
  00029	e8 00 00 00 00	 call	 ?ComGetInstanceBase@@YAHPAUHWND__@@ABU_GUID@@1PAPAX@Z ; ComGetInstanceBase
  0002e	83 c4 10	 add	 esp, 16			; 00000010H
  00031	85 c0		 test	 eax, eax
  00033	74 2d		 je	 SHORT $LN2@UacRestore

; 242  : 		r = tc->RestoreVolumeHeader ((LONG_PTR) hwndDlg, CComBSTR (lpszVolume));

  00035	8b 4c 24 18	 mov	 ecx, DWORD PTR _lpszVolume$[esp+12]
  00039	8b 74 24 08	 mov	 esi, DWORD PTR _tc$[esp+16]
  0003d	51		 push	 ecx
  0003e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T118259[esp+20]
  00042	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  00047	8b 00		 mov	 eax, DWORD PTR [eax]
  00049	8b 16		 mov	 edx, DWORD PTR [esi]
  0004b	50		 push	 eax
  0004c	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  0004f	57		 push	 edi
  00050	56		 push	 esi
  00051	ff d0		 call	 eax
  00053	8b 4c 24 0c	 mov	 ecx, DWORD PTR $T118259[esp+16]
  00057	51		 push	 ecx
  00058	8b f0		 mov	 esi, eax
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 243  : 	else

  00060	eb 03		 jmp	 SHORT $LN1@UacRestore
$LN2@UacRestore:

; 244  : 		r = -1;

  00062	83 ce ff	 or	 esi, -1
$LN1@UacRestore:

; 245  : 
; 246  : 	CoUninitialize ();

  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CoUninitialize@0

; 247  : 
; 248  : 	return r;

  0006b	8b 44 24 08	 mov	 eax, DWORD PTR _tc$[esp+16]
  0006f	85 c0		 test	 eax, eax
  00071	74 08		 je	 SHORT $LN24@UacRestore
  00073	8b 10		 mov	 edx, DWORD PTR [eax]
  00075	50		 push	 eax
  00076	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00079	ff d0		 call	 eax
$LN24@UacRestore:
  0007b	5f		 pop	 edi
  0007c	8b c6		 mov	 eax, esi
  0007e	5e		 pop	 esi

; 249  : }

  0007f	83 c4 08	 add	 esp, 8
  00082	c3		 ret	 0
_UacRestoreVolumeHeader ENDP
_TEXT	ENDS
PUBLIC	_UacChangePwd
; Function compile flags: /Ogtpy
;	COMDAT _UacChangePwd
_TEXT	SEGMENT
_tc$ = -8						; size = 4
$T118299 = -4						; size = 4
_lpszVolume$ = 8					; size = 4
_oldPassword$ = 12					; size = 4
_newPassword$ = 16					; size = 4
_pkcs5$ = 20						; size = 4
_hwndDlg$ = 24						; size = 4
_UacChangePwd PROC					; COMDAT

; 253  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	56		 push	 esi
  00004	57		 push	 edi

; 254  : 	CComPtr<ICipherShedMainCom> tc;
; 255  : 	int r;
; 256  : 
; 257  : 	if (ComGetInstance (hwndDlg, &tc))

  00005	8b 7c 24 24	 mov	 edi, DWORD PTR _hwndDlg$[esp+12]
  00009	8d 44 24 08	 lea	 eax, DWORD PTR _tc$[esp+16]
  0000d	50		 push	 eax
  0000e	68 00 00 00 00	 push	 OFFSET _IID_ICipherShedMainCom
  00013	68 00 00 00 00	 push	 OFFSET _CLSID_CipherShedMainCom
  00018	57		 push	 edi
  00019	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _tc$[esp+32], 0
  00021	e8 00 00 00 00	 call	 ?ComGetInstanceBase@@YAHPAUHWND__@@ABU_GUID@@1PAPAX@Z ; ComGetInstanceBase
  00026	83 c4 10	 add	 esp, 16			; 00000010H
  00029	85 c0		 test	 eax, eax
  0002b	74 46		 je	 SHORT $LN2@UacChangeP

; 258  : 	{
; 259  : 		WaitCursor ();

  0002d	e8 00 00 00 00	 call	 _WaitCursor

; 260  : 		r = tc->ChangePassword (CComBSTR (lpszVolume), oldPassword, newPassword, pkcs5, (LONG_PTR) hwndDlg);

  00032	8b 4c 24 14	 mov	 ecx, DWORD PTR _lpszVolume$[esp+12]
  00036	8b 74 24 08	 mov	 esi, DWORD PTR _tc$[esp+16]
  0003a	51		 push	 ecx
  0003b	8d 4c 24 10	 lea	 ecx, DWORD PTR $T118299[esp+20]
  0003f	e8 00 00 00 00	 call	 ??0CComBSTR@ATL@@QAE@PBD@Z ; ATL::CComBSTR::CComBSTR
  00044	8b 4c 24 20	 mov	 ecx, DWORD PTR _pkcs5$[esp+12]
  00048	8b 00		 mov	 eax, DWORD PTR [eax]
  0004a	8b 16		 mov	 edx, DWORD PTR [esi]
  0004c	8b 52 18	 mov	 edx, DWORD PTR [edx+24]
  0004f	57		 push	 edi
  00050	51		 push	 ecx
  00051	8b 4c 24 24	 mov	 ecx, DWORD PTR _newPassword$[esp+20]
  00055	51		 push	 ecx
  00056	8b 4c 24 24	 mov	 ecx, DWORD PTR _oldPassword$[esp+24]
  0005a	51		 push	 ecx
  0005b	50		 push	 eax
  0005c	56		 push	 esi
  0005d	ff d2		 call	 edx
  0005f	8b f0		 mov	 esi, eax
  00061	8b 44 24 0c	 mov	 eax, DWORD PTR $T118299[esp+16]
  00065	50		 push	 eax
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SysFreeString@4

; 261  : 		NormalCursor ();

  0006c	e8 00 00 00 00	 call	 _NormalCursor

; 262  : 	}
; 263  : 	else

  00071	eb 03		 jmp	 SHORT $LN1@UacChangeP
$LN2@UacChangeP:

; 264  : 		r = -1;

  00073	83 ce ff	 or	 esi, -1
$LN1@UacChangeP:

; 265  : 
; 266  : 	return r;

  00076	8b 44 24 08	 mov	 eax, DWORD PTR _tc$[esp+16]
  0007a	85 c0		 test	 eax, eax
  0007c	74 08		 je	 SHORT $LN24@UacChangeP
  0007e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00080	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00083	50		 push	 eax
  00084	ff d2		 call	 edx
$LN24@UacChangeP:
  00086	5f		 pop	 edi
  00087	8b c6		 mov	 eax, esi
  00089	5e		 pop	 esi

; 267  : }

  0008a	83 c4 08	 add	 esp, 8
  0008d	c3		 ret	 0
_UacChangePwd ENDP
_TEXT	ENDS
PUBLIC	??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z		; ATL::CW2AEX<128>::CW2AEX<128>
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atlconv.h
;	COMDAT ??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z PROC			; ATL::CW2AEX<128>::CW2AEX<128>, COMDAT
; _this$ = ecx

; 400  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 401  : 		Init( psz, _AtlGetConversionACP() );

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _psz$[esp]
  00007	6a 03		 push	 3
  00009	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0000c	51		 push	 ecx
  0000d	8b ce		 mov	 ecx, esi
  0000f	89 06		 mov	 DWORD PTR [esi], eax
  00011	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init

; 402  : 	}

  00016	8b c6		 mov	 eax, esi
  00018	5e		 pop	 esi
  00019	c2 04 00	 ret	 4
??0?$CW2AEX@$0IA@@ATL@@QAE@PB_W@Z ENDP			; ATL::CW2AEX<128>::CW2AEX<128>
_TEXT	ENDS
EXTRN	??2@YAPAXI@Z:PROC				; operator new
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\common\basecom.h
;	COMDAT ?CreateInstance@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
_TEXT	SEGMENT
_this$ = 8						; size = 4
_pUnkOuter$ = 12					; size = 4
_riid$ = 16						; size = 4
_ppvObject$ = 20					; size = 4
?CreateInstance@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z PROC ; CipherShedFactory<CipherShedMainCom>::CreateInstance, COMDAT

; 55   : 		if (pUnkOuter != NULL)

  00000	83 7c 24 08 00	 cmp	 DWORD PTR _pUnkOuter$[esp-4], 0
  00005	74 08		 je	 SHORT $LN3@CreateInst

; 56   : 			return CLASS_E_NOAGGREGATION;

  00007	b8 10 01 04 80	 mov	 eax, -2147221232	; 80040110H

; 68   : 	}

  0000c	c2 10 00	 ret	 16			; 00000010H
$LN3@CreateInst:
  0000f	56		 push	 esi

; 57   : 
; 58   : 		TClass *tc = new TClass (MessageThreadId);

  00010	6a 0c		 push	 12			; 0000000cH
  00012	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00017	8b f0		 mov	 esi, eax
  00019	83 c4 04	 add	 esp, 4
  0001c	85 f6		 test	 esi, esi
  0001e	74 70		 je	 SHORT $LN19@CreateInst
  00020	8b 44 24 08	 mov	 eax, DWORD PTR _this$[esp]
  00024	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00027	68 00 00 00 00	 push	 OFFSET _ObjectCount
  0002c	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CipherShedMainCom@@6B@
  00032	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00035	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedIncrement@4

; 61   : 
; 62   : 		HRESULT hr = tc->QueryInterface (riid, ppvObject);

  00042	8b 54 24 14	 mov	 edx, DWORD PTR _ppvObject$[esp]
  00046	8b 44 24 10	 mov	 eax, DWORD PTR _riid$[esp]
  0004a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0004c	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0004e	57		 push	 edi
  0004f	52		 push	 edx
  00050	50		 push	 eax
  00051	56		 push	 esi
  00052	ff d1		 call	 ecx
  00054	8b f8		 mov	 edi, eax

; 63   : 
; 64   : 		if (hr)

  00056	85 ff		 test	 edi, edi
  00058	74 2f		 je	 SHORT $LN8@CreateInst

; 65   : 			delete tc;

  0005a	68 00 00 00 00	 push	 OFFSET _ObjectCount
  0005f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7CipherShedMainCom@@6B@
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedDecrement@4
  0006b	85 c0		 test	 eax, eax
  0006d	75 11		 jne	 SHORT $LN16@CreateInst
  0006f	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00072	50		 push	 eax
  00073	50		 push	 eax
  00074	68 00 80 00 00	 push	 32768			; 00008000H
  00079	52		 push	 edx
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostThreadMessageA@16
$LN16@CreateInst:
  00080	56		 push	 esi
  00081	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00086	83 c4 04	 add	 esp, 4
$LN8@CreateInst:

; 66   : 
; 67   : 		return hr;

  00089	8b c7		 mov	 eax, edi
  0008b	5f		 pop	 edi
  0008c	5e		 pop	 esi

; 68   : 	}

  0008d	c2 10 00	 ret	 16			; 00000010H
$LN19@CreateInst:

; 59   : 		if (tc == NULL)
; 60   : 			return E_OUTOFMEMORY;

  00090	b8 0e 00 07 80	 mov	 eax, -2147024882	; 8007000eH
  00095	5e		 pop	 esi

; 68   : 	}

  00096	c2 10 00	 ret	 16			; 00000010H
?CreateInstance@?$CipherShedFactory@VCipherShedMainCom@@@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ENDP ; CipherShedFactory<CipherShedMainCom>::CreateInstance
_TEXT	ENDS
EXTRN	_BackupVolumeHeader:PROC
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\mount\maincom.cpp
;	COMDAT ?BackupVolumeHeader@CipherShedMainCom@@UAGHJHPA_W@Z
_TEXT	SEGMENT
$T118373 = -132						; size = 132
_this$ = 8						; size = 4
_hwndDlg$ = 12						; size = 4
_bRequireConfirmation$ = 16				; size = 4
_lpszVolume$ = 20					; size = 4
?BackupVolumeHeader@CipherShedMainCom@@UAGHJHPA_W@Z PROC ; CipherShedMainCom::BackupVolumeHeader, COMDAT

; 77   : 	{

  00000	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H

; 78   : 		USES_CONVERSION;
; 79   : 		MainDlg = (HWND) hwndDlg;
; 80   : 		return ::BackupVolumeHeader ((HWND) hwndDlg, bRequireConfirmation, CW2A (lpszVolume));

  00006	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR _lpszVolume$[esp+128]
  0000d	56		 push	 esi
  0000e	8b b4 24 90 00
	00 00		 mov	 esi, DWORD PTR _hwndDlg$[esp+132]
  00015	6a 03		 push	 3
  00017	8d 44 24 0c	 lea	 eax, DWORD PTR $T118373[esp+144]
  0001b	51		 push	 ecx
  0001c	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T118373[esp+144]
  00020	89 35 00 00 00
	00		 mov	 DWORD PTR _MainDlg, esi
  00026	89 44 24 0c	 mov	 DWORD PTR $T118373[esp+144], eax
  0002a	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init
  0002f	8b 54 24 04	 mov	 edx, DWORD PTR $T118373[esp+136]
  00033	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR _bRequireConfirmation$[esp+132]
  0003a	52		 push	 edx
  0003b	50		 push	 eax
  0003c	56		 push	 esi
  0003d	e8 00 00 00 00	 call	 _BackupVolumeHeader
  00042	8b f0		 mov	 esi, eax
  00044	8b 44 24 10	 mov	 eax, DWORD PTR $T118373[esp+148]
  00048	8d 4c 24 14	 lea	 ecx, DWORD PTR $T118373[esp+152]
  0004c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004f	3b c1		 cmp	 eax, ecx
  00051	74 09		 je	 SHORT $LN17@BackupVolu
  00053	50		 push	 eax
  00054	e8 00 00 00 00	 call	 _free
  00059	83 c4 04	 add	 esp, 4
$LN17@BackupVolu:
  0005c	8b c6		 mov	 eax, esi
  0005e	5e		 pop	 esi

; 81   : 	}

  0005f	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  00065	c2 10 00	 ret	 16			; 00000010H
?BackupVolumeHeader@CipherShedMainCom@@UAGHJHPA_W@Z ENDP ; CipherShedMainCom::BackupVolumeHeader
_TEXT	ENDS
EXTRN	_RestoreVolumeHeader:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?RestoreVolumeHeader@CipherShedMainCom@@UAGHJPA_W@Z
_TEXT	SEGMENT
$T118406 = -132						; size = 132
_this$ = 8						; size = 4
_hwndDlg$ = 12						; size = 4
_lpszVolume$ = 16					; size = 4
?RestoreVolumeHeader@CipherShedMainCom@@UAGHJPA_W@Z PROC ; CipherShedMainCom::RestoreVolumeHeader, COMDAT

; 84   : 	{

  00000	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H

; 85   : 		USES_CONVERSION;
; 86   : 		MainDlg = (HWND) hwndDlg;
; 87   : 		return ::RestoreVolumeHeader ((HWND) hwndDlg, CW2A (lpszVolume));

  00006	8b 8c 24 90 00
	00 00		 mov	 ecx, DWORD PTR _lpszVolume$[esp+128]
  0000d	56		 push	 esi
  0000e	8b b4 24 90 00
	00 00		 mov	 esi, DWORD PTR _hwndDlg$[esp+132]
  00015	6a 03		 push	 3
  00017	8d 44 24 0c	 lea	 eax, DWORD PTR $T118406[esp+144]
  0001b	51		 push	 ecx
  0001c	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T118406[esp+144]
  00020	89 35 00 00 00
	00		 mov	 DWORD PTR _MainDlg, esi
  00026	89 44 24 0c	 mov	 DWORD PTR $T118406[esp+144], eax
  0002a	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init
  0002f	8b 54 24 04	 mov	 edx, DWORD PTR $T118406[esp+136]
  00033	52		 push	 edx
  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 _RestoreVolumeHeader
  0003a	8b f0		 mov	 esi, eax
  0003c	8b 44 24 0c	 mov	 eax, DWORD PTR $T118406[esp+144]
  00040	8d 4c 24 10	 lea	 ecx, DWORD PTR $T118406[esp+148]
  00044	83 c4 08	 add	 esp, 8
  00047	3b c1		 cmp	 eax, ecx
  00049	74 09		 je	 SHORT $LN17@RestoreVol
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 _free
  00051	83 c4 04	 add	 esp, 4
$LN17@RestoreVol:
  00054	8b c6		 mov	 eax, esi
  00056	5e		 pop	 esi

; 88   : 	}

  00057	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  0005d	c2 0c 00	 ret	 12			; 0000000cH
?RestoreVolumeHeader@CipherShedMainCom@@UAGHJPA_W@Z ENDP ; CipherShedMainCom::RestoreVolumeHeader
_TEXT	ENDS
EXTRN	_ChangePwd:PROC
; Function compile flags: /Ogtpy
;	COMDAT ?ChangePassword@CipherShedMainCom@@UAGHPA_WPAUPassword@@1HJ@Z
_TEXT	SEGMENT
$T118439 = -132						; size = 132
_this$ = 8						; size = 4
_volumePath$ = 12					; size = 4
_oldPassword$ = 16					; size = 4
_newPassword$ = 20					; size = 4
_pkcs5$ = 24						; size = 4
_hWnd$ = 28						; size = 4
?ChangePassword@CipherShedMainCom@@UAGHPA_WPAUPassword@@1HJ@Z PROC ; CipherShedMainCom::ChangePassword, COMDAT

; 96   : 	{

  00000	81 ec 84 00 00
	00		 sub	 esp, 132		; 00000084H

; 97   : 		USES_CONVERSION;
; 98   : 		MainDlg = (HWND) hWnd;
; 99   : 		return ::ChangePwd (CW2A (volumePath), oldPassword, newPassword, pkcs5, (HWND) hWnd);

  00006	8b 8c 24 8c 00
	00 00		 mov	 ecx, DWORD PTR _volumePath$[esp+128]
  0000d	56		 push	 esi
  0000e	8b b4 24 a0 00
	00 00		 mov	 esi, DWORD PTR _hWnd$[esp+132]
  00015	6a 03		 push	 3
  00017	8d 44 24 0c	 lea	 eax, DWORD PTR $T118439[esp+144]
  0001b	51		 push	 ecx
  0001c	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T118439[esp+144]
  00020	89 35 00 00 00
	00		 mov	 DWORD PTR _MainDlg, esi
  00026	89 44 24 0c	 mov	 DWORD PTR $T118439[esp+144], eax
  0002a	e8 00 00 00 00	 call	 ?Init@?$CW2AEX@$0IA@@ATL@@AAEXPB_WI@Z ; ATL::CW2AEX<128>::Init
  0002f	8b 94 24 9c 00
	00 00		 mov	 edx, DWORD PTR _pkcs5$[esp+132]
  00036	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR _newPassword$[esp+132]
  0003d	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR _oldPassword$[esp+132]
  00044	56		 push	 esi
  00045	52		 push	 edx
  00046	8b 54 24 0c	 mov	 edx, DWORD PTR $T118439[esp+144]
  0004a	50		 push	 eax
  0004b	51		 push	 ecx
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 _ChangePwd
  00052	8b f0		 mov	 esi, eax
  00054	8b 44 24 18	 mov	 eax, DWORD PTR $T118439[esp+156]
  00058	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T118439[esp+160]
  0005c	83 c4 14	 add	 esp, 20			; 00000014H
  0005f	3b c1		 cmp	 eax, ecx
  00061	74 09		 je	 SHORT $LN17@ChangePass
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _free
  00069	83 c4 04	 add	 esp, 4
$LN17@ChangePass:
  0006c	8b c6		 mov	 eax, esi
  0006e	5e		 pop	 esi

; 100  : 	}

  0006f	81 c4 84 00 00
	00		 add	 esp, 132		; 00000084H
  00075	c2 18 00	 ret	 24			; 00000018H
?ChangePassword@CipherShedMainCom@@UAGHPA_WPAUPassword@@1HJ@Z ENDP ; CipherShedMainCom::ChangePassword
_TEXT	ENDS
PUBLIC	?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A ; Define_the_symbol__ATL_MIXED::clash
;	COMDAT ?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A
; File c:\program files (x86)\microsoft visual studio 9.0\vc\atlmfc\include\atldef.h
_DATA	SEGMENT
?clash@Define_the_symbol__ATL_MIXED@@3UThank_you@1@A DD FLAT:??_7Thank_you@Define_the_symbol__ATL_MIXED@@6B@ ; Define_the_symbol__ATL_MIXED::clash
_DATA	ENDS
PUBLIC	?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A ; Inconsistent_definition_of_symbol__ATL_MIXED::clash
;	COMDAT ?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A
_BSS	SEGMENT
?clash@Inconsistent_definition_of_symbol__ATL_MIXED@@3U_Please_define_it_the_same_throughout_your_project@1@A DB 01H DUP (?) ; Inconsistent_definition_of_symbol__ATL_MIXED::clash
_BSS	ENDS
END
