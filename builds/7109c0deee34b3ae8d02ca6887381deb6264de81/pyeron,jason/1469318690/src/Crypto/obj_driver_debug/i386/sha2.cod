; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\users\public\desktop\projects\ciphershed\src\crypto\sha2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_k256
PUBLIC	_i224
PUBLIC	_i256
PUBLIC	_k512
PUBLIC	_i384
PUBLIC	_i512
CONST	SEGMENT
_k256	DD	0428a2f98H
	DD	071374491H
	DD	0b5c0fbcfH
	DD	0e9b5dba5H
	DD	03956c25bH
	DD	059f111f1H
	DD	0923f82a4H
	DD	0ab1c5ed5H
	DD	0d807aa98H
	DD	012835b01H
	DD	0243185beH
	DD	0550c7dc3H
	DD	072be5d74H
	DD	080deb1feH
	DD	09bdc06a7H
	DD	0c19bf174H
	DD	0e49b69c1H
	DD	0efbe4786H
	DD	0fc19dc6H
	DD	0240ca1ccH
	DD	02de92c6fH
	DD	04a7484aaH
	DD	05cb0a9dcH
	DD	076f988daH
	DD	0983e5152H
	DD	0a831c66dH
	DD	0b00327c8H
	DD	0bf597fc7H
	DD	0c6e00bf3H
	DD	0d5a79147H
	DD	06ca6351H
	DD	014292967H
	DD	027b70a85H
	DD	02e1b2138H
	DD	04d2c6dfcH
	DD	053380d13H
	DD	0650a7354H
	DD	0766a0abbH
	DD	081c2c92eH
	DD	092722c85H
	DD	0a2bfe8a1H
	DD	0a81a664bH
	DD	0c24b8b70H
	DD	0c76c51a3H
	DD	0d192e819H
	DD	0d6990624H
	DD	0f40e3585H
	DD	0106aa070H
	DD	019a4c116H
	DD	01e376c08H
	DD	02748774cH
	DD	034b0bcb5H
	DD	0391c0cb3H
	DD	04ed8aa4aH
	DD	05b9cca4fH
	DD	0682e6ff3H
	DD	0748f82eeH
	DD	078a5636fH
	DD	084c87814H
	DD	08cc70208H
	DD	090befffaH
	DD	0a4506cebH
	DD	0bef9a3f7H
	DD	0c67178f2H
_i224	DD	0c1059ed8H
	DD	0367cd507H
	DD	03070dd17H
	DD	0f70e5939H
	DD	0ffc00b31H
	DD	068581511H
	DD	064f98fa7H
	DD	0befa4fa4H
_i256	DD	06a09e667H
	DD	0bb67ae85H
	DD	03c6ef372H
	DD	0a54ff53aH
	DD	0510e527fH
	DD	09b05688cH
	DD	01f83d9abH
	DD	05be0cd19H
_k512	DQ	428a2f98d728ae22H
	DQ	7137449123ef65cdH
	DQ	b5c0fbcfec4d3b2fH
	DQ	e9b5dba58189dbbcH
	DQ	3956c25bf348b538H
	DQ	59f111f1b605d019H
	DQ	923f82a4af194f9bH
	DQ	ab1c5ed5da6d8118H
	DQ	d807aa98a3030242H
	DQ	12835b0145706fbeH
	DQ	243185be4ee4b28cH
	DQ	550c7dc3d5ffb4e2H
	DQ	72be5d74f27b896fH
	DQ	80deb1fe3b1696b1H
	DQ	9bdc06a725c71235H
	DQ	c19bf174cf692694H
	DQ	e49b69c19ef14ad2H
	DQ	efbe4786384f25e3H
	DQ	0fc19dc68b8cd5b5H
	DQ	240ca1cc77ac9c65H
	DQ	2de92c6f592b0275H
	DQ	4a7484aa6ea6e483H
	DQ	5cb0a9dcbd41fbd4H
	DQ	76f988da831153b5H
	DQ	983e5152ee66dfabH
	DQ	a831c66d2db43210H
	DQ	b00327c898fb213fH
	DQ	bf597fc7beef0ee4H
	DQ	c6e00bf33da88fc2H
	DQ	d5a79147930aa725H
	DQ	06ca6351e003826fH
	DQ	142929670a0e6e70H
	DQ	27b70a8546d22ffcH
	DQ	2e1b21385c26c926H
	DQ	4d2c6dfc5ac42aedH
	DQ	53380d139d95b3dfH
	DQ	650a73548baf63deH
	DQ	766a0abb3c77b2a8H
	DQ	81c2c92e47edaee6H
	DQ	92722c851482353bH
	DQ	a2bfe8a14cf10364H
	DQ	a81a664bbc423001H
	DQ	c24b8b70d0f89791H
	DQ	c76c51a30654be30H
	DQ	d192e819d6ef5218H
	DQ	d69906245565a910H
	DQ	f40e35855771202aH
	DQ	106aa07032bbd1b8H
	DQ	19a4c116b8d2d0c8H
	DQ	1e376c085141ab53H
	DQ	2748774cdf8eeb99H
	DQ	34b0bcb5e19b48a8H
	DQ	391c0cb3c5c95a63H
	DQ	4ed8aa4ae3418acbH
	DQ	5b9cca4f7763e373H
	DQ	682e6ff3d6b2b8a3H
	DQ	748f82ee5defb2fcH
	DQ	78a5636f43172f60H
	DQ	84c87814a1f0ab72H
	DQ	8cc702081a6439ecH
	DQ	90befffa23631e28H
	DQ	a4506cebde82bde9H
	DQ	bef9a3f7b2c67915H
	DQ	c67178f2e372532bH
	DQ	ca273eceea26619cH
	DQ	d186b8c721c0c207H
	DQ	eada7dd6cde0eb1eH
	DQ	f57d4f7fee6ed178H
	DQ	06f067aa72176fbaH
	DQ	0a637dc5a2c898a6H
	DQ	113f9804bef90daeH
	DQ	1b710b35131c471bH
	DQ	28db77f523047d84H
	DQ	32caab7b40c72493H
	DQ	3c9ebe0a15c9bebcH
	DQ	431d67c49c100d4cH
	DQ	4cc5d4becb3e42b6H
	DQ	597f299cfc657e2aH
	DQ	5fcb6fab3ad6faecH
	DQ	6c44198c4a475817H
_i384	DQ	cbbb9d5dc1059ed8H
	DQ	629a292a367cd507H
	DQ	9159015a3070dd17H
	DQ	152fecd8f70e5939H
	DQ	67332667ffc00b31H
	DQ	8eb44a8768581511H
	DQ	db0c2e0d64f98fa7H
	DQ	47b5481dbefa4fa4H
	ORG $+576
_i512	DQ	6a09e667f3bcc908H
	DQ	bb67ae8584caa73bH
	DQ	3c6ef372fe94f82bH
	DQ	a54ff53a5f1d36f1H
	DQ	510e527fade682d1H
	DQ	9b05688c2b3e6c1fH
	DQ	1f83d9abfb41bd6bH
	DQ	5be0cd19137e2179H
	ORG $+576
CONST	ENDS
PUBLIC	_sha256_compile@4
; Function compile flags: /Odtp
; File c:\users\public\desktop\projects\ciphershed\src\crypto\sha2.c
;	COMDAT _sha256_compile@4
_TEXT	SEGMENT
tv1650 = -104						; size = 4
tv1553 = -100						; size = 4
tv1449 = -96						; size = 4
tv1351 = -92						; size = 4
tv1248 = -88						; size = 4
tv1144 = -84						; size = 4
tv1041 = -80						; size = 4
tv944 = -76						; size = 4
tv843 = -72						; size = 4
tv742 = -68						; size = 4
tv638 = -64						; size = 4
tv540 = -60						; size = 4
tv437 = -56						; size = 4
tv333 = -52						; size = 4
tv235 = -48						; size = 4
tv139 = -44						; size = 4
_j$ = -40						; size = 4
_v$ = -36						; size = 32
_p$ = -4						; size = 4
_ctx$ = 8						; size = 4
_sha256_compile@4 PROC					; COMDAT

; 190  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 68	 sub	 esp, 104		; 00000068H
  00008	56		 push	 esi
  00009	57		 push	 edi

; 191  : #if !defined(UNROLL_SHA2)
; 192  : 
; 193  :     uint_32t j, *p = ctx->wbuf, v[8];

  0000a	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000d	83 c0 28	 add	 eax, 40			; 00000028H
  00010	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 194  : 
; 195  :     memcpy(v, ctx->hash, 8 * sizeof(uint_32t));

  00013	8b 75 08	 mov	 esi, DWORD PTR _ctx$[ebp]
  00016	83 c6 08	 add	 esi, 8
  00019	b9 08 00 00 00	 mov	 ecx, 8
  0001e	8d 7d dc	 lea	 edi, DWORD PTR _v$[ebp]
  00021	f3 a5		 rep movsd

; 196  : 
; 197  :     for(j = 0; j < 64; j += 16)

  00023	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  0002a	eb 09		 jmp	 SHORT $LN3@sha256_com
$LN2@sha256_com:
  0002c	8b 4d d8	 mov	 ecx, DWORD PTR _j$[ebp]
  0002f	83 c1 10	 add	 ecx, 16			; 00000010H
  00032	89 4d d8	 mov	 DWORD PTR _j$[ebp], ecx
$LN3@sha256_com:
  00035	83 7d d8 40	 cmp	 DWORD PTR _j$[ebp], 64	; 00000040H
  00039	0f 83 c6 13 00
	00		 jae	 $LN1@sha256_com

; 198  :     {
; 199  :         v_cycle( 0, j); v_cycle( 1, j);

  0003f	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  00043	0f 84 86 00 00
	00		 je	 $LN6@sha256_com
  00049	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0004c	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  0004f	c1 e8 11	 shr	 eax, 17			; 00000011H
  00052	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00055	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00058	c1 e2 0f	 shl	 edx, 15			; 0000000fH
  0005b	0b c2		 or	 eax, edx
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00060	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  00063	c1 ea 13	 shr	 edx, 19			; 00000013H
  00066	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00069	8b 49 38	 mov	 ecx, DWORD PTR [ecx+56]
  0006c	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  0006f	0b d1		 or	 edx, ecx
  00071	33 c2		 xor	 eax, edx
  00073	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00076	8b 4a 38	 mov	 ecx, DWORD PTR [edx+56]
  00079	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  0007c	33 c1		 xor	 eax, ecx
  0007e	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00081	03 42 24	 add	 eax, DWORD PTR [edx+36]
  00084	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00087	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0008a	c1 ea 07	 shr	 edx, 7
  0008d	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00090	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00093	c1 e1 19	 shl	 ecx, 25			; 00000019H
  00096	0b d1		 or	 edx, ecx
  00098	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0009b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0009e	c1 e9 12	 shr	 ecx, 18			; 00000012H
  000a1	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  000a4	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000a7	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  000aa	0b ce		 or	 ecx, esi
  000ac	33 d1		 xor	 edx, ecx
  000ae	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  000b1	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  000b4	c1 e9 03	 shr	 ecx, 3
  000b7	33 d1		 xor	 edx, ecx
  000b9	03 c2		 add	 eax, edx
  000bb	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  000be	03 02		 add	 eax, DWORD PTR [edx]
  000c0	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  000c3	89 01		 mov	 DWORD PTR [ecx], eax
  000c5	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  000c8	8b 02		 mov	 eax, DWORD PTR [edx]
  000ca	89 45 d4	 mov	 DWORD PTR tv139[ebp], eax
  000cd	eb 08		 jmp	 SHORT $LN7@sha256_com
$LN6@sha256_com:
  000cf	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  000d2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d4	89 55 d4	 mov	 DWORD PTR tv139[ebp], edx
$LN7@sha256_com:
  000d7	8b 45 d8	 mov	 eax, DWORD PTR _j$[ebp]
  000da	8b 4d d4	 mov	 ecx, DWORD PTR tv139[ebp]
  000dd	03 0c 85 00 00
	00 00		 add	 ecx, DWORD PTR _k256[eax*4]
  000e4	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  000e7	c1 ea 06	 shr	 edx, 6
  000ea	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  000ed	c1 e0 1a	 shl	 eax, 26			; 0000001aH
  000f0	0b d0		 or	 edx, eax
  000f2	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  000f5	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  000f8	8b 75 ec	 mov	 esi, DWORD PTR _v$[ebp+16]
  000fb	c1 e6 15	 shl	 esi, 21			; 00000015H
  000fe	0b c6		 or	 eax, esi
  00100	33 d0		 xor	 edx, eax
  00102	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  00105	c1 e8 19	 shr	 eax, 25			; 00000019H
  00108	8b 75 ec	 mov	 esi, DWORD PTR _v$[ebp+16]
  0010b	c1 e6 07	 shl	 esi, 7
  0010e	0b c6		 or	 eax, esi
  00110	33 d0		 xor	 edx, eax
  00112	03 ca		 add	 ecx, edx
  00114	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  00117	33 55 f4	 xor	 edx, DWORD PTR _v$[ebp+24]
  0011a	23 55 ec	 and	 edx, DWORD PTR _v$[ebp+16]
  0011d	33 55 f4	 xor	 edx, DWORD PTR _v$[ebp+24]
  00120	03 55 f8	 add	 edx, DWORD PTR _v$[ebp+28]
  00123	03 d1		 add	 edx, ecx
  00125	89 55 f8	 mov	 DWORD PTR _v$[ebp+28], edx
  00128	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  0012b	03 45 f8	 add	 eax, DWORD PTR _v$[ebp+28]
  0012e	89 45 e8	 mov	 DWORD PTR _v$[ebp+12], eax
  00131	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  00134	c1 e9 02	 shr	 ecx, 2
  00137	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  0013a	c1 e2 1e	 shl	 edx, 30			; 0000001eH
  0013d	0b ca		 or	 ecx, edx
  0013f	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  00142	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  00145	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00148	c1 e2 13	 shl	 edx, 19			; 00000013H
  0014b	0b c2		 or	 eax, edx
  0014d	33 c8		 xor	 ecx, eax
  0014f	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  00152	c1 e8 16	 shr	 eax, 22			; 00000016H
  00155	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00158	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  0015b	0b c2		 or	 eax, edx
  0015d	33 c8		 xor	 ecx, eax
  0015f	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  00162	23 45 e0	 and	 eax, DWORD PTR _v$[ebp+4]
  00165	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00168	33 55 e0	 xor	 edx, DWORD PTR _v$[ebp+4]
  0016b	23 55 e4	 and	 edx, DWORD PTR _v$[ebp+8]
  0016e	0b c2		 or	 eax, edx
  00170	03 45 f8	 add	 eax, DWORD PTR _v$[ebp+28]
  00173	03 c1		 add	 eax, ecx
  00175	89 45 f8	 mov	 DWORD PTR _v$[ebp+28], eax
  00178	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  0017c	0f 84 89 00 00
	00		 je	 $LN8@sha256_com
  00182	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00185	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  00188	c1 e9 11	 shr	 ecx, 17			; 00000011H
  0018b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0018e	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  00191	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  00194	0b c8		 or	 ecx, eax
  00196	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00199	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  0019c	c1 e8 13	 shr	 eax, 19			; 00000013H
  0019f	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  001a2	8b 52 3c	 mov	 edx, DWORD PTR [edx+60]
  001a5	c1 e2 0d	 shl	 edx, 13			; 0000000dH
  001a8	0b c2		 or	 eax, edx
  001aa	33 c8		 xor	 ecx, eax
  001ac	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  001af	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  001b2	c1 ea 0a	 shr	 edx, 10			; 0000000aH
  001b5	33 ca		 xor	 ecx, edx
  001b7	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  001ba	03 48 28	 add	 ecx, DWORD PTR [eax+40]
  001bd	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  001c0	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  001c3	c1 e8 07	 shr	 eax, 7
  001c6	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  001c9	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001cc	c1 e2 19	 shl	 edx, 25			; 00000019H
  001cf	0b c2		 or	 eax, edx
  001d1	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  001d4	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001d7	c1 ea 12	 shr	 edx, 18			; 00000012H
  001da	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  001dd	8b 76 08	 mov	 esi, DWORD PTR [esi+8]
  001e0	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  001e3	0b d6		 or	 edx, esi
  001e5	33 c2		 xor	 eax, edx
  001e7	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  001ea	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  001ed	c1 ea 03	 shr	 edx, 3
  001f0	33 c2		 xor	 eax, edx
  001f2	03 c8		 add	 ecx, eax
  001f4	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  001f7	03 48 04	 add	 ecx, DWORD PTR [eax+4]
  001fa	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  001fd	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  00200	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00203	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00206	89 4d d0	 mov	 DWORD PTR tv235[ebp], ecx
  00209	eb 09		 jmp	 SHORT $LN9@sha256_com
$LN8@sha256_com:
  0020b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0020e	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00211	89 45 d0	 mov	 DWORD PTR tv235[ebp], eax
$LN9@sha256_com:
  00214	8b 4d d8	 mov	 ecx, DWORD PTR _j$[ebp]
  00217	8b 55 d0	 mov	 edx, DWORD PTR tv235[ebp]
  0021a	03 14 8d 04 00
	00 00		 add	 edx, DWORD PTR _k256[ecx*4+4]
  00221	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  00224	c1 e8 06	 shr	 eax, 6
  00227	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  0022a	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  0022d	0b c1		 or	 eax, ecx
  0022f	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  00232	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00235	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  00238	c1 e6 15	 shl	 esi, 21			; 00000015H
  0023b	0b ce		 or	 ecx, esi
  0023d	33 c1		 xor	 eax, ecx
  0023f	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  00242	c1 e9 19	 shr	 ecx, 25			; 00000019H
  00245	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  00248	c1 e6 07	 shl	 esi, 7
  0024b	0b ce		 or	 ecx, esi
  0024d	33 c1		 xor	 eax, ecx
  0024f	03 d0		 add	 edx, eax
  00251	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  00254	33 45 f0	 xor	 eax, DWORD PTR _v$[ebp+20]
  00257	23 45 e8	 and	 eax, DWORD PTR _v$[ebp+12]
  0025a	33 45 f0	 xor	 eax, DWORD PTR _v$[ebp+20]
  0025d	03 45 f4	 add	 eax, DWORD PTR _v$[ebp+24]
  00260	03 c2		 add	 eax, edx
  00262	89 45 f4	 mov	 DWORD PTR _v$[ebp+24], eax
  00265	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00268	03 4d f4	 add	 ecx, DWORD PTR _v$[ebp+24]
  0026b	89 4d e4	 mov	 DWORD PTR _v$[ebp+8], ecx
  0026e	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00271	c1 ea 02	 shr	 edx, 2
  00274	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  00277	c1 e0 1e	 shl	 eax, 30			; 0000001eH
  0027a	0b d0		 or	 edx, eax
  0027c	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  0027f	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  00282	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  00285	c1 e0 13	 shl	 eax, 19			; 00000013H
  00288	0b c8		 or	 ecx, eax
  0028a	33 d1		 xor	 edx, ecx
  0028c	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  0028f	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00292	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  00295	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00298	0b c8		 or	 ecx, eax
  0029a	33 d1		 xor	 edx, ecx
  0029c	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  0029f	23 4d dc	 and	 ecx, DWORD PTR _v$[ebp]
  002a2	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  002a5	33 45 dc	 xor	 eax, DWORD PTR _v$[ebp]
  002a8	23 45 e0	 and	 eax, DWORD PTR _v$[ebp+4]
  002ab	0b c8		 or	 ecx, eax
  002ad	03 4d f4	 add	 ecx, DWORD PTR _v$[ebp+24]
  002b0	03 ca		 add	 ecx, edx
  002b2	89 4d f4	 mov	 DWORD PTR _v$[ebp+24], ecx

; 200  :         v_cycle( 2, j); v_cycle( 3, j);

  002b5	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  002b9	0f 84 84 00 00
	00		 je	 $LN10@sha256_com
  002bf	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  002c2	8b 11		 mov	 edx, DWORD PTR [ecx]
  002c4	c1 ea 11	 shr	 edx, 17			; 00000011H
  002c7	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  002ca	8b 08		 mov	 ecx, DWORD PTR [eax]
  002cc	c1 e1 0f	 shl	 ecx, 15			; 0000000fH
  002cf	0b d1		 or	 edx, ecx
  002d1	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  002d4	8b 08		 mov	 ecx, DWORD PTR [eax]
  002d6	c1 e9 13	 shr	 ecx, 19			; 00000013H
  002d9	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  002dc	8b 00		 mov	 eax, DWORD PTR [eax]
  002de	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  002e1	0b c8		 or	 ecx, eax
  002e3	33 d1		 xor	 edx, ecx
  002e5	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  002e8	8b 01		 mov	 eax, DWORD PTR [ecx]
  002ea	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  002ed	33 d0		 xor	 edx, eax
  002ef	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  002f2	03 51 2c	 add	 edx, DWORD PTR [ecx+44]
  002f5	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  002f8	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  002fb	c1 e9 07	 shr	 ecx, 7
  002fe	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00301	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00304	c1 e0 19	 shl	 eax, 25			; 00000019H
  00307	0b c8		 or	 ecx, eax
  00309	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0030c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0030f	c1 e8 12	 shr	 eax, 18			; 00000012H
  00312	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00315	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  00318	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  0031b	0b c6		 or	 eax, esi
  0031d	33 c8		 xor	 ecx, eax
  0031f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00322	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00325	c1 e8 03	 shr	 eax, 3
  00328	33 c8		 xor	 ecx, eax
  0032a	03 d1		 add	 edx, ecx
  0032c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0032f	03 51 08	 add	 edx, DWORD PTR [ecx+8]
  00332	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00335	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00338	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0033b	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0033e	89 55 cc	 mov	 DWORD PTR tv333[ebp], edx
  00341	eb 09		 jmp	 SHORT $LN11@sha256_com
$LN10@sha256_com:
  00343	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00346	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00349	89 4d cc	 mov	 DWORD PTR tv333[ebp], ecx
$LN11@sha256_com:
  0034c	8b 55 d8	 mov	 edx, DWORD PTR _j$[ebp]
  0034f	8b 45 cc	 mov	 eax, DWORD PTR tv333[ebp]
  00352	03 04 95 08 00
	00 00		 add	 eax, DWORD PTR _k256[edx*4+8]
  00359	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  0035c	c1 e9 06	 shr	 ecx, 6
  0035f	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  00362	c1 e2 1a	 shl	 edx, 26			; 0000001aH
  00365	0b ca		 or	 ecx, edx
  00367	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  0036a	c1 ea 0b	 shr	 edx, 11			; 0000000bH
  0036d	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  00370	c1 e6 15	 shl	 esi, 21			; 00000015H
  00373	0b d6		 or	 edx, esi
  00375	33 ca		 xor	 ecx, edx
  00377	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  0037a	c1 ea 19	 shr	 edx, 25			; 00000019H
  0037d	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  00380	c1 e6 07	 shl	 esi, 7
  00383	0b d6		 or	 edx, esi
  00385	33 ca		 xor	 ecx, edx
  00387	03 c1		 add	 eax, ecx
  00389	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  0038c	33 4d ec	 xor	 ecx, DWORD PTR _v$[ebp+16]
  0038f	23 4d e4	 and	 ecx, DWORD PTR _v$[ebp+8]
  00392	33 4d ec	 xor	 ecx, DWORD PTR _v$[ebp+16]
  00395	03 4d f0	 add	 ecx, DWORD PTR _v$[ebp+20]
  00398	03 c8		 add	 ecx, eax
  0039a	89 4d f0	 mov	 DWORD PTR _v$[ebp+20], ecx
  0039d	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  003a0	03 55 f0	 add	 edx, DWORD PTR _v$[ebp+20]
  003a3	89 55 e0	 mov	 DWORD PTR _v$[ebp+4], edx
  003a6	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  003a9	c1 e8 02	 shr	 eax, 2
  003ac	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  003af	c1 e1 1e	 shl	 ecx, 30			; 0000001eH
  003b2	0b c1		 or	 eax, ecx
  003b4	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  003b7	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  003ba	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  003bd	c1 e1 13	 shl	 ecx, 19			; 00000013H
  003c0	0b d1		 or	 edx, ecx
  003c2	33 c2		 xor	 eax, edx
  003c4	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  003c7	c1 ea 16	 shr	 edx, 22			; 00000016H
  003ca	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  003cd	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  003d0	0b d1		 or	 edx, ecx
  003d2	33 c2		 xor	 eax, edx
  003d4	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  003d7	23 55 f8	 and	 edx, DWORD PTR _v$[ebp+28]
  003da	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  003dd	33 4d f8	 xor	 ecx, DWORD PTR _v$[ebp+28]
  003e0	23 4d dc	 and	 ecx, DWORD PTR _v$[ebp]
  003e3	0b d1		 or	 edx, ecx
  003e5	03 55 f0	 add	 edx, DWORD PTR _v$[ebp+20]
  003e8	03 d0		 add	 edx, eax
  003ea	89 55 f0	 mov	 DWORD PTR _v$[ebp+20], edx
  003ed	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  003f1	0f 84 89 00 00
	00		 je	 $LN12@sha256_com
  003f7	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  003fa	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  003fd	c1 e8 11	 shr	 eax, 17			; 00000011H
  00400	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00403	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00406	c1 e2 0f	 shl	 edx, 15			; 0000000fH
  00409	0b c2		 or	 eax, edx
  0040b	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0040e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00411	c1 ea 13	 shr	 edx, 19			; 00000013H
  00414	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00417	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0041a	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  0041d	0b d1		 or	 edx, ecx
  0041f	33 c2		 xor	 eax, edx
  00421	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00424	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00427	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  0042a	33 c1		 xor	 eax, ecx
  0042c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0042f	03 42 30	 add	 eax, DWORD PTR [edx+48]
  00432	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00435	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00438	c1 ea 07	 shr	 edx, 7
  0043b	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0043e	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00441	c1 e1 19	 shl	 ecx, 25			; 00000019H
  00444	0b d1		 or	 edx, ecx
  00446	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00449	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  0044c	c1 e9 12	 shr	 ecx, 18			; 00000012H
  0044f	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00452	8b 76 10	 mov	 esi, DWORD PTR [esi+16]
  00455	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00458	0b ce		 or	 ecx, esi
  0045a	33 d1		 xor	 edx, ecx
  0045c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0045f	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00462	c1 e9 03	 shr	 ecx, 3
  00465	33 d1		 xor	 edx, ecx
  00467	03 c2		 add	 eax, edx
  00469	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0046c	03 42 0c	 add	 eax, DWORD PTR [edx+12]
  0046f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00472	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  00475	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00478	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0047b	89 45 c8	 mov	 DWORD PTR tv437[ebp], eax
  0047e	eb 09		 jmp	 SHORT $LN13@sha256_com
$LN12@sha256_com:
  00480	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00483	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00486	89 55 c8	 mov	 DWORD PTR tv437[ebp], edx
$LN13@sha256_com:
  00489	8b 45 d8	 mov	 eax, DWORD PTR _j$[ebp]
  0048c	8b 4d c8	 mov	 ecx, DWORD PTR tv437[ebp]
  0048f	03 0c 85 0c 00
	00 00		 add	 ecx, DWORD PTR _k256[eax*4+12]
  00496	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00499	c1 ea 06	 shr	 edx, 6
  0049c	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  0049f	c1 e0 1a	 shl	 eax, 26			; 0000001aH
  004a2	0b d0		 or	 edx, eax
  004a4	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  004a7	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  004aa	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  004ad	c1 e6 15	 shl	 esi, 21			; 00000015H
  004b0	0b c6		 or	 eax, esi
  004b2	33 d0		 xor	 edx, eax
  004b4	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  004b7	c1 e8 19	 shr	 eax, 25			; 00000019H
  004ba	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  004bd	c1 e6 07	 shl	 esi, 7
  004c0	0b c6		 or	 eax, esi
  004c2	33 d0		 xor	 edx, eax
  004c4	03 ca		 add	 ecx, edx
  004c6	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  004c9	33 55 e8	 xor	 edx, DWORD PTR _v$[ebp+12]
  004cc	23 55 e0	 and	 edx, DWORD PTR _v$[ebp+4]
  004cf	33 55 e8	 xor	 edx, DWORD PTR _v$[ebp+12]
  004d2	03 55 ec	 add	 edx, DWORD PTR _v$[ebp+16]
  004d5	03 d1		 add	 edx, ecx
  004d7	89 55 ec	 mov	 DWORD PTR _v$[ebp+16], edx
  004da	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  004dd	03 45 ec	 add	 eax, DWORD PTR _v$[ebp+16]
  004e0	89 45 dc	 mov	 DWORD PTR _v$[ebp], eax
  004e3	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  004e6	c1 e9 02	 shr	 ecx, 2
  004e9	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  004ec	c1 e2 1e	 shl	 edx, 30			; 0000001eH
  004ef	0b ca		 or	 ecx, edx
  004f1	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  004f4	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  004f7	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  004fa	c1 e2 13	 shl	 edx, 19			; 00000013H
  004fd	0b c2		 or	 eax, edx
  004ff	33 c8		 xor	 ecx, eax
  00501	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  00504	c1 e8 16	 shr	 eax, 22			; 00000016H
  00507	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0050a	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  0050d	0b c2		 or	 eax, edx
  0050f	33 c8		 xor	 ecx, eax
  00511	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  00514	23 45 f4	 and	 eax, DWORD PTR _v$[ebp+24]
  00517	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0051a	33 55 f4	 xor	 edx, DWORD PTR _v$[ebp+24]
  0051d	23 55 f8	 and	 edx, DWORD PTR _v$[ebp+28]
  00520	0b c2		 or	 eax, edx
  00522	03 45 ec	 add	 eax, DWORD PTR _v$[ebp+16]
  00525	03 c1		 add	 eax, ecx
  00527	89 45 ec	 mov	 DWORD PTR _v$[ebp+16], eax

; 201  :         v_cycle( 4, j); v_cycle( 5, j);

  0052a	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  0052e	0f 84 89 00 00
	00		 je	 $LN14@sha256_com
  00534	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00537	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0053a	c1 e9 11	 shr	 ecx, 17			; 00000011H
  0053d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00540	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00543	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  00546	0b c8		 or	 ecx, eax
  00548	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0054b	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0054e	c1 e8 13	 shr	 eax, 19			; 00000013H
  00551	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00554	8b 52 08	 mov	 edx, DWORD PTR [edx+8]
  00557	c1 e2 0d	 shl	 edx, 13			; 0000000dH
  0055a	0b c2		 or	 eax, edx
  0055c	33 c8		 xor	 ecx, eax
  0055e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00561	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00564	c1 ea 0a	 shr	 edx, 10			; 0000000aH
  00567	33 ca		 xor	 ecx, edx
  00569	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0056c	03 48 34	 add	 ecx, DWORD PTR [eax+52]
  0056f	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00572	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00575	c1 e8 07	 shr	 eax, 7
  00578	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0057b	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  0057e	c1 e2 19	 shl	 edx, 25			; 00000019H
  00581	0b c2		 or	 eax, edx
  00583	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00586	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  00589	c1 ea 12	 shr	 edx, 18			; 00000012H
  0058c	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  0058f	8b 76 14	 mov	 esi, DWORD PTR [esi+20]
  00592	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00595	0b d6		 or	 edx, esi
  00597	33 c2		 xor	 eax, edx
  00599	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0059c	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  0059f	c1 ea 03	 shr	 edx, 3
  005a2	33 c2		 xor	 eax, edx
  005a4	03 c8		 add	 ecx, eax
  005a6	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  005a9	03 48 10	 add	 ecx, DWORD PTR [eax+16]
  005ac	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  005af	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  005b2	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  005b5	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  005b8	89 4d c4	 mov	 DWORD PTR tv540[ebp], ecx
  005bb	eb 09		 jmp	 SHORT $LN15@sha256_com
$LN14@sha256_com:
  005bd	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  005c0	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  005c3	89 45 c4	 mov	 DWORD PTR tv540[ebp], eax
$LN15@sha256_com:
  005c6	8b 4d d8	 mov	 ecx, DWORD PTR _j$[ebp]
  005c9	8b 55 c4	 mov	 edx, DWORD PTR tv540[ebp]
  005cc	03 14 8d 10 00
	00 00		 add	 edx, DWORD PTR _k256[ecx*4+16]
  005d3	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  005d6	c1 e8 06	 shr	 eax, 6
  005d9	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  005dc	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  005df	0b c1		 or	 eax, ecx
  005e1	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  005e4	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  005e7	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  005ea	c1 e6 15	 shl	 esi, 21			; 00000015H
  005ed	0b ce		 or	 ecx, esi
  005ef	33 c1		 xor	 eax, ecx
  005f1	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  005f4	c1 e9 19	 shr	 ecx, 25			; 00000019H
  005f7	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  005fa	c1 e6 07	 shl	 esi, 7
  005fd	0b ce		 or	 ecx, esi
  005ff	33 c1		 xor	 eax, ecx
  00601	03 d0		 add	 edx, eax
  00603	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  00606	33 45 e4	 xor	 eax, DWORD PTR _v$[ebp+8]
  00609	23 45 dc	 and	 eax, DWORD PTR _v$[ebp]
  0060c	33 45 e4	 xor	 eax, DWORD PTR _v$[ebp+8]
  0060f	03 45 e8	 add	 eax, DWORD PTR _v$[ebp+12]
  00612	03 c2		 add	 eax, edx
  00614	89 45 e8	 mov	 DWORD PTR _v$[ebp+12], eax
  00617	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  0061a	03 4d e8	 add	 ecx, DWORD PTR _v$[ebp+12]
  0061d	89 4d f8	 mov	 DWORD PTR _v$[ebp+28], ecx
  00620	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  00623	c1 ea 02	 shr	 edx, 2
  00626	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  00629	c1 e0 1e	 shl	 eax, 30			; 0000001eH
  0062c	0b d0		 or	 edx, eax
  0062e	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+16]
  00631	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  00634	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  00637	c1 e0 13	 shl	 eax, 19			; 00000013H
  0063a	0b c8		 or	 ecx, eax
  0063c	33 d1		 xor	 edx, ecx
  0063e	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+16]
  00641	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00644	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  00647	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  0064a	0b c8		 or	 ecx, eax
  0064c	33 d1		 xor	 edx, ecx
  0064e	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+16]
  00651	23 4d f0	 and	 ecx, DWORD PTR _v$[ebp+20]
  00654	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  00657	33 45 f0	 xor	 eax, DWORD PTR _v$[ebp+20]
  0065a	23 45 f4	 and	 eax, DWORD PTR _v$[ebp+24]
  0065d	0b c8		 or	 ecx, eax
  0065f	03 4d e8	 add	 ecx, DWORD PTR _v$[ebp+12]
  00662	03 ca		 add	 ecx, edx
  00664	89 4d e8	 mov	 DWORD PTR _v$[ebp+12], ecx
  00667	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  0066b	0f 84 89 00 00
	00		 je	 $LN16@sha256_com
  00671	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00674	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00677	c1 ea 11	 shr	 edx, 17			; 00000011H
  0067a	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0067d	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00680	c1 e1 0f	 shl	 ecx, 15			; 0000000fH
  00683	0b d1		 or	 edx, ecx
  00685	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00688	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0068b	c1 e9 13	 shr	 ecx, 19			; 00000013H
  0068e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00691	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00694	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00697	0b c8		 or	 ecx, eax
  00699	33 d1		 xor	 edx, ecx
  0069b	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0069e	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  006a1	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  006a4	33 d0		 xor	 edx, eax
  006a6	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  006a9	03 51 38	 add	 edx, DWORD PTR [ecx+56]
  006ac	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  006af	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  006b2	c1 e9 07	 shr	 ecx, 7
  006b5	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  006b8	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  006bb	c1 e0 19	 shl	 eax, 25			; 00000019H
  006be	0b c8		 or	 ecx, eax
  006c0	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  006c3	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  006c6	c1 e8 12	 shr	 eax, 18			; 00000012H
  006c9	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  006cc	8b 76 18	 mov	 esi, DWORD PTR [esi+24]
  006cf	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  006d2	0b c6		 or	 eax, esi
  006d4	33 c8		 xor	 ecx, eax
  006d6	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  006d9	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  006dc	c1 e8 03	 shr	 eax, 3
  006df	33 c8		 xor	 ecx, eax
  006e1	03 d1		 add	 edx, ecx
  006e3	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  006e6	03 51 14	 add	 edx, DWORD PTR [ecx+20]
  006e9	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  006ec	89 50 14	 mov	 DWORD PTR [eax+20], edx
  006ef	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  006f2	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  006f5	89 55 c0	 mov	 DWORD PTR tv638[ebp], edx
  006f8	eb 09		 jmp	 SHORT $LN17@sha256_com
$LN16@sha256_com:
  006fa	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  006fd	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00700	89 4d c0	 mov	 DWORD PTR tv638[ebp], ecx
$LN17@sha256_com:
  00703	8b 55 d8	 mov	 edx, DWORD PTR _j$[ebp]
  00706	8b 45 c0	 mov	 eax, DWORD PTR tv638[ebp]
  00709	03 04 95 14 00
	00 00		 add	 eax, DWORD PTR _k256[edx*4+20]
  00710	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  00713	c1 e9 06	 shr	 ecx, 6
  00716	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00719	c1 e2 1a	 shl	 edx, 26			; 0000001aH
  0071c	0b ca		 or	 ecx, edx
  0071e	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00721	c1 ea 0b	 shr	 edx, 11			; 0000000bH
  00724	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+28]
  00727	c1 e6 15	 shl	 esi, 21			; 00000015H
  0072a	0b d6		 or	 edx, esi
  0072c	33 ca		 xor	 ecx, edx
  0072e	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00731	c1 ea 19	 shr	 edx, 25			; 00000019H
  00734	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+28]
  00737	c1 e6 07	 shl	 esi, 7
  0073a	0b d6		 or	 edx, esi
  0073c	33 ca		 xor	 ecx, edx
  0073e	03 c1		 add	 eax, ecx
  00740	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  00743	33 4d e0	 xor	 ecx, DWORD PTR _v$[ebp+4]
  00746	23 4d f8	 and	 ecx, DWORD PTR _v$[ebp+28]
  00749	33 4d e0	 xor	 ecx, DWORD PTR _v$[ebp+4]
  0074c	03 4d e4	 add	 ecx, DWORD PTR _v$[ebp+8]
  0074f	03 c8		 add	 ecx, eax
  00751	89 4d e4	 mov	 DWORD PTR _v$[ebp+8], ecx
  00754	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  00757	03 55 e4	 add	 edx, DWORD PTR _v$[ebp+8]
  0075a	89 55 f4	 mov	 DWORD PTR _v$[ebp+24], edx
  0075d	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  00760	c1 e8 02	 shr	 eax, 2
  00763	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  00766	c1 e1 1e	 shl	 ecx, 30			; 0000001eH
  00769	0b c1		 or	 eax, ecx
  0076b	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+12]
  0076e	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  00771	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  00774	c1 e1 13	 shl	 ecx, 19			; 00000013H
  00777	0b d1		 or	 edx, ecx
  00779	33 c2		 xor	 eax, edx
  0077b	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+12]
  0077e	c1 ea 16	 shr	 edx, 22			; 00000016H
  00781	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  00784	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  00787	0b d1		 or	 edx, ecx
  00789	33 c2		 xor	 eax, edx
  0078b	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+12]
  0078e	23 55 ec	 and	 edx, DWORD PTR _v$[ebp+16]
  00791	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  00794	33 4d ec	 xor	 ecx, DWORD PTR _v$[ebp+16]
  00797	23 4d f0	 and	 ecx, DWORD PTR _v$[ebp+20]
  0079a	0b d1		 or	 edx, ecx
  0079c	03 55 e4	 add	 edx, DWORD PTR _v$[ebp+8]
  0079f	03 d0		 add	 edx, eax
  007a1	89 55 e4	 mov	 DWORD PTR _v$[ebp+8], edx

; 202  :         v_cycle( 6, j); v_cycle( 7, j);

  007a4	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  007a8	0f 84 89 00 00
	00		 je	 $LN18@sha256_com
  007ae	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  007b1	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  007b4	c1 e8 11	 shr	 eax, 17			; 00000011H
  007b7	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  007ba	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  007bd	c1 e2 0f	 shl	 edx, 15			; 0000000fH
  007c0	0b c2		 or	 eax, edx
  007c2	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  007c5	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  007c8	c1 ea 13	 shr	 edx, 19			; 00000013H
  007cb	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  007ce	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  007d1	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  007d4	0b d1		 or	 edx, ecx
  007d6	33 c2		 xor	 eax, edx
  007d8	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  007db	8b 4a 10	 mov	 ecx, DWORD PTR [edx+16]
  007de	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  007e1	33 c1		 xor	 eax, ecx
  007e3	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  007e6	03 42 3c	 add	 eax, DWORD PTR [edx+60]
  007e9	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  007ec	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  007ef	c1 ea 07	 shr	 edx, 7
  007f2	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  007f5	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  007f8	c1 e1 19	 shl	 ecx, 25			; 00000019H
  007fb	0b d1		 or	 edx, ecx
  007fd	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00800	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00803	c1 e9 12	 shr	 ecx, 18			; 00000012H
  00806	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00809	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
  0080c	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  0080f	0b ce		 or	 ecx, esi
  00811	33 d1		 xor	 edx, ecx
  00813	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00816	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00819	c1 e9 03	 shr	 ecx, 3
  0081c	33 d1		 xor	 edx, ecx
  0081e	03 c2		 add	 eax, edx
  00820	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00823	03 42 18	 add	 eax, DWORD PTR [edx+24]
  00826	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00829	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  0082c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0082f	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00832	89 45 bc	 mov	 DWORD PTR tv742[ebp], eax
  00835	eb 09		 jmp	 SHORT $LN19@sha256_com
$LN18@sha256_com:
  00837	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0083a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0083d	89 55 bc	 mov	 DWORD PTR tv742[ebp], edx
$LN19@sha256_com:
  00840	8b 45 d8	 mov	 eax, DWORD PTR _j$[ebp]
  00843	8b 4d bc	 mov	 ecx, DWORD PTR tv742[ebp]
  00846	03 0c 85 18 00
	00 00		 add	 ecx, DWORD PTR _k256[eax*4+24]
  0084d	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  00850	c1 ea 06	 shr	 edx, 6
  00853	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00856	c1 e0 1a	 shl	 eax, 26			; 0000001aH
  00859	0b d0		 or	 edx, eax
  0085b	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  0085e	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00861	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+24]
  00864	c1 e6 15	 shl	 esi, 21			; 00000015H
  00867	0b c6		 or	 eax, esi
  00869	33 d0		 xor	 edx, eax
  0086b	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  0086e	c1 e8 19	 shr	 eax, 25			; 00000019H
  00871	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+24]
  00874	c1 e6 07	 shl	 esi, 7
  00877	0b c6		 or	 eax, esi
  00879	33 d0		 xor	 edx, eax
  0087b	03 ca		 add	 ecx, edx
  0087d	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00880	33 55 dc	 xor	 edx, DWORD PTR _v$[ebp]
  00883	23 55 f4	 and	 edx, DWORD PTR _v$[ebp+24]
  00886	33 55 dc	 xor	 edx, DWORD PTR _v$[ebp]
  00889	03 55 e0	 add	 edx, DWORD PTR _v$[ebp+4]
  0088c	03 d1		 add	 edx, ecx
  0088e	89 55 e0	 mov	 DWORD PTR _v$[ebp+4], edx
  00891	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  00894	03 45 e0	 add	 eax, DWORD PTR _v$[ebp+4]
  00897	89 45 f0	 mov	 DWORD PTR _v$[ebp+20], eax
  0089a	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  0089d	c1 e9 02	 shr	 ecx, 2
  008a0	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  008a3	c1 e2 1e	 shl	 edx, 30			; 0000001eH
  008a6	0b ca		 or	 ecx, edx
  008a8	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+8]
  008ab	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  008ae	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  008b1	c1 e2 13	 shl	 edx, 19			; 00000013H
  008b4	0b c2		 or	 eax, edx
  008b6	33 c8		 xor	 ecx, eax
  008b8	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+8]
  008bb	c1 e8 16	 shr	 eax, 22			; 00000016H
  008be	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  008c1	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  008c4	0b c2		 or	 eax, edx
  008c6	33 c8		 xor	 ecx, eax
  008c8	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+8]
  008cb	23 45 e8	 and	 eax, DWORD PTR _v$[ebp+12]
  008ce	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  008d1	33 55 e8	 xor	 edx, DWORD PTR _v$[ebp+12]
  008d4	23 55 ec	 and	 edx, DWORD PTR _v$[ebp+16]
  008d7	0b c2		 or	 eax, edx
  008d9	03 45 e0	 add	 eax, DWORD PTR _v$[ebp+4]
  008dc	03 c1		 add	 eax, ecx
  008de	89 45 e0	 mov	 DWORD PTR _v$[ebp+4], eax
  008e1	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  008e5	0f 84 88 00 00
	00		 je	 $LN20@sha256_com
  008eb	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  008ee	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  008f1	c1 e9 11	 shr	 ecx, 17			; 00000011H
  008f4	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  008f7	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  008fa	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  008fd	0b c8		 or	 ecx, eax
  008ff	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00902	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00905	c1 e8 13	 shr	 eax, 19			; 00000013H
  00908	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0090b	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  0090e	c1 e2 0d	 shl	 edx, 13			; 0000000dH
  00911	0b c2		 or	 eax, edx
  00913	33 c8		 xor	 ecx, eax
  00915	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00918	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  0091b	c1 ea 0a	 shr	 edx, 10			; 0000000aH
  0091e	33 ca		 xor	 ecx, edx
  00920	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00923	03 08		 add	 ecx, DWORD PTR [eax]
  00925	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00928	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  0092b	c1 e8 07	 shr	 eax, 7
  0092e	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00931	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  00934	c1 e2 19	 shl	 edx, 25			; 00000019H
  00937	0b c2		 or	 eax, edx
  00939	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0093c	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  0093f	c1 ea 12	 shr	 edx, 18			; 00000012H
  00942	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00945	8b 76 20	 mov	 esi, DWORD PTR [esi+32]
  00948	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  0094b	0b d6		 or	 edx, esi
  0094d	33 c2		 xor	 eax, edx
  0094f	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00952	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  00955	c1 ea 03	 shr	 edx, 3
  00958	33 c2		 xor	 eax, edx
  0095a	03 c8		 add	 ecx, eax
  0095c	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0095f	03 48 1c	 add	 ecx, DWORD PTR [eax+28]
  00962	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00965	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  00968	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0096b	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  0096e	89 4d b8	 mov	 DWORD PTR tv843[ebp], ecx
  00971	eb 09		 jmp	 SHORT $LN21@sha256_com
$LN20@sha256_com:
  00973	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00976	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00979	89 45 b8	 mov	 DWORD PTR tv843[ebp], eax
$LN21@sha256_com:
  0097c	8b 4d d8	 mov	 ecx, DWORD PTR _j$[ebp]
  0097f	8b 55 b8	 mov	 edx, DWORD PTR tv843[ebp]
  00982	03 14 8d 1c 00
	00 00		 add	 edx, DWORD PTR _k256[ecx*4+28]
  00989	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  0098c	c1 e8 06	 shr	 eax, 6
  0098f	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  00992	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  00995	0b c1		 or	 eax, ecx
  00997	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  0099a	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  0099d	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  009a0	c1 e6 15	 shl	 esi, 21			; 00000015H
  009a3	0b ce		 or	 ecx, esi
  009a5	33 c1		 xor	 eax, ecx
  009a7	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  009aa	c1 e9 19	 shr	 ecx, 25			; 00000019H
  009ad	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  009b0	c1 e6 07	 shl	 esi, 7
  009b3	0b ce		 or	 ecx, esi
  009b5	33 c1		 xor	 eax, ecx
  009b7	03 d0		 add	 edx, eax
  009b9	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  009bc	33 45 f8	 xor	 eax, DWORD PTR _v$[ebp+28]
  009bf	23 45 f0	 and	 eax, DWORD PTR _v$[ebp+20]
  009c2	33 45 f8	 xor	 eax, DWORD PTR _v$[ebp+28]
  009c5	03 45 dc	 add	 eax, DWORD PTR _v$[ebp]
  009c8	03 c2		 add	 eax, edx
  009ca	89 45 dc	 mov	 DWORD PTR _v$[ebp], eax
  009cd	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+16]
  009d0	03 4d dc	 add	 ecx, DWORD PTR _v$[ebp]
  009d3	89 4d ec	 mov	 DWORD PTR _v$[ebp+16], ecx
  009d6	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  009d9	c1 ea 02	 shr	 edx, 2
  009dc	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  009df	c1 e0 1e	 shl	 eax, 30			; 0000001eH
  009e2	0b d0		 or	 edx, eax
  009e4	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  009e7	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  009ea	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  009ed	c1 e0 13	 shl	 eax, 19			; 00000013H
  009f0	0b c8		 or	 ecx, eax
  009f2	33 d1		 xor	 edx, ecx
  009f4	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  009f7	c1 e9 16	 shr	 ecx, 22			; 00000016H
  009fa	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  009fd	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00a00	0b c8		 or	 ecx, eax
  00a02	33 d1		 xor	 edx, ecx
  00a04	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  00a07	23 4d e4	 and	 ecx, DWORD PTR _v$[ebp+8]
  00a0a	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  00a0d	33 45 e4	 xor	 eax, DWORD PTR _v$[ebp+8]
  00a10	23 45 e8	 and	 eax, DWORD PTR _v$[ebp+12]
  00a13	0b c8		 or	 ecx, eax
  00a15	03 4d dc	 add	 ecx, DWORD PTR _v$[ebp]
  00a18	03 ca		 add	 ecx, edx
  00a1a	89 4d dc	 mov	 DWORD PTR _v$[ebp], ecx

; 203  :         v_cycle( 8, j); v_cycle( 9, j);

  00a1d	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  00a21	0f 84 89 00 00
	00		 je	 $LN22@sha256_com
  00a27	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00a2a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00a2d	c1 ea 11	 shr	 edx, 17			; 00000011H
  00a30	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00a33	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00a36	c1 e1 0f	 shl	 ecx, 15			; 0000000fH
  00a39	0b d1		 or	 edx, ecx
  00a3b	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00a3e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00a41	c1 e9 13	 shr	 ecx, 19			; 00000013H
  00a44	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00a47	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00a4a	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00a4d	0b c8		 or	 ecx, eax
  00a4f	33 d1		 xor	 edx, ecx
  00a51	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00a54	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00a57	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00a5a	33 d0		 xor	 edx, eax
  00a5c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00a5f	03 51 04	 add	 edx, DWORD PTR [ecx+4]
  00a62	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00a65	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00a68	c1 e9 07	 shr	 ecx, 7
  00a6b	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00a6e	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00a71	c1 e0 19	 shl	 eax, 25			; 00000019H
  00a74	0b c8		 or	 ecx, eax
  00a76	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00a79	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00a7c	c1 e8 12	 shr	 eax, 18			; 00000012H
  00a7f	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00a82	8b 76 24	 mov	 esi, DWORD PTR [esi+36]
  00a85	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00a88	0b c6		 or	 eax, esi
  00a8a	33 c8		 xor	 ecx, eax
  00a8c	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00a8f	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00a92	c1 e8 03	 shr	 eax, 3
  00a95	33 c8		 xor	 ecx, eax
  00a97	03 d1		 add	 edx, ecx
  00a99	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00a9c	03 51 20	 add	 edx, DWORD PTR [ecx+32]
  00a9f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00aa2	89 50 20	 mov	 DWORD PTR [eax+32], edx
  00aa5	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00aa8	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00aab	89 55 b4	 mov	 DWORD PTR tv944[ebp], edx
  00aae	eb 09		 jmp	 SHORT $LN23@sha256_com
$LN22@sha256_com:
  00ab0	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00ab3	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00ab6	89 4d b4	 mov	 DWORD PTR tv944[ebp], ecx
$LN23@sha256_com:
  00ab9	8b 55 d8	 mov	 edx, DWORD PTR _j$[ebp]
  00abc	8b 45 b4	 mov	 eax, DWORD PTR tv944[ebp]
  00abf	03 04 95 20 00
	00 00		 add	 eax, DWORD PTR _k256[edx*4+32]
  00ac6	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+16]
  00ac9	c1 e9 06	 shr	 ecx, 6
  00acc	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  00acf	c1 e2 1a	 shl	 edx, 26			; 0000001aH
  00ad2	0b ca		 or	 ecx, edx
  00ad4	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  00ad7	c1 ea 0b	 shr	 edx, 11			; 0000000bH
  00ada	8b 75 ec	 mov	 esi, DWORD PTR _v$[ebp+16]
  00add	c1 e6 15	 shl	 esi, 21			; 00000015H
  00ae0	0b d6		 or	 edx, esi
  00ae2	33 ca		 xor	 ecx, edx
  00ae4	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  00ae7	c1 ea 19	 shr	 edx, 25			; 00000019H
  00aea	8b 75 ec	 mov	 esi, DWORD PTR _v$[ebp+16]
  00aed	c1 e6 07	 shl	 esi, 7
  00af0	0b d6		 or	 edx, esi
  00af2	33 ca		 xor	 ecx, edx
  00af4	03 c1		 add	 eax, ecx
  00af6	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  00af9	33 4d f4	 xor	 ecx, DWORD PTR _v$[ebp+24]
  00afc	23 4d ec	 and	 ecx, DWORD PTR _v$[ebp+16]
  00aff	33 4d f4	 xor	 ecx, DWORD PTR _v$[ebp+24]
  00b02	03 4d f8	 add	 ecx, DWORD PTR _v$[ebp+28]
  00b05	03 c8		 add	 ecx, eax
  00b07	89 4d f8	 mov	 DWORD PTR _v$[ebp+28], ecx
  00b0a	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+12]
  00b0d	03 55 f8	 add	 edx, DWORD PTR _v$[ebp+28]
  00b10	89 55 e8	 mov	 DWORD PTR _v$[ebp+12], edx
  00b13	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  00b16	c1 e8 02	 shr	 eax, 2
  00b19	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  00b1c	c1 e1 1e	 shl	 ecx, 30			; 0000001eH
  00b1f	0b c1		 or	 eax, ecx
  00b21	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00b24	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  00b27	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  00b2a	c1 e1 13	 shl	 ecx, 19			; 00000013H
  00b2d	0b d1		 or	 edx, ecx
  00b2f	33 c2		 xor	 eax, edx
  00b31	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00b34	c1 ea 16	 shr	 edx, 22			; 00000016H
  00b37	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  00b3a	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  00b3d	0b d1		 or	 edx, ecx
  00b3f	33 c2		 xor	 eax, edx
  00b41	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00b44	23 55 e0	 and	 edx, DWORD PTR _v$[ebp+4]
  00b47	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp]
  00b4a	33 4d e0	 xor	 ecx, DWORD PTR _v$[ebp+4]
  00b4d	23 4d e4	 and	 ecx, DWORD PTR _v$[ebp+8]
  00b50	0b d1		 or	 edx, ecx
  00b52	03 55 f8	 add	 edx, DWORD PTR _v$[ebp+28]
  00b55	03 d0		 add	 edx, eax
  00b57	89 55 f8	 mov	 DWORD PTR _v$[ebp+28], edx
  00b5a	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  00b5e	0f 84 89 00 00
	00		 je	 $LN24@sha256_com
  00b64	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00b67	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00b6a	c1 e8 11	 shr	 eax, 17			; 00000011H
  00b6d	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00b70	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00b73	c1 e2 0f	 shl	 edx, 15			; 0000000fH
  00b76	0b c2		 or	 eax, edx
  00b78	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00b7b	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00b7e	c1 ea 13	 shr	 edx, 19			; 00000013H
  00b81	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00b84	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00b87	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  00b8a	0b d1		 or	 edx, ecx
  00b8c	33 c2		 xor	 eax, edx
  00b8e	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00b91	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  00b94	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00b97	33 c1		 xor	 eax, ecx
  00b99	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00b9c	03 42 08	 add	 eax, DWORD PTR [edx+8]
  00b9f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00ba2	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00ba5	c1 ea 07	 shr	 edx, 7
  00ba8	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00bab	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00bae	c1 e1 19	 shl	 ecx, 25			; 00000019H
  00bb1	0b d1		 or	 edx, ecx
  00bb3	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00bb6	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00bb9	c1 e9 12	 shr	 ecx, 18			; 00000012H
  00bbc	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00bbf	8b 76 28	 mov	 esi, DWORD PTR [esi+40]
  00bc2	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00bc5	0b ce		 or	 ecx, esi
  00bc7	33 d1		 xor	 edx, ecx
  00bc9	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00bcc	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00bcf	c1 e9 03	 shr	 ecx, 3
  00bd2	33 d1		 xor	 edx, ecx
  00bd4	03 c2		 add	 eax, edx
  00bd6	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00bd9	03 42 24	 add	 eax, DWORD PTR [edx+36]
  00bdc	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00bdf	89 41 24	 mov	 DWORD PTR [ecx+36], eax
  00be2	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00be5	8b 42 24	 mov	 eax, DWORD PTR [edx+36]
  00be8	89 45 b0	 mov	 DWORD PTR tv1041[ebp], eax
  00beb	eb 09		 jmp	 SHORT $LN25@sha256_com
$LN24@sha256_com:
  00bed	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00bf0	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00bf3	89 55 b0	 mov	 DWORD PTR tv1041[ebp], edx
$LN25@sha256_com:
  00bf6	8b 45 d8	 mov	 eax, DWORD PTR _j$[ebp]
  00bf9	8b 4d b0	 mov	 ecx, DWORD PTR tv1041[ebp]
  00bfc	03 0c 85 24 00
	00 00		 add	 ecx, DWORD PTR _k256[eax*4+36]
  00c03	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+12]
  00c06	c1 ea 06	 shr	 edx, 6
  00c09	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  00c0c	c1 e0 1a	 shl	 eax, 26			; 0000001aH
  00c0f	0b d0		 or	 edx, eax
  00c11	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  00c14	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00c17	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  00c1a	c1 e6 15	 shl	 esi, 21			; 00000015H
  00c1d	0b c6		 or	 eax, esi
  00c1f	33 d0		 xor	 edx, eax
  00c21	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  00c24	c1 e8 19	 shr	 eax, 25			; 00000019H
  00c27	8b 75 e8	 mov	 esi, DWORD PTR _v$[ebp+12]
  00c2a	c1 e6 07	 shl	 esi, 7
  00c2d	0b c6		 or	 eax, esi
  00c2f	33 d0		 xor	 edx, eax
  00c31	03 ca		 add	 ecx, edx
  00c33	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  00c36	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+20]
  00c39	23 55 e8	 and	 edx, DWORD PTR _v$[ebp+12]
  00c3c	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+20]
  00c3f	03 55 f4	 add	 edx, DWORD PTR _v$[ebp+24]
  00c42	03 d1		 add	 edx, ecx
  00c44	89 55 f4	 mov	 DWORD PTR _v$[ebp+24], edx
  00c47	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+8]
  00c4a	03 45 f4	 add	 eax, DWORD PTR _v$[ebp+24]
  00c4d	89 45 e4	 mov	 DWORD PTR _v$[ebp+8], eax
  00c50	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  00c53	c1 e9 02	 shr	 ecx, 2
  00c56	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00c59	c1 e2 1e	 shl	 edx, 30			; 0000001eH
  00c5c	0b ca		 or	 ecx, edx
  00c5e	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  00c61	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  00c64	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00c67	c1 e2 13	 shl	 edx, 19			; 00000013H
  00c6a	0b c2		 or	 eax, edx
  00c6c	33 c8		 xor	 ecx, eax
  00c6e	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  00c71	c1 e8 16	 shr	 eax, 22			; 00000016H
  00c74	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00c77	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  00c7a	0b c2		 or	 eax, edx
  00c7c	33 c8		 xor	 ecx, eax
  00c7e	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  00c81	23 45 dc	 and	 eax, DWORD PTR _v$[ebp]
  00c84	8b 55 f8	 mov	 edx, DWORD PTR _v$[ebp+28]
  00c87	33 55 dc	 xor	 edx, DWORD PTR _v$[ebp]
  00c8a	23 55 e0	 and	 edx, DWORD PTR _v$[ebp+4]
  00c8d	0b c2		 or	 eax, edx
  00c8f	03 45 f4	 add	 eax, DWORD PTR _v$[ebp+24]
  00c92	03 c1		 add	 eax, ecx
  00c94	89 45 f4	 mov	 DWORD PTR _v$[ebp+24], eax

; 204  :         v_cycle(10, j); v_cycle(11, j);

  00c97	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  00c9b	0f 84 89 00 00
	00		 je	 $LN26@sha256_com
  00ca1	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00ca4	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00ca7	c1 e9 11	 shr	 ecx, 17			; 00000011H
  00caa	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00cad	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00cb0	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  00cb3	0b c8		 or	 ecx, eax
  00cb5	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00cb8	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00cbb	c1 e8 13	 shr	 eax, 19			; 00000013H
  00cbe	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00cc1	8b 52 20	 mov	 edx, DWORD PTR [edx+32]
  00cc4	c1 e2 0d	 shl	 edx, 13			; 0000000dH
  00cc7	0b c2		 or	 eax, edx
  00cc9	33 c8		 xor	 ecx, eax
  00ccb	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00cce	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00cd1	c1 ea 0a	 shr	 edx, 10			; 0000000aH
  00cd4	33 ca		 xor	 ecx, edx
  00cd6	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00cd9	03 48 0c	 add	 ecx, DWORD PTR [eax+12]
  00cdc	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00cdf	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  00ce2	c1 e8 07	 shr	 eax, 7
  00ce5	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00ce8	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00ceb	c1 e2 19	 shl	 edx, 25			; 00000019H
  00cee	0b c2		 or	 eax, edx
  00cf0	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00cf3	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00cf6	c1 ea 12	 shr	 edx, 18			; 00000012H
  00cf9	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00cfc	8b 76 2c	 mov	 esi, DWORD PTR [esi+44]
  00cff	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00d02	0b d6		 or	 edx, esi
  00d04	33 c2		 xor	 eax, edx
  00d06	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00d09	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00d0c	c1 ea 03	 shr	 edx, 3
  00d0f	33 c2		 xor	 eax, edx
  00d11	03 c8		 add	 ecx, eax
  00d13	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00d16	03 48 28	 add	 ecx, DWORD PTR [eax+40]
  00d19	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00d1c	89 4a 28	 mov	 DWORD PTR [edx+40], ecx
  00d1f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00d22	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00d25	89 4d ac	 mov	 DWORD PTR tv1144[ebp], ecx
  00d28	eb 09		 jmp	 SHORT $LN27@sha256_com
$LN26@sha256_com:
  00d2a	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00d2d	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00d30	89 45 ac	 mov	 DWORD PTR tv1144[ebp], eax
$LN27@sha256_com:
  00d33	8b 4d d8	 mov	 ecx, DWORD PTR _j$[ebp]
  00d36	8b 55 ac	 mov	 edx, DWORD PTR tv1144[ebp]
  00d39	03 14 8d 28 00
	00 00		 add	 edx, DWORD PTR _k256[ecx*4+40]
  00d40	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+8]
  00d43	c1 e8 06	 shr	 eax, 6
  00d46	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00d49	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  00d4c	0b c1		 or	 eax, ecx
  00d4e	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00d51	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  00d54	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  00d57	c1 e6 15	 shl	 esi, 21			; 00000015H
  00d5a	0b ce		 or	 ecx, esi
  00d5c	33 c1		 xor	 eax, ecx
  00d5e	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00d61	c1 e9 19	 shr	 ecx, 25			; 00000019H
  00d64	8b 75 e4	 mov	 esi, DWORD PTR _v$[ebp+8]
  00d67	c1 e6 07	 shl	 esi, 7
  00d6a	0b ce		 or	 ecx, esi
  00d6c	33 c1		 xor	 eax, ecx
  00d6e	03 d0		 add	 edx, eax
  00d70	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  00d73	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+16]
  00d76	23 45 e4	 and	 eax, DWORD PTR _v$[ebp+8]
  00d79	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+16]
  00d7c	03 45 f0	 add	 eax, DWORD PTR _v$[ebp+20]
  00d7f	03 c2		 add	 eax, edx
  00d81	89 45 f0	 mov	 DWORD PTR _v$[ebp+20], eax
  00d84	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  00d87	03 4d f0	 add	 ecx, DWORD PTR _v$[ebp+20]
  00d8a	89 4d e0	 mov	 DWORD PTR _v$[ebp+4], ecx
  00d8d	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  00d90	c1 ea 02	 shr	 edx, 2
  00d93	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00d96	c1 e0 1e	 shl	 eax, 30			; 0000001eH
  00d99	0b d0		 or	 edx, eax
  00d9b	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  00d9e	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  00da1	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00da4	c1 e0 13	 shl	 eax, 19			; 00000013H
  00da7	0b c8		 or	 ecx, eax
  00da9	33 d1		 xor	 edx, ecx
  00dab	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  00dae	c1 e9 16	 shr	 ecx, 22			; 00000016H
  00db1	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00db4	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00db7	0b c8		 or	 ecx, eax
  00db9	33 d1		 xor	 edx, ecx
  00dbb	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  00dbe	23 4d f8	 and	 ecx, DWORD PTR _v$[ebp+28]
  00dc1	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+24]
  00dc4	33 45 f8	 xor	 eax, DWORD PTR _v$[ebp+28]
  00dc7	23 45 dc	 and	 eax, DWORD PTR _v$[ebp]
  00dca	0b c8		 or	 ecx, eax
  00dcc	03 4d f0	 add	 ecx, DWORD PTR _v$[ebp+20]
  00dcf	03 ca		 add	 ecx, edx
  00dd1	89 4d f0	 mov	 DWORD PTR _v$[ebp+20], ecx
  00dd4	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  00dd8	0f 84 89 00 00
	00		 je	 $LN28@sha256_com
  00dde	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00de1	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00de4	c1 ea 11	 shr	 edx, 17			; 00000011H
  00de7	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00dea	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00ded	c1 e1 0f	 shl	 ecx, 15			; 0000000fH
  00df0	0b d1		 or	 edx, ecx
  00df2	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00df5	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00df8	c1 e9 13	 shr	 ecx, 19			; 00000013H
  00dfb	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00dfe	8b 40 24	 mov	 eax, DWORD PTR [eax+36]
  00e01	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  00e04	0b c8		 or	 ecx, eax
  00e06	33 d1		 xor	 edx, ecx
  00e08	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00e0b	8b 41 24	 mov	 eax, DWORD PTR [ecx+36]
  00e0e	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  00e11	33 d0		 xor	 edx, eax
  00e13	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00e16	03 51 10	 add	 edx, DWORD PTR [ecx+16]
  00e19	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e1c	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00e1f	c1 e9 07	 shr	 ecx, 7
  00e22	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e25	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00e28	c1 e0 19	 shl	 eax, 25			; 00000019H
  00e2b	0b c8		 or	 ecx, eax
  00e2d	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e30	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00e33	c1 e8 12	 shr	 eax, 18			; 00000012H
  00e36	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00e39	8b 76 30	 mov	 esi, DWORD PTR [esi+48]
  00e3c	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00e3f	0b c6		 or	 eax, esi
  00e41	33 c8		 xor	 ecx, eax
  00e43	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e46	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  00e49	c1 e8 03	 shr	 eax, 3
  00e4c	33 c8		 xor	 ecx, eax
  00e4e	03 d1		 add	 edx, ecx
  00e50	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00e53	03 51 2c	 add	 edx, DWORD PTR [ecx+44]
  00e56	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e59	89 50 2c	 mov	 DWORD PTR [eax+44], edx
  00e5c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00e5f	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00e62	89 55 a8	 mov	 DWORD PTR tv1248[ebp], edx
  00e65	eb 09		 jmp	 SHORT $LN29@sha256_com
$LN28@sha256_com:
  00e67	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e6a	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  00e6d	89 4d a8	 mov	 DWORD PTR tv1248[ebp], ecx
$LN29@sha256_com:
  00e70	8b 55 d8	 mov	 edx, DWORD PTR _j$[ebp]
  00e73	8b 45 a8	 mov	 eax, DWORD PTR tv1248[ebp]
  00e76	03 04 95 2c 00
	00 00		 add	 eax, DWORD PTR _k256[edx*4+44]
  00e7d	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  00e80	c1 e9 06	 shr	 ecx, 6
  00e83	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00e86	c1 e2 1a	 shl	 edx, 26			; 0000001aH
  00e89	0b ca		 or	 ecx, edx
  00e8b	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00e8e	c1 ea 0b	 shr	 edx, 11			; 0000000bH
  00e91	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  00e94	c1 e6 15	 shl	 esi, 21			; 00000015H
  00e97	0b d6		 or	 edx, esi
  00e99	33 ca		 xor	 ecx, edx
  00e9b	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00e9e	c1 ea 19	 shr	 edx, 25			; 00000019H
  00ea1	8b 75 e0	 mov	 esi, DWORD PTR _v$[ebp+4]
  00ea4	c1 e6 07	 shl	 esi, 7
  00ea7	0b d6		 or	 edx, esi
  00ea9	33 ca		 xor	 ecx, edx
  00eab	03 c1		 add	 eax, ecx
  00ead	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00eb0	33 4d e8	 xor	 ecx, DWORD PTR _v$[ebp+12]
  00eb3	23 4d e0	 and	 ecx, DWORD PTR _v$[ebp+4]
  00eb6	33 4d e8	 xor	 ecx, DWORD PTR _v$[ebp+12]
  00eb9	03 4d ec	 add	 ecx, DWORD PTR _v$[ebp+16]
  00ebc	03 c8		 add	 ecx, eax
  00ebe	89 4d ec	 mov	 DWORD PTR _v$[ebp+16], ecx
  00ec1	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00ec4	03 55 ec	 add	 edx, DWORD PTR _v$[ebp+16]
  00ec7	89 55 dc	 mov	 DWORD PTR _v$[ebp], edx
  00eca	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  00ecd	c1 e8 02	 shr	 eax, 2
  00ed0	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  00ed3	c1 e1 1e	 shl	 ecx, 30			; 0000001eH
  00ed6	0b c1		 or	 eax, ecx
  00ed8	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  00edb	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  00ede	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  00ee1	c1 e1 13	 shl	 ecx, 19			; 00000013H
  00ee4	0b d1		 or	 edx, ecx
  00ee6	33 c2		 xor	 eax, edx
  00ee8	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  00eeb	c1 ea 16	 shr	 edx, 22			; 00000016H
  00eee	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  00ef1	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  00ef4	0b d1		 or	 edx, ecx
  00ef6	33 c2		 xor	 eax, edx
  00ef8	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  00efb	23 55 f4	 and	 edx, DWORD PTR _v$[ebp+24]
  00efe	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+20]
  00f01	33 4d f4	 xor	 ecx, DWORD PTR _v$[ebp+24]
  00f04	23 4d f8	 and	 ecx, DWORD PTR _v$[ebp+28]
  00f07	0b d1		 or	 edx, ecx
  00f09	03 55 ec	 add	 edx, DWORD PTR _v$[ebp+16]
  00f0c	03 d0		 add	 edx, eax
  00f0e	89 55 ec	 mov	 DWORD PTR _v$[ebp+16], edx

; 205  :         v_cycle(12, j); v_cycle(13, j);

  00f11	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  00f15	0f 84 89 00 00
	00		 je	 $LN30@sha256_com
  00f1b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00f1e	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00f21	c1 e8 11	 shr	 eax, 17			; 00000011H
  00f24	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f27	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00f2a	c1 e2 0f	 shl	 edx, 15			; 0000000fH
  00f2d	0b c2		 or	 eax, edx
  00f2f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f32	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  00f35	c1 ea 13	 shr	 edx, 19			; 00000013H
  00f38	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f3b	8b 49 28	 mov	 ecx, DWORD PTR [ecx+40]
  00f3e	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  00f41	0b d1		 or	 edx, ecx
  00f43	33 c2		 xor	 eax, edx
  00f45	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00f48	8b 4a 28	 mov	 ecx, DWORD PTR [edx+40]
  00f4b	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  00f4e	33 c1		 xor	 eax, ecx
  00f50	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00f53	03 42 14	 add	 eax, DWORD PTR [edx+20]
  00f56	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f59	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  00f5c	c1 ea 07	 shr	 edx, 7
  00f5f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f62	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  00f65	c1 e1 19	 shl	 ecx, 25			; 00000019H
  00f68	0b d1		 or	 edx, ecx
  00f6a	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f6d	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  00f70	c1 e9 12	 shr	 ecx, 18			; 00000012H
  00f73	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  00f76	8b 76 34	 mov	 esi, DWORD PTR [esi+52]
  00f79	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00f7c	0b ce		 or	 ecx, esi
  00f7e	33 d1		 xor	 edx, ecx
  00f80	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f83	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  00f86	c1 e9 03	 shr	 ecx, 3
  00f89	33 d1		 xor	 edx, ecx
  00f8b	03 c2		 add	 eax, edx
  00f8d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00f90	03 42 30	 add	 eax, DWORD PTR [edx+48]
  00f93	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00f96	89 41 30	 mov	 DWORD PTR [ecx+48], eax
  00f99	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00f9c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  00f9f	89 45 a4	 mov	 DWORD PTR tv1351[ebp], eax
  00fa2	eb 09		 jmp	 SHORT $LN31@sha256_com
$LN30@sha256_com:
  00fa4	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00fa7	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  00faa	89 55 a4	 mov	 DWORD PTR tv1351[ebp], edx
$LN31@sha256_com:
  00fad	8b 45 d8	 mov	 eax, DWORD PTR _j$[ebp]
  00fb0	8b 4d a4	 mov	 ecx, DWORD PTR tv1351[ebp]
  00fb3	03 0c 85 30 00
	00 00		 add	 ecx, DWORD PTR _k256[eax*4+48]
  00fba	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp]
  00fbd	c1 ea 06	 shr	 edx, 6
  00fc0	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  00fc3	c1 e0 1a	 shl	 eax, 26			; 0000001aH
  00fc6	0b d0		 or	 edx, eax
  00fc8	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  00fcb	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  00fce	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  00fd1	c1 e6 15	 shl	 esi, 21			; 00000015H
  00fd4	0b c6		 or	 eax, esi
  00fd6	33 d0		 xor	 edx, eax
  00fd8	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  00fdb	c1 e8 19	 shr	 eax, 25			; 00000019H
  00fde	8b 75 dc	 mov	 esi, DWORD PTR _v$[ebp]
  00fe1	c1 e6 07	 shl	 esi, 7
  00fe4	0b c6		 or	 eax, esi
  00fe6	33 d0		 xor	 edx, eax
  00fe8	03 ca		 add	 ecx, edx
  00fea	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  00fed	33 55 e4	 xor	 edx, DWORD PTR _v$[ebp+8]
  00ff0	23 55 dc	 and	 edx, DWORD PTR _v$[ebp]
  00ff3	33 55 e4	 xor	 edx, DWORD PTR _v$[ebp+8]
  00ff6	03 55 e8	 add	 edx, DWORD PTR _v$[ebp+12]
  00ff9	03 d1		 add	 edx, ecx
  00ffb	89 55 e8	 mov	 DWORD PTR _v$[ebp+12], edx
  00ffe	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  01001	03 45 e8	 add	 eax, DWORD PTR _v$[ebp+12]
  01004	89 45 f8	 mov	 DWORD PTR _v$[ebp+28], eax
  01007	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+16]
  0100a	c1 e9 02	 shr	 ecx, 2
  0100d	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  01010	c1 e2 1e	 shl	 edx, 30			; 0000001eH
  01013	0b ca		 or	 ecx, edx
  01015	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  01018	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  0101b	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  0101e	c1 e2 13	 shl	 edx, 19			; 00000013H
  01021	0b c2		 or	 eax, edx
  01023	33 c8		 xor	 ecx, eax
  01025	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  01028	c1 e8 16	 shr	 eax, 22			; 00000016H
  0102b	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  0102e	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  01031	0b c2		 or	 eax, edx
  01033	33 c8		 xor	 ecx, eax
  01035	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  01038	23 45 f0	 and	 eax, DWORD PTR _v$[ebp+20]
  0103b	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+16]
  0103e	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+20]
  01041	23 55 f4	 and	 edx, DWORD PTR _v$[ebp+24]
  01044	0b c2		 or	 eax, edx
  01046	03 45 e8	 add	 eax, DWORD PTR _v$[ebp+12]
  01049	03 c1		 add	 eax, ecx
  0104b	89 45 e8	 mov	 DWORD PTR _v$[ebp+12], eax
  0104e	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  01052	0f 84 89 00 00
	00		 je	 $LN32@sha256_com
  01058	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0105b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0105e	c1 e9 11	 shr	 ecx, 17			; 00000011H
  01061	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01064	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  01067	c1 e0 0f	 shl	 eax, 15			; 0000000fH
  0106a	0b c8		 or	 ecx, eax
  0106c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0106f	8b 42 2c	 mov	 eax, DWORD PTR [edx+44]
  01072	c1 e8 13	 shr	 eax, 19			; 00000013H
  01075	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01078	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  0107b	c1 e2 0d	 shl	 edx, 13			; 0000000dH
  0107e	0b c2		 or	 eax, edx
  01080	33 c8		 xor	 ecx, eax
  01082	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01085	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  01088	c1 ea 0a	 shr	 edx, 10			; 0000000aH
  0108b	33 ca		 xor	 ecx, edx
  0108d	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01090	03 48 18	 add	 ecx, DWORD PTR [eax+24]
  01093	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01096	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  01099	c1 e8 07	 shr	 eax, 7
  0109c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0109f	8b 52 38	 mov	 edx, DWORD PTR [edx+56]
  010a2	c1 e2 19	 shl	 edx, 25			; 00000019H
  010a5	0b c2		 or	 eax, edx
  010a7	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  010aa	8b 52 38	 mov	 edx, DWORD PTR [edx+56]
  010ad	c1 ea 12	 shr	 edx, 18			; 00000012H
  010b0	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  010b3	8b 76 38	 mov	 esi, DWORD PTR [esi+56]
  010b6	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  010b9	0b d6		 or	 edx, esi
  010bb	33 c2		 xor	 eax, edx
  010bd	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  010c0	8b 52 38	 mov	 edx, DWORD PTR [edx+56]
  010c3	c1 ea 03	 shr	 edx, 3
  010c6	33 c2		 xor	 eax, edx
  010c8	03 c8		 add	 ecx, eax
  010ca	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  010cd	03 48 34	 add	 ecx, DWORD PTR [eax+52]
  010d0	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  010d3	89 4a 34	 mov	 DWORD PTR [edx+52], ecx
  010d6	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  010d9	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  010dc	89 4d a0	 mov	 DWORD PTR tv1449[ebp], ecx
  010df	eb 09		 jmp	 SHORT $LN33@sha256_com
$LN32@sha256_com:
  010e1	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  010e4	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  010e7	89 45 a0	 mov	 DWORD PTR tv1449[ebp], eax
$LN33@sha256_com:
  010ea	8b 4d d8	 mov	 ecx, DWORD PTR _j$[ebp]
  010ed	8b 55 a0	 mov	 edx, DWORD PTR tv1449[ebp]
  010f0	03 14 8d 34 00
	00 00		 add	 edx, DWORD PTR _k256[ecx*4+52]
  010f7	8b 45 f8	 mov	 eax, DWORD PTR _v$[ebp+28]
  010fa	c1 e8 06	 shr	 eax, 6
  010fd	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  01100	c1 e1 1a	 shl	 ecx, 26			; 0000001aH
  01103	0b c1		 or	 eax, ecx
  01105	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  01108	c1 e9 0b	 shr	 ecx, 11			; 0000000bH
  0110b	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+28]
  0110e	c1 e6 15	 shl	 esi, 21			; 00000015H
  01111	0b ce		 or	 ecx, esi
  01113	33 c1		 xor	 eax, ecx
  01115	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  01118	c1 e9 19	 shr	 ecx, 25			; 00000019H
  0111b	8b 75 f8	 mov	 esi, DWORD PTR _v$[ebp+28]
  0111e	c1 e6 07	 shl	 esi, 7
  01121	0b ce		 or	 ecx, esi
  01123	33 c1		 xor	 eax, ecx
  01125	03 d0		 add	 edx, eax
  01127	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp]
  0112a	33 45 e0	 xor	 eax, DWORD PTR _v$[ebp+4]
  0112d	23 45 f8	 and	 eax, DWORD PTR _v$[ebp+28]
  01130	33 45 e0	 xor	 eax, DWORD PTR _v$[ebp+4]
  01133	03 45 e4	 add	 eax, DWORD PTR _v$[ebp+8]
  01136	03 c2		 add	 eax, edx
  01138	89 45 e4	 mov	 DWORD PTR _v$[ebp+8], eax
  0113b	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  0113e	03 4d e4	 add	 ecx, DWORD PTR _v$[ebp+8]
  01141	89 4d f4	 mov	 DWORD PTR _v$[ebp+24], ecx
  01144	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+12]
  01147	c1 ea 02	 shr	 edx, 2
  0114a	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  0114d	c1 e0 1e	 shl	 eax, 30			; 0000001eH
  01150	0b d0		 or	 edx, eax
  01152	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  01155	c1 e9 0d	 shr	 ecx, 13			; 0000000dH
  01158	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  0115b	c1 e0 13	 shl	 eax, 19			; 00000013H
  0115e	0b c8		 or	 ecx, eax
  01160	33 d1		 xor	 edx, ecx
  01162	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  01165	c1 e9 16	 shr	 ecx, 22			; 00000016H
  01168	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  0116b	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  0116e	0b c8		 or	 ecx, eax
  01170	33 d1		 xor	 edx, ecx
  01172	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+12]
  01175	23 4d ec	 and	 ecx, DWORD PTR _v$[ebp+16]
  01178	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+12]
  0117b	33 45 ec	 xor	 eax, DWORD PTR _v$[ebp+16]
  0117e	23 45 f0	 and	 eax, DWORD PTR _v$[ebp+20]
  01181	0b c8		 or	 ecx, eax
  01183	03 4d e4	 add	 ecx, DWORD PTR _v$[ebp+8]
  01186	03 ca		 add	 ecx, edx
  01188	89 4d e4	 mov	 DWORD PTR _v$[ebp+8], ecx

; 206  :         v_cycle(14, j); v_cycle(15, j);

  0118b	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  0118f	0f 84 89 00 00
	00		 je	 $LN34@sha256_com
  01195	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01198	8b 51 30	 mov	 edx, DWORD PTR [ecx+48]
  0119b	c1 ea 11	 shr	 edx, 17			; 00000011H
  0119e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  011a1	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  011a4	c1 e1 0f	 shl	 ecx, 15			; 0000000fH
  011a7	0b d1		 or	 edx, ecx
  011a9	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  011ac	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  011af	c1 e9 13	 shr	 ecx, 19			; 00000013H
  011b2	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  011b5	8b 40 30	 mov	 eax, DWORD PTR [eax+48]
  011b8	c1 e0 0d	 shl	 eax, 13			; 0000000dH
  011bb	0b c8		 or	 ecx, eax
  011bd	33 d1		 xor	 edx, ecx
  011bf	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  011c2	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  011c5	c1 e8 0a	 shr	 eax, 10			; 0000000aH
  011c8	33 d0		 xor	 edx, eax
  011ca	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  011cd	03 51 1c	 add	 edx, DWORD PTR [ecx+28]
  011d0	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  011d3	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  011d6	c1 e9 07	 shr	 ecx, 7
  011d9	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  011dc	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  011df	c1 e0 19	 shl	 eax, 25			; 00000019H
  011e2	0b c8		 or	 ecx, eax
  011e4	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  011e7	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  011ea	c1 e8 12	 shr	 eax, 18			; 00000012H
  011ed	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  011f0	8b 76 3c	 mov	 esi, DWORD PTR [esi+60]
  011f3	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  011f6	0b c6		 or	 eax, esi
  011f8	33 c8		 xor	 ecx, eax
  011fa	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  011fd	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  01200	c1 e8 03	 shr	 eax, 3
  01203	33 c8		 xor	 ecx, eax
  01205	03 d1		 add	 edx, ecx
  01207	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0120a	03 51 38	 add	 edx, DWORD PTR [ecx+56]
  0120d	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01210	89 50 38	 mov	 DWORD PTR [eax+56], edx
  01213	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01216	8b 51 38	 mov	 edx, DWORD PTR [ecx+56]
  01219	89 55 9c	 mov	 DWORD PTR tv1553[ebp], edx
  0121c	eb 09		 jmp	 SHORT $LN35@sha256_com
$LN34@sha256_com:
  0121e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01221	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  01224	89 4d 9c	 mov	 DWORD PTR tv1553[ebp], ecx
$LN35@sha256_com:
  01227	8b 55 d8	 mov	 edx, DWORD PTR _j$[ebp]
  0122a	8b 45 9c	 mov	 eax, DWORD PTR tv1553[ebp]
  0122d	03 04 95 38 00
	00 00		 add	 eax, DWORD PTR _k256[edx*4+56]
  01234	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+24]
  01237	c1 e9 06	 shr	 ecx, 6
  0123a	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  0123d	c1 e2 1a	 shl	 edx, 26			; 0000001aH
  01240	0b ca		 or	 ecx, edx
  01242	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  01245	c1 ea 0b	 shr	 edx, 11			; 0000000bH
  01248	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+24]
  0124b	c1 e6 15	 shl	 esi, 21			; 00000015H
  0124e	0b d6		 or	 edx, esi
  01250	33 ca		 xor	 ecx, edx
  01252	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  01255	c1 ea 19	 shr	 edx, 25			; 00000019H
  01258	8b 75 f4	 mov	 esi, DWORD PTR _v$[ebp+24]
  0125b	c1 e6 07	 shl	 esi, 7
  0125e	0b d6		 or	 edx, esi
  01260	33 ca		 xor	 ecx, edx
  01262	03 c1		 add	 eax, ecx
  01264	8b 4d f8	 mov	 ecx, DWORD PTR _v$[ebp+28]
  01267	33 4d dc	 xor	 ecx, DWORD PTR _v$[ebp]
  0126a	23 4d f4	 and	 ecx, DWORD PTR _v$[ebp+24]
  0126d	33 4d dc	 xor	 ecx, DWORD PTR _v$[ebp]
  01270	03 4d e0	 add	 ecx, DWORD PTR _v$[ebp+4]
  01273	03 c8		 add	 ecx, eax
  01275	89 4d e0	 mov	 DWORD PTR _v$[ebp+4], ecx
  01278	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0127b	03 55 e0	 add	 edx, DWORD PTR _v$[ebp+4]
  0127e	89 55 f0	 mov	 DWORD PTR _v$[ebp+20], edx
  01281	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+8]
  01284	c1 e8 02	 shr	 eax, 2
  01287	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  0128a	c1 e1 1e	 shl	 ecx, 30			; 0000001eH
  0128d	0b c1		 or	 eax, ecx
  0128f	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  01292	c1 ea 0d	 shr	 edx, 13			; 0000000dH
  01295	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  01298	c1 e1 13	 shl	 ecx, 19			; 00000013H
  0129b	0b d1		 or	 edx, ecx
  0129d	33 c2		 xor	 eax, edx
  0129f	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  012a2	c1 ea 16	 shr	 edx, 22			; 00000016H
  012a5	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  012a8	c1 e1 0a	 shl	 ecx, 10			; 0000000aH
  012ab	0b d1		 or	 edx, ecx
  012ad	33 c2		 xor	 eax, edx
  012af	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+8]
  012b2	23 55 e8	 and	 edx, DWORD PTR _v$[ebp+12]
  012b5	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+8]
  012b8	33 4d e8	 xor	 ecx, DWORD PTR _v$[ebp+12]
  012bb	23 4d ec	 and	 ecx, DWORD PTR _v$[ebp+16]
  012be	0b d1		 or	 edx, ecx
  012c0	03 55 e0	 add	 edx, DWORD PTR _v$[ebp+4]
  012c3	03 d0		 add	 edx, eax
  012c5	89 55 e0	 mov	 DWORD PTR _v$[ebp+4], edx
  012c8	83 7d d8 00	 cmp	 DWORD PTR _j$[ebp], 0
  012cc	0f 84 84 00 00
	00		 je	 $LN36@sha256_com
  012d2	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  012d5	8b 42 34	 mov	 eax, DWORD PTR [edx+52]
  012d8	c1 e8 11	 shr	 eax, 17			; 00000011H
  012db	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  012de	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  012e1	c1 e2 0f	 shl	 edx, 15			; 0000000fH
  012e4	0b c2		 or	 eax, edx
  012e6	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  012e9	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  012ec	c1 ea 13	 shr	 edx, 19			; 00000013H
  012ef	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  012f2	8b 49 34	 mov	 ecx, DWORD PTR [ecx+52]
  012f5	c1 e1 0d	 shl	 ecx, 13			; 0000000dH
  012f8	0b d1		 or	 edx, ecx
  012fa	33 c2		 xor	 eax, edx
  012fc	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  012ff	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  01302	c1 e9 0a	 shr	 ecx, 10			; 0000000aH
  01305	33 c1		 xor	 eax, ecx
  01307	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0130a	03 42 20	 add	 eax, DWORD PTR [edx+32]
  0130d	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01310	8b 11		 mov	 edx, DWORD PTR [ecx]
  01312	c1 ea 07	 shr	 edx, 7
  01315	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01318	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0131a	c1 e1 19	 shl	 ecx, 25			; 00000019H
  0131d	0b d1		 or	 edx, ecx
  0131f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01322	8b 09		 mov	 ecx, DWORD PTR [ecx]
  01324	c1 e9 12	 shr	 ecx, 18			; 00000012H
  01327	8b 75 fc	 mov	 esi, DWORD PTR _p$[ebp]
  0132a	8b 36		 mov	 esi, DWORD PTR [esi]
  0132c	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  0132f	0b ce		 or	 ecx, esi
  01331	33 d1		 xor	 edx, ecx
  01333	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01336	8b 09		 mov	 ecx, DWORD PTR [ecx]
  01338	c1 e9 03	 shr	 ecx, 3
  0133b	33 d1		 xor	 edx, ecx
  0133d	03 c2		 add	 eax, edx
  0133f	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01342	03 42 3c	 add	 eax, DWORD PTR [edx+60]
  01345	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01348	89 41 3c	 mov	 DWORD PTR [ecx+60], eax
  0134b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0134e	8b 42 3c	 mov	 eax, DWORD PTR [edx+60]
  01351	89 45 98	 mov	 DWORD PTR tv1650[ebp], eax
  01354	eb 09		 jmp	 SHORT $LN37@sha256_com
$LN36@sha256_com:
  01356	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01359	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0135c	89 55 98	 mov	 DWORD PTR tv1650[ebp], edx
$LN37@sha256_com:
  0135f	8b 45 d8	 mov	 eax, DWORD PTR _j$[ebp]
  01362	8b 4d 98	 mov	 ecx, DWORD PTR tv1650[ebp]
  01365	03 0c 85 3c 00
	00 00		 add	 ecx, DWORD PTR _k256[eax*4+60]
  0136c	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+20]
  0136f	c1 ea 06	 shr	 edx, 6
  01372	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  01375	c1 e0 1a	 shl	 eax, 26			; 0000001aH
  01378	0b d0		 or	 edx, eax
  0137a	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  0137d	c1 e8 0b	 shr	 eax, 11			; 0000000bH
  01380	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  01383	c1 e6 15	 shl	 esi, 21			; 00000015H
  01386	0b c6		 or	 eax, esi
  01388	33 d0		 xor	 edx, eax
  0138a	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+20]
  0138d	c1 e8 19	 shr	 eax, 25			; 00000019H
  01390	8b 75 f0	 mov	 esi, DWORD PTR _v$[ebp+20]
  01393	c1 e6 07	 shl	 esi, 7
  01396	0b c6		 or	 eax, esi
  01398	33 d0		 xor	 edx, eax
  0139a	03 ca		 add	 ecx, edx
  0139c	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+24]
  0139f	33 55 f8	 xor	 edx, DWORD PTR _v$[ebp+28]
  013a2	23 55 f0	 and	 edx, DWORD PTR _v$[ebp+20]
  013a5	33 55 f8	 xor	 edx, DWORD PTR _v$[ebp+28]
  013a8	03 55 dc	 add	 edx, DWORD PTR _v$[ebp]
  013ab	03 d1		 add	 edx, ecx
  013ad	89 55 dc	 mov	 DWORD PTR _v$[ebp], edx
  013b0	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+16]
  013b3	03 45 dc	 add	 eax, DWORD PTR _v$[ebp]
  013b6	89 45 ec	 mov	 DWORD PTR _v$[ebp+16], eax
  013b9	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+4]
  013bc	c1 e9 02	 shr	 ecx, 2
  013bf	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  013c2	c1 e2 1e	 shl	 edx, 30			; 0000001eH
  013c5	0b ca		 or	 ecx, edx
  013c7	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  013ca	c1 e8 0d	 shr	 eax, 13			; 0000000dH
  013cd	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  013d0	c1 e2 13	 shl	 edx, 19			; 00000013H
  013d3	0b c2		 or	 eax, edx
  013d5	33 c8		 xor	 ecx, eax
  013d7	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  013da	c1 e8 16	 shr	 eax, 22			; 00000016H
  013dd	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  013e0	c1 e2 0a	 shl	 edx, 10			; 0000000aH
  013e3	0b c2		 or	 eax, edx
  013e5	33 c8		 xor	 ecx, eax
  013e7	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+4]
  013ea	23 45 e4	 and	 eax, DWORD PTR _v$[ebp+8]
  013ed	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+4]
  013f0	33 55 e4	 xor	 edx, DWORD PTR _v$[ebp+8]
  013f3	23 55 e8	 and	 edx, DWORD PTR _v$[ebp+12]
  013f6	0b c2		 or	 eax, edx
  013f8	03 45 dc	 add	 eax, DWORD PTR _v$[ebp]
  013fb	03 c1		 add	 eax, ecx
  013fd	89 45 dc	 mov	 DWORD PTR _v$[ebp], eax

; 207  :     }

  01400	e9 27 ec ff ff	 jmp	 $LN2@sha256_com
$LN1@sha256_com:

; 208  : 
; 209  :     ctx->hash[0] += v[0]; ctx->hash[1] += v[1];

  01405	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01408	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0140b	03 4d dc	 add	 ecx, DWORD PTR _v$[ebp]
  0140e	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  01411	89 4a 08	 mov	 DWORD PTR [edx+8], ecx
  01414	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01417	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0141a	03 4d e0	 add	 ecx, DWORD PTR _v$[ebp+4]
  0141d	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  01420	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx

; 210  :     ctx->hash[2] += v[2]; ctx->hash[3] += v[3];

  01423	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01426	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  01429	03 4d e4	 add	 ecx, DWORD PTR _v$[ebp+8]
  0142c	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0142f	89 4a 10	 mov	 DWORD PTR [edx+16], ecx
  01432	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01435	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  01438	03 4d e8	 add	 ecx, DWORD PTR _v$[ebp+12]
  0143b	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0143e	89 4a 14	 mov	 DWORD PTR [edx+20], ecx

; 211  :     ctx->hash[4] += v[4]; ctx->hash[5] += v[5];

  01441	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01444	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  01447	03 4d ec	 add	 ecx, DWORD PTR _v$[ebp+16]
  0144a	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0144d	89 4a 18	 mov	 DWORD PTR [edx+24], ecx
  01450	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01453	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  01456	03 4d f0	 add	 ecx, DWORD PTR _v$[ebp+20]
  01459	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0145c	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 212  :     ctx->hash[6] += v[6]; ctx->hash[7] += v[7];

  0145f	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01462	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  01465	03 4d f4	 add	 ecx, DWORD PTR _v$[ebp+24]
  01468	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0146b	89 4a 20	 mov	 DWORD PTR [edx+32], ecx
  0146e	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  01471	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  01474	03 4d f8	 add	 ecx, DWORD PTR _v$[ebp+28]
  01477	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0147a	89 4a 24	 mov	 DWORD PTR [edx+36], ecx

; 213  : 
; 214  : #else
; 215  : 
; 216  :     uint_32t *p = ctx->wbuf,v0,v1,v2,v3,v4,v5,v6,v7;
; 217  : 
; 218  :     v0 = ctx->hash[0]; v1 = ctx->hash[1];
; 219  :     v2 = ctx->hash[2]; v3 = ctx->hash[3];
; 220  :     v4 = ctx->hash[4]; v5 = ctx->hash[5];
; 221  :     v6 = ctx->hash[6]; v7 = ctx->hash[7];
; 222  : 
; 223  :     one_cycle(0,1,2,3,4,5,6,7,k256[ 0],p[ 0]);
; 224  :     one_cycle(7,0,1,2,3,4,5,6,k256[ 1],p[ 1]);
; 225  :     one_cycle(6,7,0,1,2,3,4,5,k256[ 2],p[ 2]);
; 226  :     one_cycle(5,6,7,0,1,2,3,4,k256[ 3],p[ 3]);
; 227  :     one_cycle(4,5,6,7,0,1,2,3,k256[ 4],p[ 4]);
; 228  :     one_cycle(3,4,5,6,7,0,1,2,k256[ 5],p[ 5]);
; 229  :     one_cycle(2,3,4,5,6,7,0,1,k256[ 6],p[ 6]);
; 230  :     one_cycle(1,2,3,4,5,6,7,0,k256[ 7],p[ 7]);
; 231  :     one_cycle(0,1,2,3,4,5,6,7,k256[ 8],p[ 8]);
; 232  :     one_cycle(7,0,1,2,3,4,5,6,k256[ 9],p[ 9]);
; 233  :     one_cycle(6,7,0,1,2,3,4,5,k256[10],p[10]);
; 234  :     one_cycle(5,6,7,0,1,2,3,4,k256[11],p[11]);
; 235  :     one_cycle(4,5,6,7,0,1,2,3,k256[12],p[12]);
; 236  :     one_cycle(3,4,5,6,7,0,1,2,k256[13],p[13]);
; 237  :     one_cycle(2,3,4,5,6,7,0,1,k256[14],p[14]);
; 238  :     one_cycle(1,2,3,4,5,6,7,0,k256[15],p[15]);
; 239  : 
; 240  :     one_cycle(0,1,2,3,4,5,6,7,k256[16],hf( 0));
; 241  :     one_cycle(7,0,1,2,3,4,5,6,k256[17],hf( 1));
; 242  :     one_cycle(6,7,0,1,2,3,4,5,k256[18],hf( 2));
; 243  :     one_cycle(5,6,7,0,1,2,3,4,k256[19],hf( 3));
; 244  :     one_cycle(4,5,6,7,0,1,2,3,k256[20],hf( 4));
; 245  :     one_cycle(3,4,5,6,7,0,1,2,k256[21],hf( 5));
; 246  :     one_cycle(2,3,4,5,6,7,0,1,k256[22],hf( 6));
; 247  :     one_cycle(1,2,3,4,5,6,7,0,k256[23],hf( 7));
; 248  :     one_cycle(0,1,2,3,4,5,6,7,k256[24],hf( 8));
; 249  :     one_cycle(7,0,1,2,3,4,5,6,k256[25],hf( 9));
; 250  :     one_cycle(6,7,0,1,2,3,4,5,k256[26],hf(10));
; 251  :     one_cycle(5,6,7,0,1,2,3,4,k256[27],hf(11));
; 252  :     one_cycle(4,5,6,7,0,1,2,3,k256[28],hf(12));
; 253  :     one_cycle(3,4,5,6,7,0,1,2,k256[29],hf(13));
; 254  :     one_cycle(2,3,4,5,6,7,0,1,k256[30],hf(14));
; 255  :     one_cycle(1,2,3,4,5,6,7,0,k256[31],hf(15));
; 256  : 
; 257  :     one_cycle(0,1,2,3,4,5,6,7,k256[32],hf( 0));
; 258  :     one_cycle(7,0,1,2,3,4,5,6,k256[33],hf( 1));
; 259  :     one_cycle(6,7,0,1,2,3,4,5,k256[34],hf( 2));
; 260  :     one_cycle(5,6,7,0,1,2,3,4,k256[35],hf( 3));
; 261  :     one_cycle(4,5,6,7,0,1,2,3,k256[36],hf( 4));
; 262  :     one_cycle(3,4,5,6,7,0,1,2,k256[37],hf( 5));
; 263  :     one_cycle(2,3,4,5,6,7,0,1,k256[38],hf( 6));
; 264  :     one_cycle(1,2,3,4,5,6,7,0,k256[39],hf( 7));
; 265  :     one_cycle(0,1,2,3,4,5,6,7,k256[40],hf( 8));
; 266  :     one_cycle(7,0,1,2,3,4,5,6,k256[41],hf( 9));
; 267  :     one_cycle(6,7,0,1,2,3,4,5,k256[42],hf(10));
; 268  :     one_cycle(5,6,7,0,1,2,3,4,k256[43],hf(11));
; 269  :     one_cycle(4,5,6,7,0,1,2,3,k256[44],hf(12));
; 270  :     one_cycle(3,4,5,6,7,0,1,2,k256[45],hf(13));
; 271  :     one_cycle(2,3,4,5,6,7,0,1,k256[46],hf(14));
; 272  :     one_cycle(1,2,3,4,5,6,7,0,k256[47],hf(15));
; 273  : 
; 274  :     one_cycle(0,1,2,3,4,5,6,7,k256[48],hf( 0));
; 275  :     one_cycle(7,0,1,2,3,4,5,6,k256[49],hf( 1));
; 276  :     one_cycle(6,7,0,1,2,3,4,5,k256[50],hf( 2));
; 277  :     one_cycle(5,6,7,0,1,2,3,4,k256[51],hf( 3));
; 278  :     one_cycle(4,5,6,7,0,1,2,3,k256[52],hf( 4));
; 279  :     one_cycle(3,4,5,6,7,0,1,2,k256[53],hf( 5));
; 280  :     one_cycle(2,3,4,5,6,7,0,1,k256[54],hf( 6));
; 281  :     one_cycle(1,2,3,4,5,6,7,0,k256[55],hf( 7));
; 282  :     one_cycle(0,1,2,3,4,5,6,7,k256[56],hf( 8));
; 283  :     one_cycle(7,0,1,2,3,4,5,6,k256[57],hf( 9));
; 284  :     one_cycle(6,7,0,1,2,3,4,5,k256[58],hf(10));
; 285  :     one_cycle(5,6,7,0,1,2,3,4,k256[59],hf(11));
; 286  :     one_cycle(4,5,6,7,0,1,2,3,k256[60],hf(12));
; 287  :     one_cycle(3,4,5,6,7,0,1,2,k256[61],hf(13));
; 288  :     one_cycle(2,3,4,5,6,7,0,1,k256[62],hf(14));
; 289  :     one_cycle(1,2,3,4,5,6,7,0,k256[63],hf(15));
; 290  : 
; 291  :     ctx->hash[0] += v0; ctx->hash[1] += v1;
; 292  :     ctx->hash[2] += v2; ctx->hash[3] += v3;
; 293  :     ctx->hash[4] += v4; ctx->hash[5] += v5;
; 294  :     ctx->hash[6] += v6; ctx->hash[7] += v7;
; 295  : #endif
; 296  : }

  0147d	5f		 pop	 edi
  0147e	5e		 pop	 esi
  0147f	8b e5		 mov	 esp, ebp
  01481	5d		 pop	 ebp
  01482	c2 04 00	 ret	 4
_sha256_compile@4 ENDP
_TEXT	ENDS
PUBLIC	_sha256_hash@12
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp
;	COMDAT _sha256_hash@12
_TEXT	SEGMENT
__i$24912 = -16						; size = 4
_pos$ = -12						; size = 4
_space$ = -8						; size = 4
_sp$ = -4						; size = 4
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_ctx$ = 16						; size = 4
_sha256_hash@12 PROC					; COMDAT

; 302  : {   uint_32t pos = (uint_32t)(ctx->count[0] & SHA256_MASK),

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 10	 sub	 esp, 16			; 00000010H
  00008	56		 push	 esi
  00009	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00011	89 4d f4	 mov	 DWORD PTR _pos$[ebp], ecx

; 303  :              space = SHA256_BLOCK_SIZE - pos;

  00014	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00019	2b 55 f4	 sub	 edx, DWORD PTR _pos$[ebp]
  0001c	89 55 f8	 mov	 DWORD PTR _space$[ebp], edx

; 304  :     const unsigned char *sp = data;

  0001f	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]
  00022	89 45 fc	 mov	 DWORD PTR _sp$[ebp], eax

; 305  : 
; 306  :     if((ctx->count[0] += len) < len)

  00025	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	03 55 0c	 add	 edx, DWORD PTR _len$[ebp]
  0002d	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  00030	89 10		 mov	 DWORD PTR [eax], edx
  00032	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00035	8b 11		 mov	 edx, DWORD PTR [ecx]
  00037	3b 55 0c	 cmp	 edx, DWORD PTR _len$[ebp]
  0003a	73 0f		 jae	 SHORT $LN4@sha256_has

; 307  :         ++(ctx->count[1]);

  0003c	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  0003f	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00042	83 c1 01	 add	 ecx, 1
  00045	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  00048	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$LN4@sha256_has:

; 308  : 
; 309  :     while(len >= space)     /* tranfer whole blocks while possible  */

  0004b	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0004e	3b 45 f8	 cmp	 eax, DWORD PTR _space$[ebp]
  00051	0f 82 b1 00 00
	00		 jb	 $LN3@sha256_has

; 310  :     {
; 311  :         memcpy(((unsigned char*)ctx->wbuf) + pos, sp, space);

  00057	8b 4d f8	 mov	 ecx, DWORD PTR _space$[ebp]
  0005a	51		 push	 ecx
  0005b	8b 55 fc	 mov	 edx, DWORD PTR _sp$[ebp]
  0005e	52		 push	 edx
  0005f	8b 45 f4	 mov	 eax, DWORD PTR _pos$[ebp]
  00062	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00065	8d 54 01 28	 lea	 edx, DWORD PTR [ecx+eax+40]
  00069	52		 push	 edx
  0006a	e8 00 00 00 00	 call	 _memcpy
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 312  :         sp += space; len -= space; space = SHA256_BLOCK_SIZE; pos = 0;

  00072	8b 45 fc	 mov	 eax, DWORD PTR _sp$[ebp]
  00075	03 45 f8	 add	 eax, DWORD PTR _space$[ebp]
  00078	89 45 fc	 mov	 DWORD PTR _sp$[ebp], eax
  0007b	8b 4d 0c	 mov	 ecx, DWORD PTR _len$[ebp]
  0007e	2b 4d f8	 sub	 ecx, DWORD PTR _space$[ebp]
  00081	89 4d 0c	 mov	 DWORD PTR _len$[ebp], ecx
  00084	c7 45 f8 40 00
	00 00		 mov	 DWORD PTR _space$[ebp], 64 ; 00000040H
  0008b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pos$[ebp], 0

; 313  :         bsw_32(ctx->wbuf, SHA256_BLOCK_SIZE >> 2)

  00092	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR __i$24912[ebp], 16 ; 00000010H
$LN2@sha256_has:
  00099	8b 55 f0	 mov	 edx, DWORD PTR __i$24912[ebp]
  0009c	8b 45 f0	 mov	 eax, DWORD PTR __i$24912[ebp]
  0009f	83 e8 01	 sub	 eax, 1
  000a2	89 45 f0	 mov	 DWORD PTR __i$24912[ebp], eax
  000a5	85 d2		 test	 edx, edx
  000a7	74 51		 je	 SHORT $LN1@sha256_has
  000a9	8b 4d f0	 mov	 ecx, DWORD PTR __i$24912[ebp]
  000ac	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  000af	8b 44 8a 28	 mov	 eax, DWORD PTR [edx+ecx*4+40]
  000b3	c1 e8 18	 shr	 eax, 24			; 00000018H
  000b6	8b 4d f0	 mov	 ecx, DWORD PTR __i$24912[ebp]
  000b9	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  000bc	8b 4c 8a 28	 mov	 ecx, DWORD PTR [edx+ecx*4+40]
  000c0	c1 e1 08	 shl	 ecx, 8
  000c3	0b c1		 or	 eax, ecx
  000c5	25 ff 00 ff 00	 and	 eax, 16711935		; 00ff00ffH
  000ca	8b 55 f0	 mov	 edx, DWORD PTR __i$24912[ebp]
  000cd	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000d0	8b 54 91 28	 mov	 edx, DWORD PTR [ecx+edx*4+40]
  000d4	c1 ea 08	 shr	 edx, 8
  000d7	8b 4d f0	 mov	 ecx, DWORD PTR __i$24912[ebp]
  000da	8b 75 10	 mov	 esi, DWORD PTR _ctx$[ebp]
  000dd	8b 4c 8e 28	 mov	 ecx, DWORD PTR [esi+ecx*4+40]
  000e1	c1 e1 18	 shl	 ecx, 24			; 00000018H
  000e4	0b d1		 or	 edx, ecx
  000e6	81 e2 00 ff 00
	ff		 and	 edx, -16711936		; ff00ff00H
  000ec	0b c2		 or	 eax, edx
  000ee	8b 55 f0	 mov	 edx, DWORD PTR __i$24912[ebp]
  000f1	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000f4	89 44 91 28	 mov	 DWORD PTR [ecx+edx*4+40], eax
  000f8	eb 9f		 jmp	 SHORT $LN2@sha256_has
$LN1@sha256_has:

; 314  :         sha256_compile(ctx);

  000fa	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  000fd	52		 push	 edx
  000fe	e8 00 00 00 00	 call	 _sha256_compile@4

; 315  :     }

  00103	e9 43 ff ff ff	 jmp	 $LN4@sha256_has
$LN3@sha256_has:

; 316  : 
; 317  :     memcpy(((unsigned char*)ctx->wbuf) + pos, sp, len);

  00108	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0010b	50		 push	 eax
  0010c	8b 4d fc	 mov	 ecx, DWORD PTR _sp$[ebp]
  0010f	51		 push	 ecx
  00110	8b 55 f4	 mov	 edx, DWORD PTR _pos$[ebp]
  00113	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  00116	8d 4c 10 28	 lea	 ecx, DWORD PTR [eax+edx+40]
  0011a	51		 push	 ecx
  0011b	e8 00 00 00 00	 call	 _memcpy
  00120	83 c4 0c	 add	 esp, 12			; 0000000cH

; 318  : }

  00123	5e		 pop	 esi
  00124	8b e5		 mov	 esp, ebp
  00126	5d		 pop	 ebp
  00127	c2 0c 00	 ret	 12			; 0000000cH
_sha256_hash@12 ENDP
_TEXT	ENDS
PUBLIC	_sha224_begin@4
; Function compile flags: /Odtp
;	COMDAT _sha224_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha224_begin@4 PROC					; COMDAT

; 377  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	56		 push	 esi
  00006	57		 push	 edi

; 378  :     ctx->count[0] = ctx->count[1] = 0;

  00007	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00014	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 379  :     memcpy(ctx->hash, i224, 8 * sizeof(uint_32t));

  0001a	8b 7d 08	 mov	 edi, DWORD PTR _ctx$[ebp]
  0001d	83 c7 08	 add	 edi, 8
  00020	b9 08 00 00 00	 mov	 ecx, 8
  00025	be 00 00 00 00	 mov	 esi, OFFSET _i224
  0002a	f3 a5		 rep movsd

; 380  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
_sha224_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha224_end@8
; Function compile flags: /Odtp
;	COMDAT _sha224_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha224_end@8 PROC					; COMDAT

; 383  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 384  :     sha_end1(hval, ctx, SHA224_DIGEST_SIZE);

  00005	6a 1c		 push	 28			; 0000001cH
  00007	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 _sha_end1@12

; 385  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha224_end@8 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _sha_end1@12
_TEXT	SEGMENT
__i$24932 = -8						; size = 4
_i$ = -4						; size = 4
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_hlen$ = 16						; size = 4
_sha_end1@12 PROC					; COMDAT

; 323  : {   uint_32t    i = (uint_32t)(ctx->count[0] & SHA256_MASK);

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 08	 sub	 esp, 8
  00008	56		 push	 esi
  00009	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00011	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx

; 324  : 
; 325  :     /* put bytes in the buffer in an order in which references to   */
; 326  :     /* 32-bit words will put bytes with lower addresses into the    */
; 327  :     /* top of 32 bit words on BOTH big and little endian machines   */
; 328  :     bsw_32(ctx->wbuf, (i + 3) >> 2)

  00014	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00017	83 c2 03	 add	 edx, 3
  0001a	c1 ea 02	 shr	 edx, 2
  0001d	89 55 f8	 mov	 DWORD PTR __i$24932[ebp], edx
$LN10@sha_end1:
  00020	8b 45 f8	 mov	 eax, DWORD PTR __i$24932[ebp]
  00023	8b 4d f8	 mov	 ecx, DWORD PTR __i$24932[ebp]
  00026	83 e9 01	 sub	 ecx, 1
  00029	89 4d f8	 mov	 DWORD PTR __i$24932[ebp], ecx
  0002c	85 c0		 test	 eax, eax
  0002e	74 51		 je	 SHORT $LN9@sha_end1
  00030	8b 55 f8	 mov	 edx, DWORD PTR __i$24932[ebp]
  00033	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00036	8b 4c 90 28	 mov	 ecx, DWORD PTR [eax+edx*4+40]
  0003a	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0003d	8b 55 f8	 mov	 edx, DWORD PTR __i$24932[ebp]
  00040	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00043	8b 54 90 28	 mov	 edx, DWORD PTR [eax+edx*4+40]
  00047	c1 e2 08	 shl	 edx, 8
  0004a	0b ca		 or	 ecx, edx
  0004c	81 e1 ff 00 ff
	00		 and	 ecx, 16711935		; 00ff00ffH
  00052	8b 45 f8	 mov	 eax, DWORD PTR __i$24932[ebp]
  00055	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00058	8b 44 82 28	 mov	 eax, DWORD PTR [edx+eax*4+40]
  0005c	c1 e8 08	 shr	 eax, 8
  0005f	8b 55 f8	 mov	 edx, DWORD PTR __i$24932[ebp]
  00062	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00065	8b 54 96 28	 mov	 edx, DWORD PTR [esi+edx*4+40]
  00069	c1 e2 18	 shl	 edx, 24			; 00000018H
  0006c	0b c2		 or	 eax, edx
  0006e	25 00 ff 00 ff	 and	 eax, -16711936		; ff00ff00H
  00073	0b c8		 or	 ecx, eax
  00075	8b 45 f8	 mov	 eax, DWORD PTR __i$24932[ebp]
  00078	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  0007b	89 4c 82 28	 mov	 DWORD PTR [edx+eax*4+40], ecx
  0007f	eb 9f		 jmp	 SHORT $LN10@sha_end1
$LN9@sha_end1:

; 329  : 
; 330  :     /* we now need to mask valid bytes and add the padding which is */
; 331  :     /* a single 1 bit and as many zero bits as necessary. Note that */
; 332  :     /* we can always add the first padding byte here because the    */
; 333  :     /* buffer always has at least one empty slot                    */
; 334  :     ctx->wbuf[i >> 2] &= 0xffffff80 << 8 * (~i & 3);

  00081	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00084	c1 e8 02	 shr	 eax, 2
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0008a	f7 d1		 not	 ecx
  0008c	83 e1 03	 and	 ecx, 3
  0008f	c1 e1 03	 shl	 ecx, 3
  00092	ba 80 ff ff ff	 mov	 edx, -128		; ffffff80H
  00097	d3 e2		 shl	 edx, cl
  00099	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0009c	23 54 81 28	 and	 edx, DWORD PTR [ecx+eax*4+40]
  000a0	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  000a3	c1 e8 02	 shr	 eax, 2
  000a6	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000a9	89 54 81 28	 mov	 DWORD PTR [ecx+eax*4+40], edx

; 335  :     ctx->wbuf[i >> 2] |= 0x00000080 << 8 * (~i & 3);

  000ad	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  000b0	c1 ea 02	 shr	 edx, 2
  000b3	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  000b6	f7 d1		 not	 ecx
  000b8	83 e1 03	 and	 ecx, 3
  000bb	c1 e1 03	 shl	 ecx, 3
  000be	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  000c3	d3 e0		 shl	 eax, cl
  000c5	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000c8	0b 44 91 28	 or	 eax, DWORD PTR [ecx+edx*4+40]
  000cc	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  000cf	c1 ea 02	 shr	 edx, 2
  000d2	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000d5	89 44 91 28	 mov	 DWORD PTR [ecx+edx*4+40], eax

; 336  : 
; 337  :     /* we need 9 or more empty positions, one for the padding byte  */
; 338  :     /* (above) and eight for the length count.  If there is not     */
; 339  :     /* enough space pad and empty the buffer                        */
; 340  :     if(i > SHA256_BLOCK_SIZE - 9)

  000d9	83 7d fc 37	 cmp	 DWORD PTR _i$[ebp], 55	; 00000037H
  000dd	76 22		 jbe	 SHORT $LN8@sha_end1

; 341  :     {
; 342  :         if(i < 60) ctx->wbuf[15] = 0;

  000df	83 7d fc 3c	 cmp	 DWORD PTR _i$[ebp], 60	; 0000003cH
  000e3	73 0a		 jae	 SHORT $LN7@sha_end1
  000e5	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  000e8	c7 42 64 00 00
	00 00		 mov	 DWORD PTR [edx+100], 0
$LN7@sha_end1:

; 343  :         sha256_compile(ctx);

  000ef	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _sha256_compile@4

; 344  :         i = 0;

  000f8	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

; 345  :     }
; 346  :     else    /* compute a word index for the empty buffer positions  */

  000ff	eb 0c		 jmp	 SHORT $LN5@sha_end1
$LN8@sha_end1:

; 347  :         i = (i >> 2) + 1;

  00101	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00104	c1 e9 02	 shr	 ecx, 2
  00107	83 c1 01	 add	 ecx, 1
  0010a	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx
$LN5@sha_end1:

; 348  : 
; 349  :     while(i < 14) /* and zero pad all but last two positions        */

  0010d	83 7d fc 0e	 cmp	 DWORD PTR _i$[ebp], 14	; 0000000eH
  00111	73 19		 jae	 SHORT $LN4@sha_end1

; 350  :         ctx->wbuf[i++] = 0;

  00113	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00116	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00119	c7 44 90 28 00
	00 00 00	 mov	 DWORD PTR [eax+edx*4+40], 0
  00121	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00124	83 c1 01	 add	 ecx, 1
  00127	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx
  0012a	eb e1		 jmp	 SHORT $LN5@sha_end1
$LN4@sha_end1:

; 351  : 
; 352  :     /* the following 32-bit length fields are assembled in the      */
; 353  :     /* wrong byte order on little endian machines but this is       */
; 354  :     /* corrected later since they are only ever used as 32-bit      */
; 355  :     /* word values.                                                 */
; 356  :     ctx->wbuf[14] = (ctx->count[1] << 3) | (ctx->count[0] >> 29);

  0012c	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  0012f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00132	c1 e0 03	 shl	 eax, 3
  00135	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00138	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013a	c1 ea 1d	 shr	 edx, 29			; 0000001dH
  0013d	0b c2		 or	 eax, edx
  0013f	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00142	89 41 60	 mov	 DWORD PTR [ecx+96], eax

; 357  :     ctx->wbuf[15] = ctx->count[0] << 3;

  00145	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00148	8b 02		 mov	 eax, DWORD PTR [edx]
  0014a	c1 e0 03	 shl	 eax, 3
  0014d	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00150	89 41 64	 mov	 DWORD PTR [ecx+100], eax

; 358  :     sha256_compile(ctx);

  00153	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00156	52		 push	 edx
  00157	e8 00 00 00 00	 call	 _sha256_compile@4

; 359  : 
; 360  :     /* extract the hash value as bytes in case the hash buffer is   */
; 361  :     /* mislaigned for 32-bit words                                  */
; 362  :     for(i = 0; i < hlen; ++i)

  0015c	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00163	eb 09		 jmp	 SHORT $LN3@sha_end1
$LN2@sha_end1:
  00165	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00168	83 c0 01	 add	 eax, 1
  0016b	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN3@sha_end1:
  0016e	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00171	3b 4d 10	 cmp	 ecx, DWORD PTR _hlen$[ebp]
  00174	73 24		 jae	 SHORT $LN11@sha_end1

; 363  :         hval[i] = (unsigned char)(ctx->hash[i >> 2] >> (8 * (~i & 3)));

  00176	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00179	c1 ea 02	 shr	 edx, 2
  0017c	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0017f	f7 d1		 not	 ecx
  00181	83 e1 03	 and	 ecx, 3
  00184	c1 e1 03	 shl	 ecx, 3
  00187	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0018a	8b 54 90 08	 mov	 edx, DWORD PTR [eax+edx*4+8]
  0018e	d3 ea		 shr	 edx, cl
  00190	8b 45 08	 mov	 eax, DWORD PTR _hval$[ebp]
  00193	03 45 fc	 add	 eax, DWORD PTR _i$[ebp]
  00196	88 10		 mov	 BYTE PTR [eax], dl
  00198	eb cb		 jmp	 SHORT $LN2@sha_end1
$LN11@sha_end1:

; 364  : }

  0019a	5e		 pop	 esi
  0019b	8b e5		 mov	 esp, ebp
  0019d	5d		 pop	 ebp
  0019e	c2 0c 00	 ret	 12			; 0000000cH
_sha_end1@12 ENDP
_TEXT	ENDS
PUBLIC	_sha224@12
; Function compile flags: /Odtp
;	COMDAT _sha224@12
_TEXT	SEGMENT
_cx$ = -104						; size = 104
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha224@12 PROC						; COMDAT

; 388  : {   sha224_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 68	 sub	 esp, 104		; 00000068H

; 389  : 
; 390  :     sha224_begin(cx);

  00008	8d 45 98	 lea	 eax, DWORD PTR _cx$[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 _sha224_begin@4

; 391  :     sha224_hash(data, len, cx);

  00011	8d 4d 98	 lea	 ecx, DWORD PTR _cx$[ebp]
  00014	51		 push	 ecx
  00015	8b 55 10	 mov	 edx, DWORD PTR _len$[ebp]
  00018	52		 push	 edx
  00019	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _sha256_hash@12

; 392  :     sha_end1(hval, cx, SHA224_DIGEST_SIZE);

  00022	6a 1c		 push	 28			; 0000001cH
  00024	8d 4d 98	 lea	 ecx, DWORD PTR _cx$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 08	 mov	 edx, DWORD PTR _hval$[ebp]
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 _sha_end1@12

; 393  : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 0c 00	 ret	 12			; 0000000cH
_sha224@12 ENDP
_TEXT	ENDS
PUBLIC	_sha256_begin@4
; Function compile flags: /Odtp
;	COMDAT _sha256_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha256_begin@4 PROC					; COMDAT

; 406  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	56		 push	 esi
  00006	57		 push	 edi

; 407  :     ctx->count[0] = ctx->count[1] = 0;

  00007	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0
  00011	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00014	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0

; 408  :     memcpy(ctx->hash, i256, 8 * sizeof(uint_32t));

  0001a	8b 7d 08	 mov	 edi, DWORD PTR _ctx$[ebp]
  0001d	83 c7 08	 add	 edi, 8
  00020	b9 08 00 00 00	 mov	 ecx, 8
  00025	be 00 00 00 00	 mov	 esi, OFFSET _i256
  0002a	f3 a5		 rep movsd

; 409  : }

  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
  0002e	5d		 pop	 ebp
  0002f	c2 04 00	 ret	 4
_sha256_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha256_end@8
; Function compile flags: /Odtp
;	COMDAT _sha256_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha256_end@8 PROC					; COMDAT

; 412  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 413  :     sha_end1(hval, ctx, SHA256_DIGEST_SIZE);

  00005	6a 20		 push	 32			; 00000020H
  00007	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 _sha_end1@12

; 414  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha256_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha256@12
; Function compile flags: /Odtp
;	COMDAT _sha256@12
_TEXT	SEGMENT
_cx$ = -104						; size = 104
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha256@12 PROC						; COMDAT

; 417  : {   sha256_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 68	 sub	 esp, 104		; 00000068H

; 418  : 
; 419  :     sha256_begin(cx);

  00008	8d 45 98	 lea	 eax, DWORD PTR _cx$[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 _sha256_begin@4

; 420  :     sha256_hash(data, len, cx);

  00011	8d 4d 98	 lea	 ecx, DWORD PTR _cx$[ebp]
  00014	51		 push	 ecx
  00015	8b 55 10	 mov	 edx, DWORD PTR _len$[ebp]
  00018	52		 push	 edx
  00019	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _sha256_hash@12

; 421  :     sha_end1(hval, cx, SHA256_DIGEST_SIZE);

  00022	6a 20		 push	 32			; 00000020H
  00024	8d 4d 98	 lea	 ecx, DWORD PTR _cx$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 08	 mov	 edx, DWORD PTR _hval$[ebp]
  0002b	52		 push	 edx
  0002c	e8 00 00 00 00	 call	 _sha_end1@12

; 422  : }

  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c2 0c 00	 ret	 12			; 0000000cH
_sha256@12 ENDP
_TEXT	ENDS
PUBLIC	_sha512_compile@4
EXTRN	__allshl:PROC
EXTRN	__aullshr:PROC
; Function compile flags: /Odtp
;	COMDAT _sha512_compile@4
_TEXT	SEGMENT
tv7572 = -1164						; size = 4
tv7570 = -1160						; size = 4
tv7568 = -1156						; size = 4
tv7566 = -1152						; size = 4
tv7564 = -1148						; size = 4
tv7562 = -1144						; size = 4
tv7560 = -1140						; size = 4
tv7558 = -1136						; size = 4
tv7556 = -1132						; size = 4
tv1650 = -1128						; size = 8
tv7554 = -1120						; size = 4
tv7552 = -1116						; size = 4
tv7550 = -1112						; size = 4
tv7548 = -1108						; size = 4
tv7546 = -1104						; size = 4
tv7544 = -1100						; size = 4
tv7542 = -1096						; size = 4
tv7540 = -1092						; size = 4
tv7538 = -1088						; size = 4
tv7536 = -1084						; size = 4
tv7534 = -1080						; size = 4
tv7532 = -1076						; size = 4
tv7530 = -1072						; size = 4
tv7528 = -1068						; size = 4
tv7526 = -1064						; size = 4
tv1553 = -1060						; size = 8
tv7524 = -1052						; size = 4
tv7522 = -1048						; size = 4
tv7520 = -1044						; size = 4
tv7518 = -1040						; size = 4
tv7516 = -1036						; size = 4
tv7514 = -1032						; size = 4
tv7512 = -1028						; size = 4
tv7510 = -1024						; size = 4
tv7508 = -1020						; size = 4
tv7506 = -1016						; size = 4
tv7504 = -1012						; size = 4
tv7502 = -1008						; size = 4
tv7500 = -1004						; size = 4
tv7498 = -1000						; size = 4
tv7496 = -996						; size = 4
tv1449 = -992						; size = 8
tv7494 = -984						; size = 4
tv7492 = -980						; size = 4
tv7490 = -976						; size = 4
tv7488 = -972						; size = 4
tv7486 = -968						; size = 4
tv7484 = -964						; size = 4
tv7482 = -960						; size = 4
tv7480 = -956						; size = 4
tv7478 = -952						; size = 4
tv7476 = -948						; size = 4
tv7474 = -944						; size = 4
tv7472 = -940						; size = 4
tv7470 = -936						; size = 4
tv7468 = -932						; size = 4
tv7466 = -928						; size = 4
tv1351 = -924						; size = 8
tv7464 = -916						; size = 4
tv7462 = -912						; size = 4
tv7460 = -908						; size = 4
tv7458 = -904						; size = 4
tv7456 = -900						; size = 4
tv7454 = -896						; size = 4
tv7452 = -892						; size = 4
tv7450 = -888						; size = 4
tv7448 = -884						; size = 4
tv7446 = -880						; size = 4
tv7444 = -876						; size = 4
tv7442 = -872						; size = 4
tv7440 = -868						; size = 4
tv7438 = -864						; size = 4
tv7436 = -860						; size = 4
tv1248 = -856						; size = 8
tv7434 = -848						; size = 4
tv7432 = -844						; size = 4
tv7430 = -840						; size = 4
tv7428 = -836						; size = 4
tv7426 = -832						; size = 4
tv7424 = -828						; size = 4
tv7422 = -824						; size = 4
tv7420 = -820						; size = 4
tv7418 = -816						; size = 4
tv7416 = -812						; size = 4
tv7414 = -808						; size = 4
tv7412 = -804						; size = 4
tv7410 = -800						; size = 4
tv7408 = -796						; size = 4
tv7406 = -792						; size = 4
tv1144 = -788						; size = 8
tv7404 = -780						; size = 4
tv7402 = -776						; size = 4
tv7400 = -772						; size = 4
tv7398 = -768						; size = 4
tv7396 = -764						; size = 4
tv7394 = -760						; size = 4
tv7392 = -756						; size = 4
tv7390 = -752						; size = 4
tv7388 = -748						; size = 4
tv7386 = -744						; size = 4
tv7384 = -740						; size = 4
tv7382 = -736						; size = 4
tv7380 = -732						; size = 4
tv7378 = -728						; size = 4
tv7376 = -724						; size = 4
tv1041 = -720						; size = 8
tv7374 = -712						; size = 4
tv7372 = -708						; size = 4
tv7370 = -704						; size = 4
tv7368 = -700						; size = 4
tv7366 = -696						; size = 4
tv7364 = -692						; size = 4
tv7362 = -688						; size = 4
tv7360 = -684						; size = 4
tv7358 = -680						; size = 4
tv7356 = -676						; size = 4
tv7354 = -672						; size = 4
tv7352 = -668						; size = 4
tv7350 = -664						; size = 4
tv7348 = -660						; size = 4
tv7346 = -656						; size = 4
tv944 = -652						; size = 8
tv7344 = -644						; size = 4
tv7342 = -640						; size = 4
tv7340 = -636						; size = 4
tv7338 = -632						; size = 4
tv7336 = -628						; size = 4
tv7334 = -624						; size = 4
tv7332 = -620						; size = 4
tv7330 = -616						; size = 4
tv7328 = -612						; size = 4
tv7326 = -608						; size = 4
tv7324 = -604						; size = 4
tv7322 = -600						; size = 4
tv7320 = -596						; size = 4
tv7318 = -592						; size = 4
tv7316 = -588						; size = 4
tv843 = -584						; size = 8
tv7314 = -576						; size = 4
tv7312 = -572						; size = 4
tv7310 = -568						; size = 4
tv7308 = -564						; size = 4
tv7306 = -560						; size = 4
tv7304 = -556						; size = 4
tv7302 = -552						; size = 4
tv7300 = -548						; size = 4
tv7298 = -544						; size = 4
tv7296 = -540						; size = 4
tv7294 = -536						; size = 4
tv7292 = -532						; size = 4
tv7290 = -528						; size = 4
tv7288 = -524						; size = 4
tv7286 = -520						; size = 4
tv742 = -516						; size = 8
tv7284 = -508						; size = 4
tv7282 = -504						; size = 4
tv7280 = -500						; size = 4
tv7278 = -496						; size = 4
tv7276 = -492						; size = 4
tv7274 = -488						; size = 4
tv7272 = -484						; size = 4
tv7270 = -480						; size = 4
tv7268 = -476						; size = 4
tv7266 = -472						; size = 4
tv7264 = -468						; size = 4
tv7262 = -464						; size = 4
tv7260 = -460						; size = 4
tv7258 = -456						; size = 4
tv7256 = -452						; size = 4
tv638 = -448						; size = 8
tv7254 = -440						; size = 4
tv7252 = -436						; size = 4
tv7250 = -432						; size = 4
tv7248 = -428						; size = 4
tv7246 = -424						; size = 4
tv7244 = -420						; size = 4
tv7242 = -416						; size = 4
tv7240 = -412						; size = 4
tv7238 = -408						; size = 4
tv7236 = -404						; size = 4
tv7234 = -400						; size = 4
tv7232 = -396						; size = 4
tv7230 = -392						; size = 4
tv7228 = -388						; size = 4
tv7226 = -384						; size = 4
tv540 = -380						; size = 8
tv7224 = -372						; size = 4
tv7222 = -368						; size = 4
tv7220 = -364						; size = 4
tv7218 = -360						; size = 4
tv7216 = -356						; size = 4
tv7214 = -352						; size = 4
tv7212 = -348						; size = 4
tv7210 = -344						; size = 4
tv7208 = -340						; size = 4
tv7206 = -336						; size = 4
tv7204 = -332						; size = 4
tv7202 = -328						; size = 4
tv7200 = -324						; size = 4
tv7198 = -320						; size = 4
tv7196 = -316						; size = 4
tv437 = -312						; size = 8
tv7194 = -304						; size = 4
tv7192 = -300						; size = 4
tv7190 = -296						; size = 4
tv7188 = -292						; size = 4
tv7186 = -288						; size = 4
tv7184 = -284						; size = 4
tv7182 = -280						; size = 4
tv7180 = -276						; size = 4
tv7178 = -272						; size = 4
tv7176 = -268						; size = 4
tv7174 = -264						; size = 4
tv7172 = -260						; size = 4
tv7170 = -256						; size = 4
tv7168 = -252						; size = 4
tv7166 = -248						; size = 4
tv333 = -244						; size = 8
tv7164 = -236						; size = 4
tv7162 = -232						; size = 4
tv7160 = -228						; size = 4
tv7158 = -224						; size = 4
tv7156 = -220						; size = 4
tv7154 = -216						; size = 4
tv7152 = -212						; size = 4
tv7150 = -208						; size = 4
tv7148 = -204						; size = 4
tv7146 = -200						; size = 4
tv7144 = -196						; size = 4
tv7142 = -192						; size = 4
tv7140 = -188						; size = 4
tv7138 = -184						; size = 4
tv7136 = -180						; size = 4
tv235 = -176						; size = 8
tv7134 = -168						; size = 4
tv7132 = -164						; size = 4
tv7130 = -160						; size = 4
tv7128 = -156						; size = 4
tv7126 = -152						; size = 4
tv7124 = -148						; size = 4
tv7122 = -144						; size = 4
tv7120 = -140						; size = 4
tv7118 = -136						; size = 4
tv7116 = -132						; size = 4
tv7114 = -128						; size = 4
tv7112 = -124						; size = 4
tv7110 = -120						; size = 4
tv7108 = -116						; size = 4
tv7106 = -112						; size = 4
tv139 = -108						; size = 8
tv7104 = -100						; size = 4
tv7102 = -96						; size = 4
tv7100 = -92						; size = 4
tv7098 = -88						; size = 4
tv7096 = -84						; size = 4
tv7094 = -80						; size = 4
_j$ = -76						; size = 4
_v$ = -72						; size = 64
_p$ = -4						; size = 4
_ctx$ = 8						; size = 4
_sha512_compile@4 PROC					; COMDAT

; 512  : {   uint_64t    v[8], *p = ctx->wbuf;

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec 8c 04 00
	00		 sub	 esp, 1164		; 0000048cH
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00011	83 c0 50	 add	 eax, 80			; 00000050H
  00014	89 45 fc	 mov	 DWORD PTR _p$[ebp], eax

; 513  :     uint_32t    j;
; 514  : 
; 515  :     memcpy(v, ctx->hash, 8 * sizeof(uint_64t));

  00017	8b 75 08	 mov	 esi, DWORD PTR _ctx$[ebp]
  0001a	83 c6 10	 add	 esi, 16			; 00000010H
  0001d	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00022	8d 7d b8	 lea	 edi, DWORD PTR _v$[ebp]
  00025	f3 a5		 rep movsd

; 516  : 
; 517  :     for(j = 0; j < 80; j += 16)

  00027	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _j$[ebp], 0
  0002e	eb 09		 jmp	 SHORT $LN3@sha512_com
$LN2@sha512_com:
  00030	8b 4d b4	 mov	 ecx, DWORD PTR _j$[ebp]
  00033	83 c1 10	 add	 ecx, 16			; 00000010H
  00036	89 4d b4	 mov	 DWORD PTR _j$[ebp], ecx
$LN3@sha512_com:
  00039	83 7d b4 50	 cmp	 DWORD PTR _j$[ebp], 80	; 00000050H
  0003d	0f 83 c2 33 00
	00		 jae	 $LN1@sha512_com

; 518  :     {
; 519  :         v_cycle( 0, j); v_cycle( 1, j);

  00043	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00047	0f 84 21 01 00
	00		 je	 $LN6@sha512_com
  0004d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00050	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  00053	8b 52 74	 mov	 edx, DWORD PTR [edx+116]
  00056	b1 13		 mov	 cl, 19			; 00000013H
  00058	e8 00 00 00 00	 call	 __aullshr
  0005d	8b f0		 mov	 esi, eax
  0005f	8b fa		 mov	 edi, edx
  00061	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00064	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  00067	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  0006a	b1 2d		 mov	 cl, 45			; 0000002dH
  0006c	e8 00 00 00 00	 call	 __allshl
  00071	0b f0		 or	 esi, eax
  00073	0b fa		 or	 edi, edx
  00075	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00078	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  0007b	8b 52 74	 mov	 edx, DWORD PTR [edx+116]
  0007e	b1 3d		 mov	 cl, 61			; 0000003dH
  00080	e8 00 00 00 00	 call	 __aullshr
  00085	8b d8		 mov	 ebx, eax
  00087	8b c2		 mov	 eax, edx
  00089	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0008c	89 45 b0	 mov	 DWORD PTR tv7094[ebp], eax
  0008f	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  00092	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  00095	b1 03		 mov	 cl, 3
  00097	e8 00 00 00 00	 call	 __allshl
  0009c	0b d8		 or	 ebx, eax
  0009e	8b 45 b0	 mov	 eax, DWORD PTR tv7094[ebp]
  000a1	0b c2		 or	 eax, edx
  000a3	33 f3		 xor	 esi, ebx
  000a5	33 f8		 xor	 edi, eax
  000a7	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  000aa	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  000ad	8b 52 74	 mov	 edx, DWORD PTR [edx+116]
  000b0	b1 06		 mov	 cl, 6
  000b2	e8 00 00 00 00	 call	 __aullshr
  000b7	33 f0		 xor	 esi, eax
  000b9	33 fa		 xor	 edi, edx
  000bb	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  000be	03 70 48	 add	 esi, DWORD PTR [eax+72]
  000c1	13 78 4c	 adc	 edi, DWORD PTR [eax+76]
  000c4	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  000c7	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000ca	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000cd	b1 01		 mov	 cl, 1
  000cf	e8 00 00 00 00	 call	 __aullshr
  000d4	8b d8		 mov	 ebx, eax
  000d6	8b c2		 mov	 eax, edx
  000d8	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  000db	89 45 ac	 mov	 DWORD PTR tv7096[ebp], eax
  000de	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  000e1	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  000e4	b1 3f		 mov	 cl, 63			; 0000003fH
  000e6	e8 00 00 00 00	 call	 __allshl
  000eb	0b d8		 or	 ebx, eax
  000ed	8b 45 ac	 mov	 eax, DWORD PTR tv7096[ebp]
  000f0	0b c2		 or	 eax, edx
  000f2	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  000f5	89 45 a8	 mov	 DWORD PTR tv7098[ebp], eax
  000f8	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  000fb	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  000fe	b1 08		 mov	 cl, 8
  00100	e8 00 00 00 00	 call	 __aullshr
  00105	8b ca		 mov	 ecx, edx
  00107	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0010a	89 45 a4	 mov	 DWORD PTR tv7100[ebp], eax
  0010d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00110	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00113	89 4d a0	 mov	 DWORD PTR tv7102[ebp], ecx
  00116	b1 38		 mov	 cl, 56			; 00000038H
  00118	e8 00 00 00 00	 call	 __allshl
  0011d	8b 4d a4	 mov	 ecx, DWORD PTR tv7100[ebp]
  00120	0b c8		 or	 ecx, eax
  00122	8b 45 a0	 mov	 eax, DWORD PTR tv7102[ebp]
  00125	0b c2		 or	 eax, edx
  00127	33 d9		 xor	 ebx, ecx
  00129	8b 4d a8	 mov	 ecx, DWORD PTR tv7098[ebp]
  0012c	33 c8		 xor	 ecx, eax
  0012e	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00131	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00134	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00137	89 4d 9c	 mov	 DWORD PTR tv7104[ebp], ecx
  0013a	b1 07		 mov	 cl, 7
  0013c	e8 00 00 00 00	 call	 __aullshr
  00141	33 d8		 xor	 ebx, eax
  00143	8b 45 9c	 mov	 eax, DWORD PTR tv7104[ebp]
  00146	33 c2		 xor	 eax, edx
  00148	03 f3		 add	 esi, ebx
  0014a	13 f8		 adc	 edi, eax
  0014c	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0014f	03 30		 add	 esi, DWORD PTR [eax]
  00151	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00154	13 cf		 adc	 ecx, edi
  00156	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00159	89 32		 mov	 DWORD PTR [edx], esi
  0015b	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
  0015e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00161	8b 08		 mov	 ecx, DWORD PTR [eax]
  00163	89 4d 94	 mov	 DWORD PTR tv139[ebp], ecx
  00166	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00169	89 55 98	 mov	 DWORD PTR tv139[ebp+4], edx
  0016c	eb 0e		 jmp	 SHORT $LN7@sha512_com
$LN6@sha512_com:
  0016e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00171	8b 08		 mov	 ecx, DWORD PTR [eax]
  00173	89 4d 94	 mov	 DWORD PTR tv139[ebp], ecx
  00176	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00179	89 55 98	 mov	 DWORD PTR tv139[ebp+4], edx
$LN7@sha512_com:
  0017c	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  0017f	8b 75 94	 mov	 esi, DWORD PTR tv139[ebp]
  00182	03 34 c5 00 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8]
  00189	8b 7d 98	 mov	 edi, DWORD PTR tv139[ebp+4]
  0018c	13 3c c5 04 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+4]
  00193	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00196	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00199	b1 0e		 mov	 cl, 14			; 0000000eH
  0019b	e8 00 00 00 00	 call	 __aullshr
  001a0	8b d8		 mov	 ebx, eax
  001a2	8b c2		 mov	 eax, edx
  001a4	89 45 90	 mov	 DWORD PTR tv7106[ebp], eax
  001a7	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  001aa	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  001ad	b1 32		 mov	 cl, 50			; 00000032H
  001af	e8 00 00 00 00	 call	 __allshl
  001b4	0b d8		 or	 ebx, eax
  001b6	8b 45 90	 mov	 eax, DWORD PTR tv7106[ebp]
  001b9	0b c2		 or	 eax, edx
  001bb	89 45 8c	 mov	 DWORD PTR tv7108[ebp], eax
  001be	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  001c1	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  001c4	b1 12		 mov	 cl, 18			; 00000012H
  001c6	e8 00 00 00 00	 call	 __aullshr
  001cb	8b ca		 mov	 ecx, edx
  001cd	89 45 88	 mov	 DWORD PTR tv7110[ebp], eax
  001d0	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  001d3	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  001d6	89 4d 84	 mov	 DWORD PTR tv7112[ebp], ecx
  001d9	b1 2e		 mov	 cl, 46			; 0000002eH
  001db	e8 00 00 00 00	 call	 __allshl
  001e0	8b 4d 88	 mov	 ecx, DWORD PTR tv7110[ebp]
  001e3	0b c8		 or	 ecx, eax
  001e5	8b 45 84	 mov	 eax, DWORD PTR tv7112[ebp]
  001e8	0b c2		 or	 eax, edx
  001ea	33 d9		 xor	 ebx, ecx
  001ec	8b 4d 8c	 mov	 ecx, DWORD PTR tv7108[ebp]
  001ef	33 c8		 xor	 ecx, eax
  001f1	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  001f4	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  001f7	89 4d 80	 mov	 DWORD PTR tv7114[ebp], ecx
  001fa	b1 29		 mov	 cl, 41			; 00000029H
  001fc	e8 00 00 00 00	 call	 __aullshr
  00201	8b ca		 mov	 ecx, edx
  00203	89 85 7c ff ff
	ff		 mov	 DWORD PTR tv7116[ebp], eax
  00209	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  0020c	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  0020f	89 8d 78 ff ff
	ff		 mov	 DWORD PTR tv7118[ebp], ecx
  00215	b1 17		 mov	 cl, 23			; 00000017H
  00217	e8 00 00 00 00	 call	 __allshl
  0021c	8b 8d 7c ff ff
	ff		 mov	 ecx, DWORD PTR tv7116[ebp]
  00222	0b c8		 or	 ecx, eax
  00224	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv7118[ebp]
  0022a	0b c2		 or	 eax, edx
  0022c	33 d9		 xor	 ebx, ecx
  0022e	8b 4d 80	 mov	 ecx, DWORD PTR tv7114[ebp]
  00231	33 c8		 xor	 ecx, eax
  00233	03 f3		 add	 esi, ebx
  00235	13 f9		 adc	 edi, ecx
  00237	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+40]
  0023a	33 4d e8	 xor	 ecx, DWORD PTR _v$[ebp+48]
  0023d	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  00240	33 55 ec	 xor	 edx, DWORD PTR _v$[ebp+52]
  00243	23 4d d8	 and	 ecx, DWORD PTR _v$[ebp+32]
  00246	23 55 dc	 and	 edx, DWORD PTR _v$[ebp+36]
  00249	33 4d e8	 xor	 ecx, DWORD PTR _v$[ebp+48]
  0024c	33 55 ec	 xor	 edx, DWORD PTR _v$[ebp+52]
  0024f	03 f1		 add	 esi, ecx
  00251	13 fa		 adc	 edi, edx
  00253	03 75 f0	 add	 esi, DWORD PTR _v$[ebp+56]
  00256	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+60]
  00259	13 c7		 adc	 eax, edi
  0025b	89 75 f0	 mov	 DWORD PTR _v$[ebp+56], esi
  0025e	89 45 f4	 mov	 DWORD PTR _v$[ebp+60], eax
  00261	8b 4d d0	 mov	 ecx, DWORD PTR _v$[ebp+24]
  00264	03 4d f0	 add	 ecx, DWORD PTR _v$[ebp+56]
  00267	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  0026a	13 55 f4	 adc	 edx, DWORD PTR _v$[ebp+60]
  0026d	89 4d d0	 mov	 DWORD PTR _v$[ebp+24], ecx
  00270	89 55 d4	 mov	 DWORD PTR _v$[ebp+28], edx
  00273	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00276	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00279	b1 1c		 mov	 cl, 28			; 0000001cH
  0027b	e8 00 00 00 00	 call	 __aullshr
  00280	8b f0		 mov	 esi, eax
  00282	8b fa		 mov	 edi, edx
  00284	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00287	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  0028a	b1 24		 mov	 cl, 36			; 00000024H
  0028c	e8 00 00 00 00	 call	 __allshl
  00291	0b f0		 or	 esi, eax
  00293	0b fa		 or	 edi, edx
  00295	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00298	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  0029b	b1 22		 mov	 cl, 34			; 00000022H
  0029d	e8 00 00 00 00	 call	 __aullshr
  002a2	8b d8		 mov	 ebx, eax
  002a4	8b c2		 mov	 eax, edx
  002a6	89 85 74 ff ff
	ff		 mov	 DWORD PTR tv7120[ebp], eax
  002ac	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  002af	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  002b2	b1 1e		 mov	 cl, 30			; 0000001eH
  002b4	e8 00 00 00 00	 call	 __allshl
  002b9	0b d8		 or	 ebx, eax
  002bb	8b 85 74 ff ff
	ff		 mov	 eax, DWORD PTR tv7120[ebp]
  002c1	0b c2		 or	 eax, edx
  002c3	33 f3		 xor	 esi, ebx
  002c5	33 f8		 xor	 edi, eax
  002c7	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  002ca	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  002cd	b1 27		 mov	 cl, 39			; 00000027H
  002cf	e8 00 00 00 00	 call	 __aullshr
  002d4	8b d8		 mov	 ebx, eax
  002d6	8b c2		 mov	 eax, edx
  002d8	89 85 70 ff ff
	ff		 mov	 DWORD PTR tv7122[ebp], eax
  002de	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  002e1	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  002e4	b1 19		 mov	 cl, 25			; 00000019H
  002e6	e8 00 00 00 00	 call	 __allshl
  002eb	0b d8		 or	 ebx, eax
  002ed	8b 85 70 ff ff
	ff		 mov	 eax, DWORD PTR tv7122[ebp]
  002f3	0b c2		 or	 eax, edx
  002f5	33 f3		 xor	 esi, ebx
  002f7	33 f8		 xor	 edi, eax
  002f9	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  002fc	23 45 c0	 and	 eax, DWORD PTR _v$[ebp+8]
  002ff	8b 4d bc	 mov	 ecx, DWORD PTR _v$[ebp+4]
  00302	23 4d c4	 and	 ecx, DWORD PTR _v$[ebp+12]
  00305	8b 55 b8	 mov	 edx, DWORD PTR _v$[ebp]
  00308	33 55 c0	 xor	 edx, DWORD PTR _v$[ebp+8]
  0030b	8b 5d bc	 mov	 ebx, DWORD PTR _v$[ebp+4]
  0030e	33 5d c4	 xor	 ebx, DWORD PTR _v$[ebp+12]
  00311	23 55 c8	 and	 edx, DWORD PTR _v$[ebp+16]
  00314	23 5d cc	 and	 ebx, DWORD PTR _v$[ebp+20]
  00317	0b c2		 or	 eax, edx
  00319	0b cb		 or	 ecx, ebx
  0031b	03 f0		 add	 esi, eax
  0031d	13 f9		 adc	 edi, ecx
  0031f	03 75 f0	 add	 esi, DWORD PTR _v$[ebp+56]
  00322	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+60]
  00325	13 c7		 adc	 eax, edi
  00327	89 75 f0	 mov	 DWORD PTR _v$[ebp+56], esi
  0032a	89 45 f4	 mov	 DWORD PTR _v$[ebp+60], eax
  0032d	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00331	0f 84 4e 01 00
	00		 je	 $LN8@sha512_com
  00337	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0033a	8b 41 78	 mov	 eax, DWORD PTR [ecx+120]
  0033d	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00340	b1 13		 mov	 cl, 19			; 00000013H
  00342	e8 00 00 00 00	 call	 __aullshr
  00347	8b f0		 mov	 esi, eax
  00349	8b fa		 mov	 edi, edx
  0034b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0034e	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  00351	8b 52 7c	 mov	 edx, DWORD PTR [edx+124]
  00354	b1 2d		 mov	 cl, 45			; 0000002dH
  00356	e8 00 00 00 00	 call	 __allshl
  0035b	0b f0		 or	 esi, eax
  0035d	0b fa		 or	 edi, edx
  0035f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00362	8b 41 78	 mov	 eax, DWORD PTR [ecx+120]
  00365	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  00368	b1 3d		 mov	 cl, 61			; 0000003dH
  0036a	e8 00 00 00 00	 call	 __aullshr
  0036f	8b d8		 mov	 ebx, eax
  00371	8b c2		 mov	 eax, edx
  00373	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00376	89 85 6c ff ff
	ff		 mov	 DWORD PTR tv7124[ebp], eax
  0037c	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  0037f	8b 52 7c	 mov	 edx, DWORD PTR [edx+124]
  00382	b1 03		 mov	 cl, 3
  00384	e8 00 00 00 00	 call	 __allshl
  00389	0b d8		 or	 ebx, eax
  0038b	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR tv7124[ebp]
  00391	0b c2		 or	 eax, edx
  00393	33 f3		 xor	 esi, ebx
  00395	33 f8		 xor	 edi, eax
  00397	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0039a	8b 41 78	 mov	 eax, DWORD PTR [ecx+120]
  0039d	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  003a0	b1 06		 mov	 cl, 6
  003a2	e8 00 00 00 00	 call	 __aullshr
  003a7	33 f0		 xor	 esi, eax
  003a9	33 fa		 xor	 edi, edx
  003ab	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  003ae	03 72 50	 add	 esi, DWORD PTR [edx+80]
  003b1	13 7a 54	 adc	 edi, DWORD PTR [edx+84]
  003b4	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  003b7	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  003ba	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  003bd	b1 01		 mov	 cl, 1
  003bf	e8 00 00 00 00	 call	 __aullshr
  003c4	8b d8		 mov	 ebx, eax
  003c6	8b c2		 mov	 eax, edx
  003c8	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  003cb	89 85 68 ff ff
	ff		 mov	 DWORD PTR tv7126[ebp], eax
  003d1	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  003d4	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  003d7	b1 3f		 mov	 cl, 63			; 0000003fH
  003d9	e8 00 00 00 00	 call	 __allshl
  003de	0b d8		 or	 ebx, eax
  003e0	8b 85 68 ff ff
	ff		 mov	 eax, DWORD PTR tv7126[ebp]
  003e6	0b c2		 or	 eax, edx
  003e8	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  003eb	89 85 64 ff ff
	ff		 mov	 DWORD PTR tv7128[ebp], eax
  003f1	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  003f4	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  003f7	b1 08		 mov	 cl, 8
  003f9	e8 00 00 00 00	 call	 __aullshr
  003fe	8b ca		 mov	 ecx, edx
  00400	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00403	89 85 60 ff ff
	ff		 mov	 DWORD PTR tv7130[ebp], eax
  00409	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0040c	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  0040f	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv7132[ebp], ecx
  00415	b1 38		 mov	 cl, 56			; 00000038H
  00417	e8 00 00 00 00	 call	 __allshl
  0041c	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR tv7130[ebp]
  00422	0b c8		 or	 ecx, eax
  00424	8b 85 5c ff ff
	ff		 mov	 eax, DWORD PTR tv7132[ebp]
  0042a	0b c2		 or	 eax, edx
  0042c	33 d9		 xor	 ebx, ecx
  0042e	8b 8d 64 ff ff
	ff		 mov	 ecx, DWORD PTR tv7128[ebp]
  00434	33 c8		 xor	 ecx, eax
  00436	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00439	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  0043c	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  0043f	89 8d 58 ff ff
	ff		 mov	 DWORD PTR tv7134[ebp], ecx
  00445	b1 07		 mov	 cl, 7
  00447	e8 00 00 00 00	 call	 __aullshr
  0044c	33 d8		 xor	 ebx, eax
  0044e	8b 85 58 ff ff
	ff		 mov	 eax, DWORD PTR tv7134[ebp]
  00454	33 c2		 xor	 eax, edx
  00456	03 f3		 add	 esi, ebx
  00458	13 f8		 adc	 edi, eax
  0045a	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0045d	03 70 08	 add	 esi, DWORD PTR [eax+8]
  00460	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00463	13 cf		 adc	 ecx, edi
  00465	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00468	89 72 08	 mov	 DWORD PTR [edx+8], esi
  0046b	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
  0046e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00471	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00474	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv235[ebp], ecx
  0047a	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  0047d	89 95 54 ff ff
	ff		 mov	 DWORD PTR tv235[ebp+4], edx
  00483	eb 15		 jmp	 SHORT $LN9@sha512_com
$LN8@sha512_com:
  00485	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00488	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0048b	89 8d 50 ff ff
	ff		 mov	 DWORD PTR tv235[ebp], ecx
  00491	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00494	89 95 54 ff ff
	ff		 mov	 DWORD PTR tv235[ebp+4], edx
$LN9@sha512_com:
  0049a	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  0049d	8b b5 50 ff ff
	ff		 mov	 esi, DWORD PTR tv235[ebp]
  004a3	03 34 c5 08 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+8]
  004aa	8b bd 54 ff ff
	ff		 mov	 edi, DWORD PTR tv235[ebp+4]
  004b0	13 3c c5 0c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+12]
  004b7	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  004ba	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  004bd	b1 0e		 mov	 cl, 14			; 0000000eH
  004bf	e8 00 00 00 00	 call	 __aullshr
  004c4	8b d8		 mov	 ebx, eax
  004c6	8b c2		 mov	 eax, edx
  004c8	89 85 4c ff ff
	ff		 mov	 DWORD PTR tv7136[ebp], eax
  004ce	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  004d1	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  004d4	b1 32		 mov	 cl, 50			; 00000032H
  004d6	e8 00 00 00 00	 call	 __allshl
  004db	0b d8		 or	 ebx, eax
  004dd	8b 85 4c ff ff
	ff		 mov	 eax, DWORD PTR tv7136[ebp]
  004e3	0b c2		 or	 eax, edx
  004e5	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv7138[ebp], eax
  004eb	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  004ee	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  004f1	b1 12		 mov	 cl, 18			; 00000012H
  004f3	e8 00 00 00 00	 call	 __aullshr
  004f8	8b ca		 mov	 ecx, edx
  004fa	89 85 44 ff ff
	ff		 mov	 DWORD PTR tv7140[ebp], eax
  00500	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  00503	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  00506	89 8d 40 ff ff
	ff		 mov	 DWORD PTR tv7142[ebp], ecx
  0050c	b1 2e		 mov	 cl, 46			; 0000002eH
  0050e	e8 00 00 00 00	 call	 __allshl
  00513	8b 8d 44 ff ff
	ff		 mov	 ecx, DWORD PTR tv7140[ebp]
  00519	0b c8		 or	 ecx, eax
  0051b	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv7142[ebp]
  00521	0b c2		 or	 eax, edx
  00523	33 d9		 xor	 ebx, ecx
  00525	8b 8d 48 ff ff
	ff		 mov	 ecx, DWORD PTR tv7138[ebp]
  0052b	33 c8		 xor	 ecx, eax
  0052d	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  00530	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  00533	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv7144[ebp], ecx
  00539	b1 29		 mov	 cl, 41			; 00000029H
  0053b	e8 00 00 00 00	 call	 __aullshr
  00540	8b ca		 mov	 ecx, edx
  00542	89 85 38 ff ff
	ff		 mov	 DWORD PTR tv7146[ebp], eax
  00548	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  0054b	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  0054e	89 8d 34 ff ff
	ff		 mov	 DWORD PTR tv7148[ebp], ecx
  00554	b1 17		 mov	 cl, 23			; 00000017H
  00556	e8 00 00 00 00	 call	 __allshl
  0055b	8b 8d 38 ff ff
	ff		 mov	 ecx, DWORD PTR tv7146[ebp]
  00561	0b c8		 or	 ecx, eax
  00563	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR tv7148[ebp]
  00569	0b c2		 or	 eax, edx
  0056b	33 d9		 xor	 ebx, ecx
  0056d	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv7144[ebp]
  00573	33 c8		 xor	 ecx, eax
  00575	03 f3		 add	 esi, ebx
  00577	13 f9		 adc	 edi, ecx
  00579	8b 4d d8	 mov	 ecx, DWORD PTR _v$[ebp+32]
  0057c	33 4d e0	 xor	 ecx, DWORD PTR _v$[ebp+40]
  0057f	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00582	33 55 e4	 xor	 edx, DWORD PTR _v$[ebp+44]
  00585	23 4d d0	 and	 ecx, DWORD PTR _v$[ebp+24]
  00588	23 55 d4	 and	 edx, DWORD PTR _v$[ebp+28]
  0058b	33 4d e0	 xor	 ecx, DWORD PTR _v$[ebp+40]
  0058e	33 55 e4	 xor	 edx, DWORD PTR _v$[ebp+44]
  00591	03 f1		 add	 esi, ecx
  00593	13 fa		 adc	 edi, edx
  00595	03 75 e8	 add	 esi, DWORD PTR _v$[ebp+48]
  00598	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+52]
  0059b	13 c7		 adc	 eax, edi
  0059d	89 75 e8	 mov	 DWORD PTR _v$[ebp+48], esi
  005a0	89 45 ec	 mov	 DWORD PTR _v$[ebp+52], eax
  005a3	8b 4d c8	 mov	 ecx, DWORD PTR _v$[ebp+16]
  005a6	03 4d e8	 add	 ecx, DWORD PTR _v$[ebp+48]
  005a9	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  005ac	13 55 ec	 adc	 edx, DWORD PTR _v$[ebp+52]
  005af	89 4d c8	 mov	 DWORD PTR _v$[ebp+16], ecx
  005b2	89 55 cc	 mov	 DWORD PTR _v$[ebp+20], edx
  005b5	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  005b8	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  005bb	b1 1c		 mov	 cl, 28			; 0000001cH
  005bd	e8 00 00 00 00	 call	 __aullshr
  005c2	8b f0		 mov	 esi, eax
  005c4	8b fa		 mov	 edi, edx
  005c6	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  005c9	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  005cc	b1 24		 mov	 cl, 36			; 00000024H
  005ce	e8 00 00 00 00	 call	 __allshl
  005d3	0b f0		 or	 esi, eax
  005d5	0b fa		 or	 edi, edx
  005d7	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  005da	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  005dd	b1 22		 mov	 cl, 34			; 00000022H
  005df	e8 00 00 00 00	 call	 __aullshr
  005e4	8b d8		 mov	 ebx, eax
  005e6	8b c2		 mov	 eax, edx
  005e8	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv7150[ebp], eax
  005ee	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  005f1	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  005f4	b1 1e		 mov	 cl, 30			; 0000001eH
  005f6	e8 00 00 00 00	 call	 __allshl
  005fb	0b d8		 or	 ebx, eax
  005fd	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv7150[ebp]
  00603	0b c2		 or	 eax, edx
  00605	33 f3		 xor	 esi, ebx
  00607	33 f8		 xor	 edi, eax
  00609	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  0060c	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  0060f	b1 27		 mov	 cl, 39			; 00000027H
  00611	e8 00 00 00 00	 call	 __aullshr
  00616	8b d8		 mov	 ebx, eax
  00618	8b c2		 mov	 eax, edx
  0061a	89 85 2c ff ff
	ff		 mov	 DWORD PTR tv7152[ebp], eax
  00620	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  00623	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  00626	b1 19		 mov	 cl, 25			; 00000019H
  00628	e8 00 00 00 00	 call	 __allshl
  0062d	0b d8		 or	 ebx, eax
  0062f	8b 85 2c ff ff
	ff		 mov	 eax, DWORD PTR tv7152[ebp]
  00635	0b c2		 or	 eax, edx
  00637	33 f3		 xor	 esi, ebx
  00639	33 f8		 xor	 edi, eax
  0063b	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  0063e	23 45 b8	 and	 eax, DWORD PTR _v$[ebp]
  00641	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+60]
  00644	23 4d bc	 and	 ecx, DWORD PTR _v$[ebp+4]
  00647	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+56]
  0064a	33 55 b8	 xor	 edx, DWORD PTR _v$[ebp]
  0064d	8b 5d f4	 mov	 ebx, DWORD PTR _v$[ebp+60]
  00650	33 5d bc	 xor	 ebx, DWORD PTR _v$[ebp+4]
  00653	23 55 c0	 and	 edx, DWORD PTR _v$[ebp+8]
  00656	23 5d c4	 and	 ebx, DWORD PTR _v$[ebp+12]
  00659	0b c2		 or	 eax, edx
  0065b	0b cb		 or	 ecx, ebx
  0065d	03 f0		 add	 esi, eax
  0065f	13 f9		 adc	 edi, ecx
  00661	03 75 e8	 add	 esi, DWORD PTR _v$[ebp+48]
  00664	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+52]
  00667	13 c7		 adc	 eax, edi
  00669	89 75 e8	 mov	 DWORD PTR _v$[ebp+48], esi
  0066c	89 45 ec	 mov	 DWORD PTR _v$[ebp+52], eax

; 520  :         v_cycle( 2, j); v_cycle( 3, j);

  0066f	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00673	0f 84 49 01 00
	00		 je	 $LN10@sha512_com
  00679	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0067c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0067e	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00681	b1 13		 mov	 cl, 19			; 00000013H
  00683	e8 00 00 00 00	 call	 __aullshr
  00688	8b f0		 mov	 esi, eax
  0068a	8b fa		 mov	 edi, edx
  0068c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0068f	8b 02		 mov	 eax, DWORD PTR [edx]
  00691	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  00694	b1 2d		 mov	 cl, 45			; 0000002dH
  00696	e8 00 00 00 00	 call	 __allshl
  0069b	0b f0		 or	 esi, eax
  0069d	0b fa		 or	 edi, edx
  0069f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  006a2	8b 01		 mov	 eax, DWORD PTR [ecx]
  006a4	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  006a7	b1 3d		 mov	 cl, 61			; 0000003dH
  006a9	e8 00 00 00 00	 call	 __aullshr
  006ae	8b d8		 mov	 ebx, eax
  006b0	8b c2		 mov	 eax, edx
  006b2	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  006b5	89 85 28 ff ff
	ff		 mov	 DWORD PTR tv7154[ebp], eax
  006bb	8b 02		 mov	 eax, DWORD PTR [edx]
  006bd	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  006c0	b1 03		 mov	 cl, 3
  006c2	e8 00 00 00 00	 call	 __allshl
  006c7	0b d8		 or	 ebx, eax
  006c9	8b 85 28 ff ff
	ff		 mov	 eax, DWORD PTR tv7154[ebp]
  006cf	0b c2		 or	 eax, edx
  006d1	33 f3		 xor	 esi, ebx
  006d3	33 f8		 xor	 edi, eax
  006d5	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  006d8	8b 01		 mov	 eax, DWORD PTR [ecx]
  006da	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  006dd	b1 06		 mov	 cl, 6
  006df	e8 00 00 00 00	 call	 __aullshr
  006e4	33 f0		 xor	 esi, eax
  006e6	33 fa		 xor	 edi, edx
  006e8	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  006eb	03 72 58	 add	 esi, DWORD PTR [edx+88]
  006ee	13 7a 5c	 adc	 edi, DWORD PTR [edx+92]
  006f1	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  006f4	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  006f7	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  006fa	b1 01		 mov	 cl, 1
  006fc	e8 00 00 00 00	 call	 __aullshr
  00701	8b d8		 mov	 ebx, eax
  00703	8b c2		 mov	 eax, edx
  00705	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00708	89 85 24 ff ff
	ff		 mov	 DWORD PTR tv7156[ebp], eax
  0070e	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00711	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  00714	b1 3f		 mov	 cl, 63			; 0000003fH
  00716	e8 00 00 00 00	 call	 __allshl
  0071b	0b d8		 or	 ebx, eax
  0071d	8b 85 24 ff ff
	ff		 mov	 eax, DWORD PTR tv7156[ebp]
  00723	0b c2		 or	 eax, edx
  00725	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00728	89 85 20 ff ff
	ff		 mov	 DWORD PTR tv7158[ebp], eax
  0072e	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00731	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  00734	b1 08		 mov	 cl, 8
  00736	e8 00 00 00 00	 call	 __aullshr
  0073b	8b ca		 mov	 ecx, edx
  0073d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00740	89 85 1c ff ff
	ff		 mov	 DWORD PTR tv7160[ebp], eax
  00746	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00749	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  0074c	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv7162[ebp], ecx
  00752	b1 38		 mov	 cl, 56			; 00000038H
  00754	e8 00 00 00 00	 call	 __allshl
  00759	8b 8d 1c ff ff
	ff		 mov	 ecx, DWORD PTR tv7160[ebp]
  0075f	0b c8		 or	 ecx, eax
  00761	8b 85 18 ff ff
	ff		 mov	 eax, DWORD PTR tv7162[ebp]
  00767	0b c2		 or	 eax, edx
  00769	33 d9		 xor	 ebx, ecx
  0076b	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR tv7158[ebp]
  00771	33 c8		 xor	 ecx, eax
  00773	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00776	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00779	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  0077c	89 8d 14 ff ff
	ff		 mov	 DWORD PTR tv7164[ebp], ecx
  00782	b1 07		 mov	 cl, 7
  00784	e8 00 00 00 00	 call	 __aullshr
  00789	33 d8		 xor	 ebx, eax
  0078b	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR tv7164[ebp]
  00791	33 c2		 xor	 eax, edx
  00793	03 f3		 add	 esi, ebx
  00795	13 f8		 adc	 edi, eax
  00797	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0079a	03 70 10	 add	 esi, DWORD PTR [eax+16]
  0079d	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  007a0	13 cf		 adc	 ecx, edi
  007a2	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  007a5	89 72 10	 mov	 DWORD PTR [edx+16], esi
  007a8	89 4a 14	 mov	 DWORD PTR [edx+20], ecx
  007ab	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  007ae	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  007b1	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv333[ebp], ecx
  007b7	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  007ba	89 95 10 ff ff
	ff		 mov	 DWORD PTR tv333[ebp+4], edx
  007c0	eb 15		 jmp	 SHORT $LN11@sha512_com
$LN10@sha512_com:
  007c2	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  007c5	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  007c8	89 8d 0c ff ff
	ff		 mov	 DWORD PTR tv333[ebp], ecx
  007ce	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  007d1	89 95 10 ff ff
	ff		 mov	 DWORD PTR tv333[ebp+4], edx
$LN11@sha512_com:
  007d7	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  007da	8b b5 0c ff ff
	ff		 mov	 esi, DWORD PTR tv333[ebp]
  007e0	03 34 c5 10 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+16]
  007e7	8b bd 10 ff ff
	ff		 mov	 edi, DWORD PTR tv333[ebp+4]
  007ed	13 3c c5 14 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+20]
  007f4	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  007f7	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  007fa	b1 0e		 mov	 cl, 14			; 0000000eH
  007fc	e8 00 00 00 00	 call	 __aullshr
  00801	8b d8		 mov	 ebx, eax
  00803	8b c2		 mov	 eax, edx
  00805	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv7166[ebp], eax
  0080b	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0080e	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  00811	b1 32		 mov	 cl, 50			; 00000032H
  00813	e8 00 00 00 00	 call	 __allshl
  00818	0b d8		 or	 ebx, eax
  0081a	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR tv7166[ebp]
  00820	0b c2		 or	 eax, edx
  00822	89 85 04 ff ff
	ff		 mov	 DWORD PTR tv7168[ebp], eax
  00828	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0082b	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0082e	b1 12		 mov	 cl, 18			; 00000012H
  00830	e8 00 00 00 00	 call	 __aullshr
  00835	8b ca		 mov	 ecx, edx
  00837	89 85 00 ff ff
	ff		 mov	 DWORD PTR tv7170[ebp], eax
  0083d	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  00840	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  00843	89 8d fc fe ff
	ff		 mov	 DWORD PTR tv7172[ebp], ecx
  00849	b1 2e		 mov	 cl, 46			; 0000002eH
  0084b	e8 00 00 00 00	 call	 __allshl
  00850	8b 8d 00 ff ff
	ff		 mov	 ecx, DWORD PTR tv7170[ebp]
  00856	0b c8		 or	 ecx, eax
  00858	8b 85 fc fe ff
	ff		 mov	 eax, DWORD PTR tv7172[ebp]
  0085e	0b c2		 or	 eax, edx
  00860	33 d9		 xor	 ebx, ecx
  00862	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR tv7168[ebp]
  00868	33 c8		 xor	 ecx, eax
  0086a	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0086d	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  00870	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv7174[ebp], ecx
  00876	b1 29		 mov	 cl, 41			; 00000029H
  00878	e8 00 00 00 00	 call	 __aullshr
  0087d	8b ca		 mov	 ecx, edx
  0087f	89 85 f4 fe ff
	ff		 mov	 DWORD PTR tv7176[ebp], eax
  00885	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  00888	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0088b	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv7178[ebp], ecx
  00891	b1 17		 mov	 cl, 23			; 00000017H
  00893	e8 00 00 00 00	 call	 __allshl
  00898	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv7176[ebp]
  0089e	0b c8		 or	 ecx, eax
  008a0	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR tv7178[ebp]
  008a6	0b c2		 or	 eax, edx
  008a8	33 d9		 xor	 ebx, ecx
  008aa	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv7174[ebp]
  008b0	33 c8		 xor	 ecx, eax
  008b2	03 f3		 add	 esi, ebx
  008b4	13 f9		 adc	 edi, ecx
  008b6	8b 4d d0	 mov	 ecx, DWORD PTR _v$[ebp+24]
  008b9	33 4d d8	 xor	 ecx, DWORD PTR _v$[ebp+32]
  008bc	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  008bf	33 55 dc	 xor	 edx, DWORD PTR _v$[ebp+36]
  008c2	23 4d c8	 and	 ecx, DWORD PTR _v$[ebp+16]
  008c5	23 55 cc	 and	 edx, DWORD PTR _v$[ebp+20]
  008c8	33 4d d8	 xor	 ecx, DWORD PTR _v$[ebp+32]
  008cb	33 55 dc	 xor	 edx, DWORD PTR _v$[ebp+36]
  008ce	03 f1		 add	 esi, ecx
  008d0	13 fa		 adc	 edi, edx
  008d2	03 75 e0	 add	 esi, DWORD PTR _v$[ebp+40]
  008d5	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+44]
  008d8	13 c7		 adc	 eax, edi
  008da	89 75 e0	 mov	 DWORD PTR _v$[ebp+40], esi
  008dd	89 45 e4	 mov	 DWORD PTR _v$[ebp+44], eax
  008e0	8b 4d c0	 mov	 ecx, DWORD PTR _v$[ebp+8]
  008e3	03 4d e0	 add	 ecx, DWORD PTR _v$[ebp+40]
  008e6	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  008e9	13 55 e4	 adc	 edx, DWORD PTR _v$[ebp+44]
  008ec	89 4d c0	 mov	 DWORD PTR _v$[ebp+8], ecx
  008ef	89 55 c4	 mov	 DWORD PTR _v$[ebp+12], edx
  008f2	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  008f5	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  008f8	b1 1c		 mov	 cl, 28			; 0000001cH
  008fa	e8 00 00 00 00	 call	 __aullshr
  008ff	8b f0		 mov	 esi, eax
  00901	8b fa		 mov	 edi, edx
  00903	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  00906	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  00909	b1 24		 mov	 cl, 36			; 00000024H
  0090b	e8 00 00 00 00	 call	 __allshl
  00910	0b f0		 or	 esi, eax
  00912	0b fa		 or	 edi, edx
  00914	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  00917	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  0091a	b1 22		 mov	 cl, 34			; 00000022H
  0091c	e8 00 00 00 00	 call	 __aullshr
  00921	8b d8		 mov	 ebx, eax
  00923	8b c2		 mov	 eax, edx
  00925	89 85 ec fe ff
	ff		 mov	 DWORD PTR tv7180[ebp], eax
  0092b	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  0092e	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  00931	b1 1e		 mov	 cl, 30			; 0000001eH
  00933	e8 00 00 00 00	 call	 __allshl
  00938	0b d8		 or	 ebx, eax
  0093a	8b 85 ec fe ff
	ff		 mov	 eax, DWORD PTR tv7180[ebp]
  00940	0b c2		 or	 eax, edx
  00942	33 f3		 xor	 esi, ebx
  00944	33 f8		 xor	 edi, eax
  00946	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  00949	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  0094c	b1 27		 mov	 cl, 39			; 00000027H
  0094e	e8 00 00 00 00	 call	 __aullshr
  00953	8b d8		 mov	 ebx, eax
  00955	8b c2		 mov	 eax, edx
  00957	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv7182[ebp], eax
  0095d	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  00960	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  00963	b1 19		 mov	 cl, 25			; 00000019H
  00965	e8 00 00 00 00	 call	 __allshl
  0096a	0b d8		 or	 ebx, eax
  0096c	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv7182[ebp]
  00972	0b c2		 or	 eax, edx
  00974	33 f3		 xor	 esi, ebx
  00976	33 f8		 xor	 edi, eax
  00978	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  0097b	23 45 f0	 and	 eax, DWORD PTR _v$[ebp+56]
  0097e	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+52]
  00981	23 4d f4	 and	 ecx, DWORD PTR _v$[ebp+60]
  00984	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+48]
  00987	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+56]
  0098a	8b 5d ec	 mov	 ebx, DWORD PTR _v$[ebp+52]
  0098d	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+60]
  00990	23 55 b8	 and	 edx, DWORD PTR _v$[ebp]
  00993	23 5d bc	 and	 ebx, DWORD PTR _v$[ebp+4]
  00996	0b c2		 or	 eax, edx
  00998	0b cb		 or	 ecx, ebx
  0099a	03 f0		 add	 esi, eax
  0099c	13 f9		 adc	 edi, ecx
  0099e	03 75 e0	 add	 esi, DWORD PTR _v$[ebp+40]
  009a1	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+44]
  009a4	13 c7		 adc	 eax, edi
  009a6	89 75 e0	 mov	 DWORD PTR _v$[ebp+40], esi
  009a9	89 45 e4	 mov	 DWORD PTR _v$[ebp+44], eax
  009ac	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  009b0	0f 84 4e 01 00
	00		 je	 $LN12@sha512_com
  009b6	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  009b9	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  009bc	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  009bf	b1 13		 mov	 cl, 19			; 00000013H
  009c1	e8 00 00 00 00	 call	 __aullshr
  009c6	8b f0		 mov	 esi, eax
  009c8	8b fa		 mov	 edi, edx
  009ca	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  009cd	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  009d0	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  009d3	b1 2d		 mov	 cl, 45			; 0000002dH
  009d5	e8 00 00 00 00	 call	 __allshl
  009da	0b f0		 or	 esi, eax
  009dc	0b fa		 or	 edi, edx
  009de	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  009e1	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  009e4	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  009e7	b1 3d		 mov	 cl, 61			; 0000003dH
  009e9	e8 00 00 00 00	 call	 __aullshr
  009ee	8b d8		 mov	 ebx, eax
  009f0	8b c2		 mov	 eax, edx
  009f2	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  009f5	89 85 e4 fe ff
	ff		 mov	 DWORD PTR tv7184[ebp], eax
  009fb	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  009fe	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00a01	b1 03		 mov	 cl, 3
  00a03	e8 00 00 00 00	 call	 __allshl
  00a08	0b d8		 or	 ebx, eax
  00a0a	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv7184[ebp]
  00a10	0b c2		 or	 eax, edx
  00a12	33 f3		 xor	 esi, ebx
  00a14	33 f8		 xor	 edi, eax
  00a16	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00a19	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00a1c	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00a1f	b1 06		 mov	 cl, 6
  00a21	e8 00 00 00 00	 call	 __aullshr
  00a26	33 f0		 xor	 esi, eax
  00a28	33 fa		 xor	 edi, edx
  00a2a	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00a2d	03 72 60	 add	 esi, DWORD PTR [edx+96]
  00a30	13 7a 64	 adc	 edi, DWORD PTR [edx+100]
  00a33	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00a36	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00a39	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00a3c	b1 01		 mov	 cl, 1
  00a3e	e8 00 00 00 00	 call	 __aullshr
  00a43	8b d8		 mov	 ebx, eax
  00a45	8b c2		 mov	 eax, edx
  00a47	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00a4a	89 85 e0 fe ff
	ff		 mov	 DWORD PTR tv7186[ebp], eax
  00a50	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00a53	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  00a56	b1 3f		 mov	 cl, 63			; 0000003fH
  00a58	e8 00 00 00 00	 call	 __allshl
  00a5d	0b d8		 or	 ebx, eax
  00a5f	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR tv7186[ebp]
  00a65	0b c2		 or	 eax, edx
  00a67	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00a6a	89 85 dc fe ff
	ff		 mov	 DWORD PTR tv7188[ebp], eax
  00a70	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  00a73	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  00a76	b1 08		 mov	 cl, 8
  00a78	e8 00 00 00 00	 call	 __aullshr
  00a7d	8b ca		 mov	 ecx, edx
  00a7f	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00a82	89 85 d8 fe ff
	ff		 mov	 DWORD PTR tv7190[ebp], eax
  00a88	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00a8b	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  00a8e	89 8d d4 fe ff
	ff		 mov	 DWORD PTR tv7192[ebp], ecx
  00a94	b1 38		 mov	 cl, 56			; 00000038H
  00a96	e8 00 00 00 00	 call	 __allshl
  00a9b	8b 8d d8 fe ff
	ff		 mov	 ecx, DWORD PTR tv7190[ebp]
  00aa1	0b c8		 or	 ecx, eax
  00aa3	8b 85 d4 fe ff
	ff		 mov	 eax, DWORD PTR tv7192[ebp]
  00aa9	0b c2		 or	 eax, edx
  00aab	33 d9		 xor	 ebx, ecx
  00aad	8b 8d dc fe ff
	ff		 mov	 ecx, DWORD PTR tv7188[ebp]
  00ab3	33 c8		 xor	 ecx, eax
  00ab5	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00ab8	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  00abb	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  00abe	89 8d d0 fe ff
	ff		 mov	 DWORD PTR tv7194[ebp], ecx
  00ac4	b1 07		 mov	 cl, 7
  00ac6	e8 00 00 00 00	 call	 __aullshr
  00acb	33 d8		 xor	 ebx, eax
  00acd	8b 85 d0 fe ff
	ff		 mov	 eax, DWORD PTR tv7194[ebp]
  00ad3	33 c2		 xor	 eax, edx
  00ad5	03 f3		 add	 esi, ebx
  00ad7	13 f8		 adc	 edi, eax
  00ad9	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00adc	03 70 18	 add	 esi, DWORD PTR [eax+24]
  00adf	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00ae2	13 cf		 adc	 ecx, edi
  00ae4	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00ae7	89 72 18	 mov	 DWORD PTR [edx+24], esi
  00aea	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  00aed	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00af0	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00af3	89 8d c8 fe ff
	ff		 mov	 DWORD PTR tv437[ebp], ecx
  00af9	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00afc	89 95 cc fe ff
	ff		 mov	 DWORD PTR tv437[ebp+4], edx
  00b02	eb 15		 jmp	 SHORT $LN13@sha512_com
$LN12@sha512_com:
  00b04	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00b07	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00b0a	89 8d c8 fe ff
	ff		 mov	 DWORD PTR tv437[ebp], ecx
  00b10	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  00b13	89 95 cc fe ff
	ff		 mov	 DWORD PTR tv437[ebp+4], edx
$LN13@sha512_com:
  00b19	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  00b1c	8b b5 c8 fe ff
	ff		 mov	 esi, DWORD PTR tv437[ebp]
  00b22	03 34 c5 18 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+24]
  00b29	8b bd cc fe ff
	ff		 mov	 edi, DWORD PTR tv437[ebp+4]
  00b2f	13 3c c5 1c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+28]
  00b36	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  00b39	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  00b3c	b1 0e		 mov	 cl, 14			; 0000000eH
  00b3e	e8 00 00 00 00	 call	 __aullshr
  00b43	8b d8		 mov	 ebx, eax
  00b45	8b c2		 mov	 eax, edx
  00b47	89 85 c4 fe ff
	ff		 mov	 DWORD PTR tv7196[ebp], eax
  00b4d	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  00b50	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  00b53	b1 32		 mov	 cl, 50			; 00000032H
  00b55	e8 00 00 00 00	 call	 __allshl
  00b5a	0b d8		 or	 ebx, eax
  00b5c	8b 85 c4 fe ff
	ff		 mov	 eax, DWORD PTR tv7196[ebp]
  00b62	0b c2		 or	 eax, edx
  00b64	89 85 c0 fe ff
	ff		 mov	 DWORD PTR tv7198[ebp], eax
  00b6a	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  00b6d	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  00b70	b1 12		 mov	 cl, 18			; 00000012H
  00b72	e8 00 00 00 00	 call	 __aullshr
  00b77	8b ca		 mov	 ecx, edx
  00b79	89 85 bc fe ff
	ff		 mov	 DWORD PTR tv7200[ebp], eax
  00b7f	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  00b82	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  00b85	89 8d b8 fe ff
	ff		 mov	 DWORD PTR tv7202[ebp], ecx
  00b8b	b1 2e		 mov	 cl, 46			; 0000002eH
  00b8d	e8 00 00 00 00	 call	 __allshl
  00b92	8b 8d bc fe ff
	ff		 mov	 ecx, DWORD PTR tv7200[ebp]
  00b98	0b c8		 or	 ecx, eax
  00b9a	8b 85 b8 fe ff
	ff		 mov	 eax, DWORD PTR tv7202[ebp]
  00ba0	0b c2		 or	 eax, edx
  00ba2	33 d9		 xor	 ebx, ecx
  00ba4	8b 8d c0 fe ff
	ff		 mov	 ecx, DWORD PTR tv7198[ebp]
  00baa	33 c8		 xor	 ecx, eax
  00bac	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  00baf	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  00bb2	89 8d b4 fe ff
	ff		 mov	 DWORD PTR tv7204[ebp], ecx
  00bb8	b1 29		 mov	 cl, 41			; 00000029H
  00bba	e8 00 00 00 00	 call	 __aullshr
  00bbf	8b ca		 mov	 ecx, edx
  00bc1	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv7206[ebp], eax
  00bc7	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  00bca	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  00bcd	89 8d ac fe ff
	ff		 mov	 DWORD PTR tv7208[ebp], ecx
  00bd3	b1 17		 mov	 cl, 23			; 00000017H
  00bd5	e8 00 00 00 00	 call	 __allshl
  00bda	8b 8d b0 fe ff
	ff		 mov	 ecx, DWORD PTR tv7206[ebp]
  00be0	0b c8		 or	 ecx, eax
  00be2	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR tv7208[ebp]
  00be8	0b c2		 or	 eax, edx
  00bea	33 d9		 xor	 ebx, ecx
  00bec	8b 8d b4 fe ff
	ff		 mov	 ecx, DWORD PTR tv7204[ebp]
  00bf2	33 c8		 xor	 ecx, eax
  00bf4	03 f3		 add	 esi, ebx
  00bf6	13 f9		 adc	 edi, ecx
  00bf8	8b 4d c8	 mov	 ecx, DWORD PTR _v$[ebp+16]
  00bfb	33 4d d0	 xor	 ecx, DWORD PTR _v$[ebp+24]
  00bfe	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  00c01	33 55 d4	 xor	 edx, DWORD PTR _v$[ebp+28]
  00c04	23 4d c0	 and	 ecx, DWORD PTR _v$[ebp+8]
  00c07	23 55 c4	 and	 edx, DWORD PTR _v$[ebp+12]
  00c0a	33 4d d0	 xor	 ecx, DWORD PTR _v$[ebp+24]
  00c0d	33 55 d4	 xor	 edx, DWORD PTR _v$[ebp+28]
  00c10	03 f1		 add	 esi, ecx
  00c12	13 fa		 adc	 edi, edx
  00c14	03 75 d8	 add	 esi, DWORD PTR _v$[ebp+32]
  00c17	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+36]
  00c1a	13 c7		 adc	 eax, edi
  00c1c	89 75 d8	 mov	 DWORD PTR _v$[ebp+32], esi
  00c1f	89 45 dc	 mov	 DWORD PTR _v$[ebp+36], eax
  00c22	8b 4d b8	 mov	 ecx, DWORD PTR _v$[ebp]
  00c25	03 4d d8	 add	 ecx, DWORD PTR _v$[ebp+32]
  00c28	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00c2b	13 55 dc	 adc	 edx, DWORD PTR _v$[ebp+36]
  00c2e	89 4d b8	 mov	 DWORD PTR _v$[ebp], ecx
  00c31	89 55 bc	 mov	 DWORD PTR _v$[ebp+4], edx
  00c34	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  00c37	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  00c3a	b1 1c		 mov	 cl, 28			; 0000001cH
  00c3c	e8 00 00 00 00	 call	 __aullshr
  00c41	8b f0		 mov	 esi, eax
  00c43	8b fa		 mov	 edi, edx
  00c45	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  00c48	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  00c4b	b1 24		 mov	 cl, 36			; 00000024H
  00c4d	e8 00 00 00 00	 call	 __allshl
  00c52	0b f0		 or	 esi, eax
  00c54	0b fa		 or	 edi, edx
  00c56	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  00c59	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  00c5c	b1 22		 mov	 cl, 34			; 00000022H
  00c5e	e8 00 00 00 00	 call	 __aullshr
  00c63	8b d8		 mov	 ebx, eax
  00c65	8b c2		 mov	 eax, edx
  00c67	89 85 a8 fe ff
	ff		 mov	 DWORD PTR tv7210[ebp], eax
  00c6d	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  00c70	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  00c73	b1 1e		 mov	 cl, 30			; 0000001eH
  00c75	e8 00 00 00 00	 call	 __allshl
  00c7a	0b d8		 or	 ebx, eax
  00c7c	8b 85 a8 fe ff
	ff		 mov	 eax, DWORD PTR tv7210[ebp]
  00c82	0b c2		 or	 eax, edx
  00c84	33 f3		 xor	 esi, ebx
  00c86	33 f8		 xor	 edi, eax
  00c88	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  00c8b	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  00c8e	b1 27		 mov	 cl, 39			; 00000027H
  00c90	e8 00 00 00 00	 call	 __aullshr
  00c95	8b d8		 mov	 ebx, eax
  00c97	8b c2		 mov	 eax, edx
  00c99	89 85 a4 fe ff
	ff		 mov	 DWORD PTR tv7212[ebp], eax
  00c9f	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  00ca2	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  00ca5	b1 19		 mov	 cl, 25			; 00000019H
  00ca7	e8 00 00 00 00	 call	 __allshl
  00cac	0b d8		 or	 ebx, eax
  00cae	8b 85 a4 fe ff
	ff		 mov	 eax, DWORD PTR tv7212[ebp]
  00cb4	0b c2		 or	 eax, edx
  00cb6	33 f3		 xor	 esi, ebx
  00cb8	33 f8		 xor	 edi, eax
  00cba	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  00cbd	23 45 e8	 and	 eax, DWORD PTR _v$[ebp+48]
  00cc0	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+44]
  00cc3	23 4d ec	 and	 ecx, DWORD PTR _v$[ebp+52]
  00cc6	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+40]
  00cc9	33 55 e8	 xor	 edx, DWORD PTR _v$[ebp+48]
  00ccc	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+44]
  00ccf	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+52]
  00cd2	23 55 f0	 and	 edx, DWORD PTR _v$[ebp+56]
  00cd5	23 5d f4	 and	 ebx, DWORD PTR _v$[ebp+60]
  00cd8	0b c2		 or	 eax, edx
  00cda	0b cb		 or	 ecx, ebx
  00cdc	03 f0		 add	 esi, eax
  00cde	13 f9		 adc	 edi, ecx
  00ce0	03 75 d8	 add	 esi, DWORD PTR _v$[ebp+32]
  00ce3	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+36]
  00ce6	13 c7		 adc	 eax, edi
  00ce8	89 75 d8	 mov	 DWORD PTR _v$[ebp+32], esi
  00ceb	89 45 dc	 mov	 DWORD PTR _v$[ebp+36], eax

; 521  :         v_cycle( 4, j); v_cycle( 5, j);

  00cee	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  00cf2	0f 84 4e 01 00
	00		 je	 $LN14@sha512_com
  00cf8	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00cfb	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00cfe	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00d01	b1 13		 mov	 cl, 19			; 00000013H
  00d03	e8 00 00 00 00	 call	 __aullshr
  00d08	8b f0		 mov	 esi, eax
  00d0a	8b fa		 mov	 edi, edx
  00d0c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00d0f	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00d12	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  00d15	b1 2d		 mov	 cl, 45			; 0000002dH
  00d17	e8 00 00 00 00	 call	 __allshl
  00d1c	0b f0		 or	 esi, eax
  00d1e	0b fa		 or	 edi, edx
  00d20	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00d23	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00d26	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00d29	b1 3d		 mov	 cl, 61			; 0000003dH
  00d2b	e8 00 00 00 00	 call	 __aullshr
  00d30	8b d8		 mov	 ebx, eax
  00d32	8b c2		 mov	 eax, edx
  00d34	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00d37	89 85 a0 fe ff
	ff		 mov	 DWORD PTR tv7214[ebp], eax
  00d3d	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00d40	8b 52 14	 mov	 edx, DWORD PTR [edx+20]
  00d43	b1 03		 mov	 cl, 3
  00d45	e8 00 00 00 00	 call	 __allshl
  00d4a	0b d8		 or	 ebx, eax
  00d4c	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR tv7214[ebp]
  00d52	0b c2		 or	 eax, edx
  00d54	33 f3		 xor	 esi, ebx
  00d56	33 f8		 xor	 edi, eax
  00d58	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00d5b	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00d5e	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  00d61	b1 06		 mov	 cl, 6
  00d63	e8 00 00 00 00	 call	 __aullshr
  00d68	33 f0		 xor	 esi, eax
  00d6a	33 fa		 xor	 edi, edx
  00d6c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00d6f	03 72 68	 add	 esi, DWORD PTR [edx+104]
  00d72	13 7a 6c	 adc	 edi, DWORD PTR [edx+108]
  00d75	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00d78	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00d7b	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00d7e	b1 01		 mov	 cl, 1
  00d80	e8 00 00 00 00	 call	 __aullshr
  00d85	8b d8		 mov	 ebx, eax
  00d87	8b c2		 mov	 eax, edx
  00d89	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00d8c	89 85 9c fe ff
	ff		 mov	 DWORD PTR tv7216[ebp], eax
  00d92	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00d95	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00d98	b1 3f		 mov	 cl, 63			; 0000003fH
  00d9a	e8 00 00 00 00	 call	 __allshl
  00d9f	0b d8		 or	 ebx, eax
  00da1	8b 85 9c fe ff
	ff		 mov	 eax, DWORD PTR tv7216[ebp]
  00da7	0b c2		 or	 eax, edx
  00da9	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  00dac	89 85 98 fe ff
	ff		 mov	 DWORD PTR tv7218[ebp], eax
  00db2	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  00db5	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00db8	b1 08		 mov	 cl, 8
  00dba	e8 00 00 00 00	 call	 __aullshr
  00dbf	8b ca		 mov	 ecx, edx
  00dc1	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00dc4	89 85 94 fe ff
	ff		 mov	 DWORD PTR tv7220[ebp], eax
  00dca	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00dcd	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00dd0	89 8d 90 fe ff
	ff		 mov	 DWORD PTR tv7222[ebp], ecx
  00dd6	b1 38		 mov	 cl, 56			; 00000038H
  00dd8	e8 00 00 00 00	 call	 __allshl
  00ddd	8b 8d 94 fe ff
	ff		 mov	 ecx, DWORD PTR tv7220[ebp]
  00de3	0b c8		 or	 ecx, eax
  00de5	8b 85 90 fe ff
	ff		 mov	 eax, DWORD PTR tv7222[ebp]
  00deb	0b c2		 or	 eax, edx
  00ded	33 d9		 xor	 ebx, ecx
  00def	8b 8d 98 fe ff
	ff		 mov	 ecx, DWORD PTR tv7218[ebp]
  00df5	33 c8		 xor	 ecx, eax
  00df7	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00dfa	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  00dfd	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  00e00	89 8d 8c fe ff
	ff		 mov	 DWORD PTR tv7224[ebp], ecx
  00e06	b1 07		 mov	 cl, 7
  00e08	e8 00 00 00 00	 call	 __aullshr
  00e0d	33 d8		 xor	 ebx, eax
  00e0f	8b 85 8c fe ff
	ff		 mov	 eax, DWORD PTR tv7224[ebp]
  00e15	33 c2		 xor	 eax, edx
  00e17	03 f3		 add	 esi, ebx
  00e19	13 f8		 adc	 edi, eax
  00e1b	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e1e	03 70 20	 add	 esi, DWORD PTR [eax+32]
  00e21	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  00e24	13 cf		 adc	 ecx, edi
  00e26	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  00e29	89 72 20	 mov	 DWORD PTR [edx+32], esi
  00e2c	89 4a 24	 mov	 DWORD PTR [edx+36], ecx
  00e2f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e32	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00e35	89 8d 84 fe ff
	ff		 mov	 DWORD PTR tv540[ebp], ecx
  00e3b	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00e3e	89 95 88 fe ff
	ff		 mov	 DWORD PTR tv540[ebp+4], edx
  00e44	eb 15		 jmp	 SHORT $LN15@sha512_com
$LN14@sha512_com:
  00e46	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  00e49	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00e4c	89 8d 84 fe ff
	ff		 mov	 DWORD PTR tv540[ebp], ecx
  00e52	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  00e55	89 95 88 fe ff
	ff		 mov	 DWORD PTR tv540[ebp+4], edx
$LN15@sha512_com:
  00e5b	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  00e5e	8b b5 84 fe ff
	ff		 mov	 esi, DWORD PTR tv540[ebp]
  00e64	03 34 c5 20 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+32]
  00e6b	8b bd 88 fe ff
	ff		 mov	 edi, DWORD PTR tv540[ebp+4]
  00e71	13 3c c5 24 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+36]
  00e78	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00e7b	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00e7e	b1 0e		 mov	 cl, 14			; 0000000eH
  00e80	e8 00 00 00 00	 call	 __aullshr
  00e85	8b d8		 mov	 ebx, eax
  00e87	8b c2		 mov	 eax, edx
  00e89	89 85 80 fe ff
	ff		 mov	 DWORD PTR tv7226[ebp], eax
  00e8f	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00e92	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00e95	b1 32		 mov	 cl, 50			; 00000032H
  00e97	e8 00 00 00 00	 call	 __allshl
  00e9c	0b d8		 or	 ebx, eax
  00e9e	8b 85 80 fe ff
	ff		 mov	 eax, DWORD PTR tv7226[ebp]
  00ea4	0b c2		 or	 eax, edx
  00ea6	89 85 7c fe ff
	ff		 mov	 DWORD PTR tv7228[ebp], eax
  00eac	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00eaf	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00eb2	b1 12		 mov	 cl, 18			; 00000012H
  00eb4	e8 00 00 00 00	 call	 __aullshr
  00eb9	8b ca		 mov	 ecx, edx
  00ebb	89 85 78 fe ff
	ff		 mov	 DWORD PTR tv7230[ebp], eax
  00ec1	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00ec4	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00ec7	89 8d 74 fe ff
	ff		 mov	 DWORD PTR tv7232[ebp], ecx
  00ecd	b1 2e		 mov	 cl, 46			; 0000002eH
  00ecf	e8 00 00 00 00	 call	 __allshl
  00ed4	8b 8d 78 fe ff
	ff		 mov	 ecx, DWORD PTR tv7230[ebp]
  00eda	0b c8		 or	 ecx, eax
  00edc	8b 85 74 fe ff
	ff		 mov	 eax, DWORD PTR tv7232[ebp]
  00ee2	0b c2		 or	 eax, edx
  00ee4	33 d9		 xor	 ebx, ecx
  00ee6	8b 8d 7c fe ff
	ff		 mov	 ecx, DWORD PTR tv7228[ebp]
  00eec	33 c8		 xor	 ecx, eax
  00eee	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00ef1	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00ef4	89 8d 70 fe ff
	ff		 mov	 DWORD PTR tv7234[ebp], ecx
  00efa	b1 29		 mov	 cl, 41			; 00000029H
  00efc	e8 00 00 00 00	 call	 __aullshr
  00f01	8b ca		 mov	 ecx, edx
  00f03	89 85 6c fe ff
	ff		 mov	 DWORD PTR tv7236[ebp], eax
  00f09	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  00f0c	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  00f0f	89 8d 68 fe ff
	ff		 mov	 DWORD PTR tv7238[ebp], ecx
  00f15	b1 17		 mov	 cl, 23			; 00000017H
  00f17	e8 00 00 00 00	 call	 __allshl
  00f1c	8b 8d 6c fe ff
	ff		 mov	 ecx, DWORD PTR tv7236[ebp]
  00f22	0b c8		 or	 ecx, eax
  00f24	8b 85 68 fe ff
	ff		 mov	 eax, DWORD PTR tv7238[ebp]
  00f2a	0b c2		 or	 eax, edx
  00f2c	33 d9		 xor	 ebx, ecx
  00f2e	8b 8d 70 fe ff
	ff		 mov	 ecx, DWORD PTR tv7234[ebp]
  00f34	33 c8		 xor	 ecx, eax
  00f36	03 f3		 add	 esi, ebx
  00f38	13 f9		 adc	 edi, ecx
  00f3a	8b 4d c0	 mov	 ecx, DWORD PTR _v$[ebp+8]
  00f3d	33 4d c8	 xor	 ecx, DWORD PTR _v$[ebp+16]
  00f40	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  00f43	33 55 cc	 xor	 edx, DWORD PTR _v$[ebp+20]
  00f46	23 4d b8	 and	 ecx, DWORD PTR _v$[ebp]
  00f49	23 55 bc	 and	 edx, DWORD PTR _v$[ebp+4]
  00f4c	33 4d c8	 xor	 ecx, DWORD PTR _v$[ebp+16]
  00f4f	33 55 cc	 xor	 edx, DWORD PTR _v$[ebp+20]
  00f52	03 f1		 add	 esi, ecx
  00f54	13 fa		 adc	 edi, edx
  00f56	03 75 d0	 add	 esi, DWORD PTR _v$[ebp+24]
  00f59	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+28]
  00f5c	13 c7		 adc	 eax, edi
  00f5e	89 75 d0	 mov	 DWORD PTR _v$[ebp+24], esi
  00f61	89 45 d4	 mov	 DWORD PTR _v$[ebp+28], eax
  00f64	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+56]
  00f67	03 4d d0	 add	 ecx, DWORD PTR _v$[ebp+24]
  00f6a	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  00f6d	13 55 d4	 adc	 edx, DWORD PTR _v$[ebp+28]
  00f70	89 4d f0	 mov	 DWORD PTR _v$[ebp+56], ecx
  00f73	89 55 f4	 mov	 DWORD PTR _v$[ebp+60], edx
  00f76	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00f79	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00f7c	b1 1c		 mov	 cl, 28			; 0000001cH
  00f7e	e8 00 00 00 00	 call	 __aullshr
  00f83	8b f0		 mov	 esi, eax
  00f85	8b fa		 mov	 edi, edx
  00f87	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00f8a	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00f8d	b1 24		 mov	 cl, 36			; 00000024H
  00f8f	e8 00 00 00 00	 call	 __allshl
  00f94	0b f0		 or	 esi, eax
  00f96	0b fa		 or	 edi, edx
  00f98	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00f9b	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00f9e	b1 22		 mov	 cl, 34			; 00000022H
  00fa0	e8 00 00 00 00	 call	 __aullshr
  00fa5	8b d8		 mov	 ebx, eax
  00fa7	8b c2		 mov	 eax, edx
  00fa9	89 85 64 fe ff
	ff		 mov	 DWORD PTR tv7240[ebp], eax
  00faf	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00fb2	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00fb5	b1 1e		 mov	 cl, 30			; 0000001eH
  00fb7	e8 00 00 00 00	 call	 __allshl
  00fbc	0b d8		 or	 ebx, eax
  00fbe	8b 85 64 fe ff
	ff		 mov	 eax, DWORD PTR tv7240[ebp]
  00fc4	0b c2		 or	 eax, edx
  00fc6	33 f3		 xor	 esi, ebx
  00fc8	33 f8		 xor	 edi, eax
  00fca	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00fcd	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00fd0	b1 27		 mov	 cl, 39			; 00000027H
  00fd2	e8 00 00 00 00	 call	 __aullshr
  00fd7	8b d8		 mov	 ebx, eax
  00fd9	8b c2		 mov	 eax, edx
  00fdb	89 85 60 fe ff
	ff		 mov	 DWORD PTR tv7242[ebp], eax
  00fe1	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00fe4	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  00fe7	b1 19		 mov	 cl, 25			; 00000019H
  00fe9	e8 00 00 00 00	 call	 __allshl
  00fee	0b d8		 or	 ebx, eax
  00ff0	8b 85 60 fe ff
	ff		 mov	 eax, DWORD PTR tv7242[ebp]
  00ff6	0b c2		 or	 eax, edx
  00ff8	33 f3		 xor	 esi, ebx
  00ffa	33 f8		 xor	 edi, eax
  00ffc	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  00fff	23 45 e0	 and	 eax, DWORD PTR _v$[ebp+40]
  01002	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp+36]
  01005	23 4d e4	 and	 ecx, DWORD PTR _v$[ebp+44]
  01008	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+32]
  0100b	33 55 e0	 xor	 edx, DWORD PTR _v$[ebp+40]
  0100e	8b 5d dc	 mov	 ebx, DWORD PTR _v$[ebp+36]
  01011	33 5d e4	 xor	 ebx, DWORD PTR _v$[ebp+44]
  01014	23 55 e8	 and	 edx, DWORD PTR _v$[ebp+48]
  01017	23 5d ec	 and	 ebx, DWORD PTR _v$[ebp+52]
  0101a	0b c2		 or	 eax, edx
  0101c	0b cb		 or	 ecx, ebx
  0101e	03 f0		 add	 esi, eax
  01020	13 f9		 adc	 edi, ecx
  01022	03 75 d0	 add	 esi, DWORD PTR _v$[ebp+24]
  01025	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+28]
  01028	13 c7		 adc	 eax, edi
  0102a	89 75 d0	 mov	 DWORD PTR _v$[ebp+24], esi
  0102d	89 45 d4	 mov	 DWORD PTR _v$[ebp+28], eax
  01030	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01034	0f 84 4e 01 00
	00		 je	 $LN16@sha512_com
  0103a	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0103d	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  01040	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  01043	b1 13		 mov	 cl, 19			; 00000013H
  01045	e8 00 00 00 00	 call	 __aullshr
  0104a	8b f0		 mov	 esi, eax
  0104c	8b fa		 mov	 edi, edx
  0104e	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01051	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  01054	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  01057	b1 2d		 mov	 cl, 45			; 0000002dH
  01059	e8 00 00 00 00	 call	 __allshl
  0105e	0b f0		 or	 esi, eax
  01060	0b fa		 or	 edi, edx
  01062	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01065	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  01068	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0106b	b1 3d		 mov	 cl, 61			; 0000003dH
  0106d	e8 00 00 00 00	 call	 __aullshr
  01072	8b d8		 mov	 ebx, eax
  01074	8b c2		 mov	 eax, edx
  01076	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01079	89 85 5c fe ff
	ff		 mov	 DWORD PTR tv7244[ebp], eax
  0107f	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  01082	8b 52 1c	 mov	 edx, DWORD PTR [edx+28]
  01085	b1 03		 mov	 cl, 3
  01087	e8 00 00 00 00	 call	 __allshl
  0108c	0b d8		 or	 ebx, eax
  0108e	8b 85 5c fe ff
	ff		 mov	 eax, DWORD PTR tv7244[ebp]
  01094	0b c2		 or	 eax, edx
  01096	33 f3		 xor	 esi, ebx
  01098	33 f8		 xor	 edi, eax
  0109a	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0109d	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  010a0	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  010a3	b1 06		 mov	 cl, 6
  010a5	e8 00 00 00 00	 call	 __aullshr
  010aa	33 f0		 xor	 esi, eax
  010ac	33 fa		 xor	 edi, edx
  010ae	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  010b1	03 72 70	 add	 esi, DWORD PTR [edx+112]
  010b4	13 7a 74	 adc	 edi, DWORD PTR [edx+116]
  010b7	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  010ba	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  010bd	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  010c0	b1 01		 mov	 cl, 1
  010c2	e8 00 00 00 00	 call	 __aullshr
  010c7	8b d8		 mov	 ebx, eax
  010c9	8b c2		 mov	 eax, edx
  010cb	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  010ce	89 85 58 fe ff
	ff		 mov	 DWORD PTR tv7246[ebp], eax
  010d4	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  010d7	8b 52 34	 mov	 edx, DWORD PTR [edx+52]
  010da	b1 3f		 mov	 cl, 63			; 0000003fH
  010dc	e8 00 00 00 00	 call	 __allshl
  010e1	0b d8		 or	 ebx, eax
  010e3	8b 85 58 fe ff
	ff		 mov	 eax, DWORD PTR tv7246[ebp]
  010e9	0b c2		 or	 eax, edx
  010eb	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  010ee	89 85 54 fe ff
	ff		 mov	 DWORD PTR tv7248[ebp], eax
  010f4	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  010f7	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  010fa	b1 08		 mov	 cl, 8
  010fc	e8 00 00 00 00	 call	 __aullshr
  01101	8b ca		 mov	 ecx, edx
  01103	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01106	89 85 50 fe ff
	ff		 mov	 DWORD PTR tv7250[ebp], eax
  0110c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0110f	8b 52 34	 mov	 edx, DWORD PTR [edx+52]
  01112	89 8d 4c fe ff
	ff		 mov	 DWORD PTR tv7252[ebp], ecx
  01118	b1 38		 mov	 cl, 56			; 00000038H
  0111a	e8 00 00 00 00	 call	 __allshl
  0111f	8b 8d 50 fe ff
	ff		 mov	 ecx, DWORD PTR tv7250[ebp]
  01125	0b c8		 or	 ecx, eax
  01127	8b 85 4c fe ff
	ff		 mov	 eax, DWORD PTR tv7252[ebp]
  0112d	0b c2		 or	 eax, edx
  0112f	33 d9		 xor	 ebx, ecx
  01131	8b 8d 54 fe ff
	ff		 mov	 ecx, DWORD PTR tv7248[ebp]
  01137	33 c8		 xor	 ecx, eax
  01139	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0113c	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0113f	8b 52 34	 mov	 edx, DWORD PTR [edx+52]
  01142	89 8d 48 fe ff
	ff		 mov	 DWORD PTR tv7254[ebp], ecx
  01148	b1 07		 mov	 cl, 7
  0114a	e8 00 00 00 00	 call	 __aullshr
  0114f	33 d8		 xor	 ebx, eax
  01151	8b 85 48 fe ff
	ff		 mov	 eax, DWORD PTR tv7254[ebp]
  01157	33 c2		 xor	 eax, edx
  01159	03 f3		 add	 esi, ebx
  0115b	13 f8		 adc	 edi, eax
  0115d	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01160	03 70 28	 add	 esi, DWORD PTR [eax+40]
  01163	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  01166	13 cf		 adc	 ecx, edi
  01168	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0116b	89 72 28	 mov	 DWORD PTR [edx+40], esi
  0116e	89 4a 2c	 mov	 DWORD PTR [edx+44], ecx
  01171	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01174	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  01177	89 8d 40 fe ff
	ff		 mov	 DWORD PTR tv638[ebp], ecx
  0117d	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  01180	89 95 44 fe ff
	ff		 mov	 DWORD PTR tv638[ebp+4], edx
  01186	eb 15		 jmp	 SHORT $LN17@sha512_com
$LN16@sha512_com:
  01188	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0118b	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0118e	89 8d 40 fe ff
	ff		 mov	 DWORD PTR tv638[ebp], ecx
  01194	8b 50 2c	 mov	 edx, DWORD PTR [eax+44]
  01197	89 95 44 fe ff
	ff		 mov	 DWORD PTR tv638[ebp+4], edx
$LN17@sha512_com:
  0119d	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  011a0	8b b5 40 fe ff
	ff		 mov	 esi, DWORD PTR tv638[ebp]
  011a6	03 34 c5 28 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+40]
  011ad	8b bd 44 fe ff
	ff		 mov	 edi, DWORD PTR tv638[ebp+4]
  011b3	13 3c c5 2c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+44]
  011ba	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  011bd	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  011c0	b1 0e		 mov	 cl, 14			; 0000000eH
  011c2	e8 00 00 00 00	 call	 __aullshr
  011c7	8b d8		 mov	 ebx, eax
  011c9	8b c2		 mov	 eax, edx
  011cb	89 85 3c fe ff
	ff		 mov	 DWORD PTR tv7256[ebp], eax
  011d1	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  011d4	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  011d7	b1 32		 mov	 cl, 50			; 00000032H
  011d9	e8 00 00 00 00	 call	 __allshl
  011de	0b d8		 or	 ebx, eax
  011e0	8b 85 3c fe ff
	ff		 mov	 eax, DWORD PTR tv7256[ebp]
  011e6	0b c2		 or	 eax, edx
  011e8	89 85 38 fe ff
	ff		 mov	 DWORD PTR tv7258[ebp], eax
  011ee	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  011f1	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  011f4	b1 12		 mov	 cl, 18			; 00000012H
  011f6	e8 00 00 00 00	 call	 __aullshr
  011fb	8b ca		 mov	 ecx, edx
  011fd	89 85 34 fe ff
	ff		 mov	 DWORD PTR tv7260[ebp], eax
  01203	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  01206	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  01209	89 8d 30 fe ff
	ff		 mov	 DWORD PTR tv7262[ebp], ecx
  0120f	b1 2e		 mov	 cl, 46			; 0000002eH
  01211	e8 00 00 00 00	 call	 __allshl
  01216	8b 8d 34 fe ff
	ff		 mov	 ecx, DWORD PTR tv7260[ebp]
  0121c	0b c8		 or	 ecx, eax
  0121e	8b 85 30 fe ff
	ff		 mov	 eax, DWORD PTR tv7262[ebp]
  01224	0b c2		 or	 eax, edx
  01226	33 d9		 xor	 ebx, ecx
  01228	8b 8d 38 fe ff
	ff		 mov	 ecx, DWORD PTR tv7258[ebp]
  0122e	33 c8		 xor	 ecx, eax
  01230	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  01233	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  01236	89 8d 2c fe ff
	ff		 mov	 DWORD PTR tv7264[ebp], ecx
  0123c	b1 29		 mov	 cl, 41			; 00000029H
  0123e	e8 00 00 00 00	 call	 __aullshr
  01243	8b ca		 mov	 ecx, edx
  01245	89 85 28 fe ff
	ff		 mov	 DWORD PTR tv7266[ebp], eax
  0124b	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  0124e	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  01251	89 8d 24 fe ff
	ff		 mov	 DWORD PTR tv7268[ebp], ecx
  01257	b1 17		 mov	 cl, 23			; 00000017H
  01259	e8 00 00 00 00	 call	 __allshl
  0125e	8b 8d 28 fe ff
	ff		 mov	 ecx, DWORD PTR tv7266[ebp]
  01264	0b c8		 or	 ecx, eax
  01266	8b 85 24 fe ff
	ff		 mov	 eax, DWORD PTR tv7268[ebp]
  0126c	0b c2		 or	 eax, edx
  0126e	33 d9		 xor	 ebx, ecx
  01270	8b 8d 2c fe ff
	ff		 mov	 ecx, DWORD PTR tv7264[ebp]
  01276	33 c8		 xor	 ecx, eax
  01278	03 f3		 add	 esi, ebx
  0127a	13 f9		 adc	 edi, ecx
  0127c	8b 4d b8	 mov	 ecx, DWORD PTR _v$[ebp]
  0127f	33 4d c0	 xor	 ecx, DWORD PTR _v$[ebp+8]
  01282	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  01285	33 55 c4	 xor	 edx, DWORD PTR _v$[ebp+12]
  01288	23 4d f0	 and	 ecx, DWORD PTR _v$[ebp+56]
  0128b	23 55 f4	 and	 edx, DWORD PTR _v$[ebp+60]
  0128e	33 4d c0	 xor	 ecx, DWORD PTR _v$[ebp+8]
  01291	33 55 c4	 xor	 edx, DWORD PTR _v$[ebp+12]
  01294	03 f1		 add	 esi, ecx
  01296	13 fa		 adc	 edi, edx
  01298	03 75 c8	 add	 esi, DWORD PTR _v$[ebp+16]
  0129b	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+20]
  0129e	13 c7		 adc	 eax, edi
  012a0	89 75 c8	 mov	 DWORD PTR _v$[ebp+16], esi
  012a3	89 45 cc	 mov	 DWORD PTR _v$[ebp+20], eax
  012a6	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+48]
  012a9	03 4d c8	 add	 ecx, DWORD PTR _v$[ebp+16]
  012ac	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  012af	13 55 cc	 adc	 edx, DWORD PTR _v$[ebp+20]
  012b2	89 4d e8	 mov	 DWORD PTR _v$[ebp+48], ecx
  012b5	89 55 ec	 mov	 DWORD PTR _v$[ebp+52], edx
  012b8	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  012bb	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  012be	b1 1c		 mov	 cl, 28			; 0000001cH
  012c0	e8 00 00 00 00	 call	 __aullshr
  012c5	8b f0		 mov	 esi, eax
  012c7	8b fa		 mov	 edi, edx
  012c9	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  012cc	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  012cf	b1 24		 mov	 cl, 36			; 00000024H
  012d1	e8 00 00 00 00	 call	 __allshl
  012d6	0b f0		 or	 esi, eax
  012d8	0b fa		 or	 edi, edx
  012da	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  012dd	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  012e0	b1 22		 mov	 cl, 34			; 00000022H
  012e2	e8 00 00 00 00	 call	 __aullshr
  012e7	8b d8		 mov	 ebx, eax
  012e9	8b c2		 mov	 eax, edx
  012eb	89 85 20 fe ff
	ff		 mov	 DWORD PTR tv7270[ebp], eax
  012f1	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  012f4	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  012f7	b1 1e		 mov	 cl, 30			; 0000001eH
  012f9	e8 00 00 00 00	 call	 __allshl
  012fe	0b d8		 or	 ebx, eax
  01300	8b 85 20 fe ff
	ff		 mov	 eax, DWORD PTR tv7270[ebp]
  01306	0b c2		 or	 eax, edx
  01308	33 f3		 xor	 esi, ebx
  0130a	33 f8		 xor	 edi, eax
  0130c	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  0130f	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01312	b1 27		 mov	 cl, 39			; 00000027H
  01314	e8 00 00 00 00	 call	 __aullshr
  01319	8b d8		 mov	 ebx, eax
  0131b	8b c2		 mov	 eax, edx
  0131d	89 85 1c fe ff
	ff		 mov	 DWORD PTR tv7272[ebp], eax
  01323	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01326	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01329	b1 19		 mov	 cl, 25			; 00000019H
  0132b	e8 00 00 00 00	 call	 __allshl
  01330	0b d8		 or	 ebx, eax
  01332	8b 85 1c fe ff
	ff		 mov	 eax, DWORD PTR tv7272[ebp]
  01338	0b c2		 or	 eax, edx
  0133a	33 f3		 xor	 esi, ebx
  0133c	33 f8		 xor	 edi, eax
  0133e	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01341	23 45 d8	 and	 eax, DWORD PTR _v$[ebp+32]
  01344	8b 4d d4	 mov	 ecx, DWORD PTR _v$[ebp+28]
  01347	23 4d dc	 and	 ecx, DWORD PTR _v$[ebp+36]
  0134a	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+24]
  0134d	33 55 d8	 xor	 edx, DWORD PTR _v$[ebp+32]
  01350	8b 5d d4	 mov	 ebx, DWORD PTR _v$[ebp+28]
  01353	33 5d dc	 xor	 ebx, DWORD PTR _v$[ebp+36]
  01356	23 55 e0	 and	 edx, DWORD PTR _v$[ebp+40]
  01359	23 5d e4	 and	 ebx, DWORD PTR _v$[ebp+44]
  0135c	0b c2		 or	 eax, edx
  0135e	0b cb		 or	 ecx, ebx
  01360	03 f0		 add	 esi, eax
  01362	13 f9		 adc	 edi, ecx
  01364	03 75 c8	 add	 esi, DWORD PTR _v$[ebp+16]
  01367	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+20]
  0136a	13 c7		 adc	 eax, edi
  0136c	89 75 c8	 mov	 DWORD PTR _v$[ebp+16], esi
  0136f	89 45 cc	 mov	 DWORD PTR _v$[ebp+20], eax

; 522  :         v_cycle( 6, j); v_cycle( 7, j);

  01372	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01376	0f 84 4e 01 00
	00		 je	 $LN18@sha512_com
  0137c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0137f	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  01382	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  01385	b1 13		 mov	 cl, 19			; 00000013H
  01387	e8 00 00 00 00	 call	 __aullshr
  0138c	8b f0		 mov	 esi, eax
  0138e	8b fa		 mov	 edi, edx
  01390	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01393	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  01396	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  01399	b1 2d		 mov	 cl, 45			; 0000002dH
  0139b	e8 00 00 00 00	 call	 __allshl
  013a0	0b f0		 or	 esi, eax
  013a2	0b fa		 or	 edi, edx
  013a4	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  013a7	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  013aa	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  013ad	b1 3d		 mov	 cl, 61			; 0000003dH
  013af	e8 00 00 00 00	 call	 __aullshr
  013b4	8b d8		 mov	 ebx, eax
  013b6	8b c2		 mov	 eax, edx
  013b8	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  013bb	89 85 18 fe ff
	ff		 mov	 DWORD PTR tv7274[ebp], eax
  013c1	8b 42 20	 mov	 eax, DWORD PTR [edx+32]
  013c4	8b 52 24	 mov	 edx, DWORD PTR [edx+36]
  013c7	b1 03		 mov	 cl, 3
  013c9	e8 00 00 00 00	 call	 __allshl
  013ce	0b d8		 or	 ebx, eax
  013d0	8b 85 18 fe ff
	ff		 mov	 eax, DWORD PTR tv7274[ebp]
  013d6	0b c2		 or	 eax, edx
  013d8	33 f3		 xor	 esi, ebx
  013da	33 f8		 xor	 edi, eax
  013dc	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  013df	8b 41 20	 mov	 eax, DWORD PTR [ecx+32]
  013e2	8b 51 24	 mov	 edx, DWORD PTR [ecx+36]
  013e5	b1 06		 mov	 cl, 6
  013e7	e8 00 00 00 00	 call	 __aullshr
  013ec	33 f0		 xor	 esi, eax
  013ee	33 fa		 xor	 edi, edx
  013f0	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  013f3	03 72 78	 add	 esi, DWORD PTR [edx+120]
  013f6	13 7a 7c	 adc	 edi, DWORD PTR [edx+124]
  013f9	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  013fc	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  013ff	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  01402	b1 01		 mov	 cl, 1
  01404	e8 00 00 00 00	 call	 __aullshr
  01409	8b d8		 mov	 ebx, eax
  0140b	8b c2		 mov	 eax, edx
  0140d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01410	89 85 14 fe ff
	ff		 mov	 DWORD PTR tv7276[ebp], eax
  01416	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  01419	8b 52 3c	 mov	 edx, DWORD PTR [edx+60]
  0141c	b1 3f		 mov	 cl, 63			; 0000003fH
  0141e	e8 00 00 00 00	 call	 __allshl
  01423	0b d8		 or	 ebx, eax
  01425	8b 85 14 fe ff
	ff		 mov	 eax, DWORD PTR tv7276[ebp]
  0142b	0b c2		 or	 eax, edx
  0142d	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01430	89 85 10 fe ff
	ff		 mov	 DWORD PTR tv7278[ebp], eax
  01436	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  01439	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  0143c	b1 08		 mov	 cl, 8
  0143e	e8 00 00 00 00	 call	 __aullshr
  01443	8b ca		 mov	 ecx, edx
  01445	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01448	89 85 0c fe ff
	ff		 mov	 DWORD PTR tv7280[ebp], eax
  0144e	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  01451	8b 52 3c	 mov	 edx, DWORD PTR [edx+60]
  01454	89 8d 08 fe ff
	ff		 mov	 DWORD PTR tv7282[ebp], ecx
  0145a	b1 38		 mov	 cl, 56			; 00000038H
  0145c	e8 00 00 00 00	 call	 __allshl
  01461	8b 8d 0c fe ff
	ff		 mov	 ecx, DWORD PTR tv7280[ebp]
  01467	0b c8		 or	 ecx, eax
  01469	8b 85 08 fe ff
	ff		 mov	 eax, DWORD PTR tv7282[ebp]
  0146f	0b c2		 or	 eax, edx
  01471	33 d9		 xor	 ebx, ecx
  01473	8b 8d 10 fe ff
	ff		 mov	 ecx, DWORD PTR tv7278[ebp]
  01479	33 c8		 xor	 ecx, eax
  0147b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0147e	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  01481	8b 52 3c	 mov	 edx, DWORD PTR [edx+60]
  01484	89 8d 04 fe ff
	ff		 mov	 DWORD PTR tv7284[ebp], ecx
  0148a	b1 07		 mov	 cl, 7
  0148c	e8 00 00 00 00	 call	 __aullshr
  01491	33 d8		 xor	 ebx, eax
  01493	8b 85 04 fe ff
	ff		 mov	 eax, DWORD PTR tv7284[ebp]
  01499	33 c2		 xor	 eax, edx
  0149b	03 f3		 add	 esi, ebx
  0149d	13 f8		 adc	 edi, eax
  0149f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  014a2	03 70 30	 add	 esi, DWORD PTR [eax+48]
  014a5	8b 48 34	 mov	 ecx, DWORD PTR [eax+52]
  014a8	13 cf		 adc	 ecx, edi
  014aa	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  014ad	89 72 30	 mov	 DWORD PTR [edx+48], esi
  014b0	89 4a 34	 mov	 DWORD PTR [edx+52], ecx
  014b3	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  014b6	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  014b9	89 8d fc fd ff
	ff		 mov	 DWORD PTR tv742[ebp], ecx
  014bf	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  014c2	89 95 00 fe ff
	ff		 mov	 DWORD PTR tv742[ebp+4], edx
  014c8	eb 15		 jmp	 SHORT $LN19@sha512_com
$LN18@sha512_com:
  014ca	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  014cd	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  014d0	89 8d fc fd ff
	ff		 mov	 DWORD PTR tv742[ebp], ecx
  014d6	8b 50 34	 mov	 edx, DWORD PTR [eax+52]
  014d9	89 95 00 fe ff
	ff		 mov	 DWORD PTR tv742[ebp+4], edx
$LN19@sha512_com:
  014df	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  014e2	8b b5 fc fd ff
	ff		 mov	 esi, DWORD PTR tv742[ebp]
  014e8	03 34 c5 30 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+48]
  014ef	8b bd 00 fe ff
	ff		 mov	 edi, DWORD PTR tv742[ebp+4]
  014f5	13 3c c5 34 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+52]
  014fc	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  014ff	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  01502	b1 0e		 mov	 cl, 14			; 0000000eH
  01504	e8 00 00 00 00	 call	 __aullshr
  01509	8b d8		 mov	 ebx, eax
  0150b	8b c2		 mov	 eax, edx
  0150d	89 85 f8 fd ff
	ff		 mov	 DWORD PTR tv7286[ebp], eax
  01513	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  01516	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  01519	b1 32		 mov	 cl, 50			; 00000032H
  0151b	e8 00 00 00 00	 call	 __allshl
  01520	0b d8		 or	 ebx, eax
  01522	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR tv7286[ebp]
  01528	0b c2		 or	 eax, edx
  0152a	89 85 f4 fd ff
	ff		 mov	 DWORD PTR tv7288[ebp], eax
  01530	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  01533	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  01536	b1 12		 mov	 cl, 18			; 00000012H
  01538	e8 00 00 00 00	 call	 __aullshr
  0153d	8b ca		 mov	 ecx, edx
  0153f	89 85 f0 fd ff
	ff		 mov	 DWORD PTR tv7290[ebp], eax
  01545	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  01548	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  0154b	89 8d ec fd ff
	ff		 mov	 DWORD PTR tv7292[ebp], ecx
  01551	b1 2e		 mov	 cl, 46			; 0000002eH
  01553	e8 00 00 00 00	 call	 __allshl
  01558	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR tv7290[ebp]
  0155e	0b c8		 or	 ecx, eax
  01560	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR tv7292[ebp]
  01566	0b c2		 or	 eax, edx
  01568	33 d9		 xor	 ebx, ecx
  0156a	8b 8d f4 fd ff
	ff		 mov	 ecx, DWORD PTR tv7288[ebp]
  01570	33 c8		 xor	 ecx, eax
  01572	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  01575	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  01578	89 8d e8 fd ff
	ff		 mov	 DWORD PTR tv7294[ebp], ecx
  0157e	b1 29		 mov	 cl, 41			; 00000029H
  01580	e8 00 00 00 00	 call	 __aullshr
  01585	8b ca		 mov	 ecx, edx
  01587	89 85 e4 fd ff
	ff		 mov	 DWORD PTR tv7296[ebp], eax
  0158d	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  01590	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  01593	89 8d e0 fd ff
	ff		 mov	 DWORD PTR tv7298[ebp], ecx
  01599	b1 17		 mov	 cl, 23			; 00000017H
  0159b	e8 00 00 00 00	 call	 __allshl
  015a0	8b 8d e4 fd ff
	ff		 mov	 ecx, DWORD PTR tv7296[ebp]
  015a6	0b c8		 or	 ecx, eax
  015a8	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR tv7298[ebp]
  015ae	0b c2		 or	 eax, edx
  015b0	33 d9		 xor	 ebx, ecx
  015b2	8b 8d e8 fd ff
	ff		 mov	 ecx, DWORD PTR tv7294[ebp]
  015b8	33 c8		 xor	 ecx, eax
  015ba	03 f3		 add	 esi, ebx
  015bc	13 f9		 adc	 edi, ecx
  015be	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+56]
  015c1	33 4d b8	 xor	 ecx, DWORD PTR _v$[ebp]
  015c4	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  015c7	33 55 bc	 xor	 edx, DWORD PTR _v$[ebp+4]
  015ca	23 4d e8	 and	 ecx, DWORD PTR _v$[ebp+48]
  015cd	23 55 ec	 and	 edx, DWORD PTR _v$[ebp+52]
  015d0	33 4d b8	 xor	 ecx, DWORD PTR _v$[ebp]
  015d3	33 55 bc	 xor	 edx, DWORD PTR _v$[ebp+4]
  015d6	03 f1		 add	 esi, ecx
  015d8	13 fa		 adc	 edi, edx
  015da	03 75 c0	 add	 esi, DWORD PTR _v$[ebp+8]
  015dd	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+12]
  015e0	13 c7		 adc	 eax, edi
  015e2	89 75 c0	 mov	 DWORD PTR _v$[ebp+8], esi
  015e5	89 45 c4	 mov	 DWORD PTR _v$[ebp+12], eax
  015e8	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+40]
  015eb	03 4d c0	 add	 ecx, DWORD PTR _v$[ebp+8]
  015ee	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  015f1	13 55 c4	 adc	 edx, DWORD PTR _v$[ebp+12]
  015f4	89 4d e0	 mov	 DWORD PTR _v$[ebp+40], ecx
  015f7	89 55 e4	 mov	 DWORD PTR _v$[ebp+44], edx
  015fa	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  015fd	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  01600	b1 1c		 mov	 cl, 28			; 0000001cH
  01602	e8 00 00 00 00	 call	 __aullshr
  01607	8b f0		 mov	 esi, eax
  01609	8b fa		 mov	 edi, edx
  0160b	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0160e	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  01611	b1 24		 mov	 cl, 36			; 00000024H
  01613	e8 00 00 00 00	 call	 __allshl
  01618	0b f0		 or	 esi, eax
  0161a	0b fa		 or	 edi, edx
  0161c	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0161f	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  01622	b1 22		 mov	 cl, 34			; 00000022H
  01624	e8 00 00 00 00	 call	 __aullshr
  01629	8b d8		 mov	 ebx, eax
  0162b	8b c2		 mov	 eax, edx
  0162d	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv7300[ebp], eax
  01633	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  01636	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  01639	b1 1e		 mov	 cl, 30			; 0000001eH
  0163b	e8 00 00 00 00	 call	 __allshl
  01640	0b d8		 or	 ebx, eax
  01642	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR tv7300[ebp]
  01648	0b c2		 or	 eax, edx
  0164a	33 f3		 xor	 esi, ebx
  0164c	33 f8		 xor	 edi, eax
  0164e	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  01651	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  01654	b1 27		 mov	 cl, 39			; 00000027H
  01656	e8 00 00 00 00	 call	 __aullshr
  0165b	8b d8		 mov	 ebx, eax
  0165d	8b c2		 mov	 eax, edx
  0165f	89 85 d8 fd ff
	ff		 mov	 DWORD PTR tv7302[ebp], eax
  01665	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  01668	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0166b	b1 19		 mov	 cl, 25			; 00000019H
  0166d	e8 00 00 00 00	 call	 __allshl
  01672	0b d8		 or	 ebx, eax
  01674	8b 85 d8 fd ff
	ff		 mov	 eax, DWORD PTR tv7302[ebp]
  0167a	0b c2		 or	 eax, edx
  0167c	33 f3		 xor	 esi, ebx
  0167e	33 f8		 xor	 edi, eax
  01680	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  01683	23 45 d0	 and	 eax, DWORD PTR _v$[ebp+24]
  01686	8b 4d cc	 mov	 ecx, DWORD PTR _v$[ebp+20]
  01689	23 4d d4	 and	 ecx, DWORD PTR _v$[ebp+28]
  0168c	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+16]
  0168f	33 55 d0	 xor	 edx, DWORD PTR _v$[ebp+24]
  01692	8b 5d cc	 mov	 ebx, DWORD PTR _v$[ebp+20]
  01695	33 5d d4	 xor	 ebx, DWORD PTR _v$[ebp+28]
  01698	23 55 d8	 and	 edx, DWORD PTR _v$[ebp+32]
  0169b	23 5d dc	 and	 ebx, DWORD PTR _v$[ebp+36]
  0169e	0b c2		 or	 eax, edx
  016a0	0b cb		 or	 ecx, ebx
  016a2	03 f0		 add	 esi, eax
  016a4	13 f9		 adc	 edi, ecx
  016a6	03 75 c0	 add	 esi, DWORD PTR _v$[ebp+8]
  016a9	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+12]
  016ac	13 c7		 adc	 eax, edi
  016ae	89 75 c0	 mov	 DWORD PTR _v$[ebp+8], esi
  016b1	89 45 c4	 mov	 DWORD PTR _v$[ebp+12], eax
  016b4	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  016b8	0f 84 4d 01 00
	00		 je	 $LN20@sha512_com
  016be	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  016c1	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  016c4	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  016c7	b1 13		 mov	 cl, 19			; 00000013H
  016c9	e8 00 00 00 00	 call	 __aullshr
  016ce	8b f0		 mov	 esi, eax
  016d0	8b fa		 mov	 edi, edx
  016d2	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  016d5	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  016d8	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  016db	b1 2d		 mov	 cl, 45			; 0000002dH
  016dd	e8 00 00 00 00	 call	 __allshl
  016e2	0b f0		 or	 esi, eax
  016e4	0b fa		 or	 edi, edx
  016e6	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  016e9	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  016ec	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  016ef	b1 3d		 mov	 cl, 61			; 0000003dH
  016f1	e8 00 00 00 00	 call	 __aullshr
  016f6	8b d8		 mov	 ebx, eax
  016f8	8b c2		 mov	 eax, edx
  016fa	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  016fd	89 85 d4 fd ff
	ff		 mov	 DWORD PTR tv7304[ebp], eax
  01703	8b 42 28	 mov	 eax, DWORD PTR [edx+40]
  01706	8b 52 2c	 mov	 edx, DWORD PTR [edx+44]
  01709	b1 03		 mov	 cl, 3
  0170b	e8 00 00 00 00	 call	 __allshl
  01710	0b d8		 or	 ebx, eax
  01712	8b 85 d4 fd ff
	ff		 mov	 eax, DWORD PTR tv7304[ebp]
  01718	0b c2		 or	 eax, edx
  0171a	33 f3		 xor	 esi, ebx
  0171c	33 f8		 xor	 edi, eax
  0171e	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01721	8b 41 28	 mov	 eax, DWORD PTR [ecx+40]
  01724	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  01727	b1 06		 mov	 cl, 6
  01729	e8 00 00 00 00	 call	 __aullshr
  0172e	33 f0		 xor	 esi, eax
  01730	33 fa		 xor	 edi, edx
  01732	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01735	03 32		 add	 esi, DWORD PTR [edx]
  01737	13 7a 04	 adc	 edi, DWORD PTR [edx+4]
  0173a	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0173d	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  01740	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  01743	b1 01		 mov	 cl, 1
  01745	e8 00 00 00 00	 call	 __aullshr
  0174a	8b d8		 mov	 ebx, eax
  0174c	8b c2		 mov	 eax, edx
  0174e	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01751	89 85 d0 fd ff
	ff		 mov	 DWORD PTR tv7306[ebp], eax
  01757	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0175a	8b 52 44	 mov	 edx, DWORD PTR [edx+68]
  0175d	b1 3f		 mov	 cl, 63			; 0000003fH
  0175f	e8 00 00 00 00	 call	 __allshl
  01764	0b d8		 or	 ebx, eax
  01766	8b 85 d0 fd ff
	ff		 mov	 eax, DWORD PTR tv7306[ebp]
  0176c	0b c2		 or	 eax, edx
  0176e	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01771	89 85 cc fd ff
	ff		 mov	 DWORD PTR tv7308[ebp], eax
  01777	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  0177a	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  0177d	b1 08		 mov	 cl, 8
  0177f	e8 00 00 00 00	 call	 __aullshr
  01784	8b ca		 mov	 ecx, edx
  01786	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01789	89 85 c8 fd ff
	ff		 mov	 DWORD PTR tv7310[ebp], eax
  0178f	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  01792	8b 52 44	 mov	 edx, DWORD PTR [edx+68]
  01795	89 8d c4 fd ff
	ff		 mov	 DWORD PTR tv7312[ebp], ecx
  0179b	b1 38		 mov	 cl, 56			; 00000038H
  0179d	e8 00 00 00 00	 call	 __allshl
  017a2	8b 8d c8 fd ff
	ff		 mov	 ecx, DWORD PTR tv7310[ebp]
  017a8	0b c8		 or	 ecx, eax
  017aa	8b 85 c4 fd ff
	ff		 mov	 eax, DWORD PTR tv7312[ebp]
  017b0	0b c2		 or	 eax, edx
  017b2	33 d9		 xor	 ebx, ecx
  017b4	8b 8d cc fd ff
	ff		 mov	 ecx, DWORD PTR tv7308[ebp]
  017ba	33 c8		 xor	 ecx, eax
  017bc	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  017bf	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  017c2	8b 52 44	 mov	 edx, DWORD PTR [edx+68]
  017c5	89 8d c0 fd ff
	ff		 mov	 DWORD PTR tv7314[ebp], ecx
  017cb	b1 07		 mov	 cl, 7
  017cd	e8 00 00 00 00	 call	 __aullshr
  017d2	33 d8		 xor	 ebx, eax
  017d4	8b 85 c0 fd ff
	ff		 mov	 eax, DWORD PTR tv7314[ebp]
  017da	33 c2		 xor	 eax, edx
  017dc	03 f3		 add	 esi, ebx
  017de	13 f8		 adc	 edi, eax
  017e0	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  017e3	03 70 38	 add	 esi, DWORD PTR [eax+56]
  017e6	8b 48 3c	 mov	 ecx, DWORD PTR [eax+60]
  017e9	13 cf		 adc	 ecx, edi
  017eb	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  017ee	89 72 38	 mov	 DWORD PTR [edx+56], esi
  017f1	89 4a 3c	 mov	 DWORD PTR [edx+60], ecx
  017f4	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  017f7	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  017fa	89 8d b8 fd ff
	ff		 mov	 DWORD PTR tv843[ebp], ecx
  01800	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  01803	89 95 bc fd ff
	ff		 mov	 DWORD PTR tv843[ebp+4], edx
  01809	eb 15		 jmp	 SHORT $LN21@sha512_com
$LN20@sha512_com:
  0180b	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0180e	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  01811	89 8d b8 fd ff
	ff		 mov	 DWORD PTR tv843[ebp], ecx
  01817	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  0181a	89 95 bc fd ff
	ff		 mov	 DWORD PTR tv843[ebp+4], edx
$LN21@sha512_com:
  01820	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  01823	8b b5 b8 fd ff
	ff		 mov	 esi, DWORD PTR tv843[ebp]
  01829	03 34 c5 38 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+56]
  01830	8b bd bc fd ff
	ff		 mov	 edi, DWORD PTR tv843[ebp+4]
  01836	13 3c c5 3c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+60]
  0183d	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  01840	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  01843	b1 0e		 mov	 cl, 14			; 0000000eH
  01845	e8 00 00 00 00	 call	 __aullshr
  0184a	8b d8		 mov	 ebx, eax
  0184c	8b c2		 mov	 eax, edx
  0184e	89 85 b4 fd ff
	ff		 mov	 DWORD PTR tv7316[ebp], eax
  01854	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  01857	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  0185a	b1 32		 mov	 cl, 50			; 00000032H
  0185c	e8 00 00 00 00	 call	 __allshl
  01861	0b d8		 or	 ebx, eax
  01863	8b 85 b4 fd ff
	ff		 mov	 eax, DWORD PTR tv7316[ebp]
  01869	0b c2		 or	 eax, edx
  0186b	89 85 b0 fd ff
	ff		 mov	 DWORD PTR tv7318[ebp], eax
  01871	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  01874	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  01877	b1 12		 mov	 cl, 18			; 00000012H
  01879	e8 00 00 00 00	 call	 __aullshr
  0187e	8b ca		 mov	 ecx, edx
  01880	89 85 ac fd ff
	ff		 mov	 DWORD PTR tv7320[ebp], eax
  01886	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  01889	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  0188c	89 8d a8 fd ff
	ff		 mov	 DWORD PTR tv7322[ebp], ecx
  01892	b1 2e		 mov	 cl, 46			; 0000002eH
  01894	e8 00 00 00 00	 call	 __allshl
  01899	8b 8d ac fd ff
	ff		 mov	 ecx, DWORD PTR tv7320[ebp]
  0189f	0b c8		 or	 ecx, eax
  018a1	8b 85 a8 fd ff
	ff		 mov	 eax, DWORD PTR tv7322[ebp]
  018a7	0b c2		 or	 eax, edx
  018a9	33 d9		 xor	 ebx, ecx
  018ab	8b 8d b0 fd ff
	ff		 mov	 ecx, DWORD PTR tv7318[ebp]
  018b1	33 c8		 xor	 ecx, eax
  018b3	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  018b6	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  018b9	89 8d a4 fd ff
	ff		 mov	 DWORD PTR tv7324[ebp], ecx
  018bf	b1 29		 mov	 cl, 41			; 00000029H
  018c1	e8 00 00 00 00	 call	 __aullshr
  018c6	8b ca		 mov	 ecx, edx
  018c8	89 85 a0 fd ff
	ff		 mov	 DWORD PTR tv7326[ebp], eax
  018ce	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  018d1	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  018d4	89 8d 9c fd ff
	ff		 mov	 DWORD PTR tv7328[ebp], ecx
  018da	b1 17		 mov	 cl, 23			; 00000017H
  018dc	e8 00 00 00 00	 call	 __allshl
  018e1	8b 8d a0 fd ff
	ff		 mov	 ecx, DWORD PTR tv7326[ebp]
  018e7	0b c8		 or	 ecx, eax
  018e9	8b 85 9c fd ff
	ff		 mov	 eax, DWORD PTR tv7328[ebp]
  018ef	0b c2		 or	 eax, edx
  018f1	33 d9		 xor	 ebx, ecx
  018f3	8b 8d a4 fd ff
	ff		 mov	 ecx, DWORD PTR tv7324[ebp]
  018f9	33 c8		 xor	 ecx, eax
  018fb	03 f3		 add	 esi, ebx
  018fd	13 f9		 adc	 edi, ecx
  018ff	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+48]
  01902	33 4d f0	 xor	 ecx, DWORD PTR _v$[ebp+56]
  01905	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  01908	33 55 f4	 xor	 edx, DWORD PTR _v$[ebp+60]
  0190b	23 4d e0	 and	 ecx, DWORD PTR _v$[ebp+40]
  0190e	23 55 e4	 and	 edx, DWORD PTR _v$[ebp+44]
  01911	33 4d f0	 xor	 ecx, DWORD PTR _v$[ebp+56]
  01914	33 55 f4	 xor	 edx, DWORD PTR _v$[ebp+60]
  01917	03 f1		 add	 esi, ecx
  01919	13 fa		 adc	 edi, edx
  0191b	03 75 b8	 add	 esi, DWORD PTR _v$[ebp]
  0191e	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp+4]
  01921	13 c7		 adc	 eax, edi
  01923	89 75 b8	 mov	 DWORD PTR _v$[ebp], esi
  01926	89 45 bc	 mov	 DWORD PTR _v$[ebp+4], eax
  01929	8b 4d d8	 mov	 ecx, DWORD PTR _v$[ebp+32]
  0192c	03 4d b8	 add	 ecx, DWORD PTR _v$[ebp]
  0192f	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01932	13 55 bc	 adc	 edx, DWORD PTR _v$[ebp+4]
  01935	89 4d d8	 mov	 DWORD PTR _v$[ebp+32], ecx
  01938	89 55 dc	 mov	 DWORD PTR _v$[ebp+36], edx
  0193b	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  0193e	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  01941	b1 1c		 mov	 cl, 28			; 0000001cH
  01943	e8 00 00 00 00	 call	 __aullshr
  01948	8b f0		 mov	 esi, eax
  0194a	8b fa		 mov	 edi, edx
  0194c	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  0194f	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  01952	b1 24		 mov	 cl, 36			; 00000024H
  01954	e8 00 00 00 00	 call	 __allshl
  01959	0b f0		 or	 esi, eax
  0195b	0b fa		 or	 edi, edx
  0195d	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  01960	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  01963	b1 22		 mov	 cl, 34			; 00000022H
  01965	e8 00 00 00 00	 call	 __aullshr
  0196a	8b d8		 mov	 ebx, eax
  0196c	8b c2		 mov	 eax, edx
  0196e	89 85 98 fd ff
	ff		 mov	 DWORD PTR tv7330[ebp], eax
  01974	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  01977	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  0197a	b1 1e		 mov	 cl, 30			; 0000001eH
  0197c	e8 00 00 00 00	 call	 __allshl
  01981	0b d8		 or	 ebx, eax
  01983	8b 85 98 fd ff
	ff		 mov	 eax, DWORD PTR tv7330[ebp]
  01989	0b c2		 or	 eax, edx
  0198b	33 f3		 xor	 esi, ebx
  0198d	33 f8		 xor	 edi, eax
  0198f	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  01992	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  01995	b1 27		 mov	 cl, 39			; 00000027H
  01997	e8 00 00 00 00	 call	 __aullshr
  0199c	8b d8		 mov	 ebx, eax
  0199e	8b c2		 mov	 eax, edx
  019a0	89 85 94 fd ff
	ff		 mov	 DWORD PTR tv7332[ebp], eax
  019a6	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  019a9	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  019ac	b1 19		 mov	 cl, 25			; 00000019H
  019ae	e8 00 00 00 00	 call	 __allshl
  019b3	0b d8		 or	 ebx, eax
  019b5	8b 85 94 fd ff
	ff		 mov	 eax, DWORD PTR tv7332[ebp]
  019bb	0b c2		 or	 eax, edx
  019bd	33 f3		 xor	 esi, ebx
  019bf	33 f8		 xor	 edi, eax
  019c1	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  019c4	23 45 c8	 and	 eax, DWORD PTR _v$[ebp+16]
  019c7	8b 4d c4	 mov	 ecx, DWORD PTR _v$[ebp+12]
  019ca	23 4d cc	 and	 ecx, DWORD PTR _v$[ebp+20]
  019cd	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+8]
  019d0	33 55 c8	 xor	 edx, DWORD PTR _v$[ebp+16]
  019d3	8b 5d c4	 mov	 ebx, DWORD PTR _v$[ebp+12]
  019d6	33 5d cc	 xor	 ebx, DWORD PTR _v$[ebp+20]
  019d9	23 55 d0	 and	 edx, DWORD PTR _v$[ebp+24]
  019dc	23 5d d4	 and	 ebx, DWORD PTR _v$[ebp+28]
  019df	0b c2		 or	 eax, edx
  019e1	0b cb		 or	 ecx, ebx
  019e3	03 f0		 add	 esi, eax
  019e5	13 f9		 adc	 edi, ecx
  019e7	03 75 b8	 add	 esi, DWORD PTR _v$[ebp]
  019ea	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp+4]
  019ed	13 c7		 adc	 eax, edi
  019ef	89 75 b8	 mov	 DWORD PTR _v$[ebp], esi
  019f2	89 45 bc	 mov	 DWORD PTR _v$[ebp+4], eax

; 523  :         v_cycle( 8, j); v_cycle( 9, j);

  019f5	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  019f9	0f 84 4e 01 00
	00		 je	 $LN22@sha512_com
  019ff	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01a02	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  01a05	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01a08	b1 13		 mov	 cl, 19			; 00000013H
  01a0a	e8 00 00 00 00	 call	 __aullshr
  01a0f	8b f0		 mov	 esi, eax
  01a11	8b fa		 mov	 edi, edx
  01a13	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01a16	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  01a19	8b 52 34	 mov	 edx, DWORD PTR [edx+52]
  01a1c	b1 2d		 mov	 cl, 45			; 0000002dH
  01a1e	e8 00 00 00 00	 call	 __allshl
  01a23	0b f0		 or	 esi, eax
  01a25	0b fa		 or	 edi, edx
  01a27	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01a2a	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  01a2d	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01a30	b1 3d		 mov	 cl, 61			; 0000003dH
  01a32	e8 00 00 00 00	 call	 __aullshr
  01a37	8b d8		 mov	 ebx, eax
  01a39	8b c2		 mov	 eax, edx
  01a3b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01a3e	89 85 90 fd ff
	ff		 mov	 DWORD PTR tv7334[ebp], eax
  01a44	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  01a47	8b 52 34	 mov	 edx, DWORD PTR [edx+52]
  01a4a	b1 03		 mov	 cl, 3
  01a4c	e8 00 00 00 00	 call	 __allshl
  01a51	0b d8		 or	 ebx, eax
  01a53	8b 85 90 fd ff
	ff		 mov	 eax, DWORD PTR tv7334[ebp]
  01a59	0b c2		 or	 eax, edx
  01a5b	33 f3		 xor	 esi, ebx
  01a5d	33 f8		 xor	 edi, eax
  01a5f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01a62	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  01a65	8b 51 34	 mov	 edx, DWORD PTR [ecx+52]
  01a68	b1 06		 mov	 cl, 6
  01a6a	e8 00 00 00 00	 call	 __aullshr
  01a6f	33 f0		 xor	 esi, eax
  01a71	33 fa		 xor	 edi, edx
  01a73	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01a76	03 72 08	 add	 esi, DWORD PTR [edx+8]
  01a79	13 7a 0c	 adc	 edi, DWORD PTR [edx+12]
  01a7c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01a7f	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  01a82	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  01a85	b1 01		 mov	 cl, 1
  01a87	e8 00 00 00 00	 call	 __aullshr
  01a8c	8b d8		 mov	 ebx, eax
  01a8e	8b c2		 mov	 eax, edx
  01a90	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01a93	89 85 8c fd ff
	ff		 mov	 DWORD PTR tv7336[ebp], eax
  01a99	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  01a9c	8b 52 4c	 mov	 edx, DWORD PTR [edx+76]
  01a9f	b1 3f		 mov	 cl, 63			; 0000003fH
  01aa1	e8 00 00 00 00	 call	 __allshl
  01aa6	0b d8		 or	 ebx, eax
  01aa8	8b 85 8c fd ff
	ff		 mov	 eax, DWORD PTR tv7336[ebp]
  01aae	0b c2		 or	 eax, edx
  01ab0	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01ab3	89 85 88 fd ff
	ff		 mov	 DWORD PTR tv7338[ebp], eax
  01ab9	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  01abc	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  01abf	b1 08		 mov	 cl, 8
  01ac1	e8 00 00 00 00	 call	 __aullshr
  01ac6	8b ca		 mov	 ecx, edx
  01ac8	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01acb	89 85 84 fd ff
	ff		 mov	 DWORD PTR tv7340[ebp], eax
  01ad1	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  01ad4	8b 52 4c	 mov	 edx, DWORD PTR [edx+76]
  01ad7	89 8d 80 fd ff
	ff		 mov	 DWORD PTR tv7342[ebp], ecx
  01add	b1 38		 mov	 cl, 56			; 00000038H
  01adf	e8 00 00 00 00	 call	 __allshl
  01ae4	8b 8d 84 fd ff
	ff		 mov	 ecx, DWORD PTR tv7340[ebp]
  01aea	0b c8		 or	 ecx, eax
  01aec	8b 85 80 fd ff
	ff		 mov	 eax, DWORD PTR tv7342[ebp]
  01af2	0b c2		 or	 eax, edx
  01af4	33 d9		 xor	 ebx, ecx
  01af6	8b 8d 88 fd ff
	ff		 mov	 ecx, DWORD PTR tv7338[ebp]
  01afc	33 c8		 xor	 ecx, eax
  01afe	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01b01	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  01b04	8b 52 4c	 mov	 edx, DWORD PTR [edx+76]
  01b07	89 8d 7c fd ff
	ff		 mov	 DWORD PTR tv7344[ebp], ecx
  01b0d	b1 07		 mov	 cl, 7
  01b0f	e8 00 00 00 00	 call	 __aullshr
  01b14	33 d8		 xor	 ebx, eax
  01b16	8b 85 7c fd ff
	ff		 mov	 eax, DWORD PTR tv7344[ebp]
  01b1c	33 c2		 xor	 eax, edx
  01b1e	03 f3		 add	 esi, ebx
  01b20	13 f8		 adc	 edi, eax
  01b22	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01b25	03 70 40	 add	 esi, DWORD PTR [eax+64]
  01b28	8b 48 44	 mov	 ecx, DWORD PTR [eax+68]
  01b2b	13 cf		 adc	 ecx, edi
  01b2d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01b30	89 72 40	 mov	 DWORD PTR [edx+64], esi
  01b33	89 4a 44	 mov	 DWORD PTR [edx+68], ecx
  01b36	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01b39	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  01b3c	89 8d 74 fd ff
	ff		 mov	 DWORD PTR tv944[ebp], ecx
  01b42	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  01b45	89 95 78 fd ff
	ff		 mov	 DWORD PTR tv944[ebp+4], edx
  01b4b	eb 15		 jmp	 SHORT $LN23@sha512_com
$LN22@sha512_com:
  01b4d	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01b50	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  01b53	89 8d 74 fd ff
	ff		 mov	 DWORD PTR tv944[ebp], ecx
  01b59	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  01b5c	89 95 78 fd ff
	ff		 mov	 DWORD PTR tv944[ebp+4], edx
$LN23@sha512_com:
  01b62	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  01b65	8b b5 74 fd ff
	ff		 mov	 esi, DWORD PTR tv944[ebp]
  01b6b	03 34 c5 40 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+64]
  01b72	8b bd 78 fd ff
	ff		 mov	 edi, DWORD PTR tv944[ebp+4]
  01b78	13 3c c5 44 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+68]
  01b7f	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  01b82	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01b85	b1 0e		 mov	 cl, 14			; 0000000eH
  01b87	e8 00 00 00 00	 call	 __aullshr
  01b8c	8b d8		 mov	 ebx, eax
  01b8e	8b c2		 mov	 eax, edx
  01b90	89 85 70 fd ff
	ff		 mov	 DWORD PTR tv7346[ebp], eax
  01b96	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  01b99	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01b9c	b1 32		 mov	 cl, 50			; 00000032H
  01b9e	e8 00 00 00 00	 call	 __allshl
  01ba3	0b d8		 or	 ebx, eax
  01ba5	8b 85 70 fd ff
	ff		 mov	 eax, DWORD PTR tv7346[ebp]
  01bab	0b c2		 or	 eax, edx
  01bad	89 85 6c fd ff
	ff		 mov	 DWORD PTR tv7348[ebp], eax
  01bb3	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  01bb6	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01bb9	b1 12		 mov	 cl, 18			; 00000012H
  01bbb	e8 00 00 00 00	 call	 __aullshr
  01bc0	8b ca		 mov	 ecx, edx
  01bc2	89 85 68 fd ff
	ff		 mov	 DWORD PTR tv7350[ebp], eax
  01bc8	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  01bcb	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01bce	89 8d 64 fd ff
	ff		 mov	 DWORD PTR tv7352[ebp], ecx
  01bd4	b1 2e		 mov	 cl, 46			; 0000002eH
  01bd6	e8 00 00 00 00	 call	 __allshl
  01bdb	8b 8d 68 fd ff
	ff		 mov	 ecx, DWORD PTR tv7350[ebp]
  01be1	0b c8		 or	 ecx, eax
  01be3	8b 85 64 fd ff
	ff		 mov	 eax, DWORD PTR tv7352[ebp]
  01be9	0b c2		 or	 eax, edx
  01beb	33 d9		 xor	 ebx, ecx
  01bed	8b 8d 6c fd ff
	ff		 mov	 ecx, DWORD PTR tv7348[ebp]
  01bf3	33 c8		 xor	 ecx, eax
  01bf5	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  01bf8	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01bfb	89 8d 60 fd ff
	ff		 mov	 DWORD PTR tv7354[ebp], ecx
  01c01	b1 29		 mov	 cl, 41			; 00000029H
  01c03	e8 00 00 00 00	 call	 __aullshr
  01c08	8b ca		 mov	 ecx, edx
  01c0a	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv7356[ebp], eax
  01c10	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  01c13	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01c16	89 8d 58 fd ff
	ff		 mov	 DWORD PTR tv7358[ebp], ecx
  01c1c	b1 17		 mov	 cl, 23			; 00000017H
  01c1e	e8 00 00 00 00	 call	 __allshl
  01c23	8b 8d 5c fd ff
	ff		 mov	 ecx, DWORD PTR tv7356[ebp]
  01c29	0b c8		 or	 ecx, eax
  01c2b	8b 85 58 fd ff
	ff		 mov	 eax, DWORD PTR tv7358[ebp]
  01c31	0b c2		 or	 eax, edx
  01c33	33 d9		 xor	 ebx, ecx
  01c35	8b 8d 60 fd ff
	ff		 mov	 ecx, DWORD PTR tv7354[ebp]
  01c3b	33 c8		 xor	 ecx, eax
  01c3d	03 f3		 add	 esi, ebx
  01c3f	13 f9		 adc	 edi, ecx
  01c41	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+40]
  01c44	33 4d e8	 xor	 ecx, DWORD PTR _v$[ebp+48]
  01c47	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  01c4a	33 55 ec	 xor	 edx, DWORD PTR _v$[ebp+52]
  01c4d	23 4d d8	 and	 ecx, DWORD PTR _v$[ebp+32]
  01c50	23 55 dc	 and	 edx, DWORD PTR _v$[ebp+36]
  01c53	33 4d e8	 xor	 ecx, DWORD PTR _v$[ebp+48]
  01c56	33 55 ec	 xor	 edx, DWORD PTR _v$[ebp+52]
  01c59	03 f1		 add	 esi, ecx
  01c5b	13 fa		 adc	 edi, edx
  01c5d	03 75 f0	 add	 esi, DWORD PTR _v$[ebp+56]
  01c60	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+60]
  01c63	13 c7		 adc	 eax, edi
  01c65	89 75 f0	 mov	 DWORD PTR _v$[ebp+56], esi
  01c68	89 45 f4	 mov	 DWORD PTR _v$[ebp+60], eax
  01c6b	8b 4d d0	 mov	 ecx, DWORD PTR _v$[ebp+24]
  01c6e	03 4d f0	 add	 ecx, DWORD PTR _v$[ebp+56]
  01c71	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01c74	13 55 f4	 adc	 edx, DWORD PTR _v$[ebp+60]
  01c77	89 4d d0	 mov	 DWORD PTR _v$[ebp+24], ecx
  01c7a	89 55 d4	 mov	 DWORD PTR _v$[ebp+28], edx
  01c7d	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  01c80	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  01c83	b1 1c		 mov	 cl, 28			; 0000001cH
  01c85	e8 00 00 00 00	 call	 __aullshr
  01c8a	8b f0		 mov	 esi, eax
  01c8c	8b fa		 mov	 edi, edx
  01c8e	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  01c91	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  01c94	b1 24		 mov	 cl, 36			; 00000024H
  01c96	e8 00 00 00 00	 call	 __allshl
  01c9b	0b f0		 or	 esi, eax
  01c9d	0b fa		 or	 edi, edx
  01c9f	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  01ca2	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  01ca5	b1 22		 mov	 cl, 34			; 00000022H
  01ca7	e8 00 00 00 00	 call	 __aullshr
  01cac	8b d8		 mov	 ebx, eax
  01cae	8b c2		 mov	 eax, edx
  01cb0	89 85 54 fd ff
	ff		 mov	 DWORD PTR tv7360[ebp], eax
  01cb6	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  01cb9	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  01cbc	b1 1e		 mov	 cl, 30			; 0000001eH
  01cbe	e8 00 00 00 00	 call	 __allshl
  01cc3	0b d8		 or	 ebx, eax
  01cc5	8b 85 54 fd ff
	ff		 mov	 eax, DWORD PTR tv7360[ebp]
  01ccb	0b c2		 or	 eax, edx
  01ccd	33 f3		 xor	 esi, ebx
  01ccf	33 f8		 xor	 edi, eax
  01cd1	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  01cd4	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  01cd7	b1 27		 mov	 cl, 39			; 00000027H
  01cd9	e8 00 00 00 00	 call	 __aullshr
  01cde	8b d8		 mov	 ebx, eax
  01ce0	8b c2		 mov	 eax, edx
  01ce2	89 85 50 fd ff
	ff		 mov	 DWORD PTR tv7362[ebp], eax
  01ce8	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  01ceb	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  01cee	b1 19		 mov	 cl, 25			; 00000019H
  01cf0	e8 00 00 00 00	 call	 __allshl
  01cf5	0b d8		 or	 ebx, eax
  01cf7	8b 85 50 fd ff
	ff		 mov	 eax, DWORD PTR tv7362[ebp]
  01cfd	0b c2		 or	 eax, edx
  01cff	33 f3		 xor	 esi, ebx
  01d01	33 f8		 xor	 edi, eax
  01d03	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  01d06	23 45 c0	 and	 eax, DWORD PTR _v$[ebp+8]
  01d09	8b 4d bc	 mov	 ecx, DWORD PTR _v$[ebp+4]
  01d0c	23 4d c4	 and	 ecx, DWORD PTR _v$[ebp+12]
  01d0f	8b 55 b8	 mov	 edx, DWORD PTR _v$[ebp]
  01d12	33 55 c0	 xor	 edx, DWORD PTR _v$[ebp+8]
  01d15	8b 5d bc	 mov	 ebx, DWORD PTR _v$[ebp+4]
  01d18	33 5d c4	 xor	 ebx, DWORD PTR _v$[ebp+12]
  01d1b	23 55 c8	 and	 edx, DWORD PTR _v$[ebp+16]
  01d1e	23 5d cc	 and	 ebx, DWORD PTR _v$[ebp+20]
  01d21	0b c2		 or	 eax, edx
  01d23	0b cb		 or	 ecx, ebx
  01d25	03 f0		 add	 esi, eax
  01d27	13 f9		 adc	 edi, ecx
  01d29	03 75 f0	 add	 esi, DWORD PTR _v$[ebp+56]
  01d2c	8b 45 f4	 mov	 eax, DWORD PTR _v$[ebp+60]
  01d2f	13 c7		 adc	 eax, edi
  01d31	89 75 f0	 mov	 DWORD PTR _v$[ebp+56], esi
  01d34	89 45 f4	 mov	 DWORD PTR _v$[ebp+60], eax
  01d37	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  01d3b	0f 84 4e 01 00
	00		 je	 $LN24@sha512_com
  01d41	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01d44	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  01d47	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  01d4a	b1 13		 mov	 cl, 19			; 00000013H
  01d4c	e8 00 00 00 00	 call	 __aullshr
  01d51	8b f0		 mov	 esi, eax
  01d53	8b fa		 mov	 edi, edx
  01d55	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01d58	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  01d5b	8b 52 3c	 mov	 edx, DWORD PTR [edx+60]
  01d5e	b1 2d		 mov	 cl, 45			; 0000002dH
  01d60	e8 00 00 00 00	 call	 __allshl
  01d65	0b f0		 or	 esi, eax
  01d67	0b fa		 or	 edi, edx
  01d69	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01d6c	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  01d6f	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  01d72	b1 3d		 mov	 cl, 61			; 0000003dH
  01d74	e8 00 00 00 00	 call	 __aullshr
  01d79	8b d8		 mov	 ebx, eax
  01d7b	8b c2		 mov	 eax, edx
  01d7d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01d80	89 85 4c fd ff
	ff		 mov	 DWORD PTR tv7364[ebp], eax
  01d86	8b 42 38	 mov	 eax, DWORD PTR [edx+56]
  01d89	8b 52 3c	 mov	 edx, DWORD PTR [edx+60]
  01d8c	b1 03		 mov	 cl, 3
  01d8e	e8 00 00 00 00	 call	 __allshl
  01d93	0b d8		 or	 ebx, eax
  01d95	8b 85 4c fd ff
	ff		 mov	 eax, DWORD PTR tv7364[ebp]
  01d9b	0b c2		 or	 eax, edx
  01d9d	33 f3		 xor	 esi, ebx
  01d9f	33 f8		 xor	 edi, eax
  01da1	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01da4	8b 41 38	 mov	 eax, DWORD PTR [ecx+56]
  01da7	8b 51 3c	 mov	 edx, DWORD PTR [ecx+60]
  01daa	b1 06		 mov	 cl, 6
  01dac	e8 00 00 00 00	 call	 __aullshr
  01db1	33 f0		 xor	 esi, eax
  01db3	33 fa		 xor	 edi, edx
  01db5	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01db8	03 72 10	 add	 esi, DWORD PTR [edx+16]
  01dbb	13 7a 14	 adc	 edi, DWORD PTR [edx+20]
  01dbe	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01dc1	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  01dc4	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  01dc7	b1 01		 mov	 cl, 1
  01dc9	e8 00 00 00 00	 call	 __aullshr
  01dce	8b d8		 mov	 ebx, eax
  01dd0	8b c2		 mov	 eax, edx
  01dd2	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01dd5	89 85 48 fd ff
	ff		 mov	 DWORD PTR tv7366[ebp], eax
  01ddb	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  01dde	8b 52 54	 mov	 edx, DWORD PTR [edx+84]
  01de1	b1 3f		 mov	 cl, 63			; 0000003fH
  01de3	e8 00 00 00 00	 call	 __allshl
  01de8	0b d8		 or	 ebx, eax
  01dea	8b 85 48 fd ff
	ff		 mov	 eax, DWORD PTR tv7366[ebp]
  01df0	0b c2		 or	 eax, edx
  01df2	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  01df5	89 85 44 fd ff
	ff		 mov	 DWORD PTR tv7368[ebp], eax
  01dfb	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  01dfe	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  01e01	b1 08		 mov	 cl, 8
  01e03	e8 00 00 00 00	 call	 __aullshr
  01e08	8b ca		 mov	 ecx, edx
  01e0a	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01e0d	89 85 40 fd ff
	ff		 mov	 DWORD PTR tv7370[ebp], eax
  01e13	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  01e16	8b 52 54	 mov	 edx, DWORD PTR [edx+84]
  01e19	89 8d 3c fd ff
	ff		 mov	 DWORD PTR tv7372[ebp], ecx
  01e1f	b1 38		 mov	 cl, 56			; 00000038H
  01e21	e8 00 00 00 00	 call	 __allshl
  01e26	8b 8d 40 fd ff
	ff		 mov	 ecx, DWORD PTR tv7370[ebp]
  01e2c	0b c8		 or	 ecx, eax
  01e2e	8b 85 3c fd ff
	ff		 mov	 eax, DWORD PTR tv7372[ebp]
  01e34	0b c2		 or	 eax, edx
  01e36	33 d9		 xor	 ebx, ecx
  01e38	8b 8d 44 fd ff
	ff		 mov	 ecx, DWORD PTR tv7368[ebp]
  01e3e	33 c8		 xor	 ecx, eax
  01e40	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01e43	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  01e46	8b 52 54	 mov	 edx, DWORD PTR [edx+84]
  01e49	89 8d 38 fd ff
	ff		 mov	 DWORD PTR tv7374[ebp], ecx
  01e4f	b1 07		 mov	 cl, 7
  01e51	e8 00 00 00 00	 call	 __aullshr
  01e56	33 d8		 xor	 ebx, eax
  01e58	8b 85 38 fd ff
	ff		 mov	 eax, DWORD PTR tv7374[ebp]
  01e5e	33 c2		 xor	 eax, edx
  01e60	03 f3		 add	 esi, ebx
  01e62	13 f8		 adc	 edi, eax
  01e64	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01e67	03 70 48	 add	 esi, DWORD PTR [eax+72]
  01e6a	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  01e6d	13 cf		 adc	 ecx, edi
  01e6f	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  01e72	89 72 48	 mov	 DWORD PTR [edx+72], esi
  01e75	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx
  01e78	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01e7b	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  01e7e	89 8d 30 fd ff
	ff		 mov	 DWORD PTR tv1041[ebp], ecx
  01e84	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  01e87	89 95 34 fd ff
	ff		 mov	 DWORD PTR tv1041[ebp+4], edx
  01e8d	eb 15		 jmp	 SHORT $LN25@sha512_com
$LN24@sha512_com:
  01e8f	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  01e92	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  01e95	89 8d 30 fd ff
	ff		 mov	 DWORD PTR tv1041[ebp], ecx
  01e9b	8b 50 4c	 mov	 edx, DWORD PTR [eax+76]
  01e9e	89 95 34 fd ff
	ff		 mov	 DWORD PTR tv1041[ebp+4], edx
$LN25@sha512_com:
  01ea4	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  01ea7	8b b5 30 fd ff
	ff		 mov	 esi, DWORD PTR tv1041[ebp]
  01ead	03 34 c5 48 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+72]
  01eb4	8b bd 34 fd ff
	ff		 mov	 edi, DWORD PTR tv1041[ebp+4]
  01eba	13 3c c5 4c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+76]
  01ec1	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01ec4	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01ec7	b1 0e		 mov	 cl, 14			; 0000000eH
  01ec9	e8 00 00 00 00	 call	 __aullshr
  01ece	8b d8		 mov	 ebx, eax
  01ed0	8b c2		 mov	 eax, edx
  01ed2	89 85 2c fd ff
	ff		 mov	 DWORD PTR tv7376[ebp], eax
  01ed8	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01edb	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01ede	b1 32		 mov	 cl, 50			; 00000032H
  01ee0	e8 00 00 00 00	 call	 __allshl
  01ee5	0b d8		 or	 ebx, eax
  01ee7	8b 85 2c fd ff
	ff		 mov	 eax, DWORD PTR tv7376[ebp]
  01eed	0b c2		 or	 eax, edx
  01eef	89 85 28 fd ff
	ff		 mov	 DWORD PTR tv7378[ebp], eax
  01ef5	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01ef8	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01efb	b1 12		 mov	 cl, 18			; 00000012H
  01efd	e8 00 00 00 00	 call	 __aullshr
  01f02	8b ca		 mov	 ecx, edx
  01f04	89 85 24 fd ff
	ff		 mov	 DWORD PTR tv7380[ebp], eax
  01f0a	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01f0d	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01f10	89 8d 20 fd ff
	ff		 mov	 DWORD PTR tv7382[ebp], ecx
  01f16	b1 2e		 mov	 cl, 46			; 0000002eH
  01f18	e8 00 00 00 00	 call	 __allshl
  01f1d	8b 8d 24 fd ff
	ff		 mov	 ecx, DWORD PTR tv7380[ebp]
  01f23	0b c8		 or	 ecx, eax
  01f25	8b 85 20 fd ff
	ff		 mov	 eax, DWORD PTR tv7382[ebp]
  01f2b	0b c2		 or	 eax, edx
  01f2d	33 d9		 xor	 ebx, ecx
  01f2f	8b 8d 28 fd ff
	ff		 mov	 ecx, DWORD PTR tv7378[ebp]
  01f35	33 c8		 xor	 ecx, eax
  01f37	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01f3a	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01f3d	89 8d 1c fd ff
	ff		 mov	 DWORD PTR tv7384[ebp], ecx
  01f43	b1 29		 mov	 cl, 41			; 00000029H
  01f45	e8 00 00 00 00	 call	 __aullshr
  01f4a	8b ca		 mov	 ecx, edx
  01f4c	89 85 18 fd ff
	ff		 mov	 DWORD PTR tv7386[ebp], eax
  01f52	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  01f55	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  01f58	89 8d 14 fd ff
	ff		 mov	 DWORD PTR tv7388[ebp], ecx
  01f5e	b1 17		 mov	 cl, 23			; 00000017H
  01f60	e8 00 00 00 00	 call	 __allshl
  01f65	8b 8d 18 fd ff
	ff		 mov	 ecx, DWORD PTR tv7386[ebp]
  01f6b	0b c8		 or	 ecx, eax
  01f6d	8b 85 14 fd ff
	ff		 mov	 eax, DWORD PTR tv7388[ebp]
  01f73	0b c2		 or	 eax, edx
  01f75	33 d9		 xor	 ebx, ecx
  01f77	8b 8d 1c fd ff
	ff		 mov	 ecx, DWORD PTR tv7384[ebp]
  01f7d	33 c8		 xor	 ecx, eax
  01f7f	03 f3		 add	 esi, ebx
  01f81	13 f9		 adc	 edi, ecx
  01f83	8b 4d d8	 mov	 ecx, DWORD PTR _v$[ebp+32]
  01f86	33 4d e0	 xor	 ecx, DWORD PTR _v$[ebp+40]
  01f89	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  01f8c	33 55 e4	 xor	 edx, DWORD PTR _v$[ebp+44]
  01f8f	23 4d d0	 and	 ecx, DWORD PTR _v$[ebp+24]
  01f92	23 55 d4	 and	 edx, DWORD PTR _v$[ebp+28]
  01f95	33 4d e0	 xor	 ecx, DWORD PTR _v$[ebp+40]
  01f98	33 55 e4	 xor	 edx, DWORD PTR _v$[ebp+44]
  01f9b	03 f1		 add	 esi, ecx
  01f9d	13 fa		 adc	 edi, edx
  01f9f	03 75 e8	 add	 esi, DWORD PTR _v$[ebp+48]
  01fa2	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+52]
  01fa5	13 c7		 adc	 eax, edi
  01fa7	89 75 e8	 mov	 DWORD PTR _v$[ebp+48], esi
  01faa	89 45 ec	 mov	 DWORD PTR _v$[ebp+52], eax
  01fad	8b 4d c8	 mov	 ecx, DWORD PTR _v$[ebp+16]
  01fb0	03 4d e8	 add	 ecx, DWORD PTR _v$[ebp+48]
  01fb3	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  01fb6	13 55 ec	 adc	 edx, DWORD PTR _v$[ebp+52]
  01fb9	89 4d c8	 mov	 DWORD PTR _v$[ebp+16], ecx
  01fbc	89 55 cc	 mov	 DWORD PTR _v$[ebp+20], edx
  01fbf	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  01fc2	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  01fc5	b1 1c		 mov	 cl, 28			; 0000001cH
  01fc7	e8 00 00 00 00	 call	 __aullshr
  01fcc	8b f0		 mov	 esi, eax
  01fce	8b fa		 mov	 edi, edx
  01fd0	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  01fd3	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  01fd6	b1 24		 mov	 cl, 36			; 00000024H
  01fd8	e8 00 00 00 00	 call	 __allshl
  01fdd	0b f0		 or	 esi, eax
  01fdf	0b fa		 or	 edi, edx
  01fe1	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  01fe4	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  01fe7	b1 22		 mov	 cl, 34			; 00000022H
  01fe9	e8 00 00 00 00	 call	 __aullshr
  01fee	8b d8		 mov	 ebx, eax
  01ff0	8b c2		 mov	 eax, edx
  01ff2	89 85 10 fd ff
	ff		 mov	 DWORD PTR tv7390[ebp], eax
  01ff8	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  01ffb	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  01ffe	b1 1e		 mov	 cl, 30			; 0000001eH
  02000	e8 00 00 00 00	 call	 __allshl
  02005	0b d8		 or	 ebx, eax
  02007	8b 85 10 fd ff
	ff		 mov	 eax, DWORD PTR tv7390[ebp]
  0200d	0b c2		 or	 eax, edx
  0200f	33 f3		 xor	 esi, ebx
  02011	33 f8		 xor	 edi, eax
  02013	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02016	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02019	b1 27		 mov	 cl, 39			; 00000027H
  0201b	e8 00 00 00 00	 call	 __aullshr
  02020	8b d8		 mov	 ebx, eax
  02022	8b c2		 mov	 eax, edx
  02024	89 85 0c fd ff
	ff		 mov	 DWORD PTR tv7392[ebp], eax
  0202a	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  0202d	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02030	b1 19		 mov	 cl, 25			; 00000019H
  02032	e8 00 00 00 00	 call	 __allshl
  02037	0b d8		 or	 ebx, eax
  02039	8b 85 0c fd ff
	ff		 mov	 eax, DWORD PTR tv7392[ebp]
  0203f	0b c2		 or	 eax, edx
  02041	33 f3		 xor	 esi, ebx
  02043	33 f8		 xor	 edi, eax
  02045	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02048	23 45 b8	 and	 eax, DWORD PTR _v$[ebp]
  0204b	8b 4d f4	 mov	 ecx, DWORD PTR _v$[ebp+60]
  0204e	23 4d bc	 and	 ecx, DWORD PTR _v$[ebp+4]
  02051	8b 55 f0	 mov	 edx, DWORD PTR _v$[ebp+56]
  02054	33 55 b8	 xor	 edx, DWORD PTR _v$[ebp]
  02057	8b 5d f4	 mov	 ebx, DWORD PTR _v$[ebp+60]
  0205a	33 5d bc	 xor	 ebx, DWORD PTR _v$[ebp+4]
  0205d	23 55 c0	 and	 edx, DWORD PTR _v$[ebp+8]
  02060	23 5d c4	 and	 ebx, DWORD PTR _v$[ebp+12]
  02063	0b c2		 or	 eax, edx
  02065	0b cb		 or	 ecx, ebx
  02067	03 f0		 add	 esi, eax
  02069	13 f9		 adc	 edi, ecx
  0206b	03 75 e8	 add	 esi, DWORD PTR _v$[ebp+48]
  0206e	8b 45 ec	 mov	 eax, DWORD PTR _v$[ebp+52]
  02071	13 c7		 adc	 eax, edi
  02073	89 75 e8	 mov	 DWORD PTR _v$[ebp+48], esi
  02076	89 45 ec	 mov	 DWORD PTR _v$[ebp+52], eax

; 524  :         v_cycle(10, j); v_cycle(11, j);

  02079	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  0207d	0f 84 4e 01 00
	00		 je	 $LN26@sha512_com
  02083	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02086	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  02089	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  0208c	b1 13		 mov	 cl, 19			; 00000013H
  0208e	e8 00 00 00 00	 call	 __aullshr
  02093	8b f0		 mov	 esi, eax
  02095	8b fa		 mov	 edi, edx
  02097	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0209a	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  0209d	8b 52 44	 mov	 edx, DWORD PTR [edx+68]
  020a0	b1 2d		 mov	 cl, 45			; 0000002dH
  020a2	e8 00 00 00 00	 call	 __allshl
  020a7	0b f0		 or	 esi, eax
  020a9	0b fa		 or	 edi, edx
  020ab	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  020ae	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  020b1	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  020b4	b1 3d		 mov	 cl, 61			; 0000003dH
  020b6	e8 00 00 00 00	 call	 __aullshr
  020bb	8b d8		 mov	 ebx, eax
  020bd	8b c2		 mov	 eax, edx
  020bf	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  020c2	89 85 08 fd ff
	ff		 mov	 DWORD PTR tv7394[ebp], eax
  020c8	8b 42 40	 mov	 eax, DWORD PTR [edx+64]
  020cb	8b 52 44	 mov	 edx, DWORD PTR [edx+68]
  020ce	b1 03		 mov	 cl, 3
  020d0	e8 00 00 00 00	 call	 __allshl
  020d5	0b d8		 or	 ebx, eax
  020d7	8b 85 08 fd ff
	ff		 mov	 eax, DWORD PTR tv7394[ebp]
  020dd	0b c2		 or	 eax, edx
  020df	33 f3		 xor	 esi, ebx
  020e1	33 f8		 xor	 edi, eax
  020e3	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  020e6	8b 41 40	 mov	 eax, DWORD PTR [ecx+64]
  020e9	8b 51 44	 mov	 edx, DWORD PTR [ecx+68]
  020ec	b1 06		 mov	 cl, 6
  020ee	e8 00 00 00 00	 call	 __aullshr
  020f3	33 f0		 xor	 esi, eax
  020f5	33 fa		 xor	 edi, edx
  020f7	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  020fa	03 72 18	 add	 esi, DWORD PTR [edx+24]
  020fd	13 7a 1c	 adc	 edi, DWORD PTR [edx+28]
  02100	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02103	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  02106	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  02109	b1 01		 mov	 cl, 1
  0210b	e8 00 00 00 00	 call	 __aullshr
  02110	8b d8		 mov	 ebx, eax
  02112	8b c2		 mov	 eax, edx
  02114	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02117	89 85 04 fd ff
	ff		 mov	 DWORD PTR tv7396[ebp], eax
  0211d	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  02120	8b 52 5c	 mov	 edx, DWORD PTR [edx+92]
  02123	b1 3f		 mov	 cl, 63			; 0000003fH
  02125	e8 00 00 00 00	 call	 __allshl
  0212a	0b d8		 or	 ebx, eax
  0212c	8b 85 04 fd ff
	ff		 mov	 eax, DWORD PTR tv7396[ebp]
  02132	0b c2		 or	 eax, edx
  02134	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02137	89 85 00 fd ff
	ff		 mov	 DWORD PTR tv7398[ebp], eax
  0213d	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  02140	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  02143	b1 08		 mov	 cl, 8
  02145	e8 00 00 00 00	 call	 __aullshr
  0214a	8b ca		 mov	 ecx, edx
  0214c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0214f	89 85 fc fc ff
	ff		 mov	 DWORD PTR tv7400[ebp], eax
  02155	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  02158	8b 52 5c	 mov	 edx, DWORD PTR [edx+92]
  0215b	89 8d f8 fc ff
	ff		 mov	 DWORD PTR tv7402[ebp], ecx
  02161	b1 38		 mov	 cl, 56			; 00000038H
  02163	e8 00 00 00 00	 call	 __allshl
  02168	8b 8d fc fc ff
	ff		 mov	 ecx, DWORD PTR tv7400[ebp]
  0216e	0b c8		 or	 ecx, eax
  02170	8b 85 f8 fc ff
	ff		 mov	 eax, DWORD PTR tv7402[ebp]
  02176	0b c2		 or	 eax, edx
  02178	33 d9		 xor	 ebx, ecx
  0217a	8b 8d 00 fd ff
	ff		 mov	 ecx, DWORD PTR tv7398[ebp]
  02180	33 c8		 xor	 ecx, eax
  02182	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02185	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  02188	8b 52 5c	 mov	 edx, DWORD PTR [edx+92]
  0218b	89 8d f4 fc ff
	ff		 mov	 DWORD PTR tv7404[ebp], ecx
  02191	b1 07		 mov	 cl, 7
  02193	e8 00 00 00 00	 call	 __aullshr
  02198	33 d8		 xor	 ebx, eax
  0219a	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR tv7404[ebp]
  021a0	33 c2		 xor	 eax, edx
  021a2	03 f3		 add	 esi, ebx
  021a4	13 f8		 adc	 edi, eax
  021a6	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  021a9	03 70 50	 add	 esi, DWORD PTR [eax+80]
  021ac	8b 48 54	 mov	 ecx, DWORD PTR [eax+84]
  021af	13 cf		 adc	 ecx, edi
  021b1	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  021b4	89 72 50	 mov	 DWORD PTR [edx+80], esi
  021b7	89 4a 54	 mov	 DWORD PTR [edx+84], ecx
  021ba	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  021bd	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  021c0	89 8d ec fc ff
	ff		 mov	 DWORD PTR tv1144[ebp], ecx
  021c6	8b 50 54	 mov	 edx, DWORD PTR [eax+84]
  021c9	89 95 f0 fc ff
	ff		 mov	 DWORD PTR tv1144[ebp+4], edx
  021cf	eb 15		 jmp	 SHORT $LN27@sha512_com
$LN26@sha512_com:
  021d1	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  021d4	8b 48 50	 mov	 ecx, DWORD PTR [eax+80]
  021d7	89 8d ec fc ff
	ff		 mov	 DWORD PTR tv1144[ebp], ecx
  021dd	8b 50 54	 mov	 edx, DWORD PTR [eax+84]
  021e0	89 95 f0 fc ff
	ff		 mov	 DWORD PTR tv1144[ebp+4], edx
$LN27@sha512_com:
  021e6	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  021e9	8b b5 ec fc ff
	ff		 mov	 esi, DWORD PTR tv1144[ebp]
  021ef	03 34 c5 50 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+80]
  021f6	8b bd f0 fc ff
	ff		 mov	 edi, DWORD PTR tv1144[ebp+4]
  021fc	13 3c c5 54 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+84]
  02203	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  02206	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  02209	b1 0e		 mov	 cl, 14			; 0000000eH
  0220b	e8 00 00 00 00	 call	 __aullshr
  02210	8b d8		 mov	 ebx, eax
  02212	8b c2		 mov	 eax, edx
  02214	89 85 e8 fc ff
	ff		 mov	 DWORD PTR tv7406[ebp], eax
  0221a	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0221d	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  02220	b1 32		 mov	 cl, 50			; 00000032H
  02222	e8 00 00 00 00	 call	 __allshl
  02227	0b d8		 or	 ebx, eax
  02229	8b 85 e8 fc ff
	ff		 mov	 eax, DWORD PTR tv7406[ebp]
  0222f	0b c2		 or	 eax, edx
  02231	89 85 e4 fc ff
	ff		 mov	 DWORD PTR tv7408[ebp], eax
  02237	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0223a	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0223d	b1 12		 mov	 cl, 18			; 00000012H
  0223f	e8 00 00 00 00	 call	 __aullshr
  02244	8b ca		 mov	 ecx, edx
  02246	89 85 e0 fc ff
	ff		 mov	 DWORD PTR tv7410[ebp], eax
  0224c	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0224f	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  02252	89 8d dc fc ff
	ff		 mov	 DWORD PTR tv7412[ebp], ecx
  02258	b1 2e		 mov	 cl, 46			; 0000002eH
  0225a	e8 00 00 00 00	 call	 __allshl
  0225f	8b 8d e0 fc ff
	ff		 mov	 ecx, DWORD PTR tv7410[ebp]
  02265	0b c8		 or	 ecx, eax
  02267	8b 85 dc fc ff
	ff		 mov	 eax, DWORD PTR tv7412[ebp]
  0226d	0b c2		 or	 eax, edx
  0226f	33 d9		 xor	 ebx, ecx
  02271	8b 8d e4 fc ff
	ff		 mov	 ecx, DWORD PTR tv7408[ebp]
  02277	33 c8		 xor	 ecx, eax
  02279	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0227c	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0227f	89 8d d8 fc ff
	ff		 mov	 DWORD PTR tv7414[ebp], ecx
  02285	b1 29		 mov	 cl, 41			; 00000029H
  02287	e8 00 00 00 00	 call	 __aullshr
  0228c	8b ca		 mov	 ecx, edx
  0228e	89 85 d4 fc ff
	ff		 mov	 DWORD PTR tv7416[ebp], eax
  02294	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  02297	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0229a	89 8d d0 fc ff
	ff		 mov	 DWORD PTR tv7418[ebp], ecx
  022a0	b1 17		 mov	 cl, 23			; 00000017H
  022a2	e8 00 00 00 00	 call	 __allshl
  022a7	8b 8d d4 fc ff
	ff		 mov	 ecx, DWORD PTR tv7416[ebp]
  022ad	0b c8		 or	 ecx, eax
  022af	8b 85 d0 fc ff
	ff		 mov	 eax, DWORD PTR tv7418[ebp]
  022b5	0b c2		 or	 eax, edx
  022b7	33 d9		 xor	 ebx, ecx
  022b9	8b 8d d8 fc ff
	ff		 mov	 ecx, DWORD PTR tv7414[ebp]
  022bf	33 c8		 xor	 ecx, eax
  022c1	03 f3		 add	 esi, ebx
  022c3	13 f9		 adc	 edi, ecx
  022c5	8b 4d d0	 mov	 ecx, DWORD PTR _v$[ebp+24]
  022c8	33 4d d8	 xor	 ecx, DWORD PTR _v$[ebp+32]
  022cb	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  022ce	33 55 dc	 xor	 edx, DWORD PTR _v$[ebp+36]
  022d1	23 4d c8	 and	 ecx, DWORD PTR _v$[ebp+16]
  022d4	23 55 cc	 and	 edx, DWORD PTR _v$[ebp+20]
  022d7	33 4d d8	 xor	 ecx, DWORD PTR _v$[ebp+32]
  022da	33 55 dc	 xor	 edx, DWORD PTR _v$[ebp+36]
  022dd	03 f1		 add	 esi, ecx
  022df	13 fa		 adc	 edi, edx
  022e1	03 75 e0	 add	 esi, DWORD PTR _v$[ebp+40]
  022e4	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+44]
  022e7	13 c7		 adc	 eax, edi
  022e9	89 75 e0	 mov	 DWORD PTR _v$[ebp+40], esi
  022ec	89 45 e4	 mov	 DWORD PTR _v$[ebp+44], eax
  022ef	8b 4d c0	 mov	 ecx, DWORD PTR _v$[ebp+8]
  022f2	03 4d e0	 add	 ecx, DWORD PTR _v$[ebp+40]
  022f5	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  022f8	13 55 e4	 adc	 edx, DWORD PTR _v$[ebp+44]
  022fb	89 4d c0	 mov	 DWORD PTR _v$[ebp+8], ecx
  022fe	89 55 c4	 mov	 DWORD PTR _v$[ebp+12], edx
  02301	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02304	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02307	b1 1c		 mov	 cl, 28			; 0000001cH
  02309	e8 00 00 00 00	 call	 __aullshr
  0230e	8b f0		 mov	 esi, eax
  02310	8b fa		 mov	 edi, edx
  02312	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02315	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02318	b1 24		 mov	 cl, 36			; 00000024H
  0231a	e8 00 00 00 00	 call	 __allshl
  0231f	0b f0		 or	 esi, eax
  02321	0b fa		 or	 edi, edx
  02323	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02326	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02329	b1 22		 mov	 cl, 34			; 00000022H
  0232b	e8 00 00 00 00	 call	 __aullshr
  02330	8b d8		 mov	 ebx, eax
  02332	8b c2		 mov	 eax, edx
  02334	89 85 cc fc ff
	ff		 mov	 DWORD PTR tv7420[ebp], eax
  0233a	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  0233d	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02340	b1 1e		 mov	 cl, 30			; 0000001eH
  02342	e8 00 00 00 00	 call	 __allshl
  02347	0b d8		 or	 ebx, eax
  02349	8b 85 cc fc ff
	ff		 mov	 eax, DWORD PTR tv7420[ebp]
  0234f	0b c2		 or	 eax, edx
  02351	33 f3		 xor	 esi, ebx
  02353	33 f8		 xor	 edi, eax
  02355	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02358	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  0235b	b1 27		 mov	 cl, 39			; 00000027H
  0235d	e8 00 00 00 00	 call	 __aullshr
  02362	8b d8		 mov	 ebx, eax
  02364	8b c2		 mov	 eax, edx
  02366	89 85 c8 fc ff
	ff		 mov	 DWORD PTR tv7422[ebp], eax
  0236c	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  0236f	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02372	b1 19		 mov	 cl, 25			; 00000019H
  02374	e8 00 00 00 00	 call	 __allshl
  02379	0b d8		 or	 ebx, eax
  0237b	8b 85 c8 fc ff
	ff		 mov	 eax, DWORD PTR tv7422[ebp]
  02381	0b c2		 or	 eax, edx
  02383	33 f3		 xor	 esi, ebx
  02385	33 f8		 xor	 edi, eax
  02387	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  0238a	23 45 f0	 and	 eax, DWORD PTR _v$[ebp+56]
  0238d	8b 4d ec	 mov	 ecx, DWORD PTR _v$[ebp+52]
  02390	23 4d f4	 and	 ecx, DWORD PTR _v$[ebp+60]
  02393	8b 55 e8	 mov	 edx, DWORD PTR _v$[ebp+48]
  02396	33 55 f0	 xor	 edx, DWORD PTR _v$[ebp+56]
  02399	8b 5d ec	 mov	 ebx, DWORD PTR _v$[ebp+52]
  0239c	33 5d f4	 xor	 ebx, DWORD PTR _v$[ebp+60]
  0239f	23 55 b8	 and	 edx, DWORD PTR _v$[ebp]
  023a2	23 5d bc	 and	 ebx, DWORD PTR _v$[ebp+4]
  023a5	0b c2		 or	 eax, edx
  023a7	0b cb		 or	 ecx, ebx
  023a9	03 f0		 add	 esi, eax
  023ab	13 f9		 adc	 edi, ecx
  023ad	03 75 e0	 add	 esi, DWORD PTR _v$[ebp+40]
  023b0	8b 45 e4	 mov	 eax, DWORD PTR _v$[ebp+44]
  023b3	13 c7		 adc	 eax, edi
  023b5	89 75 e0	 mov	 DWORD PTR _v$[ebp+40], esi
  023b8	89 45 e4	 mov	 DWORD PTR _v$[ebp+44], eax
  023bb	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  023bf	0f 84 4e 01 00
	00		 je	 $LN28@sha512_com
  023c5	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  023c8	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  023cb	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  023ce	b1 13		 mov	 cl, 19			; 00000013H
  023d0	e8 00 00 00 00	 call	 __aullshr
  023d5	8b f0		 mov	 esi, eax
  023d7	8b fa		 mov	 edi, edx
  023d9	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  023dc	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  023df	8b 52 4c	 mov	 edx, DWORD PTR [edx+76]
  023e2	b1 2d		 mov	 cl, 45			; 0000002dH
  023e4	e8 00 00 00 00	 call	 __allshl
  023e9	0b f0		 or	 esi, eax
  023eb	0b fa		 or	 edi, edx
  023ed	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  023f0	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  023f3	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  023f6	b1 3d		 mov	 cl, 61			; 0000003dH
  023f8	e8 00 00 00 00	 call	 __aullshr
  023fd	8b d8		 mov	 ebx, eax
  023ff	8b c2		 mov	 eax, edx
  02401	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02404	89 85 c4 fc ff
	ff		 mov	 DWORD PTR tv7424[ebp], eax
  0240a	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  0240d	8b 52 4c	 mov	 edx, DWORD PTR [edx+76]
  02410	b1 03		 mov	 cl, 3
  02412	e8 00 00 00 00	 call	 __allshl
  02417	0b d8		 or	 ebx, eax
  02419	8b 85 c4 fc ff
	ff		 mov	 eax, DWORD PTR tv7424[ebp]
  0241f	0b c2		 or	 eax, edx
  02421	33 f3		 xor	 esi, ebx
  02423	33 f8		 xor	 edi, eax
  02425	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02428	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  0242b	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  0242e	b1 06		 mov	 cl, 6
  02430	e8 00 00 00 00	 call	 __aullshr
  02435	33 f0		 xor	 esi, eax
  02437	33 fa		 xor	 edi, edx
  02439	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0243c	03 72 20	 add	 esi, DWORD PTR [edx+32]
  0243f	13 7a 24	 adc	 edi, DWORD PTR [edx+36]
  02442	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02445	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  02448	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  0244b	b1 01		 mov	 cl, 1
  0244d	e8 00 00 00 00	 call	 __aullshr
  02452	8b d8		 mov	 ebx, eax
  02454	8b c2		 mov	 eax, edx
  02456	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02459	89 85 c0 fc ff
	ff		 mov	 DWORD PTR tv7426[ebp], eax
  0245f	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  02462	8b 52 64	 mov	 edx, DWORD PTR [edx+100]
  02465	b1 3f		 mov	 cl, 63			; 0000003fH
  02467	e8 00 00 00 00	 call	 __allshl
  0246c	0b d8		 or	 ebx, eax
  0246e	8b 85 c0 fc ff
	ff		 mov	 eax, DWORD PTR tv7426[ebp]
  02474	0b c2		 or	 eax, edx
  02476	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02479	89 85 bc fc ff
	ff		 mov	 DWORD PTR tv7428[ebp], eax
  0247f	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  02482	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  02485	b1 08		 mov	 cl, 8
  02487	e8 00 00 00 00	 call	 __aullshr
  0248c	8b ca		 mov	 ecx, edx
  0248e	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02491	89 85 b8 fc ff
	ff		 mov	 DWORD PTR tv7430[ebp], eax
  02497	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  0249a	8b 52 64	 mov	 edx, DWORD PTR [edx+100]
  0249d	89 8d b4 fc ff
	ff		 mov	 DWORD PTR tv7432[ebp], ecx
  024a3	b1 38		 mov	 cl, 56			; 00000038H
  024a5	e8 00 00 00 00	 call	 __allshl
  024aa	8b 8d b8 fc ff
	ff		 mov	 ecx, DWORD PTR tv7430[ebp]
  024b0	0b c8		 or	 ecx, eax
  024b2	8b 85 b4 fc ff
	ff		 mov	 eax, DWORD PTR tv7432[ebp]
  024b8	0b c2		 or	 eax, edx
  024ba	33 d9		 xor	 ebx, ecx
  024bc	8b 8d bc fc ff
	ff		 mov	 ecx, DWORD PTR tv7428[ebp]
  024c2	33 c8		 xor	 ecx, eax
  024c4	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  024c7	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  024ca	8b 52 64	 mov	 edx, DWORD PTR [edx+100]
  024cd	89 8d b0 fc ff
	ff		 mov	 DWORD PTR tv7434[ebp], ecx
  024d3	b1 07		 mov	 cl, 7
  024d5	e8 00 00 00 00	 call	 __aullshr
  024da	33 d8		 xor	 ebx, eax
  024dc	8b 85 b0 fc ff
	ff		 mov	 eax, DWORD PTR tv7434[ebp]
  024e2	33 c2		 xor	 eax, edx
  024e4	03 f3		 add	 esi, ebx
  024e6	13 f8		 adc	 edi, eax
  024e8	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  024eb	03 70 58	 add	 esi, DWORD PTR [eax+88]
  024ee	8b 48 5c	 mov	 ecx, DWORD PTR [eax+92]
  024f1	13 cf		 adc	 ecx, edi
  024f3	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  024f6	89 72 58	 mov	 DWORD PTR [edx+88], esi
  024f9	89 4a 5c	 mov	 DWORD PTR [edx+92], ecx
  024fc	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  024ff	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  02502	89 8d a8 fc ff
	ff		 mov	 DWORD PTR tv1248[ebp], ecx
  02508	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  0250b	89 95 ac fc ff
	ff		 mov	 DWORD PTR tv1248[ebp+4], edx
  02511	eb 15		 jmp	 SHORT $LN29@sha512_com
$LN28@sha512_com:
  02513	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02516	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  02519	89 8d a8 fc ff
	ff		 mov	 DWORD PTR tv1248[ebp], ecx
  0251f	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  02522	89 95 ac fc ff
	ff		 mov	 DWORD PTR tv1248[ebp+4], edx
$LN29@sha512_com:
  02528	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  0252b	8b b5 a8 fc ff
	ff		 mov	 esi, DWORD PTR tv1248[ebp]
  02531	03 34 c5 58 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+88]
  02538	8b bd ac fc ff
	ff		 mov	 edi, DWORD PTR tv1248[ebp+4]
  0253e	13 3c c5 5c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+92]
  02545	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  02548	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  0254b	b1 0e		 mov	 cl, 14			; 0000000eH
  0254d	e8 00 00 00 00	 call	 __aullshr
  02552	8b d8		 mov	 ebx, eax
  02554	8b c2		 mov	 eax, edx
  02556	89 85 a4 fc ff
	ff		 mov	 DWORD PTR tv7436[ebp], eax
  0255c	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  0255f	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  02562	b1 32		 mov	 cl, 50			; 00000032H
  02564	e8 00 00 00 00	 call	 __allshl
  02569	0b d8		 or	 ebx, eax
  0256b	8b 85 a4 fc ff
	ff		 mov	 eax, DWORD PTR tv7436[ebp]
  02571	0b c2		 or	 eax, edx
  02573	89 85 a0 fc ff
	ff		 mov	 DWORD PTR tv7438[ebp], eax
  02579	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  0257c	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  0257f	b1 12		 mov	 cl, 18			; 00000012H
  02581	e8 00 00 00 00	 call	 __aullshr
  02586	8b ca		 mov	 ecx, edx
  02588	89 85 9c fc ff
	ff		 mov	 DWORD PTR tv7440[ebp], eax
  0258e	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  02591	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  02594	89 8d 98 fc ff
	ff		 mov	 DWORD PTR tv7442[ebp], ecx
  0259a	b1 2e		 mov	 cl, 46			; 0000002eH
  0259c	e8 00 00 00 00	 call	 __allshl
  025a1	8b 8d 9c fc ff
	ff		 mov	 ecx, DWORD PTR tv7440[ebp]
  025a7	0b c8		 or	 ecx, eax
  025a9	8b 85 98 fc ff
	ff		 mov	 eax, DWORD PTR tv7442[ebp]
  025af	0b c2		 or	 eax, edx
  025b1	33 d9		 xor	 ebx, ecx
  025b3	8b 8d a0 fc ff
	ff		 mov	 ecx, DWORD PTR tv7438[ebp]
  025b9	33 c8		 xor	 ecx, eax
  025bb	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  025be	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  025c1	89 8d 94 fc ff
	ff		 mov	 DWORD PTR tv7444[ebp], ecx
  025c7	b1 29		 mov	 cl, 41			; 00000029H
  025c9	e8 00 00 00 00	 call	 __aullshr
  025ce	8b ca		 mov	 ecx, edx
  025d0	89 85 90 fc ff
	ff		 mov	 DWORD PTR tv7446[ebp], eax
  025d6	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  025d9	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  025dc	89 8d 8c fc ff
	ff		 mov	 DWORD PTR tv7448[ebp], ecx
  025e2	b1 17		 mov	 cl, 23			; 00000017H
  025e4	e8 00 00 00 00	 call	 __allshl
  025e9	8b 8d 90 fc ff
	ff		 mov	 ecx, DWORD PTR tv7446[ebp]
  025ef	0b c8		 or	 ecx, eax
  025f1	8b 85 8c fc ff
	ff		 mov	 eax, DWORD PTR tv7448[ebp]
  025f7	0b c2		 or	 eax, edx
  025f9	33 d9		 xor	 ebx, ecx
  025fb	8b 8d 94 fc ff
	ff		 mov	 ecx, DWORD PTR tv7444[ebp]
  02601	33 c8		 xor	 ecx, eax
  02603	03 f3		 add	 esi, ebx
  02605	13 f9		 adc	 edi, ecx
  02607	8b 4d c8	 mov	 ecx, DWORD PTR _v$[ebp+16]
  0260a	33 4d d0	 xor	 ecx, DWORD PTR _v$[ebp+24]
  0260d	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  02610	33 55 d4	 xor	 edx, DWORD PTR _v$[ebp+28]
  02613	23 4d c0	 and	 ecx, DWORD PTR _v$[ebp+8]
  02616	23 55 c4	 and	 edx, DWORD PTR _v$[ebp+12]
  02619	33 4d d0	 xor	 ecx, DWORD PTR _v$[ebp+24]
  0261c	33 55 d4	 xor	 edx, DWORD PTR _v$[ebp+28]
  0261f	03 f1		 add	 esi, ecx
  02621	13 fa		 adc	 edi, edx
  02623	03 75 d8	 add	 esi, DWORD PTR _v$[ebp+32]
  02626	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+36]
  02629	13 c7		 adc	 eax, edi
  0262b	89 75 d8	 mov	 DWORD PTR _v$[ebp+32], esi
  0262e	89 45 dc	 mov	 DWORD PTR _v$[ebp+36], eax
  02631	8b 4d b8	 mov	 ecx, DWORD PTR _v$[ebp]
  02634	03 4d d8	 add	 ecx, DWORD PTR _v$[ebp+32]
  02637	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  0263a	13 55 dc	 adc	 edx, DWORD PTR _v$[ebp+36]
  0263d	89 4d b8	 mov	 DWORD PTR _v$[ebp], ecx
  02640	89 55 bc	 mov	 DWORD PTR _v$[ebp+4], edx
  02643	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  02646	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  02649	b1 1c		 mov	 cl, 28			; 0000001cH
  0264b	e8 00 00 00 00	 call	 __aullshr
  02650	8b f0		 mov	 esi, eax
  02652	8b fa		 mov	 edi, edx
  02654	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  02657	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  0265a	b1 24		 mov	 cl, 36			; 00000024H
  0265c	e8 00 00 00 00	 call	 __allshl
  02661	0b f0		 or	 esi, eax
  02663	0b fa		 or	 edi, edx
  02665	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  02668	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  0266b	b1 22		 mov	 cl, 34			; 00000022H
  0266d	e8 00 00 00 00	 call	 __aullshr
  02672	8b d8		 mov	 ebx, eax
  02674	8b c2		 mov	 eax, edx
  02676	89 85 88 fc ff
	ff		 mov	 DWORD PTR tv7450[ebp], eax
  0267c	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  0267f	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  02682	b1 1e		 mov	 cl, 30			; 0000001eH
  02684	e8 00 00 00 00	 call	 __allshl
  02689	0b d8		 or	 ebx, eax
  0268b	8b 85 88 fc ff
	ff		 mov	 eax, DWORD PTR tv7450[ebp]
  02691	0b c2		 or	 eax, edx
  02693	33 f3		 xor	 esi, ebx
  02695	33 f8		 xor	 edi, eax
  02697	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  0269a	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  0269d	b1 27		 mov	 cl, 39			; 00000027H
  0269f	e8 00 00 00 00	 call	 __aullshr
  026a4	8b d8		 mov	 ebx, eax
  026a6	8b c2		 mov	 eax, edx
  026a8	89 85 84 fc ff
	ff		 mov	 DWORD PTR tv7452[ebp], eax
  026ae	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  026b1	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  026b4	b1 19		 mov	 cl, 25			; 00000019H
  026b6	e8 00 00 00 00	 call	 __allshl
  026bb	0b d8		 or	 ebx, eax
  026bd	8b 85 84 fc ff
	ff		 mov	 eax, DWORD PTR tv7452[ebp]
  026c3	0b c2		 or	 eax, edx
  026c5	33 f3		 xor	 esi, ebx
  026c7	33 f8		 xor	 edi, eax
  026c9	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  026cc	23 45 e8	 and	 eax, DWORD PTR _v$[ebp+48]
  026cf	8b 4d e4	 mov	 ecx, DWORD PTR _v$[ebp+44]
  026d2	23 4d ec	 and	 ecx, DWORD PTR _v$[ebp+52]
  026d5	8b 55 e0	 mov	 edx, DWORD PTR _v$[ebp+40]
  026d8	33 55 e8	 xor	 edx, DWORD PTR _v$[ebp+48]
  026db	8b 5d e4	 mov	 ebx, DWORD PTR _v$[ebp+44]
  026de	33 5d ec	 xor	 ebx, DWORD PTR _v$[ebp+52]
  026e1	23 55 f0	 and	 edx, DWORD PTR _v$[ebp+56]
  026e4	23 5d f4	 and	 ebx, DWORD PTR _v$[ebp+60]
  026e7	0b c2		 or	 eax, edx
  026e9	0b cb		 or	 ecx, ebx
  026eb	03 f0		 add	 esi, eax
  026ed	13 f9		 adc	 edi, ecx
  026ef	03 75 d8	 add	 esi, DWORD PTR _v$[ebp+32]
  026f2	8b 45 dc	 mov	 eax, DWORD PTR _v$[ebp+36]
  026f5	13 c7		 adc	 eax, edi
  026f7	89 75 d8	 mov	 DWORD PTR _v$[ebp+32], esi
  026fa	89 45 dc	 mov	 DWORD PTR _v$[ebp+36], eax

; 525  :         v_cycle(12, j); v_cycle(13, j);

  026fd	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  02701	0f 84 4e 01 00
	00		 je	 $LN30@sha512_com
  02707	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0270a	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  0270d	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  02710	b1 13		 mov	 cl, 19			; 00000013H
  02712	e8 00 00 00 00	 call	 __aullshr
  02717	8b f0		 mov	 esi, eax
  02719	8b fa		 mov	 edi, edx
  0271b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0271e	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  02721	8b 52 54	 mov	 edx, DWORD PTR [edx+84]
  02724	b1 2d		 mov	 cl, 45			; 0000002dH
  02726	e8 00 00 00 00	 call	 __allshl
  0272b	0b f0		 or	 esi, eax
  0272d	0b fa		 or	 edi, edx
  0272f	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02732	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  02735	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  02738	b1 3d		 mov	 cl, 61			; 0000003dH
  0273a	e8 00 00 00 00	 call	 __aullshr
  0273f	8b d8		 mov	 ebx, eax
  02741	8b c2		 mov	 eax, edx
  02743	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02746	89 85 80 fc ff
	ff		 mov	 DWORD PTR tv7454[ebp], eax
  0274c	8b 42 50	 mov	 eax, DWORD PTR [edx+80]
  0274f	8b 52 54	 mov	 edx, DWORD PTR [edx+84]
  02752	b1 03		 mov	 cl, 3
  02754	e8 00 00 00 00	 call	 __allshl
  02759	0b d8		 or	 ebx, eax
  0275b	8b 85 80 fc ff
	ff		 mov	 eax, DWORD PTR tv7454[ebp]
  02761	0b c2		 or	 eax, edx
  02763	33 f3		 xor	 esi, ebx
  02765	33 f8		 xor	 edi, eax
  02767	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0276a	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  0276d	8b 51 54	 mov	 edx, DWORD PTR [ecx+84]
  02770	b1 06		 mov	 cl, 6
  02772	e8 00 00 00 00	 call	 __aullshr
  02777	33 f0		 xor	 esi, eax
  02779	33 fa		 xor	 edi, edx
  0277b	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0277e	03 72 28	 add	 esi, DWORD PTR [edx+40]
  02781	13 7a 2c	 adc	 edi, DWORD PTR [edx+44]
  02784	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02787	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  0278a	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  0278d	b1 01		 mov	 cl, 1
  0278f	e8 00 00 00 00	 call	 __aullshr
  02794	8b d8		 mov	 ebx, eax
  02796	8b c2		 mov	 eax, edx
  02798	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0279b	89 85 7c fc ff
	ff		 mov	 DWORD PTR tv7456[ebp], eax
  027a1	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  027a4	8b 52 6c	 mov	 edx, DWORD PTR [edx+108]
  027a7	b1 3f		 mov	 cl, 63			; 0000003fH
  027a9	e8 00 00 00 00	 call	 __allshl
  027ae	0b d8		 or	 ebx, eax
  027b0	8b 85 7c fc ff
	ff		 mov	 eax, DWORD PTR tv7456[ebp]
  027b6	0b c2		 or	 eax, edx
  027b8	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  027bb	89 85 78 fc ff
	ff		 mov	 DWORD PTR tv7458[ebp], eax
  027c1	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  027c4	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  027c7	b1 08		 mov	 cl, 8
  027c9	e8 00 00 00 00	 call	 __aullshr
  027ce	8b ca		 mov	 ecx, edx
  027d0	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  027d3	89 85 74 fc ff
	ff		 mov	 DWORD PTR tv7460[ebp], eax
  027d9	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  027dc	8b 52 6c	 mov	 edx, DWORD PTR [edx+108]
  027df	89 8d 70 fc ff
	ff		 mov	 DWORD PTR tv7462[ebp], ecx
  027e5	b1 38		 mov	 cl, 56			; 00000038H
  027e7	e8 00 00 00 00	 call	 __allshl
  027ec	8b 8d 74 fc ff
	ff		 mov	 ecx, DWORD PTR tv7460[ebp]
  027f2	0b c8		 or	 ecx, eax
  027f4	8b 85 70 fc ff
	ff		 mov	 eax, DWORD PTR tv7462[ebp]
  027fa	0b c2		 or	 eax, edx
  027fc	33 d9		 xor	 ebx, ecx
  027fe	8b 8d 78 fc ff
	ff		 mov	 ecx, DWORD PTR tv7458[ebp]
  02804	33 c8		 xor	 ecx, eax
  02806	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02809	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  0280c	8b 52 6c	 mov	 edx, DWORD PTR [edx+108]
  0280f	89 8d 6c fc ff
	ff		 mov	 DWORD PTR tv7464[ebp], ecx
  02815	b1 07		 mov	 cl, 7
  02817	e8 00 00 00 00	 call	 __aullshr
  0281c	33 d8		 xor	 ebx, eax
  0281e	8b 85 6c fc ff
	ff		 mov	 eax, DWORD PTR tv7464[ebp]
  02824	33 c2		 xor	 eax, edx
  02826	03 f3		 add	 esi, ebx
  02828	13 f8		 adc	 edi, eax
  0282a	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  0282d	03 70 60	 add	 esi, DWORD PTR [eax+96]
  02830	8b 48 64	 mov	 ecx, DWORD PTR [eax+100]
  02833	13 cf		 adc	 ecx, edi
  02835	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02838	89 72 60	 mov	 DWORD PTR [edx+96], esi
  0283b	89 4a 64	 mov	 DWORD PTR [edx+100], ecx
  0283e	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02841	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  02844	89 8d 64 fc ff
	ff		 mov	 DWORD PTR tv1351[ebp], ecx
  0284a	8b 50 64	 mov	 edx, DWORD PTR [eax+100]
  0284d	89 95 68 fc ff
	ff		 mov	 DWORD PTR tv1351[ebp+4], edx
  02853	eb 15		 jmp	 SHORT $LN31@sha512_com
$LN30@sha512_com:
  02855	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02858	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0285b	89 8d 64 fc ff
	ff		 mov	 DWORD PTR tv1351[ebp], ecx
  02861	8b 50 64	 mov	 edx, DWORD PTR [eax+100]
  02864	89 95 68 fc ff
	ff		 mov	 DWORD PTR tv1351[ebp+4], edx
$LN31@sha512_com:
  0286a	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  0286d	8b b5 64 fc ff
	ff		 mov	 esi, DWORD PTR tv1351[ebp]
  02873	03 34 c5 60 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+96]
  0287a	8b bd 68 fc ff
	ff		 mov	 edi, DWORD PTR tv1351[ebp+4]
  02880	13 3c c5 64 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+100]
  02887	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  0288a	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  0288d	b1 0e		 mov	 cl, 14			; 0000000eH
  0288f	e8 00 00 00 00	 call	 __aullshr
  02894	8b d8		 mov	 ebx, eax
  02896	8b c2		 mov	 eax, edx
  02898	89 85 60 fc ff
	ff		 mov	 DWORD PTR tv7466[ebp], eax
  0289e	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  028a1	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  028a4	b1 32		 mov	 cl, 50			; 00000032H
  028a6	e8 00 00 00 00	 call	 __allshl
  028ab	0b d8		 or	 ebx, eax
  028ad	8b 85 60 fc ff
	ff		 mov	 eax, DWORD PTR tv7466[ebp]
  028b3	0b c2		 or	 eax, edx
  028b5	89 85 5c fc ff
	ff		 mov	 DWORD PTR tv7468[ebp], eax
  028bb	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  028be	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  028c1	b1 12		 mov	 cl, 18			; 00000012H
  028c3	e8 00 00 00 00	 call	 __aullshr
  028c8	8b ca		 mov	 ecx, edx
  028ca	89 85 58 fc ff
	ff		 mov	 DWORD PTR tv7470[ebp], eax
  028d0	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  028d3	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  028d6	89 8d 54 fc ff
	ff		 mov	 DWORD PTR tv7472[ebp], ecx
  028dc	b1 2e		 mov	 cl, 46			; 0000002eH
  028de	e8 00 00 00 00	 call	 __allshl
  028e3	8b 8d 58 fc ff
	ff		 mov	 ecx, DWORD PTR tv7470[ebp]
  028e9	0b c8		 or	 ecx, eax
  028eb	8b 85 54 fc ff
	ff		 mov	 eax, DWORD PTR tv7472[ebp]
  028f1	0b c2		 or	 eax, edx
  028f3	33 d9		 xor	 ebx, ecx
  028f5	8b 8d 5c fc ff
	ff		 mov	 ecx, DWORD PTR tv7468[ebp]
  028fb	33 c8		 xor	 ecx, eax
  028fd	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  02900	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  02903	89 8d 50 fc ff
	ff		 mov	 DWORD PTR tv7474[ebp], ecx
  02909	b1 29		 mov	 cl, 41			; 00000029H
  0290b	e8 00 00 00 00	 call	 __aullshr
  02910	8b ca		 mov	 ecx, edx
  02912	89 85 4c fc ff
	ff		 mov	 DWORD PTR tv7476[ebp], eax
  02918	8b 45 b8	 mov	 eax, DWORD PTR _v$[ebp]
  0291b	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  0291e	89 8d 48 fc ff
	ff		 mov	 DWORD PTR tv7478[ebp], ecx
  02924	b1 17		 mov	 cl, 23			; 00000017H
  02926	e8 00 00 00 00	 call	 __allshl
  0292b	8b 8d 4c fc ff
	ff		 mov	 ecx, DWORD PTR tv7476[ebp]
  02931	0b c8		 or	 ecx, eax
  02933	8b 85 48 fc ff
	ff		 mov	 eax, DWORD PTR tv7478[ebp]
  02939	0b c2		 or	 eax, edx
  0293b	33 d9		 xor	 ebx, ecx
  0293d	8b 8d 50 fc ff
	ff		 mov	 ecx, DWORD PTR tv7474[ebp]
  02943	33 c8		 xor	 ecx, eax
  02945	03 f3		 add	 esi, ebx
  02947	13 f9		 adc	 edi, ecx
  02949	8b 4d c0	 mov	 ecx, DWORD PTR _v$[ebp+8]
  0294c	33 4d c8	 xor	 ecx, DWORD PTR _v$[ebp+16]
  0294f	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  02952	33 55 cc	 xor	 edx, DWORD PTR _v$[ebp+20]
  02955	23 4d b8	 and	 ecx, DWORD PTR _v$[ebp]
  02958	23 55 bc	 and	 edx, DWORD PTR _v$[ebp+4]
  0295b	33 4d c8	 xor	 ecx, DWORD PTR _v$[ebp+16]
  0295e	33 55 cc	 xor	 edx, DWORD PTR _v$[ebp+20]
  02961	03 f1		 add	 esi, ecx
  02963	13 fa		 adc	 edi, edx
  02965	03 75 d0	 add	 esi, DWORD PTR _v$[ebp+24]
  02968	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+28]
  0296b	13 c7		 adc	 eax, edi
  0296d	89 75 d0	 mov	 DWORD PTR _v$[ebp+24], esi
  02970	89 45 d4	 mov	 DWORD PTR _v$[ebp+28], eax
  02973	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+56]
  02976	03 4d d0	 add	 ecx, DWORD PTR _v$[ebp+24]
  02979	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  0297c	13 55 d4	 adc	 edx, DWORD PTR _v$[ebp+28]
  0297f	89 4d f0	 mov	 DWORD PTR _v$[ebp+56], ecx
  02982	89 55 f4	 mov	 DWORD PTR _v$[ebp+60], edx
  02985	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  02988	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  0298b	b1 1c		 mov	 cl, 28			; 0000001cH
  0298d	e8 00 00 00 00	 call	 __aullshr
  02992	8b f0		 mov	 esi, eax
  02994	8b fa		 mov	 edi, edx
  02996	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  02999	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  0299c	b1 24		 mov	 cl, 36			; 00000024H
  0299e	e8 00 00 00 00	 call	 __allshl
  029a3	0b f0		 or	 esi, eax
  029a5	0b fa		 or	 edi, edx
  029a7	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  029aa	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  029ad	b1 22		 mov	 cl, 34			; 00000022H
  029af	e8 00 00 00 00	 call	 __aullshr
  029b4	8b d8		 mov	 ebx, eax
  029b6	8b c2		 mov	 eax, edx
  029b8	89 85 44 fc ff
	ff		 mov	 DWORD PTR tv7480[ebp], eax
  029be	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  029c1	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  029c4	b1 1e		 mov	 cl, 30			; 0000001eH
  029c6	e8 00 00 00 00	 call	 __allshl
  029cb	0b d8		 or	 ebx, eax
  029cd	8b 85 44 fc ff
	ff		 mov	 eax, DWORD PTR tv7480[ebp]
  029d3	0b c2		 or	 eax, edx
  029d5	33 f3		 xor	 esi, ebx
  029d7	33 f8		 xor	 edi, eax
  029d9	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  029dc	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  029df	b1 27		 mov	 cl, 39			; 00000027H
  029e1	e8 00 00 00 00	 call	 __aullshr
  029e6	8b d8		 mov	 ebx, eax
  029e8	8b c2		 mov	 eax, edx
  029ea	89 85 40 fc ff
	ff		 mov	 DWORD PTR tv7482[ebp], eax
  029f0	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  029f3	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  029f6	b1 19		 mov	 cl, 25			; 00000019H
  029f8	e8 00 00 00 00	 call	 __allshl
  029fd	0b d8		 or	 ebx, eax
  029ff	8b 85 40 fc ff
	ff		 mov	 eax, DWORD PTR tv7482[ebp]
  02a05	0b c2		 or	 eax, edx
  02a07	33 f3		 xor	 esi, ebx
  02a09	33 f8		 xor	 edi, eax
  02a0b	8b 45 d8	 mov	 eax, DWORD PTR _v$[ebp+32]
  02a0e	23 45 e0	 and	 eax, DWORD PTR _v$[ebp+40]
  02a11	8b 4d dc	 mov	 ecx, DWORD PTR _v$[ebp+36]
  02a14	23 4d e4	 and	 ecx, DWORD PTR _v$[ebp+44]
  02a17	8b 55 d8	 mov	 edx, DWORD PTR _v$[ebp+32]
  02a1a	33 55 e0	 xor	 edx, DWORD PTR _v$[ebp+40]
  02a1d	8b 5d dc	 mov	 ebx, DWORD PTR _v$[ebp+36]
  02a20	33 5d e4	 xor	 ebx, DWORD PTR _v$[ebp+44]
  02a23	23 55 e8	 and	 edx, DWORD PTR _v$[ebp+48]
  02a26	23 5d ec	 and	 ebx, DWORD PTR _v$[ebp+52]
  02a29	0b c2		 or	 eax, edx
  02a2b	0b cb		 or	 ecx, ebx
  02a2d	03 f0		 add	 esi, eax
  02a2f	13 f9		 adc	 edi, ecx
  02a31	03 75 d0	 add	 esi, DWORD PTR _v$[ebp+24]
  02a34	8b 45 d4	 mov	 eax, DWORD PTR _v$[ebp+28]
  02a37	13 c7		 adc	 eax, edi
  02a39	89 75 d0	 mov	 DWORD PTR _v$[ebp+24], esi
  02a3c	89 45 d4	 mov	 DWORD PTR _v$[ebp+28], eax
  02a3f	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  02a43	0f 84 4e 01 00
	00		 je	 $LN32@sha512_com
  02a49	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02a4c	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  02a4f	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  02a52	b1 13		 mov	 cl, 19			; 00000013H
  02a54	e8 00 00 00 00	 call	 __aullshr
  02a59	8b f0		 mov	 esi, eax
  02a5b	8b fa		 mov	 edi, edx
  02a5d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02a60	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  02a63	8b 52 5c	 mov	 edx, DWORD PTR [edx+92]
  02a66	b1 2d		 mov	 cl, 45			; 0000002dH
  02a68	e8 00 00 00 00	 call	 __allshl
  02a6d	0b f0		 or	 esi, eax
  02a6f	0b fa		 or	 edi, edx
  02a71	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02a74	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  02a77	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  02a7a	b1 3d		 mov	 cl, 61			; 0000003dH
  02a7c	e8 00 00 00 00	 call	 __aullshr
  02a81	8b d8		 mov	 ebx, eax
  02a83	8b c2		 mov	 eax, edx
  02a85	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02a88	89 85 3c fc ff
	ff		 mov	 DWORD PTR tv7484[ebp], eax
  02a8e	8b 42 58	 mov	 eax, DWORD PTR [edx+88]
  02a91	8b 52 5c	 mov	 edx, DWORD PTR [edx+92]
  02a94	b1 03		 mov	 cl, 3
  02a96	e8 00 00 00 00	 call	 __allshl
  02a9b	0b d8		 or	 ebx, eax
  02a9d	8b 85 3c fc ff
	ff		 mov	 eax, DWORD PTR tv7484[ebp]
  02aa3	0b c2		 or	 eax, edx
  02aa5	33 f3		 xor	 esi, ebx
  02aa7	33 f8		 xor	 edi, eax
  02aa9	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02aac	8b 41 58	 mov	 eax, DWORD PTR [ecx+88]
  02aaf	8b 51 5c	 mov	 edx, DWORD PTR [ecx+92]
  02ab2	b1 06		 mov	 cl, 6
  02ab4	e8 00 00 00 00	 call	 __aullshr
  02ab9	33 f0		 xor	 esi, eax
  02abb	33 fa		 xor	 edi, edx
  02abd	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02ac0	03 72 30	 add	 esi, DWORD PTR [edx+48]
  02ac3	13 7a 34	 adc	 edi, DWORD PTR [edx+52]
  02ac6	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02ac9	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  02acc	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  02acf	b1 01		 mov	 cl, 1
  02ad1	e8 00 00 00 00	 call	 __aullshr
  02ad6	8b d8		 mov	 ebx, eax
  02ad8	8b c2		 mov	 eax, edx
  02ada	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02add	89 85 38 fc ff
	ff		 mov	 DWORD PTR tv7486[ebp], eax
  02ae3	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  02ae6	8b 52 74	 mov	 edx, DWORD PTR [edx+116]
  02ae9	b1 3f		 mov	 cl, 63			; 0000003fH
  02aeb	e8 00 00 00 00	 call	 __allshl
  02af0	0b d8		 or	 ebx, eax
  02af2	8b 85 38 fc ff
	ff		 mov	 eax, DWORD PTR tv7486[ebp]
  02af8	0b c2		 or	 eax, edx
  02afa	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02afd	89 85 34 fc ff
	ff		 mov	 DWORD PTR tv7488[ebp], eax
  02b03	8b 41 70	 mov	 eax, DWORD PTR [ecx+112]
  02b06	8b 51 74	 mov	 edx, DWORD PTR [ecx+116]
  02b09	b1 08		 mov	 cl, 8
  02b0b	e8 00 00 00 00	 call	 __aullshr
  02b10	8b ca		 mov	 ecx, edx
  02b12	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02b15	89 85 30 fc ff
	ff		 mov	 DWORD PTR tv7490[ebp], eax
  02b1b	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  02b1e	8b 52 74	 mov	 edx, DWORD PTR [edx+116]
  02b21	89 8d 2c fc ff
	ff		 mov	 DWORD PTR tv7492[ebp], ecx
  02b27	b1 38		 mov	 cl, 56			; 00000038H
  02b29	e8 00 00 00 00	 call	 __allshl
  02b2e	8b 8d 30 fc ff
	ff		 mov	 ecx, DWORD PTR tv7490[ebp]
  02b34	0b c8		 or	 ecx, eax
  02b36	8b 85 2c fc ff
	ff		 mov	 eax, DWORD PTR tv7492[ebp]
  02b3c	0b c2		 or	 eax, edx
  02b3e	33 d9		 xor	 ebx, ecx
  02b40	8b 8d 34 fc ff
	ff		 mov	 ecx, DWORD PTR tv7488[ebp]
  02b46	33 c8		 xor	 ecx, eax
  02b48	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02b4b	8b 42 70	 mov	 eax, DWORD PTR [edx+112]
  02b4e	8b 52 74	 mov	 edx, DWORD PTR [edx+116]
  02b51	89 8d 28 fc ff
	ff		 mov	 DWORD PTR tv7494[ebp], ecx
  02b57	b1 07		 mov	 cl, 7
  02b59	e8 00 00 00 00	 call	 __aullshr
  02b5e	33 d8		 xor	 ebx, eax
  02b60	8b 85 28 fc ff
	ff		 mov	 eax, DWORD PTR tv7494[ebp]
  02b66	33 c2		 xor	 eax, edx
  02b68	03 f3		 add	 esi, ebx
  02b6a	13 f8		 adc	 edi, eax
  02b6c	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02b6f	03 70 68	 add	 esi, DWORD PTR [eax+104]
  02b72	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  02b75	13 cf		 adc	 ecx, edi
  02b77	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02b7a	89 72 68	 mov	 DWORD PTR [edx+104], esi
  02b7d	89 4a 6c	 mov	 DWORD PTR [edx+108], ecx
  02b80	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02b83	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  02b86	89 8d 20 fc ff
	ff		 mov	 DWORD PTR tv1449[ebp], ecx
  02b8c	8b 50 6c	 mov	 edx, DWORD PTR [eax+108]
  02b8f	89 95 24 fc ff
	ff		 mov	 DWORD PTR tv1449[ebp+4], edx
  02b95	eb 15		 jmp	 SHORT $LN33@sha512_com
$LN32@sha512_com:
  02b97	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02b9a	8b 48 68	 mov	 ecx, DWORD PTR [eax+104]
  02b9d	89 8d 20 fc ff
	ff		 mov	 DWORD PTR tv1449[ebp], ecx
  02ba3	8b 50 6c	 mov	 edx, DWORD PTR [eax+108]
  02ba6	89 95 24 fc ff
	ff		 mov	 DWORD PTR tv1449[ebp+4], edx
$LN33@sha512_com:
  02bac	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  02baf	8b b5 20 fc ff
	ff		 mov	 esi, DWORD PTR tv1449[ebp]
  02bb5	03 34 c5 68 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+104]
  02bbc	8b bd 24 fc ff
	ff		 mov	 edi, DWORD PTR tv1449[ebp+4]
  02bc2	13 3c c5 6c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+108]
  02bc9	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02bcc	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02bcf	b1 0e		 mov	 cl, 14			; 0000000eH
  02bd1	e8 00 00 00 00	 call	 __aullshr
  02bd6	8b d8		 mov	 ebx, eax
  02bd8	8b c2		 mov	 eax, edx
  02bda	89 85 1c fc ff
	ff		 mov	 DWORD PTR tv7496[ebp], eax
  02be0	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02be3	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02be6	b1 32		 mov	 cl, 50			; 00000032H
  02be8	e8 00 00 00 00	 call	 __allshl
  02bed	0b d8		 or	 ebx, eax
  02bef	8b 85 1c fc ff
	ff		 mov	 eax, DWORD PTR tv7496[ebp]
  02bf5	0b c2		 or	 eax, edx
  02bf7	89 85 18 fc ff
	ff		 mov	 DWORD PTR tv7498[ebp], eax
  02bfd	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02c00	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02c03	b1 12		 mov	 cl, 18			; 00000012H
  02c05	e8 00 00 00 00	 call	 __aullshr
  02c0a	8b ca		 mov	 ecx, edx
  02c0c	89 85 14 fc ff
	ff		 mov	 DWORD PTR tv7500[ebp], eax
  02c12	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02c15	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02c18	89 8d 10 fc ff
	ff		 mov	 DWORD PTR tv7502[ebp], ecx
  02c1e	b1 2e		 mov	 cl, 46			; 0000002eH
  02c20	e8 00 00 00 00	 call	 __allshl
  02c25	8b 8d 14 fc ff
	ff		 mov	 ecx, DWORD PTR tv7500[ebp]
  02c2b	0b c8		 or	 ecx, eax
  02c2d	8b 85 10 fc ff
	ff		 mov	 eax, DWORD PTR tv7502[ebp]
  02c33	0b c2		 or	 eax, edx
  02c35	33 d9		 xor	 ebx, ecx
  02c37	8b 8d 18 fc ff
	ff		 mov	 ecx, DWORD PTR tv7498[ebp]
  02c3d	33 c8		 xor	 ecx, eax
  02c3f	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02c42	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02c45	89 8d 0c fc ff
	ff		 mov	 DWORD PTR tv7504[ebp], ecx
  02c4b	b1 29		 mov	 cl, 41			; 00000029H
  02c4d	e8 00 00 00 00	 call	 __aullshr
  02c52	8b ca		 mov	 ecx, edx
  02c54	89 85 08 fc ff
	ff		 mov	 DWORD PTR tv7506[ebp], eax
  02c5a	8b 45 f0	 mov	 eax, DWORD PTR _v$[ebp+56]
  02c5d	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02c60	89 8d 04 fc ff
	ff		 mov	 DWORD PTR tv7508[ebp], ecx
  02c66	b1 17		 mov	 cl, 23			; 00000017H
  02c68	e8 00 00 00 00	 call	 __allshl
  02c6d	8b 8d 08 fc ff
	ff		 mov	 ecx, DWORD PTR tv7506[ebp]
  02c73	0b c8		 or	 ecx, eax
  02c75	8b 85 04 fc ff
	ff		 mov	 eax, DWORD PTR tv7508[ebp]
  02c7b	0b c2		 or	 eax, edx
  02c7d	33 d9		 xor	 ebx, ecx
  02c7f	8b 8d 0c fc ff
	ff		 mov	 ecx, DWORD PTR tv7504[ebp]
  02c85	33 c8		 xor	 ecx, eax
  02c87	03 f3		 add	 esi, ebx
  02c89	13 f9		 adc	 edi, ecx
  02c8b	8b 4d b8	 mov	 ecx, DWORD PTR _v$[ebp]
  02c8e	33 4d c0	 xor	 ecx, DWORD PTR _v$[ebp+8]
  02c91	8b 55 bc	 mov	 edx, DWORD PTR _v$[ebp+4]
  02c94	33 55 c4	 xor	 edx, DWORD PTR _v$[ebp+12]
  02c97	23 4d f0	 and	 ecx, DWORD PTR _v$[ebp+56]
  02c9a	23 55 f4	 and	 edx, DWORD PTR _v$[ebp+60]
  02c9d	33 4d c0	 xor	 ecx, DWORD PTR _v$[ebp+8]
  02ca0	33 55 c4	 xor	 edx, DWORD PTR _v$[ebp+12]
  02ca3	03 f1		 add	 esi, ecx
  02ca5	13 fa		 adc	 edi, edx
  02ca7	03 75 c8	 add	 esi, DWORD PTR _v$[ebp+16]
  02caa	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+20]
  02cad	13 c7		 adc	 eax, edi
  02caf	89 75 c8	 mov	 DWORD PTR _v$[ebp+16], esi
  02cb2	89 45 cc	 mov	 DWORD PTR _v$[ebp+20], eax
  02cb5	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+48]
  02cb8	03 4d c8	 add	 ecx, DWORD PTR _v$[ebp+16]
  02cbb	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02cbe	13 55 cc	 adc	 edx, DWORD PTR _v$[ebp+20]
  02cc1	89 4d e8	 mov	 DWORD PTR _v$[ebp+48], ecx
  02cc4	89 55 ec	 mov	 DWORD PTR _v$[ebp+52], edx
  02cc7	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  02cca	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  02ccd	b1 1c		 mov	 cl, 28			; 0000001cH
  02ccf	e8 00 00 00 00	 call	 __aullshr
  02cd4	8b f0		 mov	 esi, eax
  02cd6	8b fa		 mov	 edi, edx
  02cd8	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  02cdb	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  02cde	b1 24		 mov	 cl, 36			; 00000024H
  02ce0	e8 00 00 00 00	 call	 __allshl
  02ce5	0b f0		 or	 esi, eax
  02ce7	0b fa		 or	 edi, edx
  02ce9	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  02cec	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  02cef	b1 22		 mov	 cl, 34			; 00000022H
  02cf1	e8 00 00 00 00	 call	 __aullshr
  02cf6	8b d8		 mov	 ebx, eax
  02cf8	8b c2		 mov	 eax, edx
  02cfa	89 85 00 fc ff
	ff		 mov	 DWORD PTR tv7510[ebp], eax
  02d00	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  02d03	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  02d06	b1 1e		 mov	 cl, 30			; 0000001eH
  02d08	e8 00 00 00 00	 call	 __allshl
  02d0d	0b d8		 or	 ebx, eax
  02d0f	8b 85 00 fc ff
	ff		 mov	 eax, DWORD PTR tv7510[ebp]
  02d15	0b c2		 or	 eax, edx
  02d17	33 f3		 xor	 esi, ebx
  02d19	33 f8		 xor	 edi, eax
  02d1b	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  02d1e	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  02d21	b1 27		 mov	 cl, 39			; 00000027H
  02d23	e8 00 00 00 00	 call	 __aullshr
  02d28	8b d8		 mov	 ebx, eax
  02d2a	8b c2		 mov	 eax, edx
  02d2c	89 85 fc fb ff
	ff		 mov	 DWORD PTR tv7512[ebp], eax
  02d32	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  02d35	8b 55 d4	 mov	 edx, DWORD PTR _v$[ebp+28]
  02d38	b1 19		 mov	 cl, 25			; 00000019H
  02d3a	e8 00 00 00 00	 call	 __allshl
  02d3f	0b d8		 or	 ebx, eax
  02d41	8b 85 fc fb ff
	ff		 mov	 eax, DWORD PTR tv7512[ebp]
  02d47	0b c2		 or	 eax, edx
  02d49	33 f3		 xor	 esi, ebx
  02d4b	33 f8		 xor	 edi, eax
  02d4d	8b 45 d0	 mov	 eax, DWORD PTR _v$[ebp+24]
  02d50	23 45 d8	 and	 eax, DWORD PTR _v$[ebp+32]
  02d53	8b 4d d4	 mov	 ecx, DWORD PTR _v$[ebp+28]
  02d56	23 4d dc	 and	 ecx, DWORD PTR _v$[ebp+36]
  02d59	8b 55 d0	 mov	 edx, DWORD PTR _v$[ebp+24]
  02d5c	33 55 d8	 xor	 edx, DWORD PTR _v$[ebp+32]
  02d5f	8b 5d d4	 mov	 ebx, DWORD PTR _v$[ebp+28]
  02d62	33 5d dc	 xor	 ebx, DWORD PTR _v$[ebp+36]
  02d65	23 55 e0	 and	 edx, DWORD PTR _v$[ebp+40]
  02d68	23 5d e4	 and	 ebx, DWORD PTR _v$[ebp+44]
  02d6b	0b c2		 or	 eax, edx
  02d6d	0b cb		 or	 ecx, ebx
  02d6f	03 f0		 add	 esi, eax
  02d71	13 f9		 adc	 edi, ecx
  02d73	03 75 c8	 add	 esi, DWORD PTR _v$[ebp+16]
  02d76	8b 45 cc	 mov	 eax, DWORD PTR _v$[ebp+20]
  02d79	13 c7		 adc	 eax, edi
  02d7b	89 75 c8	 mov	 DWORD PTR _v$[ebp+16], esi
  02d7e	89 45 cc	 mov	 DWORD PTR _v$[ebp+20], eax

; 526  :         v_cycle(14, j); v_cycle(15, j);

  02d81	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  02d85	0f 84 4e 01 00
	00		 je	 $LN34@sha512_com
  02d8b	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02d8e	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  02d91	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  02d94	b1 13		 mov	 cl, 19			; 00000013H
  02d96	e8 00 00 00 00	 call	 __aullshr
  02d9b	8b f0		 mov	 esi, eax
  02d9d	8b fa		 mov	 edi, edx
  02d9f	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02da2	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  02da5	8b 52 64	 mov	 edx, DWORD PTR [edx+100]
  02da8	b1 2d		 mov	 cl, 45			; 0000002dH
  02daa	e8 00 00 00 00	 call	 __allshl
  02daf	0b f0		 or	 esi, eax
  02db1	0b fa		 or	 edi, edx
  02db3	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02db6	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  02db9	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  02dbc	b1 3d		 mov	 cl, 61			; 0000003dH
  02dbe	e8 00 00 00 00	 call	 __aullshr
  02dc3	8b d8		 mov	 ebx, eax
  02dc5	8b c2		 mov	 eax, edx
  02dc7	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02dca	89 85 f8 fb ff
	ff		 mov	 DWORD PTR tv7514[ebp], eax
  02dd0	8b 42 60	 mov	 eax, DWORD PTR [edx+96]
  02dd3	8b 52 64	 mov	 edx, DWORD PTR [edx+100]
  02dd6	b1 03		 mov	 cl, 3
  02dd8	e8 00 00 00 00	 call	 __allshl
  02ddd	0b d8		 or	 ebx, eax
  02ddf	8b 85 f8 fb ff
	ff		 mov	 eax, DWORD PTR tv7514[ebp]
  02de5	0b c2		 or	 eax, edx
  02de7	33 f3		 xor	 esi, ebx
  02de9	33 f8		 xor	 edi, eax
  02deb	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02dee	8b 41 60	 mov	 eax, DWORD PTR [ecx+96]
  02df1	8b 51 64	 mov	 edx, DWORD PTR [ecx+100]
  02df4	b1 06		 mov	 cl, 6
  02df6	e8 00 00 00 00	 call	 __aullshr
  02dfb	33 f0		 xor	 esi, eax
  02dfd	33 fa		 xor	 edi, edx
  02dff	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02e02	03 72 38	 add	 esi, DWORD PTR [edx+56]
  02e05	13 7a 3c	 adc	 edi, DWORD PTR [edx+60]
  02e08	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02e0b	8b 41 78	 mov	 eax, DWORD PTR [ecx+120]
  02e0e	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  02e11	b1 01		 mov	 cl, 1
  02e13	e8 00 00 00 00	 call	 __aullshr
  02e18	8b d8		 mov	 ebx, eax
  02e1a	8b c2		 mov	 eax, edx
  02e1c	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02e1f	89 85 f4 fb ff
	ff		 mov	 DWORD PTR tv7516[ebp], eax
  02e25	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  02e28	8b 52 7c	 mov	 edx, DWORD PTR [edx+124]
  02e2b	b1 3f		 mov	 cl, 63			; 0000003fH
  02e2d	e8 00 00 00 00	 call	 __allshl
  02e32	0b d8		 or	 ebx, eax
  02e34	8b 85 f4 fb ff
	ff		 mov	 eax, DWORD PTR tv7516[ebp]
  02e3a	0b c2		 or	 eax, edx
  02e3c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  02e3f	89 85 f0 fb ff
	ff		 mov	 DWORD PTR tv7518[ebp], eax
  02e45	8b 41 78	 mov	 eax, DWORD PTR [ecx+120]
  02e48	8b 51 7c	 mov	 edx, DWORD PTR [ecx+124]
  02e4b	b1 08		 mov	 cl, 8
  02e4d	e8 00 00 00 00	 call	 __aullshr
  02e52	8b ca		 mov	 ecx, edx
  02e54	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02e57	89 85 ec fb ff
	ff		 mov	 DWORD PTR tv7520[ebp], eax
  02e5d	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  02e60	8b 52 7c	 mov	 edx, DWORD PTR [edx+124]
  02e63	89 8d e8 fb ff
	ff		 mov	 DWORD PTR tv7522[ebp], ecx
  02e69	b1 38		 mov	 cl, 56			; 00000038H
  02e6b	e8 00 00 00 00	 call	 __allshl
  02e70	8b 8d ec fb ff
	ff		 mov	 ecx, DWORD PTR tv7520[ebp]
  02e76	0b c8		 or	 ecx, eax
  02e78	8b 85 e8 fb ff
	ff		 mov	 eax, DWORD PTR tv7522[ebp]
  02e7e	0b c2		 or	 eax, edx
  02e80	33 d9		 xor	 ebx, ecx
  02e82	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR tv7518[ebp]
  02e88	33 c8		 xor	 ecx, eax
  02e8a	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02e8d	8b 42 78	 mov	 eax, DWORD PTR [edx+120]
  02e90	8b 52 7c	 mov	 edx, DWORD PTR [edx+124]
  02e93	89 8d e4 fb ff
	ff		 mov	 DWORD PTR tv7524[ebp], ecx
  02e99	b1 07		 mov	 cl, 7
  02e9b	e8 00 00 00 00	 call	 __aullshr
  02ea0	33 d8		 xor	 ebx, eax
  02ea2	8b 85 e4 fb ff
	ff		 mov	 eax, DWORD PTR tv7524[ebp]
  02ea8	33 c2		 xor	 eax, edx
  02eaa	03 f3		 add	 esi, ebx
  02eac	13 f8		 adc	 edi, eax
  02eae	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02eb1	03 70 70	 add	 esi, DWORD PTR [eax+112]
  02eb4	8b 48 74	 mov	 ecx, DWORD PTR [eax+116]
  02eb7	13 cf		 adc	 ecx, edi
  02eb9	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  02ebc	89 72 70	 mov	 DWORD PTR [edx+112], esi
  02ebf	89 4a 74	 mov	 DWORD PTR [edx+116], ecx
  02ec2	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02ec5	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  02ec8	89 8d dc fb ff
	ff		 mov	 DWORD PTR tv1553[ebp], ecx
  02ece	8b 50 74	 mov	 edx, DWORD PTR [eax+116]
  02ed1	89 95 e0 fb ff
	ff		 mov	 DWORD PTR tv1553[ebp+4], edx
  02ed7	eb 15		 jmp	 SHORT $LN35@sha512_com
$LN34@sha512_com:
  02ed9	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  02edc	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  02edf	89 8d dc fb ff
	ff		 mov	 DWORD PTR tv1553[ebp], ecx
  02ee5	8b 50 74	 mov	 edx, DWORD PTR [eax+116]
  02ee8	89 95 e0 fb ff
	ff		 mov	 DWORD PTR tv1553[ebp+4], edx
$LN35@sha512_com:
  02eee	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  02ef1	8b b5 dc fb ff
	ff		 mov	 esi, DWORD PTR tv1553[ebp]
  02ef7	03 34 c5 70 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+112]
  02efe	8b bd e0 fb ff
	ff		 mov	 edi, DWORD PTR tv1553[ebp+4]
  02f04	13 3c c5 74 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+116]
  02f0b	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02f0e	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02f11	b1 0e		 mov	 cl, 14			; 0000000eH
  02f13	e8 00 00 00 00	 call	 __aullshr
  02f18	8b d8		 mov	 ebx, eax
  02f1a	8b c2		 mov	 eax, edx
  02f1c	89 85 d8 fb ff
	ff		 mov	 DWORD PTR tv7526[ebp], eax
  02f22	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02f25	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02f28	b1 32		 mov	 cl, 50			; 00000032H
  02f2a	e8 00 00 00 00	 call	 __allshl
  02f2f	0b d8		 or	 ebx, eax
  02f31	8b 85 d8 fb ff
	ff		 mov	 eax, DWORD PTR tv7526[ebp]
  02f37	0b c2		 or	 eax, edx
  02f39	89 85 d4 fb ff
	ff		 mov	 DWORD PTR tv7528[ebp], eax
  02f3f	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02f42	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02f45	b1 12		 mov	 cl, 18			; 00000012H
  02f47	e8 00 00 00 00	 call	 __aullshr
  02f4c	8b ca		 mov	 ecx, edx
  02f4e	89 85 d0 fb ff
	ff		 mov	 DWORD PTR tv7530[ebp], eax
  02f54	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02f57	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02f5a	89 8d cc fb ff
	ff		 mov	 DWORD PTR tv7532[ebp], ecx
  02f60	b1 2e		 mov	 cl, 46			; 0000002eH
  02f62	e8 00 00 00 00	 call	 __allshl
  02f67	8b 8d d0 fb ff
	ff		 mov	 ecx, DWORD PTR tv7530[ebp]
  02f6d	0b c8		 or	 ecx, eax
  02f6f	8b 85 cc fb ff
	ff		 mov	 eax, DWORD PTR tv7532[ebp]
  02f75	0b c2		 or	 eax, edx
  02f77	33 d9		 xor	 ebx, ecx
  02f79	8b 8d d4 fb ff
	ff		 mov	 ecx, DWORD PTR tv7528[ebp]
  02f7f	33 c8		 xor	 ecx, eax
  02f81	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02f84	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02f87	89 8d c8 fb ff
	ff		 mov	 DWORD PTR tv7534[ebp], ecx
  02f8d	b1 29		 mov	 cl, 41			; 00000029H
  02f8f	e8 00 00 00 00	 call	 __aullshr
  02f94	8b ca		 mov	 ecx, edx
  02f96	89 85 c4 fb ff
	ff		 mov	 DWORD PTR tv7536[ebp], eax
  02f9c	8b 45 e8	 mov	 eax, DWORD PTR _v$[ebp+48]
  02f9f	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  02fa2	89 8d c0 fb ff
	ff		 mov	 DWORD PTR tv7538[ebp], ecx
  02fa8	b1 17		 mov	 cl, 23			; 00000017H
  02faa	e8 00 00 00 00	 call	 __allshl
  02faf	8b 8d c4 fb ff
	ff		 mov	 ecx, DWORD PTR tv7536[ebp]
  02fb5	0b c8		 or	 ecx, eax
  02fb7	8b 85 c0 fb ff
	ff		 mov	 eax, DWORD PTR tv7538[ebp]
  02fbd	0b c2		 or	 eax, edx
  02fbf	33 d9		 xor	 ebx, ecx
  02fc1	8b 8d c8 fb ff
	ff		 mov	 ecx, DWORD PTR tv7534[ebp]
  02fc7	33 c8		 xor	 ecx, eax
  02fc9	03 f3		 add	 esi, ebx
  02fcb	13 f9		 adc	 edi, ecx
  02fcd	8b 4d f0	 mov	 ecx, DWORD PTR _v$[ebp+56]
  02fd0	33 4d b8	 xor	 ecx, DWORD PTR _v$[ebp]
  02fd3	8b 55 f4	 mov	 edx, DWORD PTR _v$[ebp+60]
  02fd6	33 55 bc	 xor	 edx, DWORD PTR _v$[ebp+4]
  02fd9	23 4d e8	 and	 ecx, DWORD PTR _v$[ebp+48]
  02fdc	23 55 ec	 and	 edx, DWORD PTR _v$[ebp+52]
  02fdf	33 4d b8	 xor	 ecx, DWORD PTR _v$[ebp]
  02fe2	33 55 bc	 xor	 edx, DWORD PTR _v$[ebp+4]
  02fe5	03 f1		 add	 esi, ecx
  02fe7	13 fa		 adc	 edi, edx
  02fe9	03 75 c0	 add	 esi, DWORD PTR _v$[ebp+8]
  02fec	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+12]
  02fef	13 c7		 adc	 eax, edi
  02ff1	89 75 c0	 mov	 DWORD PTR _v$[ebp+8], esi
  02ff4	89 45 c4	 mov	 DWORD PTR _v$[ebp+12], eax
  02ff7	8b 4d e0	 mov	 ecx, DWORD PTR _v$[ebp+40]
  02ffa	03 4d c0	 add	 ecx, DWORD PTR _v$[ebp+8]
  02ffd	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  03000	13 55 c4	 adc	 edx, DWORD PTR _v$[ebp+12]
  03003	89 4d e0	 mov	 DWORD PTR _v$[ebp+40], ecx
  03006	89 55 e4	 mov	 DWORD PTR _v$[ebp+44], edx
  03009	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0300c	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0300f	b1 1c		 mov	 cl, 28			; 0000001cH
  03011	e8 00 00 00 00	 call	 __aullshr
  03016	8b f0		 mov	 esi, eax
  03018	8b fa		 mov	 edi, edx
  0301a	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0301d	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  03020	b1 24		 mov	 cl, 36			; 00000024H
  03022	e8 00 00 00 00	 call	 __allshl
  03027	0b f0		 or	 esi, eax
  03029	0b fa		 or	 edi, edx
  0302b	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  0302e	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  03031	b1 22		 mov	 cl, 34			; 00000022H
  03033	e8 00 00 00 00	 call	 __aullshr
  03038	8b d8		 mov	 ebx, eax
  0303a	8b c2		 mov	 eax, edx
  0303c	89 85 bc fb ff
	ff		 mov	 DWORD PTR tv7540[ebp], eax
  03042	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  03045	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  03048	b1 1e		 mov	 cl, 30			; 0000001eH
  0304a	e8 00 00 00 00	 call	 __allshl
  0304f	0b d8		 or	 ebx, eax
  03051	8b 85 bc fb ff
	ff		 mov	 eax, DWORD PTR tv7540[ebp]
  03057	0b c2		 or	 eax, edx
  03059	33 f3		 xor	 esi, ebx
  0305b	33 f8		 xor	 edi, eax
  0305d	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  03060	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  03063	b1 27		 mov	 cl, 39			; 00000027H
  03065	e8 00 00 00 00	 call	 __aullshr
  0306a	8b d8		 mov	 ebx, eax
  0306c	8b c2		 mov	 eax, edx
  0306e	89 85 b8 fb ff
	ff		 mov	 DWORD PTR tv7542[ebp], eax
  03074	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  03077	8b 55 cc	 mov	 edx, DWORD PTR _v$[ebp+20]
  0307a	b1 19		 mov	 cl, 25			; 00000019H
  0307c	e8 00 00 00 00	 call	 __allshl
  03081	0b d8		 or	 ebx, eax
  03083	8b 85 b8 fb ff
	ff		 mov	 eax, DWORD PTR tv7542[ebp]
  03089	0b c2		 or	 eax, edx
  0308b	33 f3		 xor	 esi, ebx
  0308d	33 f8		 xor	 edi, eax
  0308f	8b 45 c8	 mov	 eax, DWORD PTR _v$[ebp+16]
  03092	23 45 d0	 and	 eax, DWORD PTR _v$[ebp+24]
  03095	8b 4d cc	 mov	 ecx, DWORD PTR _v$[ebp+20]
  03098	23 4d d4	 and	 ecx, DWORD PTR _v$[ebp+28]
  0309b	8b 55 c8	 mov	 edx, DWORD PTR _v$[ebp+16]
  0309e	33 55 d0	 xor	 edx, DWORD PTR _v$[ebp+24]
  030a1	8b 5d cc	 mov	 ebx, DWORD PTR _v$[ebp+20]
  030a4	33 5d d4	 xor	 ebx, DWORD PTR _v$[ebp+28]
  030a7	23 55 d8	 and	 edx, DWORD PTR _v$[ebp+32]
  030aa	23 5d dc	 and	 ebx, DWORD PTR _v$[ebp+36]
  030ad	0b c2		 or	 eax, edx
  030af	0b cb		 or	 ecx, ebx
  030b1	03 f0		 add	 esi, eax
  030b3	13 f9		 adc	 edi, ecx
  030b5	03 75 c0	 add	 esi, DWORD PTR _v$[ebp+8]
  030b8	8b 45 c4	 mov	 eax, DWORD PTR _v$[ebp+12]
  030bb	13 c7		 adc	 eax, edi
  030bd	89 75 c0	 mov	 DWORD PTR _v$[ebp+8], esi
  030c0	89 45 c4	 mov	 DWORD PTR _v$[ebp+12], eax
  030c3	83 7d b4 00	 cmp	 DWORD PTR _j$[ebp], 0
  030c7	0f 84 49 01 00
	00		 je	 $LN36@sha512_com
  030cd	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  030d0	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  030d3	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  030d6	b1 13		 mov	 cl, 19			; 00000013H
  030d8	e8 00 00 00 00	 call	 __aullshr
  030dd	8b f0		 mov	 esi, eax
  030df	8b fa		 mov	 edi, edx
  030e1	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  030e4	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  030e7	8b 52 6c	 mov	 edx, DWORD PTR [edx+108]
  030ea	b1 2d		 mov	 cl, 45			; 0000002dH
  030ec	e8 00 00 00 00	 call	 __allshl
  030f1	0b f0		 or	 esi, eax
  030f3	0b fa		 or	 edi, edx
  030f5	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  030f8	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  030fb	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  030fe	b1 3d		 mov	 cl, 61			; 0000003dH
  03100	e8 00 00 00 00	 call	 __aullshr
  03105	8b d8		 mov	 ebx, eax
  03107	8b c2		 mov	 eax, edx
  03109	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  0310c	89 85 b4 fb ff
	ff		 mov	 DWORD PTR tv7544[ebp], eax
  03112	8b 42 68	 mov	 eax, DWORD PTR [edx+104]
  03115	8b 52 6c	 mov	 edx, DWORD PTR [edx+108]
  03118	b1 03		 mov	 cl, 3
  0311a	e8 00 00 00 00	 call	 __allshl
  0311f	0b d8		 or	 ebx, eax
  03121	8b 85 b4 fb ff
	ff		 mov	 eax, DWORD PTR tv7544[ebp]
  03127	0b c2		 or	 eax, edx
  03129	33 f3		 xor	 esi, ebx
  0312b	33 f8		 xor	 edi, eax
  0312d	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  03130	8b 41 68	 mov	 eax, DWORD PTR [ecx+104]
  03133	8b 51 6c	 mov	 edx, DWORD PTR [ecx+108]
  03136	b1 06		 mov	 cl, 6
  03138	e8 00 00 00 00	 call	 __aullshr
  0313d	33 f0		 xor	 esi, eax
  0313f	33 fa		 xor	 edi, edx
  03141	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  03144	03 72 40	 add	 esi, DWORD PTR [edx+64]
  03147	13 7a 44	 adc	 edi, DWORD PTR [edx+68]
  0314a	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0314d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0314f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  03152	b1 01		 mov	 cl, 1
  03154	e8 00 00 00 00	 call	 __aullshr
  03159	8b d8		 mov	 ebx, eax
  0315b	8b c2		 mov	 eax, edx
  0315d	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  03160	89 85 b0 fb ff
	ff		 mov	 DWORD PTR tv7546[ebp], eax
  03166	8b 02		 mov	 eax, DWORD PTR [edx]
  03168	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  0316b	b1 3f		 mov	 cl, 63			; 0000003fH
  0316d	e8 00 00 00 00	 call	 __allshl
  03172	0b d8		 or	 ebx, eax
  03174	8b 85 b0 fb ff
	ff		 mov	 eax, DWORD PTR tv7546[ebp]
  0317a	0b c2		 or	 eax, edx
  0317c	8b 4d fc	 mov	 ecx, DWORD PTR _p$[ebp]
  0317f	89 85 ac fb ff
	ff		 mov	 DWORD PTR tv7548[ebp], eax
  03185	8b 01		 mov	 eax, DWORD PTR [ecx]
  03187	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0318a	b1 08		 mov	 cl, 8
  0318c	e8 00 00 00 00	 call	 __aullshr
  03191	8b ca		 mov	 ecx, edx
  03193	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  03196	89 85 a8 fb ff
	ff		 mov	 DWORD PTR tv7550[ebp], eax
  0319c	8b 02		 mov	 eax, DWORD PTR [edx]
  0319e	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  031a1	89 8d a4 fb ff
	ff		 mov	 DWORD PTR tv7552[ebp], ecx
  031a7	b1 38		 mov	 cl, 56			; 00000038H
  031a9	e8 00 00 00 00	 call	 __allshl
  031ae	8b 8d a8 fb ff
	ff		 mov	 ecx, DWORD PTR tv7550[ebp]
  031b4	0b c8		 or	 ecx, eax
  031b6	8b 85 a4 fb ff
	ff		 mov	 eax, DWORD PTR tv7552[ebp]
  031bc	0b c2		 or	 eax, edx
  031be	33 d9		 xor	 ebx, ecx
  031c0	8b 8d ac fb ff
	ff		 mov	 ecx, DWORD PTR tv7548[ebp]
  031c6	33 c8		 xor	 ecx, eax
  031c8	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  031cb	8b 02		 mov	 eax, DWORD PTR [edx]
  031cd	8b 52 04	 mov	 edx, DWORD PTR [edx+4]
  031d0	89 8d a0 fb ff
	ff		 mov	 DWORD PTR tv7554[ebp], ecx
  031d6	b1 07		 mov	 cl, 7
  031d8	e8 00 00 00 00	 call	 __aullshr
  031dd	33 d8		 xor	 ebx, eax
  031df	8b 85 a0 fb ff
	ff		 mov	 eax, DWORD PTR tv7554[ebp]
  031e5	33 c2		 xor	 eax, edx
  031e7	03 f3		 add	 esi, ebx
  031e9	13 f8		 adc	 edi, eax
  031eb	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  031ee	03 70 78	 add	 esi, DWORD PTR [eax+120]
  031f1	8b 48 7c	 mov	 ecx, DWORD PTR [eax+124]
  031f4	13 cf		 adc	 ecx, edi
  031f6	8b 55 fc	 mov	 edx, DWORD PTR _p$[ebp]
  031f9	89 72 78	 mov	 DWORD PTR [edx+120], esi
  031fc	89 4a 7c	 mov	 DWORD PTR [edx+124], ecx
  031ff	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  03202	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  03205	89 8d 98 fb ff
	ff		 mov	 DWORD PTR tv1650[ebp], ecx
  0320b	8b 50 7c	 mov	 edx, DWORD PTR [eax+124]
  0320e	89 95 9c fb ff
	ff		 mov	 DWORD PTR tv1650[ebp+4], edx
  03214	eb 15		 jmp	 SHORT $LN37@sha512_com
$LN36@sha512_com:
  03216	8b 45 fc	 mov	 eax, DWORD PTR _p$[ebp]
  03219	8b 48 78	 mov	 ecx, DWORD PTR [eax+120]
  0321c	89 8d 98 fb ff
	ff		 mov	 DWORD PTR tv1650[ebp], ecx
  03222	8b 50 7c	 mov	 edx, DWORD PTR [eax+124]
  03225	89 95 9c fb ff
	ff		 mov	 DWORD PTR tv1650[ebp+4], edx
$LN37@sha512_com:
  0322b	8b 45 b4	 mov	 eax, DWORD PTR _j$[ebp]
  0322e	8b b5 98 fb ff
	ff		 mov	 esi, DWORD PTR tv1650[ebp]
  03234	03 34 c5 78 00
	00 00		 add	 esi, DWORD PTR _k512[eax*8+120]
  0323b	8b bd 9c fb ff
	ff		 mov	 edi, DWORD PTR tv1650[ebp+4]
  03241	13 3c c5 7c 00
	00 00		 adc	 edi, DWORD PTR _k512[eax*8+124]
  03248	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  0324b	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  0324e	b1 0e		 mov	 cl, 14			; 0000000eH
  03250	e8 00 00 00 00	 call	 __aullshr
  03255	8b d8		 mov	 ebx, eax
  03257	8b c2		 mov	 eax, edx
  03259	89 85 94 fb ff
	ff		 mov	 DWORD PTR tv7556[ebp], eax
  0325f	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  03262	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  03265	b1 32		 mov	 cl, 50			; 00000032H
  03267	e8 00 00 00 00	 call	 __allshl
  0326c	0b d8		 or	 ebx, eax
  0326e	8b 85 94 fb ff
	ff		 mov	 eax, DWORD PTR tv7556[ebp]
  03274	0b c2		 or	 eax, edx
  03276	89 85 90 fb ff
	ff		 mov	 DWORD PTR tv7558[ebp], eax
  0327c	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  0327f	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  03282	b1 12		 mov	 cl, 18			; 00000012H
  03284	e8 00 00 00 00	 call	 __aullshr
  03289	8b ca		 mov	 ecx, edx
  0328b	89 85 8c fb ff
	ff		 mov	 DWORD PTR tv7560[ebp], eax
  03291	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  03294	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  03297	89 8d 88 fb ff
	ff		 mov	 DWORD PTR tv7562[ebp], ecx
  0329d	b1 2e		 mov	 cl, 46			; 0000002eH
  0329f	e8 00 00 00 00	 call	 __allshl
  032a4	8b 8d 8c fb ff
	ff		 mov	 ecx, DWORD PTR tv7560[ebp]
  032aa	0b c8		 or	 ecx, eax
  032ac	8b 85 88 fb ff
	ff		 mov	 eax, DWORD PTR tv7562[ebp]
  032b2	0b c2		 or	 eax, edx
  032b4	33 d9		 xor	 ebx, ecx
  032b6	8b 8d 90 fb ff
	ff		 mov	 ecx, DWORD PTR tv7558[ebp]
  032bc	33 c8		 xor	 ecx, eax
  032be	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  032c1	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  032c4	89 8d 84 fb ff
	ff		 mov	 DWORD PTR tv7564[ebp], ecx
  032ca	b1 29		 mov	 cl, 41			; 00000029H
  032cc	e8 00 00 00 00	 call	 __aullshr
  032d1	8b ca		 mov	 ecx, edx
  032d3	89 85 80 fb ff
	ff		 mov	 DWORD PTR tv7566[ebp], eax
  032d9	8b 45 e0	 mov	 eax, DWORD PTR _v$[ebp+40]
  032dc	8b 55 e4	 mov	 edx, DWORD PTR _v$[ebp+44]
  032df	89 8d 7c fb ff
	ff		 mov	 DWORD PTR tv7568[ebp], ecx
  032e5	b1 17		 mov	 cl, 23			; 00000017H
  032e7	e8 00 00 00 00	 call	 __allshl
  032ec	8b 8d 80 fb ff
	ff		 mov	 ecx, DWORD PTR tv7566[ebp]
  032f2	0b c8		 or	 ecx, eax
  032f4	8b 85 7c fb ff
	ff		 mov	 eax, DWORD PTR tv7568[ebp]
  032fa	0b c2		 or	 eax, edx
  032fc	33 d9		 xor	 ebx, ecx
  032fe	8b 8d 84 fb ff
	ff		 mov	 ecx, DWORD PTR tv7564[ebp]
  03304	33 c8		 xor	 ecx, eax
  03306	03 f3		 add	 esi, ebx
  03308	13 f9		 adc	 edi, ecx
  0330a	8b 4d e8	 mov	 ecx, DWORD PTR _v$[ebp+48]
  0330d	33 4d f0	 xor	 ecx, DWORD PTR _v$[ebp+56]
  03310	8b 55 ec	 mov	 edx, DWORD PTR _v$[ebp+52]
  03313	33 55 f4	 xor	 edx, DWORD PTR _v$[ebp+60]
  03316	23 4d e0	 and	 ecx, DWORD PTR _v$[ebp+40]
  03319	23 55 e4	 and	 edx, DWORD PTR _v$[ebp+44]
  0331c	33 4d f0	 xor	 ecx, DWORD PTR _v$[ebp+56]
  0331f	33 55 f4	 xor	 edx, DWORD PTR _v$[ebp+60]
  03322	03 f1		 add	 esi, ecx
  03324	13 fa		 adc	 edi, edx
  03326	03 75 b8	 add	 esi, DWORD PTR _v$[ebp]
  03329	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp+4]
  0332c	13 c7		 adc	 eax, edi
  0332e	89 75 b8	 mov	 DWORD PTR _v$[ebp], esi
  03331	89 45 bc	 mov	 DWORD PTR _v$[ebp+4], eax
  03334	8b 4d d8	 mov	 ecx, DWORD PTR _v$[ebp+32]
  03337	03 4d b8	 add	 ecx, DWORD PTR _v$[ebp]
  0333a	8b 55 dc	 mov	 edx, DWORD PTR _v$[ebp+36]
  0333d	13 55 bc	 adc	 edx, DWORD PTR _v$[ebp+4]
  03340	89 4d d8	 mov	 DWORD PTR _v$[ebp+32], ecx
  03343	89 55 dc	 mov	 DWORD PTR _v$[ebp+36], edx
  03346	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  03349	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  0334c	b1 1c		 mov	 cl, 28			; 0000001cH
  0334e	e8 00 00 00 00	 call	 __aullshr
  03353	8b f0		 mov	 esi, eax
  03355	8b fa		 mov	 edi, edx
  03357	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  0335a	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  0335d	b1 24		 mov	 cl, 36			; 00000024H
  0335f	e8 00 00 00 00	 call	 __allshl
  03364	0b f0		 or	 esi, eax
  03366	0b fa		 or	 edi, edx
  03368	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  0336b	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  0336e	b1 22		 mov	 cl, 34			; 00000022H
  03370	e8 00 00 00 00	 call	 __aullshr
  03375	8b d8		 mov	 ebx, eax
  03377	8b c2		 mov	 eax, edx
  03379	89 85 78 fb ff
	ff		 mov	 DWORD PTR tv7570[ebp], eax
  0337f	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  03382	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  03385	b1 1e		 mov	 cl, 30			; 0000001eH
  03387	e8 00 00 00 00	 call	 __allshl
  0338c	0b d8		 or	 ebx, eax
  0338e	8b 85 78 fb ff
	ff		 mov	 eax, DWORD PTR tv7570[ebp]
  03394	0b c2		 or	 eax, edx
  03396	33 f3		 xor	 esi, ebx
  03398	33 f8		 xor	 edi, eax
  0339a	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  0339d	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  033a0	b1 27		 mov	 cl, 39			; 00000027H
  033a2	e8 00 00 00 00	 call	 __aullshr
  033a7	8b d8		 mov	 ebx, eax
  033a9	8b c2		 mov	 eax, edx
  033ab	89 85 74 fb ff
	ff		 mov	 DWORD PTR tv7572[ebp], eax
  033b1	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  033b4	8b 55 c4	 mov	 edx, DWORD PTR _v$[ebp+12]
  033b7	b1 19		 mov	 cl, 25			; 00000019H
  033b9	e8 00 00 00 00	 call	 __allshl
  033be	0b d8		 or	 ebx, eax
  033c0	8b 85 74 fb ff
	ff		 mov	 eax, DWORD PTR tv7572[ebp]
  033c6	0b c2		 or	 eax, edx
  033c8	33 f3		 xor	 esi, ebx
  033ca	33 f8		 xor	 edi, eax
  033cc	8b 45 c0	 mov	 eax, DWORD PTR _v$[ebp+8]
  033cf	23 45 c8	 and	 eax, DWORD PTR _v$[ebp+16]
  033d2	8b 4d c4	 mov	 ecx, DWORD PTR _v$[ebp+12]
  033d5	23 4d cc	 and	 ecx, DWORD PTR _v$[ebp+20]
  033d8	8b 55 c0	 mov	 edx, DWORD PTR _v$[ebp+8]
  033db	33 55 c8	 xor	 edx, DWORD PTR _v$[ebp+16]
  033de	8b 5d c4	 mov	 ebx, DWORD PTR _v$[ebp+12]
  033e1	33 5d cc	 xor	 ebx, DWORD PTR _v$[ebp+20]
  033e4	23 55 d0	 and	 edx, DWORD PTR _v$[ebp+24]
  033e7	23 5d d4	 and	 ebx, DWORD PTR _v$[ebp+28]
  033ea	0b c2		 or	 eax, edx
  033ec	0b cb		 or	 ecx, ebx
  033ee	03 f0		 add	 esi, eax
  033f0	13 f9		 adc	 edi, ecx
  033f2	03 75 b8	 add	 esi, DWORD PTR _v$[ebp]
  033f5	8b 45 bc	 mov	 eax, DWORD PTR _v$[ebp+4]
  033f8	13 c7		 adc	 eax, edi
  033fa	89 75 b8	 mov	 DWORD PTR _v$[ebp], esi
  033fd	89 45 bc	 mov	 DWORD PTR _v$[ebp+4], eax

; 527  :     }

  03400	e9 2b cc ff ff	 jmp	 $LN2@sha512_com
$LN1@sha512_com:

; 528  : 
; 529  :     ctx->hash[0] += v[0]; ctx->hash[1] += v[1];

  03405	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  03408	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0340b	03 55 b8	 add	 edx, DWORD PTR _v$[ebp]
  0340e	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  03411	13 45 bc	 adc	 eax, DWORD PTR _v$[ebp+4]
  03414	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  03417	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  0341a	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0341d	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  03420	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  03423	03 45 c0	 add	 eax, DWORD PTR _v$[ebp+8]
  03426	8b 4a 1c	 mov	 ecx, DWORD PTR [edx+28]
  03429	13 4d c4	 adc	 ecx, DWORD PTR _v$[ebp+12]
  0342c	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  0342f	89 42 18	 mov	 DWORD PTR [edx+24], eax
  03432	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx

; 530  :     ctx->hash[2] += v[2]; ctx->hash[3] += v[3];

  03435	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  03438	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0343b	03 4d c8	 add	 ecx, DWORD PTR _v$[ebp+16]
  0343e	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  03441	13 55 cc	 adc	 edx, DWORD PTR _v$[ebp+20]
  03444	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  03447	89 48 20	 mov	 DWORD PTR [eax+32], ecx
  0344a	89 50 24	 mov	 DWORD PTR [eax+36], edx
  0344d	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  03450	8b 51 28	 mov	 edx, DWORD PTR [ecx+40]
  03453	03 55 d0	 add	 edx, DWORD PTR _v$[ebp+24]
  03456	8b 41 2c	 mov	 eax, DWORD PTR [ecx+44]
  03459	13 45 d4	 adc	 eax, DWORD PTR _v$[ebp+28]
  0345c	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0345f	89 51 28	 mov	 DWORD PTR [ecx+40], edx
  03462	89 41 2c	 mov	 DWORD PTR [ecx+44], eax

; 531  :     ctx->hash[4] += v[4]; ctx->hash[5] += v[5];

  03465	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  03468	8b 42 30	 mov	 eax, DWORD PTR [edx+48]
  0346b	03 45 d8	 add	 eax, DWORD PTR _v$[ebp+32]
  0346e	8b 4a 34	 mov	 ecx, DWORD PTR [edx+52]
  03471	13 4d dc	 adc	 ecx, DWORD PTR _v$[ebp+36]
  03474	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  03477	89 42 30	 mov	 DWORD PTR [edx+48], eax
  0347a	89 4a 34	 mov	 DWORD PTR [edx+52], ecx
  0347d	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  03480	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  03483	03 4d e0	 add	 ecx, DWORD PTR _v$[ebp+40]
  03486	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  03489	13 55 e4	 adc	 edx, DWORD PTR _v$[ebp+44]
  0348c	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0348f	89 48 38	 mov	 DWORD PTR [eax+56], ecx
  03492	89 50 3c	 mov	 DWORD PTR [eax+60], edx

; 532  :     ctx->hash[6] += v[6]; ctx->hash[7] += v[7];

  03495	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  03498	8b 51 40	 mov	 edx, DWORD PTR [ecx+64]
  0349b	03 55 e8	 add	 edx, DWORD PTR _v$[ebp+48]
  0349e	8b 41 44	 mov	 eax, DWORD PTR [ecx+68]
  034a1	13 45 ec	 adc	 eax, DWORD PTR _v$[ebp+52]
  034a4	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  034a7	89 51 40	 mov	 DWORD PTR [ecx+64], edx
  034aa	89 41 44	 mov	 DWORD PTR [ecx+68], eax
  034ad	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  034b0	8b 42 48	 mov	 eax, DWORD PTR [edx+72]
  034b3	03 45 f0	 add	 eax, DWORD PTR _v$[ebp+56]
  034b6	8b 4a 4c	 mov	 ecx, DWORD PTR [edx+76]
  034b9	13 4d f4	 adc	 ecx, DWORD PTR _v$[ebp+60]
  034bc	8b 55 08	 mov	 edx, DWORD PTR _ctx$[ebp]
  034bf	89 42 48	 mov	 DWORD PTR [edx+72], eax
  034c2	89 4a 4c	 mov	 DWORD PTR [edx+76], ecx

; 533  : }

  034c5	5f		 pop	 edi
  034c6	5e		 pop	 esi
  034c7	5b		 pop	 ebx
  034c8	8b e5		 mov	 esp, ebp
  034ca	5d		 pop	 ebp
  034cb	c2 04 00	 ret	 4
_sha512_compile@4 ENDP
_TEXT	ENDS
PUBLIC	_sha512_hash@12
; Function compile flags: /Odtp
;	COMDAT _sha512_hash@12
_TEXT	SEGMENT
tv316 = -32						; size = 4
tv205 = -28						; size = 8
tv204 = -20						; size = 4
__i$25014 = -16						; size = 4
_pos$ = -12						; size = 4
_space$ = -8						; size = 4
_sp$ = -4						; size = 4
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_ctx$ = 16						; size = 4
_sha512_hash@12 PROC					; COMDAT

; 543  : {   uint_32t pos = (uint_32t)(ctx->count[0] & SHA512_MASK),

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 20	 sub	 esp, 32			; 00000020H
  00008	53		 push	 ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00013	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00016	83 e2 00	 and	 edx, 0
  00019	89 4d f4	 mov	 DWORD PTR _pos$[ebp], ecx

; 544  :              space = SHA512_BLOCK_SIZE - pos;

  0001c	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  00021	2b 45 f4	 sub	 eax, DWORD PTR _pos$[ebp]
  00024	89 45 f8	 mov	 DWORD PTR _space$[ebp], eax

; 545  :     const unsigned char *sp = data;

  00027	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  0002a	89 4d fc	 mov	 DWORD PTR _sp$[ebp], ecx

; 546  : 
; 547  :     if((ctx->count[0] += len) < len)

  0002d	8b 55 0c	 mov	 edx, DWORD PTR _len$[ebp]
  00030	33 c0		 xor	 eax, eax
  00032	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00035	03 11		 add	 edx, DWORD PTR [ecx]
  00037	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0003a	13 c8		 adc	 ecx, eax
  0003c	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  0003f	89 10		 mov	 DWORD PTR [eax], edx
  00041	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00044	8b 4d 0c	 mov	 ecx, DWORD PTR _len$[ebp]
  00047	33 d2		 xor	 edx, edx
  00049	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  0004c	89 45 ec	 mov	 DWORD PTR tv204[ebp], eax
  0004f	89 4d e4	 mov	 DWORD PTR tv205[ebp], ecx
  00052	89 55 e8	 mov	 DWORD PTR tv205[ebp+4], edx
  00055	8b 4d ec	 mov	 ecx, DWORD PTR tv204[ebp]
  00058	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0005b	3b 55 e8	 cmp	 edx, DWORD PTR tv205[ebp+4]
  0005e	77 24		 ja	 SHORT $LN4@sha512_has
  00060	72 0a		 jb	 SHORT $LN8@sha512_has
  00062	8b 45 ec	 mov	 eax, DWORD PTR tv204[ebp]
  00065	8b 08		 mov	 ecx, DWORD PTR [eax]
  00067	3b 4d e4	 cmp	 ecx, DWORD PTR tv205[ebp]
  0006a	73 18		 jae	 SHORT $LN4@sha512_has
$LN8@sha512_has:

; 548  :         ++(ctx->count[1]);

  0006c	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  0006f	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00072	83 c0 01	 add	 eax, 1
  00075	8b 4a 0c	 mov	 ecx, DWORD PTR [edx+12]
  00078	83 d1 00	 adc	 ecx, 0
  0007b	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  0007e	89 42 08	 mov	 DWORD PTR [edx+8], eax
  00081	89 4a 0c	 mov	 DWORD PTR [edx+12], ecx
$LN4@sha512_has:

; 549  : 
; 550  :     while(len >= space)     /* tranfer whole blocks while possible  */

  00084	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  00087	3b 45 f8	 cmp	 eax, DWORD PTR _space$[ebp]
  0008a	0f 82 49 01 00
	00		 jb	 $LN3@sha512_has

; 551  :     {
; 552  :         memcpy(((unsigned char*)ctx->wbuf) + pos, sp, space);

  00090	8b 4d f8	 mov	 ecx, DWORD PTR _space$[ebp]
  00093	51		 push	 ecx
  00094	8b 55 fc	 mov	 edx, DWORD PTR _sp$[ebp]
  00097	52		 push	 edx
  00098	8b 45 f4	 mov	 eax, DWORD PTR _pos$[ebp]
  0009b	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0009e	8d 54 01 50	 lea	 edx, DWORD PTR [ecx+eax+80]
  000a2	52		 push	 edx
  000a3	e8 00 00 00 00	 call	 _memcpy
  000a8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 553  :         sp += space; len -= space; space = SHA512_BLOCK_SIZE; pos = 0;

  000ab	8b 45 fc	 mov	 eax, DWORD PTR _sp$[ebp]
  000ae	03 45 f8	 add	 eax, DWORD PTR _space$[ebp]
  000b1	89 45 fc	 mov	 DWORD PTR _sp$[ebp], eax
  000b4	8b 4d 0c	 mov	 ecx, DWORD PTR _len$[ebp]
  000b7	2b 4d f8	 sub	 ecx, DWORD PTR _space$[ebp]
  000ba	89 4d 0c	 mov	 DWORD PTR _len$[ebp], ecx
  000bd	c7 45 f8 80 00
	00 00		 mov	 DWORD PTR _space$[ebp], 128 ; 00000080H
  000c4	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _pos$[ebp], 0

; 554  :         bsw_64(ctx->wbuf, SHA512_BLOCK_SIZE >> 3);

  000cb	c7 45 f0 10 00
	00 00		 mov	 DWORD PTR __i$25014[ebp], 16 ; 00000010H
$LN2@sha512_has:
  000d2	8b 55 f0	 mov	 edx, DWORD PTR __i$25014[ebp]
  000d5	8b 45 f0	 mov	 eax, DWORD PTR __i$25014[ebp]
  000d8	83 e8 01	 sub	 eax, 1
  000db	89 45 f0	 mov	 DWORD PTR __i$25014[ebp], eax
  000de	85 d2		 test	 edx, edx
  000e0	0f 84 e5 00 00
	00		 je	 $LN1@sha512_has
  000e6	8b 4d f0	 mov	 ecx, DWORD PTR __i$25014[ebp]
  000e9	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  000ec	8b 44 ca 50	 mov	 eax, DWORD PTR [edx+ecx*8+80]
  000f0	c1 e8 18	 shr	 eax, 24			; 00000018H
  000f3	8b 4d f0	 mov	 ecx, DWORD PTR __i$25014[ebp]
  000f6	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  000f9	8b 4c ca 50	 mov	 ecx, DWORD PTR [edx+ecx*8+80]
  000fd	c1 e1 08	 shl	 ecx, 8
  00100	0b c1		 or	 eax, ecx
  00102	25 ff 00 ff 00	 and	 eax, 16711935		; 00ff00ffH
  00107	8b 55 f0	 mov	 edx, DWORD PTR __i$25014[ebp]
  0010a	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0010d	8b 54 d1 50	 mov	 edx, DWORD PTR [ecx+edx*8+80]
  00111	c1 ea 08	 shr	 edx, 8
  00114	8b 4d f0	 mov	 ecx, DWORD PTR __i$25014[ebp]
  00117	8b 75 10	 mov	 esi, DWORD PTR _ctx$[ebp]
  0011a	8b 4c ce 50	 mov	 ecx, DWORD PTR [esi+ecx*8+80]
  0011e	c1 e1 18	 shl	 ecx, 24			; 00000018H
  00121	0b d1		 or	 edx, ecx
  00123	81 e2 00 ff 00
	ff		 and	 edx, -16711936		; ff00ff00H
  00129	0b c2		 or	 eax, edx
  0012b	33 d2		 xor	 edx, edx
  0012d	b1 20		 mov	 cl, 32			; 00000020H
  0012f	e8 00 00 00 00	 call	 __allshl
  00134	8b f0		 mov	 esi, eax
  00136	8b fa		 mov	 edi, edx
  00138	8b 55 f0	 mov	 edx, DWORD PTR __i$25014[ebp]
  0013b	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0013e	8b 44 d1 50	 mov	 eax, DWORD PTR [ecx+edx*8+80]
  00142	8b 54 d1 54	 mov	 edx, DWORD PTR [ecx+edx*8+84]
  00146	b1 20		 mov	 cl, 32			; 00000020H
  00148	e8 00 00 00 00	 call	 __aullshr
  0014d	8b d8		 mov	 ebx, eax
  0014f	c1 eb 18	 shr	 ebx, 24			; 00000018H
  00152	8b 55 f0	 mov	 edx, DWORD PTR __i$25014[ebp]
  00155	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00158	8b 44 d1 50	 mov	 eax, DWORD PTR [ecx+edx*8+80]
  0015c	8b 54 d1 54	 mov	 edx, DWORD PTR [ecx+edx*8+84]
  00160	b1 20		 mov	 cl, 32			; 00000020H
  00162	e8 00 00 00 00	 call	 __aullshr
  00167	c1 e0 08	 shl	 eax, 8
  0016a	0b d8		 or	 ebx, eax
  0016c	81 e3 ff 00 ff
	00		 and	 ebx, 16711935		; 00ff00ffH
  00172	8b 55 f0	 mov	 edx, DWORD PTR __i$25014[ebp]
  00175	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00178	8b 44 d1 50	 mov	 eax, DWORD PTR [ecx+edx*8+80]
  0017c	8b 54 d1 54	 mov	 edx, DWORD PTR [ecx+edx*8+84]
  00180	b1 20		 mov	 cl, 32			; 00000020H
  00182	e8 00 00 00 00	 call	 __aullshr
  00187	c1 e8 08	 shr	 eax, 8
  0018a	8b 55 f0	 mov	 edx, DWORD PTR __i$25014[ebp]
  0018d	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00190	89 45 e0	 mov	 DWORD PTR tv316[ebp], eax
  00193	8b 44 d1 50	 mov	 eax, DWORD PTR [ecx+edx*8+80]
  00197	8b 54 d1 54	 mov	 edx, DWORD PTR [ecx+edx*8+84]
  0019b	b1 20		 mov	 cl, 32			; 00000020H
  0019d	e8 00 00 00 00	 call	 __aullshr
  001a2	c1 e0 18	 shl	 eax, 24			; 00000018H
  001a5	8b 4d e0	 mov	 ecx, DWORD PTR tv316[ebp]
  001a8	0b c8		 or	 ecx, eax
  001aa	81 e1 00 ff 00
	ff		 and	 ecx, -16711936		; ff00ff00H
  001b0	0b d9		 or	 ebx, ecx
  001b2	33 d2		 xor	 edx, edx
  001b4	0b f3		 or	 esi, ebx
  001b6	0b fa		 or	 edi, edx
  001b8	8b 45 f0	 mov	 eax, DWORD PTR __i$25014[ebp]
  001bb	8b 4d 10	 mov	 ecx, DWORD PTR _ctx$[ebp]
  001be	89 74 c1 50	 mov	 DWORD PTR [ecx+eax*8+80], esi
  001c2	89 7c c1 54	 mov	 DWORD PTR [ecx+eax*8+84], edi
  001c6	e9 07 ff ff ff	 jmp	 $LN2@sha512_has
$LN1@sha512_has:

; 555  :         sha512_compile(ctx);

  001cb	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  001ce	52		 push	 edx
  001cf	e8 00 00 00 00	 call	 _sha512_compile@4

; 556  :     }

  001d4	e9 ab fe ff ff	 jmp	 $LN4@sha512_has
$LN3@sha512_has:

; 557  : 
; 558  :     memcpy(((unsigned char*)ctx->wbuf) + pos, sp, len);

  001d9	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  001dc	50		 push	 eax
  001dd	8b 4d fc	 mov	 ecx, DWORD PTR _sp$[ebp]
  001e0	51		 push	 ecx
  001e1	8b 55 f4	 mov	 edx, DWORD PTR _pos$[ebp]
  001e4	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  001e7	8d 4c 10 50	 lea	 ecx, DWORD PTR [eax+edx+80]
  001eb	51		 push	 ecx
  001ec	e8 00 00 00 00	 call	 _memcpy
  001f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 559  : }

  001f4	5f		 pop	 edi
  001f5	5e		 pop	 esi
  001f6	5b		 pop	 ebx
  001f7	8b e5		 mov	 esp, ebp
  001f9	5d		 pop	 ebp
  001fa	c2 0c 00	 ret	 12			; 0000000cH
_sha512_hash@12 ENDP
_TEXT	ENDS
PUBLIC	_sha384_begin@4
; Function compile flags: /Odtp
;	COMDAT _sha384_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha384_begin@4 PROC					; COMDAT

; 622  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	56		 push	 esi
  00006	57		 push	 edi

; 623  :     ctx->count[0] = ctx->count[1] = 0;

  00007	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00011	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  00021	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 624  :     memcpy(ctx->hash, i384, 8 * sizeof(uint_64t));

  00028	8b 7d 08	 mov	 edi, DWORD PTR _ctx$[ebp]
  0002b	83 c7 10	 add	 edi, 16			; 00000010H
  0002e	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00033	be 00 00 00 00	 mov	 esi, OFFSET _i384
  00038	f3 a5		 rep movsd

; 625  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
_sha384_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha384_end@8
; Function compile flags: /Odtp
;	COMDAT _sha384_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha384_end@8 PROC					; COMDAT

; 628  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 629  :     sha_end2(hval, ctx, SHA384_DIGEST_SIZE);

  00005	6a 30		 push	 48			; 00000030H
  00007	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 _sha_end2@12

; 630  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha384_end@8 ENDP
; Function compile flags: /Odtp
_TEXT	ENDS
;	COMDAT _sha_end2@12
_TEXT	SEGMENT
tv419 = -12						; size = 4
__i$25047 = -8						; size = 4
_i$ = -4						; size = 4
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_hlen$ = 16						; size = 4
_sha_end2@12 PROC					; COMDAT

; 564  : {   uint_32t    i = (uint_32t)(ctx->count[0] & SHA512_MASK);

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00008	53		 push	 ebx
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00010	83 e1 7f	 and	 ecx, 127		; 0000007fH
  00013	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00016	83 e2 00	 and	 edx, 0
  00019	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx

; 565  : 
; 566  :     /* put bytes in the buffer in an order in which references to   */
; 567  :     /* 32-bit words will put bytes with lower addresses into the    */
; 568  :     /* top of 32 bit words on BOTH big and little endian machines   */
; 569  :     bsw_64(ctx->wbuf, (i + 7) >> 3);

  0001c	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  0001f	83 c0 07	 add	 eax, 7
  00022	c1 e8 03	 shr	 eax, 3
  00025	89 45 f8	 mov	 DWORD PTR __i$25047[ebp], eax
$LN10@sha_end2:
  00028	8b 4d f8	 mov	 ecx, DWORD PTR __i$25047[ebp]
  0002b	8b 55 f8	 mov	 edx, DWORD PTR __i$25047[ebp]
  0002e	83 ea 01	 sub	 edx, 1
  00031	89 55 f8	 mov	 DWORD PTR __i$25047[ebp], edx
  00034	85 c9		 test	 ecx, ecx
  00036	0f 84 e5 00 00
	00		 je	 $LN9@sha_end2
  0003c	8b 45 f8	 mov	 eax, DWORD PTR __i$25047[ebp]
  0003f	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00042	8b 44 c1 50	 mov	 eax, DWORD PTR [ecx+eax*8+80]
  00046	c1 e8 18	 shr	 eax, 24			; 00000018H
  00049	8b 55 f8	 mov	 edx, DWORD PTR __i$25047[ebp]
  0004c	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0004f	8b 54 d1 50	 mov	 edx, DWORD PTR [ecx+edx*8+80]
  00053	c1 e2 08	 shl	 edx, 8
  00056	0b c2		 or	 eax, edx
  00058	25 ff 00 ff 00	 and	 eax, 16711935		; 00ff00ffH
  0005d	8b 4d f8	 mov	 ecx, DWORD PTR __i$25047[ebp]
  00060	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00063	8b 4c ca 50	 mov	 ecx, DWORD PTR [edx+ecx*8+80]
  00067	c1 e9 08	 shr	 ecx, 8
  0006a	8b 55 f8	 mov	 edx, DWORD PTR __i$25047[ebp]
  0006d	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00070	8b 54 d6 50	 mov	 edx, DWORD PTR [esi+edx*8+80]
  00074	c1 e2 18	 shl	 edx, 24			; 00000018H
  00077	0b ca		 or	 ecx, edx
  00079	81 e1 00 ff 00
	ff		 and	 ecx, -16711936		; ff00ff00H
  0007f	0b c1		 or	 eax, ecx
  00081	33 d2		 xor	 edx, edx
  00083	b1 20		 mov	 cl, 32			; 00000020H
  00085	e8 00 00 00 00	 call	 __allshl
  0008a	8b f0		 mov	 esi, eax
  0008c	8b fa		 mov	 edi, edx
  0008e	8b 4d f8	 mov	 ecx, DWORD PTR __i$25047[ebp]
  00091	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00094	8b 44 ca 50	 mov	 eax, DWORD PTR [edx+ecx*8+80]
  00098	8b 54 ca 54	 mov	 edx, DWORD PTR [edx+ecx*8+84]
  0009c	b1 20		 mov	 cl, 32			; 00000020H
  0009e	e8 00 00 00 00	 call	 __aullshr
  000a3	8b d8		 mov	 ebx, eax
  000a5	c1 eb 18	 shr	 ebx, 24			; 00000018H
  000a8	8b 4d f8	 mov	 ecx, DWORD PTR __i$25047[ebp]
  000ab	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  000ae	8b 44 ca 50	 mov	 eax, DWORD PTR [edx+ecx*8+80]
  000b2	8b 54 ca 54	 mov	 edx, DWORD PTR [edx+ecx*8+84]
  000b6	b1 20		 mov	 cl, 32			; 00000020H
  000b8	e8 00 00 00 00	 call	 __aullshr
  000bd	c1 e0 08	 shl	 eax, 8
  000c0	0b d8		 or	 ebx, eax
  000c2	81 e3 ff 00 ff
	00		 and	 ebx, 16711935		; 00ff00ffH
  000c8	8b 4d f8	 mov	 ecx, DWORD PTR __i$25047[ebp]
  000cb	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  000ce	8b 44 ca 50	 mov	 eax, DWORD PTR [edx+ecx*8+80]
  000d2	8b 54 ca 54	 mov	 edx, DWORD PTR [edx+ecx*8+84]
  000d6	b1 20		 mov	 cl, 32			; 00000020H
  000d8	e8 00 00 00 00	 call	 __aullshr
  000dd	c1 e8 08	 shr	 eax, 8
  000e0	8b 4d f8	 mov	 ecx, DWORD PTR __i$25047[ebp]
  000e3	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  000e6	89 45 f4	 mov	 DWORD PTR tv419[ebp], eax
  000e9	8b 44 ca 50	 mov	 eax, DWORD PTR [edx+ecx*8+80]
  000ed	8b 54 ca 54	 mov	 edx, DWORD PTR [edx+ecx*8+84]
  000f1	b1 20		 mov	 cl, 32			; 00000020H
  000f3	e8 00 00 00 00	 call	 __aullshr
  000f8	c1 e0 18	 shl	 eax, 24			; 00000018H
  000fb	8b 4d f4	 mov	 ecx, DWORD PTR tv419[ebp]
  000fe	0b c8		 or	 ecx, eax
  00100	81 e1 00 ff 00
	ff		 and	 ecx, -16711936		; ff00ff00H
  00106	0b d9		 or	 ebx, ecx
  00108	33 c0		 xor	 eax, eax
  0010a	0b f3		 or	 esi, ebx
  0010c	0b f8		 or	 edi, eax
  0010e	8b 4d f8	 mov	 ecx, DWORD PTR __i$25047[ebp]
  00111	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00114	89 74 ca 50	 mov	 DWORD PTR [edx+ecx*8+80], esi
  00118	89 7c ca 54	 mov	 DWORD PTR [edx+ecx*8+84], edi
  0011c	e9 07 ff ff ff	 jmp	 $LN10@sha_end2
$LN9@sha_end2:

; 570  : 
; 571  :     /* we now need to mask valid bytes and add the padding which is */
; 572  :     /* a single 1 bit and as many zero bits as necessary. Note that */
; 573  :     /* we can always add the first padding byte here because the    */
; 574  :     /* buffer always has at least one empty slot                    */
; 575  :     ctx->wbuf[i >> 3] &= li_64(ffffffffffffff00) << 8 * (~i & 7);

  00121	8b 75 fc	 mov	 esi, DWORD PTR _i$[ebp]
  00124	c1 ee 03	 shr	 esi, 3
  00127	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0012a	f7 d1		 not	 ecx
  0012c	83 e1 07	 and	 ecx, 7
  0012f	c1 e1 03	 shl	 ecx, 3
  00132	b8 00 ff ff ff	 mov	 eax, -256		; ffffff00H
  00137	83 ca ff	 or	 edx, -1
  0013a	e8 00 00 00 00	 call	 __allshl
  0013f	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00142	23 44 f1 50	 and	 eax, DWORD PTR [ecx+esi*8+80]
  00146	23 54 f1 54	 and	 edx, DWORD PTR [ecx+esi*8+84]
  0014a	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0014d	c1 e9 03	 shr	 ecx, 3
  00150	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00153	89 44 ce 50	 mov	 DWORD PTR [esi+ecx*8+80], eax
  00157	89 54 ce 54	 mov	 DWORD PTR [esi+ecx*8+84], edx

; 576  :     ctx->wbuf[i >> 3] |= li_64(0000000000000080) << 8 * (~i & 7);

  0015b	8b 75 fc	 mov	 esi, DWORD PTR _i$[ebp]
  0015e	c1 ee 03	 shr	 esi, 3
  00161	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00164	f7 d1		 not	 ecx
  00166	83 e1 07	 and	 ecx, 7
  00169	c1 e1 03	 shl	 ecx, 3
  0016c	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  00171	33 d2		 xor	 edx, edx
  00173	e8 00 00 00 00	 call	 __allshl
  00178	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0017b	0b 44 f1 50	 or	 eax, DWORD PTR [ecx+esi*8+80]
  0017f	0b 54 f1 54	 or	 edx, DWORD PTR [ecx+esi*8+84]
  00183	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  00186	c1 e9 03	 shr	 ecx, 3
  00189	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  0018c	89 44 ce 50	 mov	 DWORD PTR [esi+ecx*8+80], eax
  00190	89 54 ce 54	 mov	 DWORD PTR [esi+ecx*8+84], edx

; 577  : 
; 578  :     /* we need 17 or more empty byte positions, one for the padding */
; 579  :     /* byte (above) and sixteen for the length count.  If there is  */
; 580  :     /* not enough space pad and empty the buffer                    */
; 581  :     if(i > SHA512_BLOCK_SIZE - 17)

  00194	83 7d fc 6f	 cmp	 DWORD PTR _i$[ebp], 111	; 0000006fH
  00198	76 2f		 jbe	 SHORT $LN8@sha_end2

; 582  :     {
; 583  :         if(i < 120) ctx->wbuf[15] = 0;

  0019a	83 7d fc 78	 cmp	 DWORD PTR _i$[ebp], 120	; 00000078H
  0019e	73 17		 jae	 SHORT $LN7@sha_end2
  001a0	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  001a3	c7 82 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+200], 0
  001ad	c7 82 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+204], 0
$LN7@sha_end2:

; 584  :         sha512_compile(ctx);

  001b7	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 _sha512_compile@4

; 585  :         i = 0;

  001c0	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0

; 586  :     }
; 587  :     else

  001c7	eb 0c		 jmp	 SHORT $LN5@sha_end2
$LN8@sha_end2:

; 588  :         i = (i >> 3) + 1;

  001c9	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  001cc	c1 e9 03	 shr	 ecx, 3
  001cf	83 c1 01	 add	 ecx, 1
  001d2	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx
$LN5@sha_end2:

; 589  : 
; 590  :     while(i < 14)

  001d5	83 7d fc 0e	 cmp	 DWORD PTR _i$[ebp], 14	; 0000000eH
  001d9	73 21		 jae	 SHORT $LN4@sha_end2

; 591  :         ctx->wbuf[i++] = 0;

  001db	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  001de	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  001e1	c7 44 d0 50 00
	00 00 00	 mov	 DWORD PTR [eax+edx*8+80], 0
  001e9	c7 44 d0 54 00
	00 00 00	 mov	 DWORD PTR [eax+edx*8+84], 0
  001f1	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  001f4	83 c1 01	 add	 ecx, 1
  001f7	89 4d fc	 mov	 DWORD PTR _i$[ebp], ecx
  001fa	eb d9		 jmp	 SHORT $LN5@sha_end2
$LN4@sha_end2:

; 592  : 
; 593  :     /* the following 64-bit length fields are assembled in the      */
; 594  :     /* wrong byte order on little endian machines but this is       */
; 595  :     /* corrected later since they are only ever used as 64-bit      */
; 596  :     /* word values.                                                 */
; 597  :     ctx->wbuf[14] = (ctx->count[1] << 3) | (ctx->count[0] >> 61);

  001fc	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  001ff	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00202	8b 52 0c	 mov	 edx, DWORD PTR [edx+12]
  00205	b1 03		 mov	 cl, 3
  00207	e8 00 00 00 00	 call	 __allshl
  0020c	8b f0		 mov	 esi, eax
  0020e	8b fa		 mov	 edi, edx
  00210	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00213	8b 01		 mov	 eax, DWORD PTR [ecx]
  00215	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00218	b1 3d		 mov	 cl, 61			; 0000003dH
  0021a	e8 00 00 00 00	 call	 __aullshr
  0021f	0b f0		 or	 esi, eax
  00221	0b fa		 or	 edi, edx
  00223	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00226	89 b2 c0 00 00
	00		 mov	 DWORD PTR [edx+192], esi
  0022c	89 ba c4 00 00
	00		 mov	 DWORD PTR [edx+196], edi

; 598  :     ctx->wbuf[15] = ctx->count[0] << 3;

  00232	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00235	8b 01		 mov	 eax, DWORD PTR [ecx]
  00237	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0023a	b1 03		 mov	 cl, 3
  0023c	e8 00 00 00 00	 call	 __allshl
  00241	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00244	89 81 c8 00 00
	00		 mov	 DWORD PTR [ecx+200], eax
  0024a	89 91 cc 00 00
	00		 mov	 DWORD PTR [ecx+204], edx

; 599  :     sha512_compile(ctx);

  00250	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00253	52		 push	 edx
  00254	e8 00 00 00 00	 call	 _sha512_compile@4

; 600  : 
; 601  :     /* extract the hash value as bytes in case the hash buffer is   */
; 602  :     /* misaligned for 32-bit words                                  */
; 603  :     for(i = 0; i < hlen; ++i)

  00259	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00260	eb 09		 jmp	 SHORT $LN3@sha_end2
$LN2@sha_end2:
  00262	8b 45 fc	 mov	 eax, DWORD PTR _i$[ebp]
  00265	83 c0 01	 add	 eax, 1
  00268	89 45 fc	 mov	 DWORD PTR _i$[ebp], eax
$LN3@sha_end2:
  0026b	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0026e	3b 4d 10	 cmp	 ecx, DWORD PTR _hlen$[ebp]
  00271	73 2b		 jae	 SHORT $LN11@sha_end2

; 604  :         hval[i] = (unsigned char)(ctx->hash[i >> 3] >> (8 * (~i & 7)));

  00273	8b 55 fc	 mov	 edx, DWORD PTR _i$[ebp]
  00276	c1 ea 03	 shr	 edx, 3
  00279	8b 4d fc	 mov	 ecx, DWORD PTR _i$[ebp]
  0027c	f7 d1		 not	 ecx
  0027e	83 e1 07	 and	 ecx, 7
  00281	c1 e1 03	 shl	 ecx, 3
  00284	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00287	8b 44 d6 10	 mov	 eax, DWORD PTR [esi+edx*8+16]
  0028b	8b 54 d6 14	 mov	 edx, DWORD PTR [esi+edx*8+20]
  0028f	e8 00 00 00 00	 call	 __aullshr
  00294	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  00297	03 4d fc	 add	 ecx, DWORD PTR _i$[ebp]
  0029a	88 01		 mov	 BYTE PTR [ecx], al
  0029c	eb c4		 jmp	 SHORT $LN2@sha_end2
$LN11@sha_end2:

; 605  : }

  0029e	5f		 pop	 edi
  0029f	5e		 pop	 esi
  002a0	5b		 pop	 ebx
  002a1	8b e5		 mov	 esp, ebp
  002a3	5d		 pop	 ebp
  002a4	c2 0c 00	 ret	 12			; 0000000cH
_sha_end2@12 ENDP
_TEXT	ENDS
PUBLIC	_sha384@12
; Function compile flags: /Odtp
;	COMDAT _sha384@12
_TEXT	SEGMENT
_cx$ = -208						; size = 208
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha384@12 PROC						; COMDAT

; 633  : {   sha384_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H

; 634  : 
; 635  :     sha384_begin(cx);

  0000b	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 _sha384_begin@4

; 636  :     sha384_hash(data, len, cx);

  00017	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _cx$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 10	 mov	 edx, DWORD PTR _len$[ebp]
  00021	52		 push	 edx
  00022	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _sha512_hash@12

; 637  :     sha_end2(hval, cx, SHA384_DIGEST_SIZE);

  0002b	6a 30		 push	 48			; 00000030H
  0002d	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _cx$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR _hval$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 _sha_end2@12

; 638  : }

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 0c 00	 ret	 12			; 0000000cH
_sha384@12 ENDP
_TEXT	ENDS
PUBLIC	_sha512_begin@4
; Function compile flags: /Odtp
;	COMDAT _sha512_begin@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_sha512_begin@4 PROC					; COMDAT

; 655  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	56		 push	 esi
  00006	57		 push	 edi

; 656  :     ctx->count[0] = ctx->count[1] = 0;

  00007	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
  00011	c7 40 0c 00 00
	00 00		 mov	 DWORD PTR [eax+12], 0
  00018	8b 4d 08	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
  00021	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 657  :     memcpy(ctx->hash, i512, 8 * sizeof(uint_64t));

  00028	8b 7d 08	 mov	 edi, DWORD PTR _ctx$[ebp]
  0002b	83 c7 10	 add	 edi, 16			; 00000010H
  0002e	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  00033	be 00 00 00 00	 mov	 esi, OFFSET _i512
  00038	f3 a5		 rep movsd

; 658  : }

  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi
  0003c	5d		 pop	 ebp
  0003d	c2 04 00	 ret	 4
_sha512_begin@4 ENDP
_TEXT	ENDS
PUBLIC	_sha512_end@8
; Function compile flags: /Odtp
;	COMDAT _sha512_end@8
_TEXT	SEGMENT
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha512_end@8 PROC					; COMDAT

; 661  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 662  :     sha_end2(hval, ctx, SHA512_DIGEST_SIZE);

  00005	6a 40		 push	 64			; 00000040H
  00007	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  0000e	51		 push	 ecx
  0000f	e8 00 00 00 00	 call	 _sha_end2@12

; 663  : }

  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
_sha512_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha512@12
; Function compile flags: /Odtp
;	COMDAT _sha512@12
_TEXT	SEGMENT
_cx$ = -208						; size = 208
_hval$ = 8						; size = 4
_data$ = 12						; size = 4
_len$ = 16						; size = 4
_sha512@12 PROC						; COMDAT

; 666  : {   sha512_ctx  cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H

; 667  : 
; 668  :     sha512_begin(cx);

  0000b	8d 85 30 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 _sha512_begin@4

; 669  :     sha512_hash(data, len, cx);

  00017	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _cx$[ebp]
  0001d	51		 push	 ecx
  0001e	8b 55 10	 mov	 edx, DWORD PTR _len$[ebp]
  00021	52		 push	 edx
  00022	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _sha512_hash@12

; 670  :     sha_end2(hval, cx, SHA512_DIGEST_SIZE);

  0002b	6a 40		 push	 64			; 00000040H
  0002d	8d 8d 30 ff ff
	ff		 lea	 ecx, DWORD PTR _cx$[ebp]
  00033	51		 push	 ecx
  00034	8b 55 08	 mov	 edx, DWORD PTR _hval$[ebp]
  00037	52		 push	 edx
  00038	e8 00 00 00 00	 call	 _sha_end2@12

; 671  : }

  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c2 0c 00	 ret	 12			; 0000000cH
_sha512@12 ENDP
_TEXT	ENDS
PUBLIC	_sha2_begin@8
; Function compile flags: /Odtp
;	COMDAT _sha2_begin@8
_TEXT	SEGMENT
tv64 = -4						; size = 4
_len$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha2_begin@8 PROC					; COMDAT

; 685  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
  00006	56		 push	 esi
  00007	57		 push	 edi

; 686  :     switch(len)

  00008	8b 45 08	 mov	 eax, DWORD PTR _len$[ebp]
  0000b	89 45 fc	 mov	 DWORD PTR tv64[ebp], eax
  0000e	81 7d fc e0 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 224 ; 000000e0H
  00015	77 2d		 ja	 SHORT $LN10@sha2_begin
  00017	81 7d fc e0 00
	00 00		 cmp	 DWORD PTR tv64[ebp], 224 ; 000000e0H
  0001e	74 4c		 je	 SHORT $LN5@sha2_begin
  00020	8b 4d fc	 mov	 ecx, DWORD PTR tv64[ebp]
  00023	83 e9 1c	 sub	 ecx, 28			; 0000001cH
  00026	89 4d fc	 mov	 DWORD PTR tv64[ebp], ecx
  00029	83 7d fc 24	 cmp	 DWORD PTR tv64[ebp], 36	; 00000024H
  0002d	0f 87 33 01 00
	00		 ja	 $LN1@sha2_begin
  00033	8b 55 fc	 mov	 edx, DWORD PTR tv64[ebp]
  00036	0f b6 82 00 00
	00 00		 movzx	 eax, BYTE PTR $LN11@sha2_begin[edx]
  0003d	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN12@sha2_begin[eax*4]
$LN10@sha2_begin:
  00044	81 7d fc 00 01
	00 00		 cmp	 DWORD PTR tv64[ebp], 256 ; 00000100H
  0004b	74 58		 je	 SHORT $LN4@sha2_begin
  0004d	81 7d fc 80 01
	00 00		 cmp	 DWORD PTR tv64[ebp], 384 ; 00000180H
  00054	0f 84 84 00 00
	00		 je	 $LN3@sha2_begin
  0005a	81 7d fc 00 02
	00 00		 cmp	 DWORD PTR tv64[ebp], 512 ; 00000200H
  00061	0f 84 bb 00 00
	00		 je	 $LN2@sha2_begin
  00067	e9 fa 00 00 00	 jmp	 $LN1@sha2_begin
$LN5@sha2_begin:

; 687  :     {
; 688  : #if defined(SHA_224)
; 689  :         case 224:
; 690  :         case  28:   CTX_256(ctx)->count[0] = CTX_256(ctx)->count[1] = 0;

  0006c	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  0006f	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  00076	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00079	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 691  :                     memcpy(CTX_256(ctx)->hash, i224, 32);

  0007f	8b 7d 0c	 mov	 edi, DWORD PTR _ctx$[ebp]
  00082	83 c7 08	 add	 edi, 8
  00085	b9 08 00 00 00	 mov	 ecx, 8
  0008a	be 00 00 00 00	 mov	 esi, OFFSET _i224
  0008f	f3 a5		 rep movsd

; 692  :                     ctx->sha2_len = 28; return EXIT_SUCCESS;

  00091	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00094	c7 80 d0 00 00
	00 1c 00 00 00	 mov	 DWORD PTR [eax+208], 28	; 0000001cH
  0009e	33 c0		 xor	 eax, eax
  000a0	e9 c6 00 00 00	 jmp	 $LN8@sha2_begin
$LN4@sha2_begin:

; 693  : #endif
; 694  : #if defined(SHA_256)
; 695  :         case 256:
; 696  :         case  32:   CTX_256(ctx)->count[0] = CTX_256(ctx)->count[1] = 0;

  000a5	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000a8	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0
  000af	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  000b2	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0

; 697  :                     memcpy(CTX_256(ctx)->hash, i256, 32);

  000b8	8b 7d 0c	 mov	 edi, DWORD PTR _ctx$[ebp]
  000bb	83 c7 08	 add	 edi, 8
  000be	b9 08 00 00 00	 mov	 ecx, 8
  000c3	be 00 00 00 00	 mov	 esi, OFFSET _i256
  000c8	f3 a5		 rep movsd

; 698  :                     ctx->sha2_len = 32; return EXIT_SUCCESS;

  000ca	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  000cd	c7 80 d0 00 00
	00 20 00 00 00	 mov	 DWORD PTR [eax+208], 32	; 00000020H
  000d7	33 c0		 xor	 eax, eax
  000d9	e9 8d 00 00 00	 jmp	 $LN8@sha2_begin
$LN3@sha2_begin:

; 699  : #endif
; 700  : #if defined(SHA_384)
; 701  :         case 384:
; 702  :         case  48:   CTX_384(ctx)->count[0] = CTX_384(ctx)->count[1] = 0;

  000de	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  000e1	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  000e8	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  000ef	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  000f2	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
  000f8	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 703  :                     memcpy(CTX_384(ctx)->hash, i384, 64);

  000ff	8b 7d 0c	 mov	 edi, DWORD PTR _ctx$[ebp]
  00102	83 c7 10	 add	 edi, 16			; 00000010H
  00105	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0010a	be 00 00 00 00	 mov	 esi, OFFSET _i384
  0010f	f3 a5		 rep movsd

; 704  :                     ctx->sha2_len = 48; return EXIT_SUCCESS;

  00111	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00114	c7 80 d0 00 00
	00 30 00 00 00	 mov	 DWORD PTR [eax+208], 48	; 00000030H
  0011e	33 c0		 xor	 eax, eax
  00120	eb 49		 jmp	 SHORT $LN8@sha2_begin
$LN2@sha2_begin:

; 705  : #endif
; 706  : #if defined(SHA_512)
; 707  :         case 512:
; 708  :         case  64:   CTX_512(ctx)->count[0] = CTX_512(ctx)->count[1] = 0;

  00122	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00125	c7 41 08 00 00
	00 00		 mov	 DWORD PTR [ecx+8], 0
  0012c	c7 41 0c 00 00
	00 00		 mov	 DWORD PTR [ecx+12], 0
  00133	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00136	c7 02 00 00 00
	00		 mov	 DWORD PTR [edx], 0
  0013c	c7 42 04 00 00
	00 00		 mov	 DWORD PTR [edx+4], 0

; 709  :                     memcpy(CTX_512(ctx)->hash, i512, 64);

  00143	8b 7d 0c	 mov	 edi, DWORD PTR _ctx$[ebp]
  00146	83 c7 10	 add	 edi, 16			; 00000010H
  00149	b9 10 00 00 00	 mov	 ecx, 16			; 00000010H
  0014e	be 00 00 00 00	 mov	 esi, OFFSET _i512
  00153	f3 a5		 rep movsd

; 710  :                     ctx->sha2_len = 64; return EXIT_SUCCESS;

  00155	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00158	c7 80 d0 00 00
	00 40 00 00 00	 mov	 DWORD PTR [eax+208], 64	; 00000040H
  00162	33 c0		 xor	 eax, eax
  00164	eb 05		 jmp	 SHORT $LN8@sha2_begin
$LN1@sha2_begin:

; 711  : #endif
; 712  :         default:    return EXIT_FAILURE;

  00166	b8 01 00 00 00	 mov	 eax, 1
$LN8@sha2_begin:

; 713  :     }
; 714  : }

  0016b	5f		 pop	 edi
  0016c	5e		 pop	 esi
  0016d	8b e5		 mov	 esp, ebp
  0016f	5d		 pop	 ebp
  00170	c2 08 00	 ret	 8
  00173	90		 npad	 1
$LN12@sha2_begin:
  00174	00 00 00 00	 DD	 $LN5@sha2_begin
  00178	00 00 00 00	 DD	 $LN4@sha2_begin
  0017c	00 00 00 00	 DD	 $LN3@sha2_begin
  00180	00 00 00 00	 DD	 $LN2@sha2_begin
  00184	00 00 00 00	 DD	 $LN1@sha2_begin
$LN11@sha2_begin:
  00188	00		 DB	 0
  00189	04		 DB	 4
  0018a	04		 DB	 4
  0018b	04		 DB	 4
  0018c	01		 DB	 1
  0018d	04		 DB	 4
  0018e	04		 DB	 4
  0018f	04		 DB	 4
  00190	04		 DB	 4
  00191	04		 DB	 4
  00192	04		 DB	 4
  00193	04		 DB	 4
  00194	04		 DB	 4
  00195	04		 DB	 4
  00196	04		 DB	 4
  00197	04		 DB	 4
  00198	04		 DB	 4
  00199	04		 DB	 4
  0019a	04		 DB	 4
  0019b	04		 DB	 4
  0019c	02		 DB	 2
  0019d	04		 DB	 4
  0019e	04		 DB	 4
  0019f	04		 DB	 4
  001a0	04		 DB	 4
  001a1	04		 DB	 4
  001a2	04		 DB	 4
  001a3	04		 DB	 4
  001a4	04		 DB	 4
  001a5	04		 DB	 4
  001a6	04		 DB	 4
  001a7	04		 DB	 4
  001a8	04		 DB	 4
  001a9	04		 DB	 4
  001aa	04		 DB	 4
  001ab	04		 DB	 4
  001ac	03		 DB	 3
_sha2_begin@8 ENDP
_TEXT	ENDS
PUBLIC	_sha2_hash@12
; Function compile flags: /Odtp
;	COMDAT _sha2_hash@12
_TEXT	SEGMENT
tv65 = -4						; size = 4
_data$ = 8						; size = 4
_len$ = 12						; size = 4
_ctx$ = 16						; size = 4
_sha2_hash@12 PROC					; COMDAT

; 717  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx

; 718  :     switch(ctx->sha2_len)

  00006	8b 45 10	 mov	 eax, DWORD PTR _ctx$[ebp]
  00009	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  0000f	89 4d fc	 mov	 DWORD PTR tv65[ebp], ecx
  00012	8b 55 fc	 mov	 edx, DWORD PTR tv65[ebp]
  00015	83 ea 1c	 sub	 edx, 28			; 0000001cH
  00018	89 55 fc	 mov	 DWORD PTR tv65[ebp], edx
  0001b	83 7d fc 24	 cmp	 DWORD PTR tv65[ebp], 36	; 00000024H
  0001f	77 5b		 ja	 SHORT $LN7@sha2_hash
  00021	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]
  00024	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN9@sha2_hash[eax]
  0002b	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN10@sha2_hash[ecx*4]
$LN4@sha2_hash:

; 719  :     {
; 720  : #if defined(SHA_224)
; 721  :         case 28: sha224_hash(data, len, CTX_224(ctx)); return;

  00032	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  00035	52		 push	 edx
  00036	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  00039	50		 push	 eax
  0003a	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  0003d	51		 push	 ecx
  0003e	e8 00 00 00 00	 call	 _sha256_hash@12
  00043	eb 37		 jmp	 SHORT $LN7@sha2_hash
$LN3@sha2_hash:

; 722  : #endif
; 723  : #if defined(SHA_256)
; 724  :         case 32: sha256_hash(data, len, CTX_256(ctx)); return;

  00045	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  00048	52		 push	 edx
  00049	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0004c	50		 push	 eax
  0004d	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  00050	51		 push	 ecx
  00051	e8 00 00 00 00	 call	 _sha256_hash@12
  00056	eb 24		 jmp	 SHORT $LN7@sha2_hash
$LN2@sha2_hash:

; 725  : #endif
; 726  : #if defined(SHA_384)
; 727  :         case 48: sha384_hash(data, len, CTX_384(ctx)); return;

  00058	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  0005b	52		 push	 edx
  0005c	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  0005f	50		 push	 eax
  00060	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  00063	51		 push	 ecx
  00064	e8 00 00 00 00	 call	 _sha512_hash@12
  00069	eb 11		 jmp	 SHORT $LN7@sha2_hash
$LN1@sha2_hash:

; 728  : #endif
; 729  : #if defined(SHA_512)
; 730  :         case 64: sha512_hash(data, len, CTX_512(ctx)); return;

  0006b	8b 55 10	 mov	 edx, DWORD PTR _ctx$[ebp]
  0006e	52		 push	 edx
  0006f	8b 45 0c	 mov	 eax, DWORD PTR _len$[ebp]
  00072	50		 push	 eax
  00073	8b 4d 08	 mov	 ecx, DWORD PTR _data$[ebp]
  00076	51		 push	 ecx
  00077	e8 00 00 00 00	 call	 _sha512_hash@12
$LN7@sha2_hash:

; 731  : #endif
; 732  :     }
; 733  : }

  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c2 0c 00	 ret	 12			; 0000000cH
  00082	8b ff		 npad	 2
$LN10@sha2_hash:
  00084	00 00 00 00	 DD	 $LN4@sha2_hash
  00088	00 00 00 00	 DD	 $LN3@sha2_hash
  0008c	00 00 00 00	 DD	 $LN2@sha2_hash
  00090	00 00 00 00	 DD	 $LN1@sha2_hash
  00094	00 00 00 00	 DD	 $LN7@sha2_hash
$LN9@sha2_hash:
  00098	00		 DB	 0
  00099	04		 DB	 4
  0009a	04		 DB	 4
  0009b	04		 DB	 4
  0009c	01		 DB	 1
  0009d	04		 DB	 4
  0009e	04		 DB	 4
  0009f	04		 DB	 4
  000a0	04		 DB	 4
  000a1	04		 DB	 4
  000a2	04		 DB	 4
  000a3	04		 DB	 4
  000a4	04		 DB	 4
  000a5	04		 DB	 4
  000a6	04		 DB	 4
  000a7	04		 DB	 4
  000a8	04		 DB	 4
  000a9	04		 DB	 4
  000aa	04		 DB	 4
  000ab	04		 DB	 4
  000ac	02		 DB	 2
  000ad	04		 DB	 4
  000ae	04		 DB	 4
  000af	04		 DB	 4
  000b0	04		 DB	 4
  000b1	04		 DB	 4
  000b2	04		 DB	 4
  000b3	04		 DB	 4
  000b4	04		 DB	 4
  000b5	04		 DB	 4
  000b6	04		 DB	 4
  000b7	04		 DB	 4
  000b8	04		 DB	 4
  000b9	04		 DB	 4
  000ba	04		 DB	 4
  000bb	04		 DB	 4
  000bc	03		 DB	 3
_sha2_hash@12 ENDP
_TEXT	ENDS
PUBLIC	_sha2_end@8
; Function compile flags: /Odtp
;	COMDAT _sha2_end@8
_TEXT	SEGMENT
tv65 = -4						; size = 4
_hval$ = 8						; size = 4
_ctx$ = 12						; size = 4
_sha2_end@8 PROC					; COMDAT

; 736  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx

; 737  :     switch(ctx->sha2_len)

  00006	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00009	8b 88 d0 00 00
	00		 mov	 ecx, DWORD PTR [eax+208]
  0000f	89 4d fc	 mov	 DWORD PTR tv65[ebp], ecx
  00012	8b 55 fc	 mov	 edx, DWORD PTR tv65[ebp]
  00015	83 ea 1c	 sub	 edx, 28			; 0000001cH
  00018	89 55 fc	 mov	 DWORD PTR tv65[ebp], edx
  0001b	83 7d fc 24	 cmp	 DWORD PTR tv65[ebp], 36	; 00000024H
  0001f	77 53		 ja	 SHORT $LN7@sha2_end
  00021	8b 45 fc	 mov	 eax, DWORD PTR tv65[ebp]
  00024	0f b6 88 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN9@sha2_end[eax]
  0002b	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN10@sha2_end[ecx*4]
$LN4@sha2_end:

; 738  :     {
; 739  : #if defined(SHA_224)
; 740  :         case 28: sha_end1(hval, CTX_224(ctx), SHA224_DIGEST_SIZE); return;

  00032	6a 1c		 push	 28			; 0000001cH
  00034	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  00037	52		 push	 edx
  00038	8b 45 08	 mov	 eax, DWORD PTR _hval$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 _sha_end1@12
  00041	eb 31		 jmp	 SHORT $LN7@sha2_end
$LN3@sha2_end:

; 741  : #endif
; 742  : #if defined(SHA_256)
; 743  :         case 32: sha_end1(hval, CTX_256(ctx), SHA256_DIGEST_SIZE); return;

  00043	6a 20		 push	 32			; 00000020H
  00045	8b 4d 0c	 mov	 ecx, DWORD PTR _ctx$[ebp]
  00048	51		 push	 ecx
  00049	8b 55 08	 mov	 edx, DWORD PTR _hval$[ebp]
  0004c	52		 push	 edx
  0004d	e8 00 00 00 00	 call	 _sha_end1@12
  00052	eb 20		 jmp	 SHORT $LN7@sha2_end
$LN2@sha2_end:

; 744  : #endif
; 745  : #if defined(SHA_384)
; 746  :         case 48: sha_end2(hval, CTX_384(ctx), SHA384_DIGEST_SIZE); return;

  00054	6a 30		 push	 48			; 00000030H
  00056	8b 45 0c	 mov	 eax, DWORD PTR _ctx$[ebp]
  00059	50		 push	 eax
  0005a	8b 4d 08	 mov	 ecx, DWORD PTR _hval$[ebp]
  0005d	51		 push	 ecx
  0005e	e8 00 00 00 00	 call	 _sha_end2@12
  00063	eb 0f		 jmp	 SHORT $LN7@sha2_end
$LN1@sha2_end:

; 747  : #endif
; 748  : #if defined(SHA_512)
; 749  :         case 64: sha_end2(hval, CTX_512(ctx), SHA512_DIGEST_SIZE); return;

  00065	6a 40		 push	 64			; 00000040H
  00067	8b 55 0c	 mov	 edx, DWORD PTR _ctx$[ebp]
  0006a	52		 push	 edx
  0006b	8b 45 08	 mov	 eax, DWORD PTR _hval$[ebp]
  0006e	50		 push	 eax
  0006f	e8 00 00 00 00	 call	 _sha_end2@12
$LN7@sha2_end:

; 750  : #endif
; 751  :     }
; 752  : }

  00074	8b e5		 mov	 esp, ebp
  00076	5d		 pop	 ebp
  00077	c2 08 00	 ret	 8
  0007a	8b ff		 npad	 2
$LN10@sha2_end:
  0007c	00 00 00 00	 DD	 $LN4@sha2_end
  00080	00 00 00 00	 DD	 $LN3@sha2_end
  00084	00 00 00 00	 DD	 $LN2@sha2_end
  00088	00 00 00 00	 DD	 $LN1@sha2_end
  0008c	00 00 00 00	 DD	 $LN7@sha2_end
$LN9@sha2_end:
  00090	00		 DB	 0
  00091	04		 DB	 4
  00092	04		 DB	 4
  00093	04		 DB	 4
  00094	01		 DB	 1
  00095	04		 DB	 4
  00096	04		 DB	 4
  00097	04		 DB	 4
  00098	04		 DB	 4
  00099	04		 DB	 4
  0009a	04		 DB	 4
  0009b	04		 DB	 4
  0009c	04		 DB	 4
  0009d	04		 DB	 4
  0009e	04		 DB	 4
  0009f	04		 DB	 4
  000a0	04		 DB	 4
  000a1	04		 DB	 4
  000a2	04		 DB	 4
  000a3	04		 DB	 4
  000a4	02		 DB	 2
  000a5	04		 DB	 4
  000a6	04		 DB	 4
  000a7	04		 DB	 4
  000a8	04		 DB	 4
  000a9	04		 DB	 4
  000aa	04		 DB	 4
  000ab	04		 DB	 4
  000ac	04		 DB	 4
  000ad	04		 DB	 4
  000ae	04		 DB	 4
  000af	04		 DB	 4
  000b0	04		 DB	 4
  000b1	04		 DB	 4
  000b2	04		 DB	 4
  000b3	04		 DB	 4
  000b4	03		 DB	 3
_sha2_end@8 ENDP
_TEXT	ENDS
PUBLIC	_sha2@16
; Function compile flags: /Odtp
;	COMDAT _sha2@16
_TEXT	SEGMENT
_cx$ = -216						; size = 216
_hval$ = 8						; size = 4
_size$ = 12						; size = 4
_data$ = 16						; size = 4
_len$ = 20						; size = 4
_sha2@16 PROC						; COMDAT

; 756  : {   sha2_ctx    cx[1];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H

; 757  : 
; 758  :     if(sha2_begin(size, cx) == EXIT_SUCCESS)

  0000b	8d 85 28 ff ff
	ff		 lea	 eax, DWORD PTR _cx$[ebp]
  00011	50		 push	 eax
  00012	8b 4d 0c	 mov	 ecx, DWORD PTR _size$[ebp]
  00015	51		 push	 ecx
  00016	e8 00 00 00 00	 call	 _sha2_begin@8
  0001b	85 c0		 test	 eax, eax
  0001d	75 2a		 jne	 SHORT $LN2@sha2

; 759  :     {
; 760  :         sha2_hash(data, len, cx); sha2_end(hval, cx); return EXIT_SUCCESS;

  0001f	8d 95 28 ff ff
	ff		 lea	 edx, DWORD PTR _cx$[ebp]
  00025	52		 push	 edx
  00026	8b 45 14	 mov	 eax, DWORD PTR _len$[ebp]
  00029	50		 push	 eax
  0002a	8b 4d 10	 mov	 ecx, DWORD PTR _data$[ebp]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 _sha2_hash@12
  00033	8d 95 28 ff ff
	ff		 lea	 edx, DWORD PTR _cx$[ebp]
  00039	52		 push	 edx
  0003a	8b 45 08	 mov	 eax, DWORD PTR _hval$[ebp]
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 _sha2_end@8
  00043	33 c0		 xor	 eax, eax
  00045	eb 07		 jmp	 SHORT $LN3@sha2

; 761  :     }
; 762  :     else

  00047	eb 05		 jmp	 SHORT $LN3@sha2
$LN2@sha2:

; 763  :         return EXIT_FAILURE;

  00049	b8 01 00 00 00	 mov	 eax, 1
$LN3@sha2:

; 764  : }

  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c2 10 00	 ret	 16			; 00000010H
_sha2@16 ENDP
_TEXT	ENDS
END
