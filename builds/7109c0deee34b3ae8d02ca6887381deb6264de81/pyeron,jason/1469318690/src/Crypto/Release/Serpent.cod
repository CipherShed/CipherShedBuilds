; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\Public\Desktop\projects\ciphershed\src\Crypto\Serpent.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_serpent_set_key
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\crypto\serpent.c
;	COMDAT _serpent_set_key
_TEXT	SEGMENT
_userKey$ = 8						; size = 4
tv911 = 12						; size = 4
_a$ = 12						; size = 4
_keylen$ = 12						; size = 4
tv2301 = 16						; size = 4
_ks$ = 16						; size = 4
_serpent_set_key PROC					; COMDAT

; 635  : 	unsigned __int32 a,b,c,d,e;
; 636  : 	unsigned __int32 *k = (unsigned __int32 *)ks;
; 637  : 	unsigned __int32 t;
; 638  : 	int i;
; 639  : 
; 640  : 	for (i = 0; i < keylen / (int)sizeof(__int32); i++)

  00000	8b 4c 24 08	 mov	 ecx, DWORD PTR _keylen$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	99		 cdq
  00007	53		 push	 ebx
  00008	83 e2 03	 and	 edx, 3
  0000b	55		 push	 ebp
  0000c	03 c2		 add	 eax, edx
  0000e	56		 push	 esi
  0000f	c1 f8 02	 sar	 eax, 2
  00012	57		 push	 edi
  00013	8b 7c 24 1c	 mov	 edi, DWORD PTR _ks$[esp+12]
  00017	85 c0		 test	 eax, eax
  00019	7e 17		 jle	 SHORT $LN8@serpent_se
  0001b	8b 74 24 14	 mov	 esi, DWORD PTR _userKey$[esp+12]
  0001f	8b d7		 mov	 edx, edi
  00021	2b f7		 sub	 esi, edi
  00023	8b d8		 mov	 ebx, eax
$LL10@serpent_se:

; 641  : 		k[i] = LE32(((unsigned __int32*)userKey)[i]);

  00025	8b 2c 16	 mov	 ebp, DWORD PTR [esi+edx]
  00028	89 2a		 mov	 DWORD PTR [edx], ebp
  0002a	83 c2 04	 add	 edx, 4
  0002d	83 eb 01	 sub	 ebx, 1
  00030	75 f3		 jne	 SHORT $LL10@serpent_se
$LN8@serpent_se:

; 642  : 
; 643  : 	if (keylen < 32)

  00032	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00035	7d 1d		 jge	 SHORT $LN7@serpent_se

; 644  : 		k[keylen/4] |= (unsigned __int32)1 << ((keylen%4)*8);

  00037	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003d	79 05		 jns	 SHORT $LN20@serpent_se
  0003f	49		 dec	 ecx
  00040	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00043	41		 inc	 ecx
$LN20@serpent_se:
  00044	03 c9		 add	 ecx, ecx
  00046	03 c9		 add	 ecx, ecx
  00048	03 c9		 add	 ecx, ecx
  0004a	ba 01 00 00 00	 mov	 edx, 1
  0004f	d3 e2		 shl	 edx, cl
  00051	09 14 87	 or	 DWORD PTR [edi+eax*4], edx
$LN7@serpent_se:

; 645  : 
; 646  : 	k += 8;
; 647  : 	t = k[-1];

  00054	8b 77 1c	 mov	 esi, DWORD PTR [edi+28]
  00057	8d 47 20	 lea	 eax, DWORD PTR [edi+32]
  0005a	bf 03 00 00 00	 mov	 edi, 3
  0005f	8d 48 e4	 lea	 ecx, DWORD PTR [eax-28]
  00062	c7 44 24 18 16
	00 00 00	 mov	 DWORD PTR tv911[esp+12], 22 ; 00000016H
  0006a	8d 9b 00 00 00
	00		 npad	 6
$LL6@serpent_se:

; 648  : 	for (i = 0; i < 132; ++i)
; 649  : 		k[i] = t = rotlFixed(k[i-8] ^ k[i-5] ^ k[i-3] ^ t ^ 0x9e3779b9 ^ i, 11);

  00070	8b 59 10	 mov	 ebx, DWORD PTR [ecx+16]
  00073	8b 69 08	 mov	 ebp, DWORD PTR [ecx+8]
  00076	8d 57 fd	 lea	 edx, DWORD PTR [edi-3]
  00079	33 51 fc	 xor	 edx, DWORD PTR [ecx-4]
  0007c	83 c1 18	 add	 ecx, 24			; 00000018H
  0007f	33 d3		 xor	 edx, ebx
  00081	33 d5		 xor	 edx, ebp
  00083	33 d6		 xor	 edx, esi
  00085	8b 69 f4	 mov	 ebp, DWORD PTR [ecx-12]
  00088	81 f2 b9 79 37
	9e		 xor	 edx, -1640531527	; 9e3779b9H
  0008e	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00091	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00094	8d 77 fe	 lea	 esi, DWORD PTR [edi-2]
  00097	33 f5		 xor	 esi, ebp
  00099	33 71 fc	 xor	 esi, DWORD PTR [ecx-4]
  0009c	8b 29		 mov	 ebp, DWORD PTR [ecx]
  0009e	33 71 e8	 xor	 esi, DWORD PTR [ecx-24]
  000a1	33 f2		 xor	 esi, edx
  000a3	81 f6 b9 79 37
	9e		 xor	 esi, -1640531527	; 9e3779b9H
  000a9	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  000ac	89 71 08	 mov	 DWORD PTR [ecx+8], esi
  000af	8d 57 ff	 lea	 edx, DWORD PTR [edi-1]
  000b2	33 51 ec	 xor	 edx, DWORD PTR [ecx-20]
  000b5	33 d3		 xor	 edx, ebx
  000b7	33 d5		 xor	 edx, ebp
  000b9	33 d6		 xor	 edx, esi
  000bb	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  000be	33 71 fc	 xor	 esi, DWORD PTR [ecx-4]
  000c1	81 f2 b9 79 37
	9e		 xor	 edx, -1640531527	; 9e3779b9H
  000c7	33 71 f0	 xor	 esi, DWORD PTR [ecx-16]
  000ca	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  000cd	33 f7		 xor	 esi, edi
  000cf	33 f2		 xor	 esi, edx
  000d1	89 51 0c	 mov	 DWORD PTR [ecx+12], edx
  000d4	81 f6 b9 79 37
	9e		 xor	 esi, -1640531527	; 9e3779b9H
  000da	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  000dd	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
  000e0	33 d5		 xor	 edx, ebp
  000e2	33 51 f4	 xor	 edx, DWORD PTR [ecx-12]
  000e5	89 71 10	 mov	 DWORD PTR [ecx+16], esi
  000e8	33 51 08	 xor	 edx, DWORD PTR [ecx+8]
  000eb	33 d6		 xor	 edx, esi
  000ed	8d 77 02	 lea	 esi, DWORD PTR [edi+2]
  000f0	33 71 04	 xor	 esi, DWORD PTR [ecx+4]
  000f3	81 f2 b9 79 37
	9e		 xor	 edx, -1640531527	; 9e3779b9H
  000f9	33 f3		 xor	 esi, ebx
  000fb	33 71 0c	 xor	 esi, DWORD PTR [ecx+12]
  000fe	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00101	33 f2		 xor	 esi, edx
  00103	81 f6 b9 79 37
	9e		 xor	 esi, -1640531527	; 9e3779b9H
  00109	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  0010c	89 51 14	 mov	 DWORD PTR [ecx+20], edx
  0010f	89 71 18	 mov	 DWORD PTR [ecx+24], esi
  00112	83 c7 06	 add	 edi, 6
  00115	83 6c 24 18 01	 sub	 DWORD PTR tv911[esp+12], 1
  0011a	0f 85 50 ff ff
	ff		 jne	 $LL6@serpent_se

; 650  : 	k -= 20;

  00120	83 e8 50	 sub	 eax, 80			; 00000050H
  00123	c7 44 24 1c 04
	00 00 00	 mov	 DWORD PTR tv2301[esp+12], 4
  0012b	eb 03 8d 49 00	 npad	 5
$LL3@serpent_se:

; 651  : 
; 652  : #define LK(r, a, b, c, d, e)	{\
; 653  : 	a = k[(8-r)*4 + 0];		\
; 654  : 	b = k[(8-r)*4 + 1];		\
; 655  : 	c = k[(8-r)*4 + 2];		\
; 656  : 	d = k[(8-r)*4 + 3];}
; 657  : 
; 658  : #define SK(r, a, b, c, d, e)	{\
; 659  : 	k[(8-r)*4 + 4] = a;		\
; 660  : 	k[(8-r)*4 + 5] = b;		\
; 661  : 	k[(8-r)*4 + 6] = c;		\
; 662  : 	k[(8-r)*4 + 7] = d;}	\
; 663  : 
; 664  : 	for (i=0; i<4; i++)
; 665  : 	{
; 666  : 		afterS2(LK); afterS2(S3); afterS3(SK);

  00130	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  00133	8b 70 5c	 mov	 esi, DWORD PTR [eax+92]
  00136	8b 58 54	 mov	 ebx, DWORD PTR [eax+84]
  00139	8b 68 58	 mov	 ebp, DWORD PTR [eax+88]
  0013c	8b ca		 mov	 ecx, edx
  0013e	0b d6		 or	 edx, esi
  00140	33 f3		 xor	 esi, ebx
  00142	23 d9		 and	 ebx, ecx
  00144	33 cd		 xor	 ecx, ebp
  00146	0b cb		 or	 ecx, ebx
  00148	33 ee		 xor	 ebp, esi
  0014a	23 f2		 and	 esi, edx
  0014c	33 f1		 xor	 esi, ecx
  0014e	33 d3		 xor	 edx, ebx
  00150	23 ca		 and	 ecx, edx
  00152	8b fe		 mov	 edi, esi
  00154	33 fb		 xor	 edi, ebx
  00156	0b fa		 or	 edi, edx
  00158	33 fd		 xor	 edi, ebp
  0015a	8b de		 mov	 ebx, esi
  0015c	0b df		 or	 ebx, edi
  0015e	33 de		 xor	 ebx, esi
  00160	33 da		 xor	 ebx, edx

; 667  : 		afterS1(LK); afterS1(S2); afterS2(SK);

  00162	8b 50 60	 mov	 edx, DWORD PTR [eax+96]
  00165	33 cd		 xor	 ecx, ebp
  00167	8b 68 6c	 mov	 ebp, DWORD PTR [eax+108]
  0016a	89 48 5c	 mov	 DWORD PTR [eax+92], ecx
  0016d	8b ca		 mov	 ecx, edx
  0016f	89 58 50	 mov	 DWORD PTR [eax+80], ebx
  00172	8b 58 68	 mov	 ebx, DWORD PTR [eax+104]
  00175	23 d3		 and	 edx, ebx
  00177	33 d5		 xor	 edx, ebp
  00179	89 70 58	 mov	 DWORD PTR [eax+88], esi
  0017c	8b f2		 mov	 esi, edx
  0017e	89 78 54	 mov	 DWORD PTR [eax+84], edi
  00181	8b 78 64	 mov	 edi, DWORD PTR [eax+100]
  00184	33 f7		 xor	 esi, edi
  00186	33 de		 xor	 ebx, esi
  00188	8b f1		 mov	 esi, ecx
  0018a	33 cb		 xor	 ecx, ebx
  0018c	0b f5		 or	 esi, ebp
  0018e	33 f7		 xor	 esi, edi
  00190	8b f9		 mov	 edi, ecx
  00192	0b fe		 or	 edi, esi
  00194	33 fa		 xor	 edi, edx
  00196	23 d6		 and	 edx, esi
  00198	33 ca		 xor	 ecx, edx
  0019a	8b d1		 mov	 edx, ecx
  0019c	33 d6		 xor	 edx, esi

; 668  : 		afterS0(LK); afterS0(S1); afterS1(SK);

  0019e	8b 70 74	 mov	 esi, DWORD PTR [eax+116]
  001a1	33 d7		 xor	 edx, edi
  001a3	f7 d1		 not	 ecx
  001a5	89 48 6c	 mov	 DWORD PTR [eax+108], ecx
  001a8	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  001ab	89 50 68	 mov	 DWORD PTR [eax+104], edx
  001ae	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  001b1	f7 d1		 not	 ecx
  001b3	f7 d2		 not	 edx
  001b5	89 58 60	 mov	 DWORD PTR [eax+96], ebx
  001b8	8b d9		 mov	 ebx, ecx
  001ba	23 ce		 and	 ecx, esi
  001bc	33 d1		 xor	 edx, ecx
  001be	89 78 64	 mov	 DWORD PTR [eax+100], edi
  001c1	8b 78 7c	 mov	 edi, DWORD PTR [eax+124]
  001c4	0b cf		 or	 ecx, edi
  001c6	33 f1		 xor	 esi, ecx
  001c8	33 fa		 xor	 edi, edx
  001ca	33 cb		 xor	 ecx, ebx
  001cc	0b de		 or	 ebx, esi
  001ce	0b d1		 or	 edx, ecx
  001d0	23 d3		 and	 edx, ebx
  001d2	33 f7		 xor	 esi, edi
  001d4	8b ea		 mov	 ebp, edx
  001d6	33 ce		 xor	 ecx, esi
  001d8	23 e9		 and	 ebp, ecx
  001da	89 50 70	 mov	 DWORD PTR [eax+112], edx
  001dd	33 eb		 xor	 ebp, ebx
  001df	23 d6		 and	 edx, esi
  001e1	89 68 74	 mov	 DWORD PTR [eax+116], ebp
  001e4	89 78 78	 mov	 DWORD PTR [eax+120], edi
  001e7	33 d1		 xor	 edx, ecx

; 669  : 		beforeS0(LK); beforeS0(S0); afterS0(SK);

  001e9	8b a8 80 00 00
	00		 mov	 ebp, DWORD PTR [eax+128]
  001ef	8b b0 88 00 00
	00		 mov	 esi, DWORD PTR [eax+136]
  001f5	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  001fb	8b 98 84 00 00
	00		 mov	 ebx, DWORD PTR [eax+132]
  00201	89 50 7c	 mov	 DWORD PTR [eax+124], edx
  00204	33 cd		 xor	 ecx, ebp
  00206	8b f9		 mov	 edi, ecx
  00208	23 fb		 and	 edi, ebx
  0020a	33 fd		 xor	 edi, ebp
  0020c	8b d6		 mov	 edx, esi
  0020e	33 d3		 xor	 edx, ebx
  00210	8b d9		 mov	 ebx, ecx
  00212	0b dd		 or	 ebx, ebp
  00214	33 da		 xor	 ebx, edx
  00216	33 d1		 xor	 edx, ecx
  00218	33 ce		 xor	 ecx, esi
  0021a	0b f7		 or	 esi, edi
  0021c	33 f2		 xor	 esi, edx
  0021e	f7 d2		 not	 edx
  00220	0b d7		 or	 edx, edi
  00222	89 b0 88 00 00
	00		 mov	 DWORD PTR [eax+136], esi
  00228	89 6c 24 18	 mov	 DWORD PTR _a$[esp+12], ebp
  0022c	8b e9		 mov	 ebp, ecx
  0022e	0b cb		 or	 ecx, ebx
  00230	33 ef		 xor	 ebp, edi
  00232	33 ea		 xor	 ebp, edx
  00234	8b f9		 mov	 edi, ecx
  00236	33 ca		 xor	 ecx, edx
  00238	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx
  0023e	33 fd		 xor	 edi, ebp
  00240	89 b8 80 00 00
	00		 mov	 DWORD PTR [eax+128], edi
  00246	89 98 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ebx

; 670  : 		k += 8*4;
; 671  : 		afterS6(LK); afterS6(S7); afterS7(SK);

  0024c	8b b8 94 00 00
	00		 mov	 edi, DWORD PTR [eax+148]
  00252	8b 98 98 00 00
	00		 mov	 ebx, DWORD PTR [eax+152]
  00258	8b 90 9c 00 00
	00		 mov	 edx, DWORD PTR [eax+156]
  0025e	8b a8 90 00 00
	00		 mov	 ebp, DWORD PTR [eax+144]
  00264	83 e8 80	 sub	 eax, -128		; ffffff80H
  00267	8b cf		 mov	 ecx, edi
  00269	23 cb		 and	 ecx, ebx
  0026b	33 ca		 xor	 ecx, edx
  0026d	23 d7		 and	 edx, edi
  0026f	33 d9		 xor	 ebx, ecx
  00271	33 cf		 xor	 ecx, edi
  00273	33 fd		 xor	 edi, ebp
  00275	33 d7		 xor	 edx, edi
  00277	8b f3		 mov	 esi, ebx
  00279	0b f5		 or	 esi, ebp
  0027b	33 f1		 xor	 esi, ecx
  0027d	33 ca		 xor	 ecx, edx
  0027f	23 d6		 and	 edx, esi
  00281	33 d3		 xor	 edx, ebx
  00283	8b ea		 mov	 ebp, edx
  00285	8b d1		 mov	 edx, ecx
  00287	33 d3		 xor	 edx, ebx

; 672  : 		afterS5(LK); afterS5(S6); afterS6(SK);

  00289	8b 58 24	 mov	 ebx, DWORD PTR [eax+36]
  0028c	23 ce		 and	 ecx, esi
  0028e	f7 d2		 not	 edx
  00290	33 ca		 xor	 ecx, edx
  00292	23 d6		 and	 edx, esi
  00294	33 d7		 xor	 edx, edi
  00296	33 d5		 xor	 edx, ebp
  00298	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0029b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0029e	89 68 18	 mov	 DWORD PTR [eax+24], ebp
  002a1	8b 68 28	 mov	 ebp, DWORD PTR [eax+40]
  002a4	89 70 1c	 mov	 DWORD PTR [eax+28], esi
  002a7	8b 70 20	 mov	 esi, DWORD PTR [eax+32]
  002aa	89 50 14	 mov	 DWORD PTR [eax+20], edx
  002ad	8b d1		 mov	 edx, ecx
  002af	23 ce		 and	 ecx, esi
  002b1	f7 d5		 not	 ebp
  002b3	33 cd		 xor	 ecx, ebp
  002b5	8b fa		 mov	 edi, edx
  002b7	0b fd		 or	 edi, ebp
  002b9	33 f2		 xor	 esi, edx
  002bb	33 d9		 xor	 ebx, ecx
  002bd	33 fe		 xor	 edi, esi
  002bf	0b f3		 or	 esi, ebx
  002c1	33 fb		 xor	 edi, ebx
  002c3	33 d6		 xor	 edx, esi
  002c5	8b e9		 mov	 ebp, ecx
  002c7	33 d1		 xor	 edx, ecx
  002c9	0b ee		 or	 ebp, esi

; 673  : 		afterS4(LK); afterS4(S5); afterS5(SK);

  002cb	8b 70 3c	 mov	 esi, DWORD PTR [eax+60]
  002ce	33 ef		 xor	 ebp, edi
  002d0	33 d5		 xor	 edx, ebp
  002d2	f7 d1		 not	 ecx
  002d4	89 50 28	 mov	 DWORD PTR [eax+40], edx
  002d7	23 d7		 and	 edx, edi
  002d9	8b 78 34	 mov	 edi, DWORD PTR [eax+52]
  002dc	33 d1		 xor	 edx, ecx
  002de	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  002e1	89 58 24	 mov	 DWORD PTR [eax+36], ebx
  002e4	89 50 2c	 mov	 DWORD PTR [eax+44], edx
  002e7	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  002ea	33 d7		 xor	 edx, edi
  002ec	33 fe		 xor	 edi, esi
  002ee	f7 d6		 not	 esi
  002f0	33 ce		 xor	 ecx, esi
  002f2	89 7c 24 18	 mov	 DWORD PTR _a$[esp+12], edi
  002f6	8b da		 mov	 ebx, edx
  002f8	23 df		 and	 ebx, edi
  002fa	33 d9		 xor	 ebx, ecx
  002fc	0b cf		 or	 ecx, edi
  002fe	33 fe		 xor	 edi, esi
  00300	33 f9		 xor	 edi, ecx
  00302	33 fb		 xor	 edi, ebx
  00304	23 f3		 and	 esi, ebx
  00306	33 f2		 xor	 esi, edx
  00308	33 ca		 xor	 ecx, edx
  0030a	89 58 30	 mov	 DWORD PTR [eax+48], ebx
  0030d	8b de		 mov	 ebx, esi
  0030f	23 da		 and	 ebx, edx

; 674  : 		afterS3(LK); afterS3(S4); afterS4(SK);

  00311	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  00314	33 df		 xor	 ebx, edi
  00316	89 70 34	 mov	 DWORD PTR [eax+52], esi
  00319	0b f7		 or	 esi, edi
  0031b	f7 d1		 not	 ecx
  0031d	33 f1		 xor	 esi, ecx
  0031f	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  00322	89 58 38	 mov	 DWORD PTR [eax+56], ebx
  00325	8b 58 44	 mov	 ebx, DWORD PTR [eax+68]
  00328	33 d9		 xor	 ebx, ecx
  0032a	89 70 3c	 mov	 DWORD PTR [eax+60], esi
  0032d	8b 70 48	 mov	 esi, DWORD PTR [eax+72]
  00330	f7 d1		 not	 ecx
  00332	33 f1		 xor	 esi, ecx
  00334	33 ca		 xor	 ecx, edx
  00336	8b f9		 mov	 edi, ecx
  00338	23 fb		 and	 edi, ebx
  0033a	33 fe		 xor	 edi, esi
  0033c	33 d9		 xor	 ebx, ecx
  0033e	33 d3		 xor	 edx, ebx
  00340	23 f3		 and	 esi, ebx
  00342	33 f2		 xor	 esi, edx
  00344	23 d7		 and	 edx, edi
  00346	89 78 40	 mov	 DWORD PTR [eax+64], edi
  00349	89 68 20	 mov	 DWORD PTR [eax+32], ebp
  0034c	8b ef		 mov	 ebp, edi
  0034e	33 ca		 xor	 ecx, edx
  00350	0b eb		 or	 ebp, ebx
  00352	8b f9		 mov	 edi, ecx
  00354	23 fe		 and	 edi, esi
  00356	33 ea		 xor	 ebp, edx
  00358	33 fd		 xor	 edi, ebp
  0035a	89 78 44	 mov	 DWORD PTR [eax+68], edi
  0035d	8b f9		 mov	 edi, ecx
  0035f	0b fa		 or	 edi, edx
  00361	33 fe		 xor	 edi, esi
  00363	83 6c 24 1c 01	 sub	 DWORD PTR tv2301[esp+12], 1
  00368	f7 d7		 not	 edi
  0036a	89 78 48	 mov	 DWORD PTR [eax+72], edi
  0036d	89 48 4c	 mov	 DWORD PTR [eax+76], ecx
  00370	0f 85 ba fd ff
	ff		 jne	 $LL3@serpent_se

; 675  : 	}
; 676  : 	afterS2(LK); afterS2(S3); afterS3(SK);

  00376	8b 50 50	 mov	 edx, DWORD PTR [eax+80]
  00379	8b 70 5c	 mov	 esi, DWORD PTR [eax+92]
  0037c	8b 58 54	 mov	 ebx, DWORD PTR [eax+84]
  0037f	8b 68 58	 mov	 ebp, DWORD PTR [eax+88]
  00382	8b ca		 mov	 ecx, edx
  00384	0b d6		 or	 edx, esi
  00386	33 f3		 xor	 esi, ebx
  00388	23 d9		 and	 ebx, ecx
  0038a	33 cd		 xor	 ecx, ebp
  0038c	0b cb		 or	 ecx, ebx
  0038e	33 ee		 xor	 ebp, esi
  00390	23 f2		 and	 esi, edx
  00392	33 f1		 xor	 esi, ecx
  00394	33 d3		 xor	 edx, ebx
  00396	8b fe		 mov	 edi, esi
  00398	33 fb		 xor	 edi, ebx
  0039a	0b fa		 or	 edi, edx
  0039c	33 fd		 xor	 edi, ebp
  0039e	8b de		 mov	 ebx, esi
  003a0	0b df		 or	 ebx, edi
  003a2	33 de		 xor	 ebx, esi
  003a4	89 78 54	 mov	 DWORD PTR [eax+84], edi
  003a7	5f		 pop	 edi
  003a8	89 70 58	 mov	 DWORD PTR [eax+88], esi
  003ab	23 ca		 and	 ecx, edx
  003ad	5e		 pop	 esi
  003ae	33 da		 xor	 ebx, edx
  003b0	33 cd		 xor	 ecx, ebp
  003b2	5d		 pop	 ebp
  003b3	89 58 50	 mov	 DWORD PTR [eax+80], ebx
  003b6	89 48 5c	 mov	 DWORD PTR [eax+92], ecx
  003b9	5b		 pop	 ebx

; 677  : }

  003ba	c3		 ret	 0
_serpent_set_key ENDP
_TEXT	ENDS
PUBLIC	_serpent_encrypt
; Function compile flags: /Ogtpy
;	COMDAT _serpent_encrypt
_TEXT	SEGMENT
tv938 = 8						; size = 4
_inBlock$ = 8						; size = 4
_outBlock$ = 12						; size = 4
_e$ = 16						; size = 4
_d$ = 16						; size = 4
_c$ = 16						; size = 4
_ks$ = 16						; size = 4
_serpent_encrypt PROC					; COMDAT

; 738  : 	unsigned __int32 a, b, c, d, e;
; 739  : 	unsigned int i=1;
; 740  : 	const unsigned __int32 *k = (unsigned __int32 *)ks + 8;

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _ks$[esp-4]

; 741  : 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
; 742  : 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
; 743  : 
; 744  :     a = LE32(in[0]);
; 745  : 	b = LE32(in[1]);
; 746  : 	c = LE32(in[2]);
; 747  : 	d = LE32(in[3]);
; 748  : 
; 749  : 	do
; 750  : 	{
; 751  : 		beforeS0(KX); beforeS0(S0); afterS0(LT);

  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _inBlock$[esp-4]
  00008	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  0000b	33 51 08	 xor	 edx, DWORD PTR [ecx+8]
  0000e	83 c0 20	 add	 eax, 32			; 00000020H
  00011	53		 push	 ebx
  00012	8b 18		 mov	 ebx, DWORD PTR [eax]
  00014	33 19		 xor	 ebx, DWORD PTR [ecx]
  00016	55		 push	 ebp
  00017	8b 68 04	 mov	 ebp, DWORD PTR [eax+4]
  0001a	33 69 04	 xor	 ebp, DWORD PTR [ecx+4]
  0001d	56		 push	 esi
  0001e	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00021	33 71 0c	 xor	 esi, DWORD PTR [ecx+12]
  00024	57		 push	 edi
  00025	33 f3		 xor	 esi, ebx
  00027	8b ca		 mov	 ecx, edx
  00029	33 cd		 xor	 ecx, ebp
  0002b	8b fe		 mov	 edi, esi
  0002d	23 fd		 and	 edi, ebp
  0002f	33 fb		 xor	 edi, ebx
  00031	8b ee		 mov	 ebp, esi
  00033	0b eb		 or	 ebp, ebx
  00035	33 e9		 xor	 ebp, ecx
  00037	33 ce		 xor	 ecx, esi
  00039	33 f2		 xor	 esi, edx
  0003b	0b d7		 or	 edx, edi
  0003d	33 d1		 xor	 edx, ecx
  0003f	89 54 24 1c	 mov	 DWORD PTR _c$[esp+12], edx
  00043	f7 d1		 not	 ecx
  00045	0b cf		 or	 ecx, edi
  00047	8b d1		 mov	 edx, ecx
  00049	33 ce		 xor	 ecx, esi
  0004b	0b f5		 or	 esi, ebp
  0004d	33 f9		 xor	 edi, ecx
  0004f	33 d6		 xor	 edx, esi
  00051	8b de		 mov	 ebx, esi
  00053	33 df		 xor	 ebx, edi
  00055	8b 7c 24 1c	 mov	 edi, DWORD PTR _c$[esp+12]
  00059	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  0005c	c1 c7 03	 rol	 edi, 3
  0005f	33 d7		 xor	 edx, edi
  00061	33 d3		 xor	 edx, ebx
  00063	8d 0c dd 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*8]
  0006a	33 cf		 xor	 ecx, edi
  0006c	33 cd		 xor	 ecx, ebp
  0006e	c1 c1 07	 rol	 ecx, 7
  00071	d1 c2		 rol	 edx, 1
  00073	8b ea		 mov	 ebp, edx
  00075	c1 e5 07	 shl	 ebp, 7
  00078	33 ef		 xor	 ebp, edi

; 752  : 		afterS0(KX); afterS0(S1); afterS1(LT);

  0007a	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  0007d	8b f2		 mov	 esi, edx
  0007f	33 50 14	 xor	 edx, DWORD PTR [eax+20]
  00082	33 f3		 xor	 esi, ebx
  00084	33 f1		 xor	 esi, ecx
  00086	33 e9		 xor	 ebp, ecx
  00088	33 48 1c	 xor	 ecx, DWORD PTR [eax+28]
  0008b	c1 c5 16	 rol	 ebp, 22			; 00000016H
  0008e	c1 c6 05	 rol	 esi, 5
  00091	33 70 10	 xor	 esi, DWORD PTR [eax+16]
  00094	33 fd		 xor	 edi, ebp
  00096	f7 d6		 not	 esi
  00098	8b de		 mov	 ebx, esi
  0009a	23 f2		 and	 esi, edx
  0009c	f7 d7		 not	 edi
  0009e	33 fe		 xor	 edi, esi
  000a0	0b f1		 or	 esi, ecx
  000a2	33 d6		 xor	 edx, esi
  000a4	33 f3		 xor	 esi, ebx
  000a6	33 cf		 xor	 ecx, edi
  000a8	0b da		 or	 ebx, edx
  000aa	0b fe		 or	 edi, esi
  000ac	33 d1		 xor	 edx, ecx
  000ae	23 fb		 and	 edi, ebx
  000b0	33 f2		 xor	 esi, edx
  000b2	23 d7		 and	 edx, edi
  000b4	8b ef		 mov	 ebp, edi
  000b6	23 ee		 and	 ebp, esi
  000b8	33 d6		 xor	 edx, esi
  000ba	33 eb		 xor	 ebp, ebx
  000bc	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  000bf	c1 c1 03	 rol	 ecx, 3
  000c2	8b df		 mov	 ebx, edi
  000c4	33 fd		 xor	 edi, ebp
  000c6	33 f9		 xor	 edi, ecx
  000c8	8d 34 dd 00 00
	00 00		 lea	 esi, DWORD PTR [ebx*8]
  000cf	33 f2		 xor	 esi, edx
  000d1	33 f1		 xor	 esi, ecx
  000d3	c1 c6 07	 rol	 esi, 7
  000d6	d1 c7		 rol	 edi, 1
  000d8	8b d7		 mov	 edx, edi
  000da	c1 e2 07	 shl	 edx, 7
  000dd	33 d6		 xor	 edx, esi
  000df	33 d1		 xor	 edx, ecx
  000e1	8b ce		 mov	 ecx, esi

; 753  : 		afterS1(KX); afterS1(S2); afterS2(LT);

  000e3	33 70 2c	 xor	 esi, DWORD PTR [eax+44]
  000e6	33 cb		 xor	 ecx, ebx
  000e8	33 cf		 xor	 ecx, edi
  000ea	33 78 24	 xor	 edi, DWORD PTR [eax+36]
  000ed	c1 c2 16	 rol	 edx, 22			; 00000016H
  000f0	33 50 28	 xor	 edx, DWORD PTR [eax+40]
  000f3	c1 c1 05	 rol	 ecx, 5
  000f6	33 48 20	 xor	 ecx, DWORD PTR [eax+32]
  000f9	8b d9		 mov	 ebx, ecx
  000fb	23 ca		 and	 ecx, edx
  000fd	33 ce		 xor	 ecx, esi
  000ff	0b f3		 or	 esi, ebx
  00101	33 f7		 xor	 esi, edi
  00103	8b e9		 mov	 ebp, ecx
  00105	33 ef		 xor	 ebp, edi
  00107	33 d5		 xor	 edx, ebp
  00109	33 da		 xor	 ebx, edx
  0010b	8b fe		 mov	 edi, esi
  0010d	0b f3		 or	 esi, ebx
  0010f	33 f1		 xor	 esi, ecx
  00111	23 cf		 and	 ecx, edi
  00113	33 d9		 xor	 ebx, ecx
  00115	8b ce		 mov	 ecx, esi
  00117	33 cb		 xor	 ecx, ebx
  00119	33 f9		 xor	 edi, ecx
  0011b	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  0011e	c1 c7 03	 rol	 edi, 3
  00121	33 f7		 xor	 esi, edi
  00123	33 f2		 xor	 esi, edx
  00125	f7 d3		 not	 ebx
  00127	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  0012e	33 cb		 xor	 ecx, ebx
  00130	33 cf		 xor	 ecx, edi
  00132	c1 c1 07	 rol	 ecx, 7
  00135	d1 c6		 rol	 esi, 1
  00137	8b de		 mov	 ebx, esi
  00139	c1 e3 07	 shl	 ebx, 7
  0013c	33 d9		 xor	 ebx, ecx
  0013e	33 df		 xor	 ebx, edi
  00140	8b fe		 mov	 edi, esi

; 754  : 		afterS2(KX); afterS2(S3); afterS3(LT);

  00142	33 70 34	 xor	 esi, DWORD PTR [eax+52]
  00145	33 f9		 xor	 edi, ecx
  00147	33 48 3c	 xor	 ecx, DWORD PTR [eax+60]
  0014a	33 fa		 xor	 edi, edx
  0014c	c1 c3 16	 rol	 ebx, 22			; 00000016H
  0014f	33 58 38	 xor	 ebx, DWORD PTR [eax+56]
  00152	c1 c7 05	 rol	 edi, 5
  00155	33 78 30	 xor	 edi, DWORD PTR [eax+48]
  00158	8b d7		 mov	 edx, edi
  0015a	0b f9		 or	 edi, ecx
  0015c	33 ce		 xor	 ecx, esi
  0015e	23 f2		 and	 esi, edx
  00160	33 d3		 xor	 edx, ebx
  00162	0b d6		 or	 edx, esi
  00164	33 d9		 xor	 ebx, ecx
  00166	23 cf		 and	 ecx, edi
  00168	33 ca		 xor	 ecx, edx
  0016a	33 fe		 xor	 edi, esi
  0016c	33 f1		 xor	 esi, ecx
  0016e	0b f7		 or	 esi, edi
  00170	33 f3		 xor	 esi, ebx
  00172	23 d7		 and	 edx, edi
  00174	8b ee		 mov	 ebp, esi
  00176	0b f1		 or	 esi, ecx
  00178	33 d3		 xor	 edx, ebx
  0017a	33 f1		 xor	 esi, ecx
  0017c	33 f7		 xor	 esi, edi
  0017e	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00181	c1 c1 03	 rol	 ecx, 3
  00184	8b d9		 mov	 ebx, ecx
  00186	8d 0c f5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*8]
  0018d	33 cb		 xor	 ecx, ebx
  0018f	33 ca		 xor	 ecx, edx
  00191	c1 c1 07	 rol	 ecx, 7
  00194	8b fe		 mov	 edi, esi
  00196	33 fb		 xor	 edi, ebx
  00198	33 f1		 xor	 esi, ecx
  0019a	33 fd		 xor	 edi, ebp
  0019c	d1 c7		 rol	 edi, 1

; 755  : 		afterS3(KX); afterS3(S4); afterS4(LT);

  0019e	33 f7		 xor	 esi, edi
  001a0	c1 c6 05	 rol	 esi, 5
  001a3	33 70 40	 xor	 esi, DWORD PTR [eax+64]
  001a6	8b d7		 mov	 edx, edi
  001a8	c1 e2 07	 shl	 edx, 7
  001ab	33 d3		 xor	 edx, ebx
  001ad	8b 58 44	 mov	 ebx, DWORD PTR [eax+68]
  001b0	33 d1		 xor	 edx, ecx
  001b2	33 48 4c	 xor	 ecx, DWORD PTR [eax+76]
  001b5	c1 c2 16	 rol	 edx, 22			; 00000016H
  001b8	33 50 48	 xor	 edx, DWORD PTR [eax+72]
  001bb	33 d9		 xor	 ebx, ecx
  001bd	33 fb		 xor	 edi, ebx
  001bf	f7 d1		 not	 ecx
  001c1	33 d1		 xor	 edx, ecx
  001c3	33 ce		 xor	 ecx, esi
  001c5	8b d9		 mov	 ebx, ecx
  001c7	23 df		 and	 ebx, edi
  001c9	33 da		 xor	 ebx, edx
  001cb	33 f9		 xor	 edi, ecx
  001cd	33 f7		 xor	 esi, edi
  001cf	23 d7		 and	 edx, edi
  001d1	33 d6		 xor	 edx, esi
  001d3	23 f3		 and	 esi, ebx
  001d5	33 ce		 xor	 ecx, esi
  001d7	8b eb		 mov	 ebp, ebx
  001d9	0b ef		 or	 ebp, edi
  001db	33 ee		 xor	 ebp, esi
  001dd	0b f1		 or	 esi, ecx
  001df	33 f2		 xor	 esi, edx
  001e1	23 d1		 and	 edx, ecx
  001e3	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  001e6	8b fb		 mov	 edi, ebx
  001e8	f7 d6		 not	 esi
  001ea	c1 c6 03	 rol	 esi, 3
  001ed	8b de		 mov	 ebx, esi
  001ef	8d 34 fd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*8]
  001f6	33 f3		 xor	 esi, ebx
  001f8	33 f1		 xor	 esi, ecx
  001fa	8b cb		 mov	 ecx, ebx
  001fc	33 ca		 xor	 ecx, edx
  001fe	33 cf		 xor	 ecx, edi
  00200	c1 c6 07	 rol	 esi, 7
  00203	33 cd		 xor	 ecx, ebp
  00205	89 5c 24 1c	 mov	 DWORD PTR _e$[esp+12], ebx
  00209	d1 c1		 rol	 ecx, 1
  0020b	8b d9		 mov	 ebx, ecx
  0020d	c1 e3 07	 shl	 ebx, 7
  00210	33 5c 24 1c	 xor	 ebx, DWORD PTR _e$[esp+12]
  00214	8b d6		 mov	 edx, esi
  00216	33 d7		 xor	 edx, edi

; 756  : 		afterS4(KX); afterS4(S5); afterS5(LT);

  00218	8b 78 58	 mov	 edi, DWORD PTR [eax+88]
  0021b	33 de		 xor	 ebx, esi
  0021d	33 70 5c	 xor	 esi, DWORD PTR [eax+92]
  00220	33 d1		 xor	 edx, ecx
  00222	33 48 54	 xor	 ecx, DWORD PTR [eax+84]
  00225	c1 c3 16	 rol	 ebx, 22			; 00000016H
  00228	c1 c2 05	 rol	 edx, 5
  0022b	33 50 50	 xor	 edx, DWORD PTR [eax+80]
  0022e	33 fb		 xor	 edi, ebx
  00230	33 d1		 xor	 edx, ecx
  00232	33 ce		 xor	 ecx, esi
  00234	f7 d6		 not	 esi
  00236	8b da		 mov	 ebx, edx
  00238	33 fe		 xor	 edi, esi
  0023a	23 d9		 and	 ebx, ecx
  0023c	8b e9		 mov	 ebp, ecx
  0023e	33 df		 xor	 ebx, edi
  00240	0b fd		 or	 edi, ebp
  00242	33 ee		 xor	 ebp, esi
  00244	23 f3		 and	 esi, ebx
  00246	33 f2		 xor	 esi, edx
  00248	8b cf		 mov	 ecx, edi
  0024a	33 cd		 xor	 ecx, ebp
  0024c	33 cb		 xor	 ecx, ebx
  0024e	33 fa		 xor	 edi, edx
  00250	8b ee		 mov	 ebp, esi
  00252	23 ea		 and	 ebp, edx
  00254	33 e9		 xor	 ebp, ecx
  00256	0b ce		 or	 ecx, esi
  00258	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  0025b	c1 c5 03	 rol	 ebp, 3
  0025e	33 f5		 xor	 esi, ebp
  00260	33 f3		 xor	 esi, ebx
  00262	8d 14 dd 00 00
	00 00		 lea	 edx, DWORD PTR [ebx*8]
  00269	33 ca		 xor	 ecx, edx
  0026b	f7 d7		 not	 edi
  0026d	33 cf		 xor	 ecx, edi
  0026f	33 cd		 xor	 ecx, ebp
  00271	c1 c1 07	 rol	 ecx, 7
  00274	d1 c6		 rol	 esi, 1
  00276	8b fe		 mov	 edi, esi
  00278	c1 e7 07	 shl	 edi, 7
  0027b	33 f9		 xor	 edi, ecx
  0027d	33 fd		 xor	 edi, ebp

; 757  : 		afterS5(KX); afterS5(S6); afterS6(LT);

  0027f	8b 68 68	 mov	 ebp, DWORD PTR [eax+104]
  00282	c1 c7 16	 rol	 edi, 22			; 00000016H
  00285	8b d1		 mov	 edx, ecx
  00287	33 48 6c	 xor	 ecx, DWORD PTR [eax+108]
  0028a	33 d6		 xor	 edx, esi
  0028c	33 d3		 xor	 edx, ebx
  0028e	8b 58 64	 mov	 ebx, DWORD PTR [eax+100]
  00291	c1 c2 05	 rol	 edx, 5
  00294	33 50 60	 xor	 edx, DWORD PTR [eax+96]
  00297	33 ef		 xor	 ebp, edi
  00299	8b f9		 mov	 edi, ecx
  0029b	23 ca		 and	 ecx, edx
  0029d	33 d7		 xor	 edx, edi
  0029f	f7 d5		 not	 ebp
  002a1	33 cd		 xor	 ecx, ebp
  002a3	33 d9		 xor	 ebx, ecx
  002a5	33 f3		 xor	 esi, ebx
  002a7	8b df		 mov	 ebx, edi
  002a9	0b dd		 or	 ebx, ebp
  002ab	33 da		 xor	 ebx, edx
  002ad	0b d6		 or	 edx, esi
  002af	33 fa		 xor	 edi, edx
  002b1	33 de		 xor	 ebx, esi
  002b3	89 7c 24 1c	 mov	 DWORD PTR _d$[esp+12], edi
  002b7	8b f9		 mov	 edi, ecx
  002b9	0b fa		 or	 edi, edx
  002bb	33 fb		 xor	 edi, ebx
  002bd	8b d1		 mov	 edx, ecx
  002bf	33 54 24 1c	 xor	 edx, DWORD PTR _d$[esp+12]
  002c3	f7 d1		 not	 ecx
  002c5	33 d7		 xor	 edx, edi
  002c7	8b ea		 mov	 ebp, edx
  002c9	23 eb		 and	 ebp, ebx
  002cb	33 e9		 xor	 ebp, ecx
  002cd	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  002d0	c1 c2 03	 rol	 edx, 3
  002d3	8b da		 mov	 ebx, edx
  002d5	33 d6		 xor	 edx, esi
  002d7	8d 0c fd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*8]
  002de	33 cb		 xor	 ecx, ebx
  002e0	33 cd		 xor	 ecx, ebp
  002e2	c1 c1 07	 rol	 ecx, 7
  002e5	33 d7		 xor	 edx, edi
  002e7	d1 c2		 rol	 edx, 1
  002e9	8b f2		 mov	 esi, edx
  002eb	c1 e6 07	 shl	 esi, 7
  002ee	33 f3		 xor	 esi, ebx
  002f0	8b da		 mov	 ebx, edx
  002f2	33 d9		 xor	 ebx, ecx
  002f4	33 f1		 xor	 esi, ecx

; 758  : 		afterS6(KX); afterS6(S7);

  002f6	33 df		 xor	 ebx, edi
  002f8	c1 c6 16	 rol	 esi, 22			; 00000016H
  002fb	c1 c3 05	 rol	 ebx, 5
  002fe	33 58 70	 xor	 ebx, DWORD PTR [eax+112]
  00301	33 70 78	 xor	 esi, DWORD PTR [eax+120]
  00304	33 50 74	 xor	 edx, DWORD PTR [eax+116]
  00307	33 48 7c	 xor	 ecx, DWORD PTR [eax+124]
  0030a	8b ee		 mov	 ebp, esi
  0030c	23 f2		 and	 esi, edx
  0030e	33 f1		 xor	 esi, ecx
  00310	33 ee		 xor	 ebp, esi
  00312	33 f2		 xor	 esi, edx
  00314	8b fd		 mov	 edi, ebp
  00316	23 ca		 and	 ecx, edx
  00318	33 d3		 xor	 edx, ebx
  0031a	33 ca		 xor	 ecx, edx
  0031c	0b fb		 or	 edi, ebx
  0031e	33 fe		 xor	 edi, esi
  00320	33 f1		 xor	 esi, ecx
  00322	23 cf		 and	 ecx, edi
  00324	33 cd		 xor	 ecx, ebp
  00326	33 ee		 xor	 ebp, esi
  00328	f7 d5		 not	 ebp
  0032a	23 f7		 and	 esi, edi
  0032c	33 f5		 xor	 esi, ebp
  0032e	23 ef		 and	 ebp, edi
  00330	33 ea		 xor	 ebp, edx
  00332	33 e9		 xor	 ebp, ecx
  00334	c7 44 24 14 03
	00 00 00	 mov	 DWORD PTR tv938[esp+12], 3
  0033c	8d 64 24 00	 npad	 4
$LL4@serpent_en:

; 759  : 
; 760  : 		if (i == 4)
; 761  : 			break;
; 762  : 
; 763  : 		++i;
; 764  : 		c = b;
; 765  : 		b = e;
; 766  : 		e = d;
; 767  : 		d = a;
; 768  : 		a = e;
; 769  : 		k += 32;

  00340	83 e8 80	 sub	 eax, -128		; ffffff80H
  00343	8b d6		 mov	 edx, esi

; 770  : 		beforeS0(LT);

  00345	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  00348	c1 c1 03	 rol	 ecx, 3
  0034b	8b dd		 mov	 ebx, ebp
  0034d	89 7c 24 1c	 mov	 DWORD PTR _d$[esp+12], edi
  00351	8b f9		 mov	 edi, ecx
  00353	8b f2		 mov	 esi, edx
  00355	8d 2c f5 00 00
	00 00		 lea	 ebp, DWORD PTR [esi*8]
  0035c	33 6c 24 1c	 xor	 ebp, DWORD PTR _d$[esp+12]
  00360	8b d7		 mov	 edx, edi
  00362	33 ef		 xor	 ebp, edi
  00364	33 d3		 xor	 edx, ebx
  00366	33 d6		 xor	 edx, esi
  00368	c1 c5 07	 rol	 ebp, 7
  0036b	d1 c2		 rol	 edx, 1
  0036d	8b dd		 mov	 ebx, ebp
  0036f	33 da		 xor	 ebx, edx
  00371	33 de		 xor	 ebx, esi
  00373	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  00376	33 f5		 xor	 esi, ebp
  00378	8b ca		 mov	 ecx, edx
  0037a	33 50 04	 xor	 edx, DWORD PTR [eax+4]
  0037d	c1 e1 07	 shl	 ecx, 7
  00380	33 cd		 xor	 ecx, ebp
  00382	33 cf		 xor	 ecx, edi
  00384	c1 c1 16	 rol	 ecx, 22			; 00000016H
  00387	33 48 08	 xor	 ecx, DWORD PTR [eax+8]
  0038a	c1 c3 05	 rol	 ebx, 5
  0038d	33 18		 xor	 ebx, DWORD PTR [eax]
  0038f	8b f9		 mov	 edi, ecx
  00391	33 f3		 xor	 esi, ebx
  00393	33 fa		 xor	 edi, edx
  00395	8b ee		 mov	 ebp, esi
  00397	23 ea		 and	 ebp, edx
  00399	33 eb		 xor	 ebp, ebx
  0039b	8b d6		 mov	 edx, esi
  0039d	0b d3		 or	 edx, ebx
  0039f	33 d7		 xor	 edx, edi
  003a1	33 fe		 xor	 edi, esi
  003a3	33 f1		 xor	 esi, ecx
  003a5	0b cd		 or	 ecx, ebp
  003a7	33 cf		 xor	 ecx, edi
  003a9	f7 d7		 not	 edi
  003ab	0b fd		 or	 edi, ebp
  003ad	8b df		 mov	 ebx, edi
  003af	33 de		 xor	 ebx, esi
  003b1	0b f2		 or	 esi, edx
  003b3	33 eb		 xor	 ebp, ebx
  003b5	8b de		 mov	 ebx, esi
  003b7	33 dd		 xor	 ebx, ebp
  003b9	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  003bc	c1 c1 03	 rol	 ecx, 3
  003bf	33 fe		 xor	 edi, esi
  003c1	8b e9		 mov	 ebp, ecx
  003c3	33 fd		 xor	 edi, ebp
  003c5	8d 0c dd 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*8]
  003cc	33 cd		 xor	 ecx, ebp
  003ce	33 ca		 xor	 ecx, edx
  003d0	c1 c1 07	 rol	 ecx, 7
  003d3	33 fb		 xor	 edi, ebx
  003d5	d1 c7		 rol	 edi, 1
  003d7	8b d7		 mov	 edx, edi
  003d9	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  003dc	89 6c 24 1c	 mov	 DWORD PTR _c$[esp+12], ebp
  003e0	8b ea		 mov	 ebp, edx
  003e2	c1 e5 07	 shl	 ebp, 7
  003e5	33 6c 24 1c	 xor	 ebp, DWORD PTR _c$[esp+12]
  003e9	8b f2		 mov	 esi, edx
  003eb	33 50 14	 xor	 edx, DWORD PTR [eax+20]
  003ee	33 f3		 xor	 esi, ebx
  003f0	33 f1		 xor	 esi, ecx
  003f2	33 e9		 xor	 ebp, ecx
  003f4	33 48 1c	 xor	 ecx, DWORD PTR [eax+28]
  003f7	c1 c5 16	 rol	 ebp, 22			; 00000016H
  003fa	c1 c6 05	 rol	 esi, 5
  003fd	33 70 10	 xor	 esi, DWORD PTR [eax+16]
  00400	f7 d6		 not	 esi
  00402	8b de		 mov	 ebx, esi
  00404	23 f2		 and	 esi, edx
  00406	33 fd		 xor	 edi, ebp
  00408	f7 d7		 not	 edi
  0040a	33 fe		 xor	 edi, esi
  0040c	0b f1		 or	 esi, ecx
  0040e	33 d6		 xor	 edx, esi
  00410	33 cf		 xor	 ecx, edi
  00412	33 f3		 xor	 esi, ebx
  00414	0b da		 or	 ebx, edx
  00416	0b fe		 or	 edi, esi
  00418	33 d1		 xor	 edx, ecx
  0041a	23 fb		 and	 edi, ebx
  0041c	33 f2		 xor	 esi, edx
  0041e	23 d7		 and	 edx, edi
  00420	33 d6		 xor	 edx, esi
  00422	8b ef		 mov	 ebp, edi
  00424	23 ee		 and	 ebp, esi
  00426	33 eb		 xor	 ebp, ebx
  00428	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  0042b	c1 c1 03	 rol	 ecx, 3
  0042e	8b df		 mov	 ebx, edi
  00430	33 fd		 xor	 edi, ebp
  00432	33 f9		 xor	 edi, ecx
  00434	8d 34 dd 00 00
	00 00		 lea	 esi, DWORD PTR [ebx*8]
  0043b	33 f2		 xor	 esi, edx
  0043d	33 f1		 xor	 esi, ecx
  0043f	c1 c6 07	 rol	 esi, 7
  00442	d1 c7		 rol	 edi, 1
  00444	8b d7		 mov	 edx, edi
  00446	c1 e2 07	 shl	 edx, 7
  00449	33 d6		 xor	 edx, esi
  0044b	33 d1		 xor	 edx, ecx
  0044d	8b ce		 mov	 ecx, esi
  0044f	33 70 2c	 xor	 esi, DWORD PTR [eax+44]
  00452	33 cb		 xor	 ecx, ebx
  00454	33 cf		 xor	 ecx, edi
  00456	33 78 24	 xor	 edi, DWORD PTR [eax+36]
  00459	c1 c2 16	 rol	 edx, 22			; 00000016H
  0045c	33 50 28	 xor	 edx, DWORD PTR [eax+40]
  0045f	c1 c1 05	 rol	 ecx, 5
  00462	33 48 20	 xor	 ecx, DWORD PTR [eax+32]
  00465	8b d9		 mov	 ebx, ecx
  00467	23 ca		 and	 ecx, edx
  00469	33 ce		 xor	 ecx, esi
  0046b	0b f3		 or	 esi, ebx
  0046d	33 f7		 xor	 esi, edi
  0046f	8b e9		 mov	 ebp, ecx
  00471	33 ef		 xor	 ebp, edi
  00473	33 d5		 xor	 edx, ebp
  00475	33 da		 xor	 ebx, edx
  00477	8b fe		 mov	 edi, esi
  00479	0b f3		 or	 esi, ebx
  0047b	33 f1		 xor	 esi, ecx
  0047d	23 cf		 and	 ecx, edi
  0047f	33 d9		 xor	 ebx, ecx
  00481	8b ce		 mov	 ecx, esi
  00483	33 cb		 xor	 ecx, ebx
  00485	33 f9		 xor	 edi, ecx
  00487	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  0048a	c1 c7 03	 rol	 edi, 3
  0048d	f7 d3		 not	 ebx
  0048f	33 f7		 xor	 esi, edi
  00491	8d 0c d5 00 00
	00 00		 lea	 ecx, DWORD PTR [edx*8]
  00498	33 cb		 xor	 ecx, ebx
  0049a	33 cf		 xor	 ecx, edi
  0049c	c1 c1 07	 rol	 ecx, 7
  0049f	33 f2		 xor	 esi, edx
  004a1	d1 c6		 rol	 esi, 1
  004a3	8b de		 mov	 ebx, esi
  004a5	c1 e3 07	 shl	 ebx, 7
  004a8	33 d9		 xor	 ebx, ecx
  004aa	33 df		 xor	 ebx, edi
  004ac	8b fe		 mov	 edi, esi
  004ae	33 70 34	 xor	 esi, DWORD PTR [eax+52]
  004b1	33 f9		 xor	 edi, ecx
  004b3	33 48 3c	 xor	 ecx, DWORD PTR [eax+60]
  004b6	33 fa		 xor	 edi, edx
  004b8	c1 c3 16	 rol	 ebx, 22			; 00000016H
  004bb	33 58 38	 xor	 ebx, DWORD PTR [eax+56]
  004be	c1 c7 05	 rol	 edi, 5
  004c1	33 78 30	 xor	 edi, DWORD PTR [eax+48]
  004c4	8b d7		 mov	 edx, edi
  004c6	0b f9		 or	 edi, ecx
  004c8	33 ce		 xor	 ecx, esi
  004ca	23 f2		 and	 esi, edx
  004cc	33 d3		 xor	 edx, ebx
  004ce	0b d6		 or	 edx, esi
  004d0	33 d9		 xor	 ebx, ecx
  004d2	23 cf		 and	 ecx, edi
  004d4	33 ca		 xor	 ecx, edx
  004d6	33 fe		 xor	 edi, esi
  004d8	33 f1		 xor	 esi, ecx
  004da	0b f7		 or	 esi, edi
  004dc	33 f3		 xor	 esi, ebx
  004de	23 d7		 and	 edx, edi
  004e0	33 d3		 xor	 edx, ebx
  004e2	8b ee		 mov	 ebp, esi
  004e4	0b f1		 or	 esi, ecx
  004e6	33 f1		 xor	 esi, ecx
  004e8	33 f7		 xor	 esi, edi
  004ea	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  004ed	c1 c1 03	 rol	 ecx, 3
  004f0	8b d9		 mov	 ebx, ecx
  004f2	8d 0c f5 00 00
	00 00		 lea	 ecx, DWORD PTR [esi*8]
  004f9	33 cb		 xor	 ecx, ebx
  004fb	33 ca		 xor	 ecx, edx
  004fd	8b fe		 mov	 edi, esi
  004ff	33 fb		 xor	 edi, ebx
  00501	c1 c1 07	 rol	 ecx, 7
  00504	33 f1		 xor	 esi, ecx
  00506	33 fd		 xor	 edi, ebp
  00508	d1 c7		 rol	 edi, 1
  0050a	33 f7		 xor	 esi, edi
  0050c	c1 c6 05	 rol	 esi, 5
  0050f	33 70 40	 xor	 esi, DWORD PTR [eax+64]
  00512	8b d7		 mov	 edx, edi
  00514	c1 e2 07	 shl	 edx, 7
  00517	33 d3		 xor	 edx, ebx
  00519	8b 58 44	 mov	 ebx, DWORD PTR [eax+68]
  0051c	33 d1		 xor	 edx, ecx
  0051e	33 48 4c	 xor	 ecx, DWORD PTR [eax+76]
  00521	c1 c2 16	 rol	 edx, 22			; 00000016H
  00524	33 50 48	 xor	 edx, DWORD PTR [eax+72]
  00527	33 d9		 xor	 ebx, ecx
  00529	33 fb		 xor	 edi, ebx
  0052b	f7 d1		 not	 ecx
  0052d	33 d1		 xor	 edx, ecx
  0052f	33 ce		 xor	 ecx, esi
  00531	8b d9		 mov	 ebx, ecx
  00533	23 df		 and	 ebx, edi
  00535	33 da		 xor	 ebx, edx
  00537	33 f9		 xor	 edi, ecx
  00539	33 f7		 xor	 esi, edi
  0053b	23 d7		 and	 edx, edi
  0053d	33 d6		 xor	 edx, esi
  0053f	23 f3		 and	 esi, ebx
  00541	33 ce		 xor	 ecx, esi
  00543	8b eb		 mov	 ebp, ebx
  00545	0b ef		 or	 ebp, edi
  00547	33 ee		 xor	 ebp, esi
  00549	0b f1		 or	 esi, ecx
  0054b	33 f2		 xor	 esi, edx
  0054d	23 d1		 and	 edx, ecx
  0054f	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  00552	8b fb		 mov	 edi, ebx
  00554	f7 d6		 not	 esi
  00556	c1 c6 03	 rol	 esi, 3
  00559	8b de		 mov	 ebx, esi
  0055b	8d 34 fd 00 00
	00 00		 lea	 esi, DWORD PTR [edi*8]
  00562	33 f3		 xor	 esi, ebx
  00564	33 f1		 xor	 esi, ecx
  00566	8b cb		 mov	 ecx, ebx
  00568	33 ca		 xor	 ecx, edx
  0056a	33 cf		 xor	 ecx, edi
  0056c	c1 c6 07	 rol	 esi, 7
  0056f	89 5c 24 1c	 mov	 DWORD PTR _e$[esp+12], ebx
  00573	33 cd		 xor	 ecx, ebp
  00575	d1 c1		 rol	 ecx, 1
  00577	8b d9		 mov	 ebx, ecx
  00579	c1 e3 07	 shl	 ebx, 7
  0057c	33 5c 24 1c	 xor	 ebx, DWORD PTR _e$[esp+12]
  00580	8b d6		 mov	 edx, esi
  00582	33 de		 xor	 ebx, esi
  00584	c1 c3 16	 rol	 ebx, 22			; 00000016H
  00587	33 70 5c	 xor	 esi, DWORD PTR [eax+92]
  0058a	33 d7		 xor	 edx, edi
  0058c	33 d1		 xor	 edx, ecx
  0058e	33 48 54	 xor	 ecx, DWORD PTR [eax+84]
  00591	8b 78 58	 mov	 edi, DWORD PTR [eax+88]
  00594	33 fb		 xor	 edi, ebx
  00596	c1 c2 05	 rol	 edx, 5
  00599	33 50 50	 xor	 edx, DWORD PTR [eax+80]
  0059c	33 d1		 xor	 edx, ecx
  0059e	33 ce		 xor	 ecx, esi
  005a0	8b da		 mov	 ebx, edx
  005a2	23 d9		 and	 ebx, ecx
  005a4	8b e9		 mov	 ebp, ecx
  005a6	f7 d6		 not	 esi
  005a8	33 fe		 xor	 edi, esi
  005aa	33 df		 xor	 ebx, edi
  005ac	0b fd		 or	 edi, ebp
  005ae	33 ee		 xor	 ebp, esi
  005b0	23 f3		 and	 esi, ebx
  005b2	33 f2		 xor	 esi, edx
  005b4	8b cf		 mov	 ecx, edi
  005b6	33 cd		 xor	 ecx, ebp
  005b8	33 fa		 xor	 edi, edx
  005ba	33 cb		 xor	 ecx, ebx
  005bc	8b ee		 mov	 ebp, esi
  005be	23 ea		 and	 ebp, edx
  005c0	33 e9		 xor	 ebp, ecx
  005c2	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  005c5	0b ce		 or	 ecx, esi
  005c7	c1 c5 03	 rol	 ebp, 3
  005ca	f7 d7		 not	 edi
  005cc	8d 14 dd 00 00
	00 00		 lea	 edx, DWORD PTR [ebx*8]
  005d3	33 ca		 xor	 ecx, edx
  005d5	33 cf		 xor	 ecx, edi
  005d7	33 cd		 xor	 ecx, ebp
  005d9	33 f5		 xor	 esi, ebp
  005db	33 f3		 xor	 esi, ebx
  005dd	c1 c1 07	 rol	 ecx, 7
  005e0	d1 c6		 rol	 esi, 1
  005e2	8b d1		 mov	 edx, ecx
  005e4	33 d6		 xor	 edx, esi
  005e6	33 d3		 xor	 edx, ebx
  005e8	8b 58 64	 mov	 ebx, DWORD PTR [eax+100]
  005eb	8b fe		 mov	 edi, esi
  005ed	c1 e7 07	 shl	 edi, 7
  005f0	33 f9		 xor	 edi, ecx
  005f2	33 48 6c	 xor	 ecx, DWORD PTR [eax+108]
  005f5	33 fd		 xor	 edi, ebp
  005f7	8b 68 68	 mov	 ebp, DWORD PTR [eax+104]
  005fa	c1 c7 16	 rol	 edi, 22			; 00000016H
  005fd	c1 c2 05	 rol	 edx, 5
  00600	33 50 60	 xor	 edx, DWORD PTR [eax+96]
  00603	33 ef		 xor	 ebp, edi
  00605	8b f9		 mov	 edi, ecx
  00607	23 ca		 and	 ecx, edx
  00609	f7 d5		 not	 ebp
  0060b	33 cd		 xor	 ecx, ebp
  0060d	33 d9		 xor	 ebx, ecx
  0060f	33 d7		 xor	 edx, edi
  00611	33 f3		 xor	 esi, ebx
  00613	8b df		 mov	 ebx, edi
  00615	0b dd		 or	 ebx, ebp
  00617	33 da		 xor	 ebx, edx
  00619	0b d6		 or	 edx, esi
  0061b	33 fa		 xor	 edi, edx
  0061d	89 7c 24 1c	 mov	 DWORD PTR _d$[esp+12], edi
  00621	8b f9		 mov	 edi, ecx
  00623	0b fa		 or	 edi, edx
  00625	33 de		 xor	 ebx, esi
  00627	8b d1		 mov	 edx, ecx
  00629	33 54 24 1c	 xor	 edx, DWORD PTR _d$[esp+12]
  0062d	33 fb		 xor	 edi, ebx
  0062f	33 d7		 xor	 edx, edi
  00631	8b ea		 mov	 ebp, edx
  00633	23 eb		 and	 ebp, ebx
  00635	f7 d1		 not	 ecx
  00637	33 e9		 xor	 ebp, ecx
  00639	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  0063c	c1 c2 03	 rol	 edx, 3
  0063f	8b da		 mov	 ebx, edx
  00641	8d 0c fd 00 00
	00 00		 lea	 ecx, DWORD PTR [edi*8]
  00648	33 d6		 xor	 edx, esi
  0064a	33 cb		 xor	 ecx, ebx
  0064c	33 cd		 xor	 ecx, ebp
  0064e	c1 c1 07	 rol	 ecx, 7
  00651	33 d7		 xor	 edx, edi
  00653	d1 c2		 rol	 edx, 1
  00655	8b f2		 mov	 esi, edx
  00657	c1 e6 07	 shl	 esi, 7
  0065a	33 f3		 xor	 esi, ebx
  0065c	33 f1		 xor	 esi, ecx
  0065e	c1 c6 16	 rol	 esi, 22			; 00000016H
  00661	33 70 78	 xor	 esi, DWORD PTR [eax+120]
  00664	8b da		 mov	 ebx, edx
  00666	33 50 74	 xor	 edx, DWORD PTR [eax+116]
  00669	33 d9		 xor	 ebx, ecx
  0066b	33 48 7c	 xor	 ecx, DWORD PTR [eax+124]
  0066e	8b ee		 mov	 ebp, esi
  00670	23 f2		 and	 esi, edx
  00672	33 f1		 xor	 esi, ecx
  00674	33 ee		 xor	 ebp, esi
  00676	33 df		 xor	 ebx, edi
  00678	c1 c3 05	 rol	 ebx, 5
  0067b	33 58 70	 xor	 ebx, DWORD PTR [eax+112]
  0067e	33 f2		 xor	 esi, edx
  00680	8b fd		 mov	 edi, ebp
  00682	23 ca		 and	 ecx, edx
  00684	33 d3		 xor	 edx, ebx
  00686	33 ca		 xor	 ecx, edx
  00688	0b fb		 or	 edi, ebx
  0068a	33 fe		 xor	 edi, esi
  0068c	33 f1		 xor	 esi, ecx
  0068e	23 cf		 and	 ecx, edi
  00690	33 cd		 xor	 ecx, ebp
  00692	33 ee		 xor	 ebp, esi
  00694	f7 d5		 not	 ebp
  00696	23 f7		 and	 esi, edi
  00698	33 f5		 xor	 esi, ebp
  0069a	23 ef		 and	 ebp, edi
  0069c	33 ea		 xor	 ebp, edx
  0069e	33 e9		 xor	 ebp, ecx
  006a0	83 6c 24 14 01	 sub	 DWORD PTR tv938[esp+12], 1
  006a5	0f 85 95 fc ff
	ff		 jne	 $LL4@serpent_en

; 771  : 	}
; 772  : 	while (1);
; 773  : 
; 774  : 	afterS7(KX);

  006ab	33 a8 84 00 00
	00		 xor	 ebp, DWORD PTR [eax+132]
  006b1	33 b8 8c 00 00
	00		 xor	 edi, DWORD PTR [eax+140]
  006b7	8b 90 80 00 00
	00		 mov	 edx, DWORD PTR [eax+128]
  006bd	33 88 88 00 00
	00		 xor	 ecx, DWORD PTR [eax+136]

; 775  : 	
; 776  :     out[0] = LE32(d);

  006c3	8b 44 24 18	 mov	 eax, DWORD PTR _outBlock$[esp+12]

; 777  : 	out[1] = LE32(e);
; 778  : 	out[2] = LE32(b);
; 779  : 	out[3] = LE32(a);

  006c7	89 78 0c	 mov	 DWORD PTR [eax+12], edi
  006ca	5f		 pop	 edi
  006cb	33 d6		 xor	 edx, esi
  006cd	5e		 pop	 esi
  006ce	89 68 04	 mov	 DWORD PTR [eax+4], ebp
  006d1	5d		 pop	 ebp
  006d2	89 10		 mov	 DWORD PTR [eax], edx
  006d4	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  006d7	5b		 pop	 ebx

; 780  : }

  006d8	c3		 ret	 0
_serpent_encrypt ENDP
_TEXT	ENDS
PUBLIC	_serpent_decrypt
; Function compile flags: /Ogtpy
;	COMDAT _serpent_decrypt
_TEXT	SEGMENT
_i$ = 8							; size = 4
_inBlock$ = 8						; size = 4
_outBlock$ = 12						; size = 4
_e$ = 16						; size = 4
_d$ = 16						; size = 4
_c$ = 16						; size = 4
_b$ = 16						; size = 4
_a$ = 16						; size = 4
_ks$ = 16						; size = 4
_serpent_decrypt PROC					; COMDAT

; 848  : 	unsigned __int32 a, b, c, d, e;
; 849  : 	const unsigned __int32 *k = (unsigned __int32 *)ks + 104;

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _ks$[esp-4]

; 850  : 	unsigned int i=4;
; 851  : 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
; 852  : 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
; 853  : 
; 854  :     a = LE32(in[0]);
; 855  : 	b = LE32(in[1]);
; 856  : 	c = LE32(in[2]);
; 857  : 	d = LE32(in[3]);
; 858  : 
; 859  : 	beforeI7(KX);

  00004	8b 54 24 04	 mov	 edx, DWORD PTR _inBlock$[esp-4]
  00008	8b 88 28 02 00
	00		 mov	 ecx, DWORD PTR [eax+552]
  0000e	33 4a 08	 xor	 ecx, DWORD PTR [edx+8]
  00011	53		 push	 ebx
  00012	05 a0 01 00 00	 add	 eax, 416		; 000001a0H
  00017	55		 push	 ebp
  00018	8b a8 84 00 00
	00		 mov	 ebp, DWORD PTR [eax+132]
  0001e	33 6a 04	 xor	 ebp, DWORD PTR [edx+4]
  00021	56		 push	 esi
  00022	8b b0 80 00 00
	00		 mov	 esi, DWORD PTR [eax+128]
  00028	33 32		 xor	 esi, DWORD PTR [edx]
  0002a	57		 push	 edi
  0002b	8b b8 8c 00 00
	00		 mov	 edi, DWORD PTR [eax+140]
  00031	33 7a 0c	 xor	 edi, DWORD PTR [edx+12]

; 860  : 	goto start;
; 861  : 
; 862  : 	do
; 863  : 	{
; 864  : 		c = b;
; 865  : 		b = d;
; 866  : 		d = e;
; 867  : 		k -= 32;
; 868  : 		beforeI7(ILT);
; 869  : start:
; 870  : 		beforeI7(I7); afterI7(KX); 

  00034	8b d1		 mov	 edx, ecx
  00036	33 ce		 xor	 ecx, esi
  00038	0b d7		 or	 edx, edi
  0003a	23 f7		 and	 esi, edi
  0003c	33 fd		 xor	 edi, ebp
  0003e	0b ee		 or	 ebp, esi
  00040	23 fa		 and	 edi, edx
  00042	f7 d1		 not	 ecx
  00044	8b d9		 mov	 ebx, ecx
  00046	33 f3		 xor	 esi, ebx
  00048	23 da		 and	 ebx, edx
  0004a	33 eb		 xor	 ebp, ebx
  0004c	33 de		 xor	 ebx, esi
  0004e	33 d5		 xor	 edx, ebp
  00050	8b cb		 mov	 ecx, ebx
  00052	0b ce		 or	 ecx, esi
  00054	8b 70 78	 mov	 esi, DWORD PTR [eax+120]
  00057	33 cf		 xor	 ecx, edi
  00059	33 fa		 xor	 edi, edx
  0005b	0b d1		 or	 edx, ecx
  0005d	33 48 74	 xor	 ecx, DWORD PTR [eax+116]
  00060	33 d3		 xor	 edx, ebx
  00062	33 f5		 xor	 esi, ebp
  00064	89 5c 24 1c	 mov	 DWORD PTR _c$[esp+12], ebx
  00068	8b da		 mov	 ebx, edx
  0006a	33 58 7c	 xor	 ebx, DWORD PTR [eax+124]

; 871  : 		afterI7(ILT); afterI7(I6); afterI6(KX); 

  0006d	c1 ce 16	 ror	 esi, 22			; 00000016H
  00070	8b d1		 mov	 edx, ecx
  00072	c1 e2 07	 shl	 edx, 7
  00075	33 f2		 xor	 esi, edx
  00077	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  0007a	33 d7		 xor	 edx, edi
  0007c	33 54 24 1c	 xor	 edx, DWORD PTR _c$[esp+12]
  00080	33 f3		 xor	 esi, ebx
  00082	c1 ca 05	 ror	 edx, 5
  00085	33 d3		 xor	 edx, ebx
  00087	33 d1		 xor	 edx, ecx
  00089	c1 cb 07	 ror	 ebx, 7
  0008c	8d 3c d5 00 00
	00 00		 lea	 edi, DWORD PTR [edx*8]
  00093	33 df		 xor	 ebx, edi
  00095	33 de		 xor	 ebx, esi
  00097	d1 c9		 ror	 ecx, 1
  00099	33 ca		 xor	 ecx, edx
  0009b	33 ce		 xor	 ecx, esi
  0009d	c1 ce 03	 ror	 esi, 3
  000a0	8b e9		 mov	 ebp, ecx
  000a2	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  000a5	33 d6		 xor	 edx, esi
  000a7	8b fb		 mov	 edi, ebx
  000a9	33 fe		 xor	 edi, esi
  000ab	33 dd		 xor	 ebx, ebp
  000ad	8b ca		 mov	 ecx, edx
  000af	23 ce		 and	 ecx, esi
  000b1	0b fa		 or	 edi, edx
  000b3	f7 d1		 not	 ecx
  000b5	33 cb		 xor	 ecx, ebx
  000b7	33 df		 xor	 ebx, edi
  000b9	33 fd		 xor	 edi, ebp
  000bb	89 6c 24 1c	 mov	 DWORD PTR _a$[esp+12], ebp
  000bf	33 d1		 xor	 edx, ecx
  000c1	8b eb		 mov	 ebp, ebx
  000c3	23 6c 24 1c	 and	 ebp, DWORD PTR _a$[esp+12]
  000c7	8b f3		 mov	 esi, ebx
  000c9	33 f2		 xor	 esi, edx
  000cb	33 ea		 xor	 ebp, edx
  000cd	0b f1		 or	 esi, ecx
  000cf	33 48 64	 xor	 ecx, DWORD PTR [eax+100]

; 872  : 		afterI6(ILT); afterI6(I5); afterI5(KX); 

  000d2	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  000d5	89 74 24 1c	 mov	 DWORD PTR _d$[esp+12], esi
  000d9	33 54 24 1c	 xor	 edx, DWORD PTR _d$[esp+12]
  000dd	8b 70 6c	 mov	 esi, DWORD PTR [eax+108]
  000e0	33 d7		 xor	 edx, edi
  000e2	33 f3		 xor	 esi, ebx
  000e4	33 f5		 xor	 esi, ebp
  000e6	c1 ca 16	 ror	 edx, 22			; 00000016H
  000e9	8b f9		 mov	 edi, ecx
  000eb	c1 e7 07	 shl	 edi, 7
  000ee	33 d7		 xor	 edx, edi
  000f0	33 d6		 xor	 edx, esi
  000f2	8b 78 60	 mov	 edi, DWORD PTR [eax+96]
  000f5	33 fd		 xor	 edi, ebp
  000f7	c1 cf 05	 ror	 edi, 5
  000fa	33 fe		 xor	 edi, esi
  000fc	33 f9		 xor	 edi, ecx
  000fe	c1 ce 07	 ror	 esi, 7
  00101	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
  00108	33 f3		 xor	 esi, ebx
  0010a	33 f2		 xor	 esi, edx
  0010c	d1 c9		 ror	 ecx, 1
  0010e	33 ca		 xor	 ecx, edx
  00110	33 cf		 xor	 ecx, edi
  00112	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00115	c1 ca 03	 ror	 edx, 3
  00118	8b de		 mov	 ebx, esi
  0011a	0b f7		 or	 esi, edi
  0011c	f7 d1		 not	 ecx
  0011e	8b e9		 mov	 ebp, ecx
  00120	33 d5		 xor	 edx, ebp
  00122	33 f2		 xor	 esi, edx
  00124	0b d5		 or	 edx, ebp
  00126	33 de		 xor	 ebx, esi
  00128	23 d7		 and	 edx, edi
  0012a	33 d3		 xor	 edx, ebx
  0012c	8b ca		 mov	 ecx, edx
  0012e	0b df		 or	 ebx, edi
  00130	33 dd		 xor	 ebx, ebp
  00132	8b d3		 mov	 edx, ebx
  00134	33 d1		 xor	 edx, ecx
  00136	89 6c 24 1c	 mov	 DWORD PTR _b$[esp+12], ebp
  0013a	8b e9		 mov	 ebp, ecx
  0013c	23 6c 24 1c	 and	 ebp, DWORD PTR _b$[esp+12]
  00140	33 48 5c	 xor	 ecx, DWORD PTR [eax+92]
  00143	33 ee		 xor	 ebp, esi
  00145	23 f2		 and	 esi, edx
  00147	33 d5		 xor	 edx, ebp
  00149	33 f2		 xor	 esi, edx
  0014b	33 f7		 xor	 esi, edi
  0014d	f7 d2		 not	 edx
  0014f	33 50 54	 xor	 edx, DWORD PTR [eax+84]
  00152	8b da		 mov	 ebx, edx
  00154	8b 50 58	 mov	 edx, DWORD PTR [eax+88]
  00157	33 d6		 xor	 edx, esi

; 873  : 		afterI5(ILT); afterI5(I4); afterI4(KX); 

  00159	c1 ca 16	 ror	 edx, 22			; 00000016H
  0015c	8b f3		 mov	 esi, ebx
  0015e	c1 e6 07	 shl	 esi, 7
  00161	33 d6		 xor	 edx, esi
  00163	8b 70 50	 mov	 esi, DWORD PTR [eax+80]
  00166	33 d1		 xor	 edx, ecx
  00168	33 f5		 xor	 esi, ebp
  0016a	c1 ce 05	 ror	 esi, 5
  0016d	33 f3		 xor	 esi, ebx
  0016f	33 f1		 xor	 esi, ecx
  00171	c1 c9 07	 ror	 ecx, 7
  00174	8d 3c f5 00 00
	00 00		 lea	 edi, DWORD PTR [esi*8]
  0017b	33 cf		 xor	 ecx, edi
  0017d	33 ca		 xor	 ecx, edx
  0017f	d1 cb		 ror	 ebx, 1
  00181	33 da		 xor	 ebx, edx
  00183	33 de		 xor	 ebx, esi
  00185	c1 ca 03	 ror	 edx, 3
  00188	8b f9		 mov	 edi, ecx
  0018a	8b ca		 mov	 ecx, edx
  0018c	23 d7		 and	 edx, edi
  0018e	33 d3		 xor	 edx, ebx
  00190	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  00193	0b df		 or	 ebx, edi
  00195	23 de		 and	 ebx, esi
  00197	8b eb		 mov	 ebp, ebx
  00199	8b da		 mov	 ebx, edx
  0019b	33 dd		 xor	 ebx, ebp
  0019d	33 cb		 xor	 ecx, ebx
  0019f	33 f9		 xor	 edi, ecx
  001a1	f7 d6		 not	 esi
  001a3	8b de		 mov	 ebx, esi
  001a5	8b f2		 mov	 esi, edx
  001a7	23 f5		 and	 esi, ebp
  001a9	33 f7		 xor	 esi, edi
  001ab	23 fb		 and	 edi, ebx
  001ad	33 fa		 xor	 edi, edx
  001af	33 de		 xor	 ebx, esi
  001b1	23 d3		 and	 edx, ebx
  001b3	33 d1		 xor	 edx, ecx
  001b5	33 48 4c	 xor	 ecx, DWORD PTR [eax+76]
  001b8	33 fb		 xor	 edi, ebx
  001ba	0b d7		 or	 edx, edi
  001bc	33 d6		 xor	 edx, esi
  001be	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  001c1	33 f7		 xor	 esi, edi
  001c3	33 f3		 xor	 esi, ebx
  001c5	8b ea		 mov	 ebp, edx
  001c7	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  001ca	33 d5		 xor	 edx, ebp

; 874  : 		afterI4(ILT); afterI4(I3); afterI3(KX); 

  001cc	c1 ca 16	 ror	 edx, 22			; 00000016H
  001cf	8b fe		 mov	 edi, esi
  001d1	c1 e7 07	 shl	 edi, 7
  001d4	33 d7		 xor	 edx, edi
  001d6	8b 78 40	 mov	 edi, DWORD PTR [eax+64]
  001d9	33 d1		 xor	 edx, ecx
  001db	33 fb		 xor	 edi, ebx
  001dd	c1 cf 05	 ror	 edi, 5
  001e0	33 fe		 xor	 edi, esi
  001e2	33 f9		 xor	 edi, ecx
  001e4	c1 c9 07	 ror	 ecx, 7
  001e7	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
  001ee	33 cb		 xor	 ecx, ebx
  001f0	33 ca		 xor	 ecx, edx
  001f2	d1 ce		 ror	 esi, 1
  001f4	33 f2		 xor	 esi, edx
  001f6	33 f7		 xor	 esi, edi
  001f8	c1 ca 03	 ror	 edx, 3
  001fb	8b e9		 mov	 ebp, ecx
  001fd	8b ca		 mov	 ecx, edx
  001ff	33 d6		 xor	 edx, esi
  00201	8b da		 mov	 ebx, edx
  00203	23 de		 and	 ebx, esi
  00205	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00208	33 df		 xor	 ebx, edi
  0020a	23 f9		 and	 edi, ecx
  0020c	33 cd		 xor	 ecx, ebp
  0020e	33 f9		 xor	 edi, ecx
  00210	89 6c 24 1c	 mov	 DWORD PTR _a$[esp+12], ebp
  00214	8b eb		 mov	 ebp, ebx
  00216	0b 6c 24 1c	 or	 ebp, DWORD PTR _a$[esp+12]
  0021a	33 ea		 xor	 ebp, edx
  0021c	33 d7		 xor	 edx, edi
  0021e	33 ca		 xor	 ecx, edx
  00220	23 d5		 and	 edx, ebp
  00222	0b fd		 or	 edi, ebp
  00224	33 fb		 xor	 edi, ebx
  00226	0b dd		 or	 ebx, ebp
  00228	33 da		 xor	 ebx, edx
  0022a	33 58 3c	 xor	 ebx, DWORD PTR [eax+60]
  0022d	33 d1		 xor	 edx, ecx
  0022f	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00232	8b f7		 mov	 esi, edi
  00234	33 d6		 xor	 edx, esi
  00236	33 70 34	 xor	 esi, DWORD PTR [eax+52]
  00239	33 ca		 xor	 ecx, edx

; 875  : 		afterI3(ILT); afterI3(I2); afterI2(KX); 

  0023b	c1 c9 16	 ror	 ecx, 22			; 00000016H
  0023e	8b d6		 mov	 edx, esi
  00240	c1 e2 07	 shl	 edx, 7
  00243	33 ca		 xor	 ecx, edx
  00245	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  00248	33 d5		 xor	 edx, ebp
  0024a	33 cb		 xor	 ecx, ebx
  0024c	c1 ca 05	 ror	 edx, 5
  0024f	33 d3		 xor	 edx, ebx
  00251	33 d6		 xor	 edx, esi
  00253	c1 cb 07	 ror	 ebx, 7
  00256	8d 3c d5 00 00
	00 00		 lea	 edi, DWORD PTR [edx*8]
  0025d	33 df		 xor	 ebx, edi
  0025f	33 d9		 xor	 ebx, ecx
  00261	d1 ce		 ror	 esi, 1
  00263	33 f1		 xor	 esi, ecx
  00265	33 f2		 xor	 esi, edx
  00267	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  0026a	c1 c9 03	 ror	 ecx, 3
  0026d	33 cb		 xor	 ecx, ebx
  0026f	33 da		 xor	 ebx, edx
  00271	8b f9		 mov	 edi, ecx
  00273	23 fb		 and	 edi, ebx
  00275	33 fe		 xor	 edi, esi
  00277	8b e9		 mov	 ebp, ecx
  00279	33 cf		 xor	 ecx, edi
  0027b	0b ee		 or	 ebp, esi
  0027d	33 eb		 xor	 ebp, ebx
  0027f	23 df		 and	 ebx, edi
  00281	23 da		 and	 ebx, edx
  00283	33 d9		 xor	 ebx, ecx
  00285	23 cd		 and	 ecx, ebp
  00287	0b ca		 or	 ecx, edx
  00289	f7 d7		 not	 edi
  0028b	33 cf		 xor	 ecx, edi
  0028d	89 4c 24 1c	 mov	 DWORD PTR _e$[esp+12], ecx
  00291	8b f3		 mov	 esi, ebx
  00293	8b df		 mov	 ebx, edi
  00295	33 da		 xor	 ebx, edx
  00297	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  0029a	33 54 24 1c	 xor	 edx, DWORD PTR _e$[esp+12]
  0029e	23 dd		 and	 ebx, ebp
  002a0	8b ce		 mov	 ecx, esi
  002a2	33 70 24	 xor	 esi, DWORD PTR [eax+36]
  002a5	33 cf		 xor	 ecx, edi
  002a7	33 cb		 xor	 ecx, ebx
  002a9	33 48 2c	 xor	 ecx, DWORD PTR [eax+44]

; 876  : 		afterI2(ILT); afterI2(I1); afterI1(KX); 

  002ac	8b fe		 mov	 edi, esi
  002ae	c1 e7 07	 shl	 edi, 7
  002b1	c1 ca 16	 ror	 edx, 22			; 00000016H
  002b4	33 d7		 xor	 edx, edi
  002b6	8b 78 20	 mov	 edi, DWORD PTR [eax+32]
  002b9	33 d1		 xor	 edx, ecx
  002bb	33 fd		 xor	 edi, ebp
  002bd	c1 cf 05	 ror	 edi, 5
  002c0	33 fe		 xor	 edi, esi
  002c2	33 f9		 xor	 edi, ecx
  002c4	c1 c9 07	 ror	 ecx, 7
  002c7	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
  002ce	33 cb		 xor	 ecx, ebx
  002d0	33 ca		 xor	 ecx, edx
  002d2	d1 ce		 ror	 esi, 1
  002d4	33 f2		 xor	 esi, edx
  002d6	33 f7		 xor	 esi, edi
  002d8	8b ee		 mov	 ebp, esi
  002da	33 f1		 xor	 esi, ecx
  002dc	8b de		 mov	 ebx, esi
  002de	23 d9		 and	 ebx, ecx
  002e0	8b ce		 mov	 ecx, esi
  002e2	c1 ca 03	 ror	 edx, 3
  002e5	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  002e8	0b cf		 or	 ecx, edi
  002ea	33 ea		 xor	 ebp, edx
  002ec	33 df		 xor	 ebx, edi

; 877  : 		afterI1(ILT); afterI1(I0); afterI0(KX);

  002ee	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  002f1	33 cd		 xor	 ecx, ebp
  002f3	33 f3		 xor	 esi, ebx
  002f5	33 d3		 xor	 edx, ebx
  002f7	0b ca		 or	 ecx, edx
  002f9	33 50 1c	 xor	 edx, DWORD PTR [eax+28]
  002fc	33 ce		 xor	 ecx, esi
  002fe	0b f3		 or	 esi, ebx
  00300	33 f1		 xor	 esi, ecx
  00302	f7 d5		 not	 ebp
  00304	33 ee		 xor	 ebp, esi
  00306	0b f1		 or	 esi, ecx
  00308	33 f1		 xor	 esi, ecx
  0030a	33 48 14	 xor	 ecx, DWORD PTR [eax+20]
  0030d	0b f5		 or	 esi, ebp
  0030f	33 fe		 xor	 edi, esi
  00311	33 fb		 xor	 edi, ebx
  00313	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
  00316	c1 cf 16	 ror	 edi, 22			; 00000016H
  00319	33 dd		 xor	 ebx, ebp
  0031b	8b f1		 mov	 esi, ecx
  0031d	c1 e6 07	 shl	 esi, 7
  00320	33 fe		 xor	 edi, esi
  00322	33 fa		 xor	 edi, edx
  00324	c1 cb 05	 ror	 ebx, 5
  00327	33 da		 xor	 ebx, edx
  00329	33 d9		 xor	 ebx, ecx
  0032b	c1 ca 07	 ror	 edx, 7
  0032e	8d 34 dd 00 00
	00 00		 lea	 esi, DWORD PTR [ebx*8]
  00335	33 d6		 xor	 edx, esi
  00337	33 d7		 xor	 edx, edi
  00339	d1 c9		 ror	 ecx, 1
  0033b	33 cf		 xor	 ecx, edi
  0033d	33 cb		 xor	 ecx, ebx
  0033f	c1 cb 0d	 ror	 ebx, 13			; 0000000dH
  00342	c1 cf 03	 ror	 edi, 3
  00345	8b f2		 mov	 esi, edx
  00347	f7 d7		 not	 edi
  00349	8b d7		 mov	 edx, edi
  0034b	8b f9		 mov	 edi, ecx
  0034d	f7 d7		 not	 edi
  0034f	0b cb		 or	 ecx, ebx
  00351	33 ca		 xor	 ecx, edx
  00353	33 df		 xor	 ebx, edi
  00355	8b ef		 mov	 ebp, edi
  00357	0b ea		 or	 ebp, edx
  00359	33 ce		 xor	 ecx, esi
  0035b	33 eb		 xor	 ebp, ebx
  0035d	23 de		 and	 ebx, esi
  0035f	33 fb		 xor	 edi, ebx
  00361	8b d1		 mov	 edx, ecx
  00363	33 f7		 xor	 esi, edi
  00365	0b d3		 or	 edx, ebx
  00367	33 d5		 xor	 edx, ebp
  00369	33 f1		 xor	 esi, ecx
  0036b	33 e9		 xor	 ebp, ecx
  0036d	33 48 08	 xor	 ecx, DWORD PTR [eax+8]
  00370	33 f2		 xor	 esi, edx
  00372	33 10		 xor	 edx, DWORD PTR [eax]
  00374	23 ee		 and	 ebp, esi
  00376	33 68 04	 xor	 ebp, DWORD PTR [eax+4]

; 878  : 	}
; 879  : 	while (--i != 0);

  00379	c7 44 24 14 03
	00 00 00	 mov	 DWORD PTR _i$[esp+12], 3
  00381	33 fd		 xor	 edi, ebp
  00383	33 70 0c	 xor	 esi, DWORD PTR [eax+12]
$start$77670:
  00386	8b df		 mov	 ebx, edi
  00388	c1 e3 07	 shl	 ebx, 7
  0038b	83 c0 80	 add	 eax, -128		; ffffff80H
  0038e	c1 c9 16	 ror	 ecx, 22			; 00000016H
  00391	33 cb		 xor	 ecx, ebx
  00393	33 ce		 xor	 ecx, esi
  00395	8b e9		 mov	 ebp, ecx
  00397	8b ca		 mov	 ecx, edx
  00399	c1 c9 05	 ror	 ecx, 5
  0039c	33 ce		 xor	 ecx, esi
  0039e	33 cf		 xor	 ecx, edi
  003a0	c1 ce 07	 ror	 esi, 7
  003a3	8d 14 cd 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*8]
  003aa	33 f2		 xor	 esi, edx
  003ac	33 f5		 xor	 esi, ebp
  003ae	d1 cf		 ror	 edi, 1
  003b0	33 fd		 xor	 edi, ebp
  003b2	33 f9		 xor	 edi, ecx
  003b4	c1 cd 03	 ror	 ebp, 3
  003b7	c1 c9 0d	 ror	 ecx, 13			; 0000000dH
  003ba	8b df		 mov	 ebx, edi
  003bc	8b f9		 mov	 edi, ecx
  003be	8b d5		 mov	 edx, ebp
  003c0	0b d6		 or	 edx, esi
  003c2	33 ef		 xor	 ebp, edi
  003c4	23 fe		 and	 edi, esi
  003c6	33 f3		 xor	 esi, ebx
  003c8	0b df		 or	 ebx, edi
  003ca	23 f2		 and	 esi, edx
  003cc	f7 d5		 not	 ebp
  003ce	33 fd		 xor	 edi, ebp
  003d0	23 ea		 and	 ebp, edx
  003d2	33 dd		 xor	 ebx, ebp
  003d4	33 d3		 xor	 edx, ebx
  003d6	33 ef		 xor	 ebp, edi
  003d8	8b cd		 mov	 ecx, ebp
  003da	0b cf		 or	 ecx, edi
  003dc	8b 78 78	 mov	 edi, DWORD PTR [eax+120]
  003df	33 ce		 xor	 ecx, esi
  003e1	33 f2		 xor	 esi, edx
  003e3	0b d1		 or	 edx, ecx
  003e5	33 48 74	 xor	 ecx, DWORD PTR [eax+116]
  003e8	33 d5		 xor	 edx, ebp
  003ea	89 5c 24 1c	 mov	 DWORD PTR _b$[esp+12], ebx
  003ee	33 7c 24 1c	 xor	 edi, DWORD PTR _b$[esp+12]
  003f2	8b da		 mov	 ebx, edx
  003f4	33 58 7c	 xor	 ebx, DWORD PTR [eax+124]
  003f7	c1 cf 16	 ror	 edi, 22			; 00000016H
  003fa	8b d1		 mov	 edx, ecx
  003fc	c1 e2 07	 shl	 edx, 7
  003ff	33 fa		 xor	 edi, edx
  00401	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00404	33 d6		 xor	 edx, esi
  00406	33 fb		 xor	 edi, ebx
  00408	33 d5		 xor	 edx, ebp
  0040a	c1 ca 05	 ror	 edx, 5
  0040d	33 d3		 xor	 edx, ebx
  0040f	33 d1		 xor	 edx, ecx
  00411	c1 cb 07	 ror	 ebx, 7
  00414	8d 34 d5 00 00
	00 00		 lea	 esi, DWORD PTR [edx*8]
  0041b	33 de		 xor	 ebx, esi
  0041d	33 df		 xor	 ebx, edi
  0041f	d1 c9		 ror	 ecx, 1
  00421	33 ca		 xor	 ecx, edx
  00423	33 cf		 xor	 ecx, edi
  00425	c1 cf 03	 ror	 edi, 3
  00428	8b ef		 mov	 ebp, edi
  0042a	8b f1		 mov	 esi, ecx
  0042c	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  0042f	33 d5		 xor	 edx, ebp
  00431	8b ca		 mov	 ecx, edx
  00433	8b fb		 mov	 edi, ebx
  00435	23 cd		 and	 ecx, ebp
  00437	33 de		 xor	 ebx, esi
  00439	33 fd		 xor	 edi, ebp
  0043b	f7 d1		 not	 ecx
  0043d	33 cb		 xor	 ecx, ebx
  0043f	0b fa		 or	 edi, edx
  00441	33 d1		 xor	 edx, ecx
  00443	33 df		 xor	 ebx, edi
  00445	33 fe		 xor	 edi, esi
  00447	8b eb		 mov	 ebp, ebx
  00449	23 ee		 and	 ebp, esi
  0044b	33 ea		 xor	 ebp, edx
  0044d	8b f3		 mov	 esi, ebx
  0044f	33 f2		 xor	 esi, edx
  00451	0b f1		 or	 esi, ecx
  00453	33 48 64	 xor	 ecx, DWORD PTR [eax+100]
  00456	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  00459	89 74 24 1c	 mov	 DWORD PTR _d$[esp+12], esi
  0045d	33 54 24 1c	 xor	 edx, DWORD PTR _d$[esp+12]
  00461	8b 70 6c	 mov	 esi, DWORD PTR [eax+108]
  00464	33 d7		 xor	 edx, edi
  00466	33 f3		 xor	 esi, ebx
  00468	33 f5		 xor	 esi, ebp
  0046a	c1 ca 16	 ror	 edx, 22			; 00000016H
  0046d	8b f9		 mov	 edi, ecx
  0046f	c1 e7 07	 shl	 edi, 7
  00472	33 d7		 xor	 edx, edi
  00474	33 d6		 xor	 edx, esi
  00476	8b 78 60	 mov	 edi, DWORD PTR [eax+96]
  00479	33 fd		 xor	 edi, ebp
  0047b	c1 cf 05	 ror	 edi, 5
  0047e	33 fe		 xor	 edi, esi
  00480	33 f9		 xor	 edi, ecx
  00482	c1 ce 07	 ror	 esi, 7
  00485	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
  0048c	33 f3		 xor	 esi, ebx
  0048e	33 f2		 xor	 esi, edx
  00490	d1 c9		 ror	 ecx, 1
  00492	33 ca		 xor	 ecx, edx
  00494	33 cf		 xor	 ecx, edi
  00496	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00499	c1 ca 03	 ror	 edx, 3
  0049c	8b de		 mov	 ebx, esi
  0049e	0b f7		 or	 esi, edi
  004a0	f7 d1		 not	 ecx
  004a2	8b e9		 mov	 ebp, ecx
  004a4	33 d5		 xor	 edx, ebp
  004a6	33 f2		 xor	 esi, edx
  004a8	0b d5		 or	 edx, ebp
  004aa	33 de		 xor	 ebx, esi
  004ac	23 d7		 and	 edx, edi
  004ae	33 d3		 xor	 edx, ebx
  004b0	8b ca		 mov	 ecx, edx
  004b2	0b df		 or	 ebx, edi
  004b4	33 dd		 xor	 ebx, ebp
  004b6	89 6c 24 1c	 mov	 DWORD PTR _b$[esp+12], ebp
  004ba	8b e9		 mov	 ebp, ecx
  004bc	23 6c 24 1c	 and	 ebp, DWORD PTR _b$[esp+12]
  004c0	8b d3		 mov	 edx, ebx
  004c2	33 d1		 xor	 edx, ecx
  004c4	33 48 5c	 xor	 ecx, DWORD PTR [eax+92]
  004c7	33 ee		 xor	 ebp, esi
  004c9	23 f2		 and	 esi, edx
  004cb	33 d5		 xor	 edx, ebp
  004cd	33 f2		 xor	 esi, edx
  004cf	33 f7		 xor	 esi, edi
  004d1	f7 d2		 not	 edx
  004d3	33 50 54	 xor	 edx, DWORD PTR [eax+84]
  004d6	8b da		 mov	 ebx, edx
  004d8	8b 50 58	 mov	 edx, DWORD PTR [eax+88]
  004db	33 d6		 xor	 edx, esi
  004dd	c1 ca 16	 ror	 edx, 22			; 00000016H
  004e0	8b f3		 mov	 esi, ebx
  004e2	c1 e6 07	 shl	 esi, 7
  004e5	33 d6		 xor	 edx, esi
  004e7	8b 70 50	 mov	 esi, DWORD PTR [eax+80]
  004ea	33 d1		 xor	 edx, ecx
  004ec	33 f5		 xor	 esi, ebp
  004ee	c1 ce 05	 ror	 esi, 5
  004f1	33 f3		 xor	 esi, ebx
  004f3	33 f1		 xor	 esi, ecx
  004f5	c1 c9 07	 ror	 ecx, 7
  004f8	8d 3c f5 00 00
	00 00		 lea	 edi, DWORD PTR [esi*8]
  004ff	33 cf		 xor	 ecx, edi
  00501	33 ca		 xor	 ecx, edx
  00503	d1 cb		 ror	 ebx, 1
  00505	33 da		 xor	 ebx, edx
  00507	33 de		 xor	 ebx, esi
  00509	8b f9		 mov	 edi, ecx
  0050b	c1 ca 03	 ror	 edx, 3
  0050e	8b ca		 mov	 ecx, edx
  00510	23 d7		 and	 edx, edi
  00512	33 d3		 xor	 edx, ebx
  00514	0b df		 or	 ebx, edi
  00516	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  00519	23 de		 and	 ebx, esi
  0051b	8b eb		 mov	 ebp, ebx
  0051d	8b da		 mov	 ebx, edx
  0051f	33 dd		 xor	 ebx, ebp
  00521	33 cb		 xor	 ecx, ebx
  00523	33 f9		 xor	 edi, ecx
  00525	f7 d6		 not	 esi
  00527	8b de		 mov	 ebx, esi
  00529	8b f2		 mov	 esi, edx
  0052b	23 f5		 and	 esi, ebp
  0052d	33 f7		 xor	 esi, edi
  0052f	23 fb		 and	 edi, ebx
  00531	33 fa		 xor	 edi, edx
  00533	33 de		 xor	 ebx, esi
  00535	23 d3		 and	 edx, ebx
  00537	33 d1		 xor	 edx, ecx
  00539	33 48 4c	 xor	 ecx, DWORD PTR [eax+76]
  0053c	33 fb		 xor	 edi, ebx
  0053e	0b d7		 or	 edx, edi
  00540	33 d6		 xor	 edx, esi
  00542	8b 70 44	 mov	 esi, DWORD PTR [eax+68]
  00545	33 f7		 xor	 esi, edi
  00547	33 f3		 xor	 esi, ebx
  00549	8b ea		 mov	 ebp, edx
  0054b	8b 50 48	 mov	 edx, DWORD PTR [eax+72]
  0054e	33 d5		 xor	 edx, ebp
  00550	c1 ca 16	 ror	 edx, 22			; 00000016H
  00553	8b fe		 mov	 edi, esi
  00555	c1 e7 07	 shl	 edi, 7
  00558	33 d7		 xor	 edx, edi
  0055a	8b 78 40	 mov	 edi, DWORD PTR [eax+64]
  0055d	33 d1		 xor	 edx, ecx
  0055f	33 fb		 xor	 edi, ebx
  00561	c1 cf 05	 ror	 edi, 5
  00564	33 fe		 xor	 edi, esi
  00566	33 f9		 xor	 edi, ecx
  00568	c1 c9 07	 ror	 ecx, 7
  0056b	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
  00572	33 cb		 xor	 ecx, ebx
  00574	33 ca		 xor	 ecx, edx
  00576	d1 ce		 ror	 esi, 1
  00578	33 f2		 xor	 esi, edx
  0057a	33 f7		 xor	 esi, edi
  0057c	c1 ca 03	 ror	 edx, 3
  0057f	8b e9		 mov	 ebp, ecx
  00581	8b ca		 mov	 ecx, edx
  00583	33 d6		 xor	 edx, esi
  00585	8b da		 mov	 ebx, edx
  00587	23 de		 and	 ebx, esi
  00589	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  0058c	33 df		 xor	 ebx, edi
  0058e	23 f9		 and	 edi, ecx
  00590	33 cd		 xor	 ecx, ebp
  00592	89 6c 24 1c	 mov	 DWORD PTR _a$[esp+12], ebp
  00596	8b eb		 mov	 ebp, ebx
  00598	0b 6c 24 1c	 or	 ebp, DWORD PTR _a$[esp+12]
  0059c	33 f9		 xor	 edi, ecx
  0059e	33 ea		 xor	 ebp, edx
  005a0	33 d7		 xor	 edx, edi
  005a2	33 ca		 xor	 ecx, edx
  005a4	23 d5		 and	 edx, ebp
  005a6	0b fd		 or	 edi, ebp
  005a8	33 fb		 xor	 edi, ebx
  005aa	0b dd		 or	 ebx, ebp
  005ac	33 da		 xor	 ebx, edx
  005ae	33 58 3c	 xor	 ebx, DWORD PTR [eax+60]
  005b1	33 d1		 xor	 edx, ecx
  005b3	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  005b6	8b f7		 mov	 esi, edi
  005b8	33 d6		 xor	 edx, esi
  005ba	33 70 34	 xor	 esi, DWORD PTR [eax+52]
  005bd	33 ca		 xor	 ecx, edx
  005bf	8b d6		 mov	 edx, esi
  005c1	c1 c9 16	 ror	 ecx, 22			; 00000016H
  005c4	c1 e2 07	 shl	 edx, 7
  005c7	33 ca		 xor	 ecx, edx
  005c9	33 cb		 xor	 ecx, ebx
  005cb	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  005ce	33 d5		 xor	 edx, ebp
  005d0	c1 ca 05	 ror	 edx, 5
  005d3	33 d3		 xor	 edx, ebx
  005d5	33 d6		 xor	 edx, esi
  005d7	c1 cb 07	 ror	 ebx, 7
  005da	8d 3c d5 00 00
	00 00		 lea	 edi, DWORD PTR [edx*8]
  005e1	33 df		 xor	 ebx, edi
  005e3	33 d9		 xor	 ebx, ecx
  005e5	d1 ce		 ror	 esi, 1
  005e7	33 f1		 xor	 esi, ecx
  005e9	33 f2		 xor	 esi, edx
  005eb	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  005ee	c1 c9 03	 ror	 ecx, 3
  005f1	33 cb		 xor	 ecx, ebx
  005f3	33 da		 xor	 ebx, edx
  005f5	8b f9		 mov	 edi, ecx
  005f7	23 fb		 and	 edi, ebx
  005f9	33 fe		 xor	 edi, esi
  005fb	8b e9		 mov	 ebp, ecx
  005fd	33 cf		 xor	 ecx, edi
  005ff	0b ee		 or	 ebp, esi
  00601	33 eb		 xor	 ebp, ebx
  00603	23 df		 and	 ebx, edi
  00605	23 da		 and	 ebx, edx
  00607	33 d9		 xor	 ebx, ecx
  00609	23 cd		 and	 ecx, ebp
  0060b	0b ca		 or	 ecx, edx
  0060d	f7 d7		 not	 edi
  0060f	33 cf		 xor	 ecx, edi
  00611	89 4c 24 1c	 mov	 DWORD PTR _e$[esp+12], ecx
  00615	8b f3		 mov	 esi, ebx
  00617	8b df		 mov	 ebx, edi
  00619	33 da		 xor	 ebx, edx
  0061b	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  0061e	33 54 24 1c	 xor	 edx, DWORD PTR _e$[esp+12]
  00622	23 dd		 and	 ebx, ebp
  00624	8b ce		 mov	 ecx, esi
  00626	33 70 24	 xor	 esi, DWORD PTR [eax+36]
  00629	33 cf		 xor	 ecx, edi
  0062b	33 cb		 xor	 ecx, ebx
  0062d	33 48 2c	 xor	 ecx, DWORD PTR [eax+44]
  00630	8b fe		 mov	 edi, esi
  00632	c1 e7 07	 shl	 edi, 7
  00635	c1 ca 16	 ror	 edx, 22			; 00000016H
  00638	33 d7		 xor	 edx, edi
  0063a	8b 78 20	 mov	 edi, DWORD PTR [eax+32]
  0063d	33 d1		 xor	 edx, ecx
  0063f	33 fd		 xor	 edi, ebp
  00641	c1 cf 05	 ror	 edi, 5
  00644	33 fe		 xor	 edi, esi
  00646	33 f9		 xor	 edi, ecx
  00648	c1 c9 07	 ror	 ecx, 7
  0064b	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
  00652	33 cb		 xor	 ecx, ebx
  00654	33 ca		 xor	 ecx, edx
  00656	d1 ce		 ror	 esi, 1
  00658	33 f2		 xor	 esi, edx
  0065a	33 f7		 xor	 esi, edi
  0065c	8b ee		 mov	 ebp, esi
  0065e	33 f1		 xor	 esi, ecx
  00660	8b de		 mov	 ebx, esi
  00662	23 d9		 and	 ebx, ecx
  00664	8b ce		 mov	 ecx, esi
  00666	c1 ca 03	 ror	 edx, 3
  00669	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  0066c	33 ea		 xor	 ebp, edx
  0066e	33 df		 xor	 ebx, edi
  00670	0b cf		 or	 ecx, edi
  00672	33 cd		 xor	 ecx, ebp
  00674	33 f3		 xor	 esi, ebx
  00676	33 d3		 xor	 edx, ebx
  00678	0b ca		 or	 ecx, edx
  0067a	33 ce		 xor	 ecx, esi
  0067c	0b f3		 or	 esi, ebx
  0067e	33 f1		 xor	 esi, ecx
  00680	f7 d5		 not	 ebp
  00682	33 ee		 xor	 ebp, esi
  00684	0b f1		 or	 esi, ecx
  00686	33 f1		 xor	 esi, ecx
  00688	33 48 14	 xor	 ecx, DWORD PTR [eax+20]
  0068b	33 50 1c	 xor	 edx, DWORD PTR [eax+28]
  0068e	0b f5		 or	 esi, ebp
  00690	8b fe		 mov	 edi, esi
  00692	8b 70 18	 mov	 esi, DWORD PTR [eax+24]
  00695	33 f7		 xor	 esi, edi
  00697	33 f3		 xor	 esi, ebx
  00699	c1 ce 16	 ror	 esi, 22			; 00000016H
  0069c	8b f9		 mov	 edi, ecx
  0069e	c1 e7 07	 shl	 edi, 7
  006a1	33 f7		 xor	 esi, edi
  006a3	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
  006a6	33 f2		 xor	 esi, edx
  006a8	33 fd		 xor	 edi, ebp
  006aa	c1 cf 05	 ror	 edi, 5
  006ad	33 fa		 xor	 edi, edx
  006af	33 f9		 xor	 edi, ecx
  006b1	c1 ca 07	 ror	 edx, 7
  006b4	8d 1c fd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*8]
  006bb	33 d3		 xor	 edx, ebx
  006bd	33 d6		 xor	 edx, esi
  006bf	d1 c9		 ror	 ecx, 1
  006c1	33 ce		 xor	 ecx, esi
  006c3	33 cf		 xor	 ecx, edi
  006c5	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  006c8	8b ea		 mov	 ebp, edx
  006ca	8b d7		 mov	 edx, edi
  006cc	c1 ce 03	 ror	 esi, 3
  006cf	8b f9		 mov	 edi, ecx
  006d1	0b ca		 or	 ecx, edx
  006d3	f7 d6		 not	 esi
  006d5	33 ce		 xor	 ecx, esi
  006d7	f7 d7		 not	 edi
  006d9	33 d7		 xor	 edx, edi
  006db	33 cd		 xor	 ecx, ebp
  006dd	8b df		 mov	 ebx, edi
  006df	0b de		 or	 ebx, esi
  006e1	33 da		 xor	 ebx, edx
  006e3	23 d5		 and	 edx, ebp
  006e5	33 fa		 xor	 edi, edx
  006e7	8b f1		 mov	 esi, ecx
  006e9	0b f2		 or	 esi, edx
  006eb	33 f3		 xor	 esi, ebx
  006ed	33 ef		 xor	 ebp, edi
  006ef	8b d6		 mov	 edx, esi
  006f1	33 e9		 xor	 ebp, ecx
  006f3	33 ea		 xor	 ebp, edx
  006f5	33 10		 xor	 edx, DWORD PTR [eax]
  006f7	33 d9		 xor	 ebx, ecx
  006f9	33 48 08	 xor	 ecx, DWORD PTR [eax+8]
  006fc	8b f5		 mov	 esi, ebp
  006fe	23 de		 and	 ebx, esi
  00700	33 58 04	 xor	 ebx, DWORD PTR [eax+4]
  00703	33 70 0c	 xor	 esi, DWORD PTR [eax+12]
  00706	33 fb		 xor	 edi, ebx
  00708	83 6c 24 14 01	 sub	 DWORD PTR _i$[esp+12], 1
  0070d	0f 85 73 fc ff
	ff		 jne	 $start$77670

; 880  : 	
; 881  :     out[0] = LE32(a);

  00713	8b 44 24 18	 mov	 eax, DWORD PTR _outBlock$[esp+12]

; 882  : 	out[1] = LE32(d);

  00717	89 78 04	 mov	 DWORD PTR [eax+4], edi
  0071a	5f		 pop	 edi

; 883  : 	out[2] = LE32(b);
; 884  : 	out[3] = LE32(e);

  0071b	89 70 0c	 mov	 DWORD PTR [eax+12], esi
  0071e	5e		 pop	 esi
  0071f	5d		 pop	 ebp
  00720	89 10		 mov	 DWORD PTR [eax], edx
  00722	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00725	5b		 pop	 ebx

; 885  : }

  00726	c3		 ret	 0
_serpent_decrypt ENDP
_TEXT	ENDS
END
