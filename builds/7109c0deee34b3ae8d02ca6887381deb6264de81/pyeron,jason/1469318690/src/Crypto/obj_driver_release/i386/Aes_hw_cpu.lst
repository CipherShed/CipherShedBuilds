     1                                  ;
     2                                  ; Copyright (c) 2010 TrueCrypt Developers Association. All rights reserved.
     3                                  ;
     4                                  ; Governed by the TrueCrypt License 3.0 the full text of which is contained in
     5                                  ; the file License.txt included in TrueCrypt binary and source code distribution
     6                                  ; packages.
     7                                  ;
     8                                  
     9                                  
    10                                  %ifidn __BITS__, 16
    11                                  	%define R e
    12                                  %elifidn __BITS__, 32
    13                                  	%define R e
    14                                  %elifidn __BITS__, 64
    15                                  	%define R r
    16                                  %endif
    17                                  
    18                                  
    19                                  %macro export_function 1-2 0
    20                                  
    21                                  	%ifdef MS_STDCALL
    22                                  		global %1@%2
    23                                  		export _%1@%2
    24                                  	%1@%2:
    25                                  	%elifidn __BITS__, 16
    26                                  		global _%1
    27                                  	_%1:
    28                                  	%else
    29                                  		global %1
    30                                  	%1:
    31                                  	%endif
    32                                  
    33                                  %endmacro
    34                                  
    35                                  
    36                                  %macro aes_function_entry 1
    37                                  
    38                                  	; void (const byte *ks, byte *data);
    39                                  
    40                                  	export_function %1, 8
    41                                  
    42                                  	%ifidn __BITS__, 32
    43                                  		mov ecx, [esp + 4 + 4 * 0]
    44                                  		mov edx, [esp + 4 + 4 * 1]
    45                                  	%elifidn __BITS__, 64
    46                                  		%ifnidn __OUTPUT_FORMAT__, win64
    47                                  			mov rcx, rdi
    48                                  			mov rdx, rsi
    49                                  		%endif
    50                                  	%endif
    51                                  
    52                                  	; ecx/rcx = ks
    53                                  	; edx/rdx = data
    54                                  
    55                                  %endmacro
    56                                  
    57                                  
    58                                  %macro aes_function_exit 0
    59                                  
    60                                  	; void (const byte *, byte *);
    61                                  
    62                                  	%ifdef MS_STDCALL
    63                                  		ret 8
    64                                  	%else
    65                                  		ret
    66                                  	%endif
    67                                  
    68                                  %endmacro
    69                                  
    70                                  
    71                                  %macro push_xmm 2
    72                                  	sub rsp, 16 * (%2 - %1 + 1)
    73                                  
    74                                  	%assign stackoffset 0
    75                                  	%assign regnumber %1
    76                                  
    77                                  	%rep (%2 - %1 + 1)
    78                                  		movdqu [rsp + 16 * stackoffset], xmm%[regnumber]
    79                                  
    80                                  		%assign stackoffset stackoffset+1
    81                                  		%assign regnumber regnumber+1
    82                                  	%endrep
    83                                  %endmacro
    84                                  
    85                                  
    86                                  %macro pop_xmm 2
    87                                  	%assign stackoffset 0
    88                                  	%assign regnumber %1
    89                                  
    90                                  	%rep (%2 - %1 + 1)
    91                                  		movdqu xmm%[regnumber], [rsp + 16 * stackoffset]
    92                                  
    93                                  		%assign stackoffset stackoffset+1
    94                                  		%assign regnumber regnumber+1
    95                                  	%endrep
    96                                  
    97                                  	add rsp, 16 * (%2 - %1 + 1)
    98                                  %endmacro
    99                                  
   100                                  
   101                                  %macro aes_hw_cpu 2
   102                                  	%define OPERATION %1
   103                                  	%define BLOCK_COUNT %2
   104                                  
   105                                  	; Load data blocks
   106                                  	%assign block 1
   107                                  	%rep BLOCK_COUNT
   108                                  		movdqu xmm%[block], [%[R]dx + 16 * (block - 1)]
   109                                  		%assign block block+1
   110                                  	%endrep
   111                                  
   112                                  	; Encrypt/decrypt data blocks
   113                                  	%assign round 0
   114                                  	%rep 15
   115                                  		movdqu xmm0, [%[R]cx + 16 * round]
   116                                  
   117                                  		%assign block 1
   118                                  		%rep BLOCK_COUNT
   119                                  
   120                                  			%if round = 0
   121                                  				pxor xmm%[block], xmm0
   122                                  			%else
   123                                  				%if round < 14
   124                                  					aes%[OPERATION] xmm%[block], xmm0
   125                                  				%else
   126                                  					aes%[OPERATION]last xmm%[block], xmm0
   127                                  				%endif
   128                                  			%endif
   129                                  
   130                                  			%assign block block+1
   131                                  		%endrep
   132                                  
   133                                  		%assign round round+1
   134                                  	%endrep
   135                                  
   136                                  	; Store data blocks
   137                                  	%assign block 1
   138                                  	%rep BLOCK_COUNT
   139                                  		movdqu [%[R]dx + 16 * (block - 1)], xmm%[block]
   140                                  		%assign block block+1
   141                                  	%endrep
   142                                  
   143                                  	%undef OPERATION
   144                                  	%undef BLOCK_COUNT
   145                                  %endmacro
   146                                  
   147                                  
   148                                  %macro aes_hw_cpu_32_blocks 1
   149                                  	%define OPERATION_32_BLOCKS %1
   150                                  
   151                                  	%ifidn __BITS__, 64
   152                                  		%define MAX_REG_BLOCK_COUNT 15
   153                                  	%else
   154                                  		%define MAX_REG_BLOCK_COUNT 7
   155                                  	%endif
   156                                  
   157                                  	%ifidn __OUTPUT_FORMAT__, win64
   158                                  		%if MAX_REG_BLOCK_COUNT > 5
   159                                  			push_xmm 6, MAX_REG_BLOCK_COUNT
   160                                  		%endif
   161                                  	%endif
   162                                  
   163                                  		mov eax, 32 / MAX_REG_BLOCK_COUNT
   164                                  	.1:
   165                                  		aes_hw_cpu %[OPERATION_32_BLOCKS], MAX_REG_BLOCK_COUNT
   166                                  
   167                                  		add %[R]dx, 16 * MAX_REG_BLOCK_COUNT
   168                                  		dec eax
   169                                  		jnz .1
   170                                  
   171                                  	%if (32 % MAX_REG_BLOCK_COUNT) != 0
   172                                  		aes_hw_cpu %[OPERATION_32_BLOCKS], (32 % MAX_REG_BLOCK_COUNT)
   173                                  	%endif
   174                                  
   175                                  	%ifidn __OUTPUT_FORMAT__, win64
   176                                  		%if MAX_REG_BLOCK_COUNT > 5
   177                                  			pop_xmm 6, MAX_REG_BLOCK_COUNT
   178                                  		%endif
   179                                  	%endif
   180                                  
   181                                  	%undef OPERATION_32_BLOCKS
   182                                  	%undef MAX_REG_BLOCK_COUNT
   183                                  %endmacro
   184                                  
   185                                  
   186                                  %ifidn __BITS__, 16
   187                                  
   188                                  	USE16
   189                                  	SEGMENT _TEXT PUBLIC CLASS=CODE USE16
   190                                  	SEGMENT _DATA PUBLIC CLASS=DATA USE16
   191                                  	GROUP DGROUP _TEXT _DATA
   192                                  	SECTION _TEXT
   193                                  
   194                                  %else
   195                                  
   196                                  	SECTION .text
   197                                  
   198                                  %endif
   199                                  
   200                                  
   201                                  ; void aes_hw_cpu_enable_sse ();
   202                                  
   203                                  	export_function aes_hw_cpu_enable_sse
   204                              <1> 
   205                              <1>  %ifdef MS_STDCALL
   206                              <1>  global %1@%2
   207                              <1>  export _%1@%2
   208                              <1>  %1@%2:
   209                              <1>  %elifidn __BITS__, 16
   210                              <1>  global _%1
   211                              <1>  _%1:
   212                              <1>  %else
   213                              <1>  global %1
   214                              <1>  %1:
   215                              <1>  %endif
   216                              <1> 
   217 00000000 0F20E0                  		mov %[R]ax, cr4
   218 00000003 660D0002                		or ax, 1 << 9
   219 00000007 0F22E0                  		mov cr4, %[R]ax
   220 0000000A C3                      	ret
   221                                  
   222                                  
   223                                  %ifidn __BITS__, 16
   224                                  
   225                                  
   226                                  ; byte is_aes_hw_cpu_supported ();
   227                                  
   228                                  	export_function is_aes_hw_cpu_supported
   229                                  		mov eax, 1
   230                                  		cpuid
   231                                  		mov eax, ecx
   232                                  		shr eax, 25
   233                                  		and al, 1
   234                                  	ret
   235                                  
   236                                  
   237                                  ; void aes_hw_cpu_decrypt (const byte *ks, byte *data);
   238                                  
   239                                  	export_function aes_hw_cpu_decrypt
   240                                  		mov ax, -16
   241                                  		jmp aes_hw_cpu_encrypt_decrypt
   242                                  
   243                                  ; void aes_hw_cpu_encrypt (const byte *ks, byte *data);
   244                                  
   245                                  	export_function aes_hw_cpu_encrypt
   246                                  		mov ax, 16
   247                                  
   248                                  	aes_hw_cpu_encrypt_decrypt:
   249                                  		push bp
   250                                  		mov bp, sp
   251                                  		push di
   252                                  		push si
   253                                  
   254                                  		mov si, [bp + 4]			; ks
   255                                  		mov di, [bp + 4 + 2]		; data
   256                                  
   257                                  		movdqu xmm0, [si]
   258                                  		movdqu xmm1, [di]
   259                                  
   260                                  		pxor xmm1, xmm0
   261                                  
   262                                  		mov cx, 13
   263                                  
   264                                  	.round1_13:
   265                                  		add si, ax
   266                                  		movdqu xmm0, [si]
   267                                  
   268                                  		cmp ax, 0
   269                                  		jl .decrypt
   270                                  		
   271                                  		aesenc xmm1, xmm0
   272                                  		jmp .2
   273                                  	.decrypt:
   274                                  		aesdec xmm1, xmm0
   275                                  	.2:
   276                                  		loop .round1_13
   277                                  
   278                                  		add si, ax
   279                                  		movdqu xmm0, [si]
   280                                  		
   281                                  		cmp ax, 0
   282                                  		jl .decrypt_last
   283                                  
   284                                  		aesenclast xmm1, xmm0
   285                                  		jmp .3
   286                                  	.decrypt_last:
   287                                  		aesdeclast xmm1, xmm0
   288                                  	.3:
   289                                  		movdqu [di], xmm1
   290                                  
   291                                  		pop si
   292                                  		pop di
   293                                  		pop bp
   294                                  	ret
   295                                  
   296                                  
   297                                  %else	; __BITS__ != 16
   298                                  
   299                                  
   300                                  ; byte is_aes_hw_cpu_supported ();
   301                                  
   302                                  	export_function is_aes_hw_cpu_supported
   303                              <1> 
   304                              <1>  %ifdef MS_STDCALL
   305                              <1>  global %1@%2
   306                              <1>  export _%1@%2
   307                              <1>  %1@%2:
   308                              <1>  %elifidn __BITS__, 16
   309                              <1>  global _%1
   310                              <1>  _%1:
   311                              <1>  %else
   312                              <1>  global %1
   313                              <1>  %1:
   314                              <1>  %endif
   315                              <1> 
   316 0000000B 53                      		push %[R]bx
   317                                  
   318 0000000C B801000000              		mov eax, 1
   319 00000011 0FA2                    		cpuid
   320 00000013 89C8                    		mov eax, ecx
   321 00000015 C1E819                  		shr eax, 25
   322 00000018 83E001                  		and eax, 1
   323                                  
   324 0000001B 5B                      		pop %[R]bx
   325 0000001C C3                      	ret
   326                                  
   327                                  
   328                                  ; void aes_hw_cpu_decrypt (const byte *ks, byte *data);
   329                                  
   330                                  	aes_function_entry aes_hw_cpu_decrypt
   331                              <1> 
   332                              <1> 
   333                              <1> 
   334                              <1>  export_function %1, 8
   335                              <2> 
   336                              <2>  %ifdef MS_STDCALL
   337                              <2>  global %1@%2
   338                              <2>  export _%1@%2
   339                              <2>  %1@%2:
   340                              <2>  %elifidn __BITS__, 16
   341                              <2>  global _%1
   342                              <2>  _%1:
   343                              <2>  %else
   344                              <2>  global %1
   345                              <2>  %1:
   346                              <2>  %endif
   347                              <2> 
   348                              <1> 
   349                              <1>  %ifidn __BITS__, 32
   350 0000001D 8B4C2404            <1>  mov ecx, [esp + 4 + 4 * 0]
   351 00000021 8B542408            <1>  mov edx, [esp + 4 + 4 * 1]
   352                              <1>  %elifidn __BITS__, 64
   353                              <1>  %ifnidn __OUTPUT_FORMAT__, win64
   354                              <1>  mov rcx, rdi
   355                              <1>  mov rdx, rsi
   356                              <1>  %endif
   357                              <1>  %endif
   358                              <1> 
   359                              <1> 
   360                              <1> 
   361                              <1> 
   362                                  		aes_hw_cpu dec, 1
   363                              <1>  %define OPERATION %1
   364                              <1>  %define BLOCK_COUNT %2
   365                              <1> 
   366                              <1> 
   367                              <1>  %assign block 1
   368                              <1>  %rep BLOCK_COUNT
   369                              <1>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   370                              <1>  %assign block block+1
   371                              <1>  %endrep
   372 00000025 F30F6F0A            <2>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   373                              <2>  %assign block block+1
   374                              <1> 
   375                              <1> 
   376                              <1>  %assign round 0
   377                              <1>  %rep 15
   378                              <1>  movdqu xmm0, [Rcx + 16 * round]
   379                              <1> 
   380                              <1>  %assign block 1
   381                              <1>  %rep BLOCK_COUNT
   382                              <1> 
   383                              <1>  %if round = 0
   384                              <1>  pxor xmmblock, xmm0
   385                              <1>  %else
   386                              <1>  %if round < 14
   387                              <1>  aesOPERATION xmmblock, xmm0
   388                              <1>  %else
   389                              <1>  aesOPERATIONlast xmmblock, xmm0
   390                              <1>  %endif
   391                              <1>  %endif
   392                              <1> 
   393                              <1>  %assign block block+1
   394                              <1>  %endrep
   395                              <1> 
   396                              <1>  %assign round round+1
   397                              <1>  %endrep
   398 00000029 F30F6F01            <2>  movdqu xmm0, [Rcx + 16 * round]
   399                              <2> 
   400                              <2>  %assign block 1
   401                              <2>  %rep BLOCK_COUNT
   402                              <2> 
   403                              <2>  %if round = 0
   404                              <2>  pxor xmmblock, xmm0
   405                              <2>  %else
   406                              <2>  %if round < 14
   407                              <2>  aesOPERATION xmmblock, xmm0
   408                              <2>  %else
   409                              <2>  aesOPERATIONlast xmmblock, xmm0
   410                              <2>  %endif
   411                              <2>  %endif
   412                              <2> 
   413                              <2>  %assign block block+1
   414                              <2>  %endrep
   415                              <3> 
   416                              <3>  %if round = 0
   417 0000002D 660FEFC8            <3>  pxor xmmblock, xmm0
   418                              <3>  %else
   419                              <3>  %if round < 14
   420                              <3>  aesOPERATION xmmblock, xmm0
   421                              <3>  %else
   422                              <3>  aesOPERATIONlast xmmblock, xmm0
   423                              <3>  %endif
   424                              <3>  %endif
   425                              <3> 
   426                              <3>  %assign block block+1
   427                              <2> 
   428                              <2>  %assign round round+1
   429 00000031 F30F6F4110          <2>  movdqu xmm0, [Rcx + 16 * round]
   430                              <2> 
   431                              <2>  %assign block 1
   432                              <2>  %rep BLOCK_COUNT
   433                              <2> 
   434                              <2>  %if round = 0
   435                              <2>  pxor xmmblock, xmm0
   436                              <2>  %else
   437                              <2>  %if round < 14
   438                              <2>  aesOPERATION xmmblock, xmm0
   439                              <2>  %else
   440                              <2>  aesOPERATIONlast xmmblock, xmm0
   441                              <2>  %endif
   442                              <2>  %endif
   443                              <2> 
   444                              <2>  %assign block block+1
   445                              <2>  %endrep
   446                              <3> 
   447                              <3>  %if round = 0
   448                              <3>  pxor xmmblock, xmm0
   449                              <3>  %else
   450                              <3>  %if round < 14
   451 00000036 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   452                              <3>  %else
   453                              <3>  aesOPERATIONlast xmmblock, xmm0
   454                              <3>  %endif
   455                              <3>  %endif
   456                              <3> 
   457                              <3>  %assign block block+1
   458                              <2> 
   459                              <2>  %assign round round+1
   460 0000003B F30F6F4120          <2>  movdqu xmm0, [Rcx + 16 * round]
   461                              <2> 
   462                              <2>  %assign block 1
   463                              <2>  %rep BLOCK_COUNT
   464                              <2> 
   465                              <2>  %if round = 0
   466                              <2>  pxor xmmblock, xmm0
   467                              <2>  %else
   468                              <2>  %if round < 14
   469                              <2>  aesOPERATION xmmblock, xmm0
   470                              <2>  %else
   471                              <2>  aesOPERATIONlast xmmblock, xmm0
   472                              <2>  %endif
   473                              <2>  %endif
   474                              <2> 
   475                              <2>  %assign block block+1
   476                              <2>  %endrep
   477                              <3> 
   478                              <3>  %if round = 0
   479                              <3>  pxor xmmblock, xmm0
   480                              <3>  %else
   481                              <3>  %if round < 14
   482 00000040 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   483                              <3>  %else
   484                              <3>  aesOPERATIONlast xmmblock, xmm0
   485                              <3>  %endif
   486                              <3>  %endif
   487                              <3> 
   488                              <3>  %assign block block+1
   489                              <2> 
   490                              <2>  %assign round round+1
   491 00000045 F30F6F4130          <2>  movdqu xmm0, [Rcx + 16 * round]
   492                              <2> 
   493                              <2>  %assign block 1
   494                              <2>  %rep BLOCK_COUNT
   495                              <2> 
   496                              <2>  %if round = 0
   497                              <2>  pxor xmmblock, xmm0
   498                              <2>  %else
   499                              <2>  %if round < 14
   500                              <2>  aesOPERATION xmmblock, xmm0
   501                              <2>  %else
   502                              <2>  aesOPERATIONlast xmmblock, xmm0
   503                              <2>  %endif
   504                              <2>  %endif
   505                              <2> 
   506                              <2>  %assign block block+1
   507                              <2>  %endrep
   508                              <3> 
   509                              <3>  %if round = 0
   510                              <3>  pxor xmmblock, xmm0
   511                              <3>  %else
   512                              <3>  %if round < 14
   513 0000004A 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   514                              <3>  %else
   515                              <3>  aesOPERATIONlast xmmblock, xmm0
   516                              <3>  %endif
   517                              <3>  %endif
   518                              <3> 
   519                              <3>  %assign block block+1
   520                              <2> 
   521                              <2>  %assign round round+1
   522 0000004F F30F6F4140          <2>  movdqu xmm0, [Rcx + 16 * round]
   523                              <2> 
   524                              <2>  %assign block 1
   525                              <2>  %rep BLOCK_COUNT
   526                              <2> 
   527                              <2>  %if round = 0
   528                              <2>  pxor xmmblock, xmm0
   529                              <2>  %else
   530                              <2>  %if round < 14
   531                              <2>  aesOPERATION xmmblock, xmm0
   532                              <2>  %else
   533                              <2>  aesOPERATIONlast xmmblock, xmm0
   534                              <2>  %endif
   535                              <2>  %endif
   536                              <2> 
   537                              <2>  %assign block block+1
   538                              <2>  %endrep
   539                              <3> 
   540                              <3>  %if round = 0
   541                              <3>  pxor xmmblock, xmm0
   542                              <3>  %else
   543                              <3>  %if round < 14
   544 00000054 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   545                              <3>  %else
   546                              <3>  aesOPERATIONlast xmmblock, xmm0
   547                              <3>  %endif
   548                              <3>  %endif
   549                              <3> 
   550                              <3>  %assign block block+1
   551                              <2> 
   552                              <2>  %assign round round+1
   553 00000059 F30F6F4150          <2>  movdqu xmm0, [Rcx + 16 * round]
   554                              <2> 
   555                              <2>  %assign block 1
   556                              <2>  %rep BLOCK_COUNT
   557                              <2> 
   558                              <2>  %if round = 0
   559                              <2>  pxor xmmblock, xmm0
   560                              <2>  %else
   561                              <2>  %if round < 14
   562                              <2>  aesOPERATION xmmblock, xmm0
   563                              <2>  %else
   564                              <2>  aesOPERATIONlast xmmblock, xmm0
   565                              <2>  %endif
   566                              <2>  %endif
   567                              <2> 
   568                              <2>  %assign block block+1
   569                              <2>  %endrep
   570                              <3> 
   571                              <3>  %if round = 0
   572                              <3>  pxor xmmblock, xmm0
   573                              <3>  %else
   574                              <3>  %if round < 14
   575 0000005E 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   576                              <3>  %else
   577                              <3>  aesOPERATIONlast xmmblock, xmm0
   578                              <3>  %endif
   579                              <3>  %endif
   580                              <3> 
   581                              <3>  %assign block block+1
   582                              <2> 
   583                              <2>  %assign round round+1
   584 00000063 F30F6F4160          <2>  movdqu xmm0, [Rcx + 16 * round]
   585                              <2> 
   586                              <2>  %assign block 1
   587                              <2>  %rep BLOCK_COUNT
   588                              <2> 
   589                              <2>  %if round = 0
   590                              <2>  pxor xmmblock, xmm0
   591                              <2>  %else
   592                              <2>  %if round < 14
   593                              <2>  aesOPERATION xmmblock, xmm0
   594                              <2>  %else
   595                              <2>  aesOPERATIONlast xmmblock, xmm0
   596                              <2>  %endif
   597                              <2>  %endif
   598                              <2> 
   599                              <2>  %assign block block+1
   600                              <2>  %endrep
   601                              <3> 
   602                              <3>  %if round = 0
   603                              <3>  pxor xmmblock, xmm0
   604                              <3>  %else
   605                              <3>  %if round < 14
   606 00000068 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   607                              <3>  %else
   608                              <3>  aesOPERATIONlast xmmblock, xmm0
   609                              <3>  %endif
   610                              <3>  %endif
   611                              <3> 
   612                              <3>  %assign block block+1
   613                              <2> 
   614                              <2>  %assign round round+1
   615 0000006D F30F6F4170          <2>  movdqu xmm0, [Rcx + 16 * round]
   616                              <2> 
   617                              <2>  %assign block 1
   618                              <2>  %rep BLOCK_COUNT
   619                              <2> 
   620                              <2>  %if round = 0
   621                              <2>  pxor xmmblock, xmm0
   622                              <2>  %else
   623                              <2>  %if round < 14
   624                              <2>  aesOPERATION xmmblock, xmm0
   625                              <2>  %else
   626                              <2>  aesOPERATIONlast xmmblock, xmm0
   627                              <2>  %endif
   628                              <2>  %endif
   629                              <2> 
   630                              <2>  %assign block block+1
   631                              <2>  %endrep
   632                              <3> 
   633                              <3>  %if round = 0
   634                              <3>  pxor xmmblock, xmm0
   635                              <3>  %else
   636                              <3>  %if round < 14
   637 00000072 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   638                              <3>  %else
   639                              <3>  aesOPERATIONlast xmmblock, xmm0
   640                              <3>  %endif
   641                              <3>  %endif
   642                              <3> 
   643                              <3>  %assign block block+1
   644                              <2> 
   645                              <2>  %assign round round+1
   646 00000077 F30F6F8180000000    <2>  movdqu xmm0, [Rcx + 16 * round]
   647                              <2> 
   648                              <2>  %assign block 1
   649                              <2>  %rep BLOCK_COUNT
   650                              <2> 
   651                              <2>  %if round = 0
   652                              <2>  pxor xmmblock, xmm0
   653                              <2>  %else
   654                              <2>  %if round < 14
   655                              <2>  aesOPERATION xmmblock, xmm0
   656                              <2>  %else
   657                              <2>  aesOPERATIONlast xmmblock, xmm0
   658                              <2>  %endif
   659                              <2>  %endif
   660                              <2> 
   661                              <2>  %assign block block+1
   662                              <2>  %endrep
   663                              <3> 
   664                              <3>  %if round = 0
   665                              <3>  pxor xmmblock, xmm0
   666                              <3>  %else
   667                              <3>  %if round < 14
   668 0000007F 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   669                              <3>  %else
   670                              <3>  aesOPERATIONlast xmmblock, xmm0
   671                              <3>  %endif
   672                              <3>  %endif
   673                              <3> 
   674                              <3>  %assign block block+1
   675                              <2> 
   676                              <2>  %assign round round+1
   677 00000084 F30F6F8190000000    <2>  movdqu xmm0, [Rcx + 16 * round]
   678                              <2> 
   679                              <2>  %assign block 1
   680                              <2>  %rep BLOCK_COUNT
   681                              <2> 
   682                              <2>  %if round = 0
   683                              <2>  pxor xmmblock, xmm0
   684                              <2>  %else
   685                              <2>  %if round < 14
   686                              <2>  aesOPERATION xmmblock, xmm0
   687                              <2>  %else
   688                              <2>  aesOPERATIONlast xmmblock, xmm0
   689                              <2>  %endif
   690                              <2>  %endif
   691                              <2> 
   692                              <2>  %assign block block+1
   693                              <2>  %endrep
   694                              <3> 
   695                              <3>  %if round = 0
   696                              <3>  pxor xmmblock, xmm0
   697                              <3>  %else
   698                              <3>  %if round < 14
   699 0000008C 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   700                              <3>  %else
   701                              <3>  aesOPERATIONlast xmmblock, xmm0
   702                              <3>  %endif
   703                              <3>  %endif
   704                              <3> 
   705                              <3>  %assign block block+1
   706                              <2> 
   707                              <2>  %assign round round+1
   708 00000091 F30F6F81A0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
   709                              <2> 
   710                              <2>  %assign block 1
   711                              <2>  %rep BLOCK_COUNT
   712                              <2> 
   713                              <2>  %if round = 0
   714                              <2>  pxor xmmblock, xmm0
   715                              <2>  %else
   716                              <2>  %if round < 14
   717                              <2>  aesOPERATION xmmblock, xmm0
   718                              <2>  %else
   719                              <2>  aesOPERATIONlast xmmblock, xmm0
   720                              <2>  %endif
   721                              <2>  %endif
   722                              <2> 
   723                              <2>  %assign block block+1
   724                              <2>  %endrep
   725                              <3> 
   726                              <3>  %if round = 0
   727                              <3>  pxor xmmblock, xmm0
   728                              <3>  %else
   729                              <3>  %if round < 14
   730 00000099 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   731                              <3>  %else
   732                              <3>  aesOPERATIONlast xmmblock, xmm0
   733                              <3>  %endif
   734                              <3>  %endif
   735                              <3> 
   736                              <3>  %assign block block+1
   737                              <2> 
   738                              <2>  %assign round round+1
   739 0000009E F30F6F81B0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
   740                              <2> 
   741                              <2>  %assign block 1
   742                              <2>  %rep BLOCK_COUNT
   743                              <2> 
   744                              <2>  %if round = 0
   745                              <2>  pxor xmmblock, xmm0
   746                              <2>  %else
   747                              <2>  %if round < 14
   748                              <2>  aesOPERATION xmmblock, xmm0
   749                              <2>  %else
   750                              <2>  aesOPERATIONlast xmmblock, xmm0
   751                              <2>  %endif
   752                              <2>  %endif
   753                              <2> 
   754                              <2>  %assign block block+1
   755                              <2>  %endrep
   756                              <3> 
   757                              <3>  %if round = 0
   758                              <3>  pxor xmmblock, xmm0
   759                              <3>  %else
   760                              <3>  %if round < 14
   761 000000A6 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   762                              <3>  %else
   763                              <3>  aesOPERATIONlast xmmblock, xmm0
   764                              <3>  %endif
   765                              <3>  %endif
   766                              <3> 
   767                              <3>  %assign block block+1
   768                              <2> 
   769                              <2>  %assign round round+1
   770 000000AB F30F6F81C0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
   771                              <2> 
   772                              <2>  %assign block 1
   773                              <2>  %rep BLOCK_COUNT
   774                              <2> 
   775                              <2>  %if round = 0
   776                              <2>  pxor xmmblock, xmm0
   777                              <2>  %else
   778                              <2>  %if round < 14
   779                              <2>  aesOPERATION xmmblock, xmm0
   780                              <2>  %else
   781                              <2>  aesOPERATIONlast xmmblock, xmm0
   782                              <2>  %endif
   783                              <2>  %endif
   784                              <2> 
   785                              <2>  %assign block block+1
   786                              <2>  %endrep
   787                              <3> 
   788                              <3>  %if round = 0
   789                              <3>  pxor xmmblock, xmm0
   790                              <3>  %else
   791                              <3>  %if round < 14
   792 000000B3 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   793                              <3>  %else
   794                              <3>  aesOPERATIONlast xmmblock, xmm0
   795                              <3>  %endif
   796                              <3>  %endif
   797                              <3> 
   798                              <3>  %assign block block+1
   799                              <2> 
   800                              <2>  %assign round round+1
   801 000000B8 F30F6F81D0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
   802                              <2> 
   803                              <2>  %assign block 1
   804                              <2>  %rep BLOCK_COUNT
   805                              <2> 
   806                              <2>  %if round = 0
   807                              <2>  pxor xmmblock, xmm0
   808                              <2>  %else
   809                              <2>  %if round < 14
   810                              <2>  aesOPERATION xmmblock, xmm0
   811                              <2>  %else
   812                              <2>  aesOPERATIONlast xmmblock, xmm0
   813                              <2>  %endif
   814                              <2>  %endif
   815                              <2> 
   816                              <2>  %assign block block+1
   817                              <2>  %endrep
   818                              <3> 
   819                              <3>  %if round = 0
   820                              <3>  pxor xmmblock, xmm0
   821                              <3>  %else
   822                              <3>  %if round < 14
   823 000000C0 660F38DEC8          <3>  aesOPERATION xmmblock, xmm0
   824                              <3>  %else
   825                              <3>  aesOPERATIONlast xmmblock, xmm0
   826                              <3>  %endif
   827                              <3>  %endif
   828                              <3> 
   829                              <3>  %assign block block+1
   830                              <2> 
   831                              <2>  %assign round round+1
   832 000000C5 F30F6F81E0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
   833                              <2> 
   834                              <2>  %assign block 1
   835                              <2>  %rep BLOCK_COUNT
   836                              <2> 
   837                              <2>  %if round = 0
   838                              <2>  pxor xmmblock, xmm0
   839                              <2>  %else
   840                              <2>  %if round < 14
   841                              <2>  aesOPERATION xmmblock, xmm0
   842                              <2>  %else
   843                              <2>  aesOPERATIONlast xmmblock, xmm0
   844                              <2>  %endif
   845                              <2>  %endif
   846                              <2> 
   847                              <2>  %assign block block+1
   848                              <2>  %endrep
   849                              <3> 
   850                              <3>  %if round = 0
   851                              <3>  pxor xmmblock, xmm0
   852                              <3>  %else
   853                              <3>  %if round < 14
   854                              <3>  aesOPERATION xmmblock, xmm0
   855                              <3>  %else
   856 000000CD 660F38DFC8          <3>  aesOPERATIONlast xmmblock, xmm0
   857                              <3>  %endif
   858                              <3>  %endif
   859                              <3> 
   860                              <3>  %assign block block+1
   861                              <2> 
   862                              <2>  %assign round round+1
   863                              <1> 
   864                              <1> 
   865                              <1>  %assign block 1
   866                              <1>  %rep BLOCK_COUNT
   867                              <1>  movdqu [Rdx + 16 * (block - 1)], xmmblock
   868                              <1>  %assign block block+1
   869                              <1>  %endrep
   870 000000D2 F30F7F0A            <2>  movdqu [Rdx + 16 * (block - 1)], xmmblock
   871                              <2>  %assign block block+1
   872                              <1> 
   873                              <1>  %undef OPERATION
   874                              <1>  %undef BLOCK_COUNT
   875                                  	aes_function_exit
   876                              <1> 
   877                              <1> 
   878                              <1> 
   879                              <1>  %ifdef MS_STDCALL
   880 000000D6 C20800              <1>  ret 8
   881                              <1>  %else
   882                              <1>  ret
   883                              <1>  %endif
   884                              <1> 
   885                                  
   886                                  
   887                                  ; void aes_hw_cpu_decrypt_32_blocks (const byte *ks, byte *data);
   888                                  
   889                                  	aes_function_entry aes_hw_cpu_decrypt_32_blocks
   890                              <1> 
   891                              <1> 
   892                              <1> 
   893                              <1>  export_function %1, 8
   894                              <2> 
   895                              <2>  %ifdef MS_STDCALL
   896                              <2>  global %1@%2
   897                              <2>  export _%1@%2
   898                              <2>  %1@%2:
   899                              <2>  %elifidn __BITS__, 16
   900                              <2>  global _%1
   901                              <2>  _%1:
   902                              <2>  %else
   903                              <2>  global %1
   904                              <2>  %1:
   905                              <2>  %endif
   906                              <2> 
   907                              <1> 
   908                              <1>  %ifidn __BITS__, 32
   909 000000D9 8B4C2404            <1>  mov ecx, [esp + 4 + 4 * 0]
   910 000000DD 8B542408            <1>  mov edx, [esp + 4 + 4 * 1]
   911                              <1>  %elifidn __BITS__, 64
   912                              <1>  %ifnidn __OUTPUT_FORMAT__, win64
   913                              <1>  mov rcx, rdi
   914                              <1>  mov rdx, rsi
   915                              <1>  %endif
   916                              <1>  %endif
   917                              <1> 
   918                              <1> 
   919                              <1> 
   920                              <1> 
   921                                  		aes_hw_cpu_32_blocks dec
   922                              <1>  %define OPERATION_32_BLOCKS %1
   923                              <1> 
   924                              <1>  %ifidn __BITS__, 64
   925                              <1>  %define MAX_REG_BLOCK_COUNT 15
   926                              <1>  %else
   927                              <1>  %define MAX_REG_BLOCK_COUNT 7
   928                              <1>  %endif
   929                              <1> 
   930                              <1>  %ifidn __OUTPUT_FORMAT__, win64
   931                              <1>  %if MAX_REG_BLOCK_COUNT > 5
   932                              <1>  push_xmm 6, MAX_REG_BLOCK_COUNT
   933                              <1>  %endif
   934                              <1>  %endif
   935                              <1> 
   936 000000E1 B804000000          <1>  mov eax, 32 / MAX_REG_BLOCK_COUNT
   937                              <1>  .1:
   938                              <1>  aes_hw_cpu OPERATION_32_BLOCKS, MAX_REG_BLOCK_COUNT
   939                              <2>  %define OPERATION %1
   940                              <2>  %define BLOCK_COUNT %2
   941                              <2> 
   942                              <2> 
   943                              <2>  %assign block 1
   944                              <2>  %rep BLOCK_COUNT
   945                              <2>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   946                              <2>  %assign block block+1
   947                              <2>  %endrep
   948 000000E6 F30F6F0A            <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   949                              <3>  %assign block block+1
   950 000000EA F30F6F5210          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   951                              <3>  %assign block block+1
   952 000000EF F30F6F5A20          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   953                              <3>  %assign block block+1
   954 000000F4 F30F6F6230          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   955                              <3>  %assign block block+1
   956 000000F9 F30F6F6A40          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   957                              <3>  %assign block block+1
   958 000000FE F30F6F7250          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   959                              <3>  %assign block block+1
   960 00000103 F30F6F7A60          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
   961                              <3>  %assign block block+1
   962                              <2> 
   963                              <2> 
   964                              <2>  %assign round 0
   965                              <2>  %rep 15
   966                              <2>  movdqu xmm0, [Rcx + 16 * round]
   967                              <2> 
   968                              <2>  %assign block 1
   969                              <2>  %rep BLOCK_COUNT
   970                              <2> 
   971                              <2>  %if round = 0
   972                              <2>  pxor xmmblock, xmm0
   973                              <2>  %else
   974                              <2>  %if round < 14
   975                              <2>  aesOPERATION xmmblock, xmm0
   976                              <2>  %else
   977                              <2>  aesOPERATIONlast xmmblock, xmm0
   978                              <2>  %endif
   979                              <2>  %endif
   980                              <2> 
   981                              <2>  %assign block block+1
   982                              <2>  %endrep
   983                              <2> 
   984                              <2>  %assign round round+1
   985                              <2>  %endrep
   986 00000108 F30F6F01            <3>  movdqu xmm0, [Rcx + 16 * round]
   987                              <3> 
   988                              <3>  %assign block 1
   989                              <3>  %rep BLOCK_COUNT
   990                              <3> 
   991                              <3>  %if round = 0
   992                              <3>  pxor xmmblock, xmm0
   993                              <3>  %else
   994                              <3>  %if round < 14
   995                              <3>  aesOPERATION xmmblock, xmm0
   996                              <3>  %else
   997                              <3>  aesOPERATIONlast xmmblock, xmm0
   998                              <3>  %endif
   999                              <3>  %endif
  1000                              <3> 
  1001                              <3>  %assign block block+1
  1002                              <3>  %endrep
  1003                              <4> 
  1004                              <4>  %if round = 0
  1005 0000010C 660FEFC8            <4>  pxor xmmblock, xmm0
  1006                              <4>  %else
  1007                              <4>  %if round < 14
  1008                              <4>  aesOPERATION xmmblock, xmm0
  1009                              <4>  %else
  1010                              <4>  aesOPERATIONlast xmmblock, xmm0
  1011                              <4>  %endif
  1012                              <4>  %endif
  1013                              <4> 
  1014                              <4>  %assign block block+1
  1015                              <4> 
  1016                              <4>  %if round = 0
  1017 00000110 660FEFD0            <4>  pxor xmmblock, xmm0
  1018                              <4>  %else
  1019                              <4>  %if round < 14
  1020                              <4>  aesOPERATION xmmblock, xmm0
  1021                              <4>  %else
  1022                              <4>  aesOPERATIONlast xmmblock, xmm0
  1023                              <4>  %endif
  1024                              <4>  %endif
  1025                              <4> 
  1026                              <4>  %assign block block+1
  1027                              <4> 
  1028                              <4>  %if round = 0
  1029 00000114 660FEFD8            <4>  pxor xmmblock, xmm0
  1030                              <4>  %else
  1031                              <4>  %if round < 14
  1032                              <4>  aesOPERATION xmmblock, xmm0
  1033                              <4>  %else
  1034                              <4>  aesOPERATIONlast xmmblock, xmm0
  1035                              <4>  %endif
  1036                              <4>  %endif
  1037                              <4> 
  1038                              <4>  %assign block block+1
  1039                              <4> 
  1040                              <4>  %if round = 0
  1041 00000118 660FEFE0            <4>  pxor xmmblock, xmm0
  1042                              <4>  %else
  1043                              <4>  %if round < 14
  1044                              <4>  aesOPERATION xmmblock, xmm0
  1045                              <4>  %else
  1046                              <4>  aesOPERATIONlast xmmblock, xmm0
  1047                              <4>  %endif
  1048                              <4>  %endif
  1049                              <4> 
  1050                              <4>  %assign block block+1
  1051                              <4> 
  1052                              <4>  %if round = 0
  1053 0000011C 660FEFE8            <4>  pxor xmmblock, xmm0
  1054                              <4>  %else
  1055                              <4>  %if round < 14
  1056                              <4>  aesOPERATION xmmblock, xmm0
  1057                              <4>  %else
  1058                              <4>  aesOPERATIONlast xmmblock, xmm0
  1059                              <4>  %endif
  1060                              <4>  %endif
  1061                              <4> 
  1062                              <4>  %assign block block+1
  1063                              <4> 
  1064                              <4>  %if round = 0
  1065 00000120 660FEFF0            <4>  pxor xmmblock, xmm0
  1066                              <4>  %else
  1067                              <4>  %if round < 14
  1068                              <4>  aesOPERATION xmmblock, xmm0
  1069                              <4>  %else
  1070                              <4>  aesOPERATIONlast xmmblock, xmm0
  1071                              <4>  %endif
  1072                              <4>  %endif
  1073                              <4> 
  1074                              <4>  %assign block block+1
  1075                              <4> 
  1076                              <4>  %if round = 0
  1077 00000124 660FEFF8            <4>  pxor xmmblock, xmm0
  1078                              <4>  %else
  1079                              <4>  %if round < 14
  1080                              <4>  aesOPERATION xmmblock, xmm0
  1081                              <4>  %else
  1082                              <4>  aesOPERATIONlast xmmblock, xmm0
  1083                              <4>  %endif
  1084                              <4>  %endif
  1085                              <4> 
  1086                              <4>  %assign block block+1
  1087                              <3> 
  1088                              <3>  %assign round round+1
  1089 00000128 F30F6F4110          <3>  movdqu xmm0, [Rcx + 16 * round]
  1090                              <3> 
  1091                              <3>  %assign block 1
  1092                              <3>  %rep BLOCK_COUNT
  1093                              <3> 
  1094                              <3>  %if round = 0
  1095                              <3>  pxor xmmblock, xmm0
  1096                              <3>  %else
  1097                              <3>  %if round < 14
  1098                              <3>  aesOPERATION xmmblock, xmm0
  1099                              <3>  %else
  1100                              <3>  aesOPERATIONlast xmmblock, xmm0
  1101                              <3>  %endif
  1102                              <3>  %endif
  1103                              <3> 
  1104                              <3>  %assign block block+1
  1105                              <3>  %endrep
  1106                              <4> 
  1107                              <4>  %if round = 0
  1108                              <4>  pxor xmmblock, xmm0
  1109                              <4>  %else
  1110                              <4>  %if round < 14
  1111 0000012D 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1112                              <4>  %else
  1113                              <4>  aesOPERATIONlast xmmblock, xmm0
  1114                              <4>  %endif
  1115                              <4>  %endif
  1116                              <4> 
  1117                              <4>  %assign block block+1
  1118                              <4> 
  1119                              <4>  %if round = 0
  1120                              <4>  pxor xmmblock, xmm0
  1121                              <4>  %else
  1122                              <4>  %if round < 14
  1123 00000132 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1124                              <4>  %else
  1125                              <4>  aesOPERATIONlast xmmblock, xmm0
  1126                              <4>  %endif
  1127                              <4>  %endif
  1128                              <4> 
  1129                              <4>  %assign block block+1
  1130                              <4> 
  1131                              <4>  %if round = 0
  1132                              <4>  pxor xmmblock, xmm0
  1133                              <4>  %else
  1134                              <4>  %if round < 14
  1135 00000137 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1136                              <4>  %else
  1137                              <4>  aesOPERATIONlast xmmblock, xmm0
  1138                              <4>  %endif
  1139                              <4>  %endif
  1140                              <4> 
  1141                              <4>  %assign block block+1
  1142                              <4> 
  1143                              <4>  %if round = 0
  1144                              <4>  pxor xmmblock, xmm0
  1145                              <4>  %else
  1146                              <4>  %if round < 14
  1147 0000013C 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1148                              <4>  %else
  1149                              <4>  aesOPERATIONlast xmmblock, xmm0
  1150                              <4>  %endif
  1151                              <4>  %endif
  1152                              <4> 
  1153                              <4>  %assign block block+1
  1154                              <4> 
  1155                              <4>  %if round = 0
  1156                              <4>  pxor xmmblock, xmm0
  1157                              <4>  %else
  1158                              <4>  %if round < 14
  1159 00000141 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1160                              <4>  %else
  1161                              <4>  aesOPERATIONlast xmmblock, xmm0
  1162                              <4>  %endif
  1163                              <4>  %endif
  1164                              <4> 
  1165                              <4>  %assign block block+1
  1166                              <4> 
  1167                              <4>  %if round = 0
  1168                              <4>  pxor xmmblock, xmm0
  1169                              <4>  %else
  1170                              <4>  %if round < 14
  1171 00000146 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1172                              <4>  %else
  1173                              <4>  aesOPERATIONlast xmmblock, xmm0
  1174                              <4>  %endif
  1175                              <4>  %endif
  1176                              <4> 
  1177                              <4>  %assign block block+1
  1178                              <4> 
  1179                              <4>  %if round = 0
  1180                              <4>  pxor xmmblock, xmm0
  1181                              <4>  %else
  1182                              <4>  %if round < 14
  1183 0000014B 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1184                              <4>  %else
  1185                              <4>  aesOPERATIONlast xmmblock, xmm0
  1186                              <4>  %endif
  1187                              <4>  %endif
  1188                              <4> 
  1189                              <4>  %assign block block+1
  1190                              <3> 
  1191                              <3>  %assign round round+1
  1192 00000150 F30F6F4120          <3>  movdqu xmm0, [Rcx + 16 * round]
  1193                              <3> 
  1194                              <3>  %assign block 1
  1195                              <3>  %rep BLOCK_COUNT
  1196                              <3> 
  1197                              <3>  %if round = 0
  1198                              <3>  pxor xmmblock, xmm0
  1199                              <3>  %else
  1200                              <3>  %if round < 14
  1201                              <3>  aesOPERATION xmmblock, xmm0
  1202                              <3>  %else
  1203                              <3>  aesOPERATIONlast xmmblock, xmm0
  1204                              <3>  %endif
  1205                              <3>  %endif
  1206                              <3> 
  1207                              <3>  %assign block block+1
  1208                              <3>  %endrep
  1209                              <4> 
  1210                              <4>  %if round = 0
  1211                              <4>  pxor xmmblock, xmm0
  1212                              <4>  %else
  1213                              <4>  %if round < 14
  1214 00000155 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1215                              <4>  %else
  1216                              <4>  aesOPERATIONlast xmmblock, xmm0
  1217                              <4>  %endif
  1218                              <4>  %endif
  1219                              <4> 
  1220                              <4>  %assign block block+1
  1221                              <4> 
  1222                              <4>  %if round = 0
  1223                              <4>  pxor xmmblock, xmm0
  1224                              <4>  %else
  1225                              <4>  %if round < 14
  1226 0000015A 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1227                              <4>  %else
  1228                              <4>  aesOPERATIONlast xmmblock, xmm0
  1229                              <4>  %endif
  1230                              <4>  %endif
  1231                              <4> 
  1232                              <4>  %assign block block+1
  1233                              <4> 
  1234                              <4>  %if round = 0
  1235                              <4>  pxor xmmblock, xmm0
  1236                              <4>  %else
  1237                              <4>  %if round < 14
  1238 0000015F 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1239                              <4>  %else
  1240                              <4>  aesOPERATIONlast xmmblock, xmm0
  1241                              <4>  %endif
  1242                              <4>  %endif
  1243                              <4> 
  1244                              <4>  %assign block block+1
  1245                              <4> 
  1246                              <4>  %if round = 0
  1247                              <4>  pxor xmmblock, xmm0
  1248                              <4>  %else
  1249                              <4>  %if round < 14
  1250 00000164 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1251                              <4>  %else
  1252                              <4>  aesOPERATIONlast xmmblock, xmm0
  1253                              <4>  %endif
  1254                              <4>  %endif
  1255                              <4> 
  1256                              <4>  %assign block block+1
  1257                              <4> 
  1258                              <4>  %if round = 0
  1259                              <4>  pxor xmmblock, xmm0
  1260                              <4>  %else
  1261                              <4>  %if round < 14
  1262 00000169 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1263                              <4>  %else
  1264                              <4>  aesOPERATIONlast xmmblock, xmm0
  1265                              <4>  %endif
  1266                              <4>  %endif
  1267                              <4> 
  1268                              <4>  %assign block block+1
  1269                              <4> 
  1270                              <4>  %if round = 0
  1271                              <4>  pxor xmmblock, xmm0
  1272                              <4>  %else
  1273                              <4>  %if round < 14
  1274 0000016E 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1275                              <4>  %else
  1276                              <4>  aesOPERATIONlast xmmblock, xmm0
  1277                              <4>  %endif
  1278                              <4>  %endif
  1279                              <4> 
  1280                              <4>  %assign block block+1
  1281                              <4> 
  1282                              <4>  %if round = 0
  1283                              <4>  pxor xmmblock, xmm0
  1284                              <4>  %else
  1285                              <4>  %if round < 14
  1286 00000173 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1287                              <4>  %else
  1288                              <4>  aesOPERATIONlast xmmblock, xmm0
  1289                              <4>  %endif
  1290                              <4>  %endif
  1291                              <4> 
  1292                              <4>  %assign block block+1
  1293                              <3> 
  1294                              <3>  %assign round round+1
  1295 00000178 F30F6F4130          <3>  movdqu xmm0, [Rcx + 16 * round]
  1296                              <3> 
  1297                              <3>  %assign block 1
  1298                              <3>  %rep BLOCK_COUNT
  1299                              <3> 
  1300                              <3>  %if round = 0
  1301                              <3>  pxor xmmblock, xmm0
  1302                              <3>  %else
  1303                              <3>  %if round < 14
  1304                              <3>  aesOPERATION xmmblock, xmm0
  1305                              <3>  %else
  1306                              <3>  aesOPERATIONlast xmmblock, xmm0
  1307                              <3>  %endif
  1308                              <3>  %endif
  1309                              <3> 
  1310                              <3>  %assign block block+1
  1311                              <3>  %endrep
  1312                              <4> 
  1313                              <4>  %if round = 0
  1314                              <4>  pxor xmmblock, xmm0
  1315                              <4>  %else
  1316                              <4>  %if round < 14
  1317 0000017D 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1318                              <4>  %else
  1319                              <4>  aesOPERATIONlast xmmblock, xmm0
  1320                              <4>  %endif
  1321                              <4>  %endif
  1322                              <4> 
  1323                              <4>  %assign block block+1
  1324                              <4> 
  1325                              <4>  %if round = 0
  1326                              <4>  pxor xmmblock, xmm0
  1327                              <4>  %else
  1328                              <4>  %if round < 14
  1329 00000182 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1330                              <4>  %else
  1331                              <4>  aesOPERATIONlast xmmblock, xmm0
  1332                              <4>  %endif
  1333                              <4>  %endif
  1334                              <4> 
  1335                              <4>  %assign block block+1
  1336                              <4> 
  1337                              <4>  %if round = 0
  1338                              <4>  pxor xmmblock, xmm0
  1339                              <4>  %else
  1340                              <4>  %if round < 14
  1341 00000187 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1342                              <4>  %else
  1343                              <4>  aesOPERATIONlast xmmblock, xmm0
  1344                              <4>  %endif
  1345                              <4>  %endif
  1346                              <4> 
  1347                              <4>  %assign block block+1
  1348                              <4> 
  1349                              <4>  %if round = 0
  1350                              <4>  pxor xmmblock, xmm0
  1351                              <4>  %else
  1352                              <4>  %if round < 14
  1353 0000018C 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1354                              <4>  %else
  1355                              <4>  aesOPERATIONlast xmmblock, xmm0
  1356                              <4>  %endif
  1357                              <4>  %endif
  1358                              <4> 
  1359                              <4>  %assign block block+1
  1360                              <4> 
  1361                              <4>  %if round = 0
  1362                              <4>  pxor xmmblock, xmm0
  1363                              <4>  %else
  1364                              <4>  %if round < 14
  1365 00000191 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1366                              <4>  %else
  1367                              <4>  aesOPERATIONlast xmmblock, xmm0
  1368                              <4>  %endif
  1369                              <4>  %endif
  1370                              <4> 
  1371                              <4>  %assign block block+1
  1372                              <4> 
  1373                              <4>  %if round = 0
  1374                              <4>  pxor xmmblock, xmm0
  1375                              <4>  %else
  1376                              <4>  %if round < 14
  1377 00000196 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1378                              <4>  %else
  1379                              <4>  aesOPERATIONlast xmmblock, xmm0
  1380                              <4>  %endif
  1381                              <4>  %endif
  1382                              <4> 
  1383                              <4>  %assign block block+1
  1384                              <4> 
  1385                              <4>  %if round = 0
  1386                              <4>  pxor xmmblock, xmm0
  1387                              <4>  %else
  1388                              <4>  %if round < 14
  1389 0000019B 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1390                              <4>  %else
  1391                              <4>  aesOPERATIONlast xmmblock, xmm0
  1392                              <4>  %endif
  1393                              <4>  %endif
  1394                              <4> 
  1395                              <4>  %assign block block+1
  1396                              <3> 
  1397                              <3>  %assign round round+1
  1398 000001A0 F30F6F4140          <3>  movdqu xmm0, [Rcx + 16 * round]
  1399                              <3> 
  1400                              <3>  %assign block 1
  1401                              <3>  %rep BLOCK_COUNT
  1402                              <3> 
  1403                              <3>  %if round = 0
  1404                              <3>  pxor xmmblock, xmm0
  1405                              <3>  %else
  1406                              <3>  %if round < 14
  1407                              <3>  aesOPERATION xmmblock, xmm0
  1408                              <3>  %else
  1409                              <3>  aesOPERATIONlast xmmblock, xmm0
  1410                              <3>  %endif
  1411                              <3>  %endif
  1412                              <3> 
  1413                              <3>  %assign block block+1
  1414                              <3>  %endrep
  1415                              <4> 
  1416                              <4>  %if round = 0
  1417                              <4>  pxor xmmblock, xmm0
  1418                              <4>  %else
  1419                              <4>  %if round < 14
  1420 000001A5 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1421                              <4>  %else
  1422                              <4>  aesOPERATIONlast xmmblock, xmm0
  1423                              <4>  %endif
  1424                              <4>  %endif
  1425                              <4> 
  1426                              <4>  %assign block block+1
  1427                              <4> 
  1428                              <4>  %if round = 0
  1429                              <4>  pxor xmmblock, xmm0
  1430                              <4>  %else
  1431                              <4>  %if round < 14
  1432 000001AA 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1433                              <4>  %else
  1434                              <4>  aesOPERATIONlast xmmblock, xmm0
  1435                              <4>  %endif
  1436                              <4>  %endif
  1437                              <4> 
  1438                              <4>  %assign block block+1
  1439                              <4> 
  1440                              <4>  %if round = 0
  1441                              <4>  pxor xmmblock, xmm0
  1442                              <4>  %else
  1443                              <4>  %if round < 14
  1444 000001AF 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1445                              <4>  %else
  1446                              <4>  aesOPERATIONlast xmmblock, xmm0
  1447                              <4>  %endif
  1448                              <4>  %endif
  1449                              <4> 
  1450                              <4>  %assign block block+1
  1451                              <4> 
  1452                              <4>  %if round = 0
  1453                              <4>  pxor xmmblock, xmm0
  1454                              <4>  %else
  1455                              <4>  %if round < 14
  1456 000001B4 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1457                              <4>  %else
  1458                              <4>  aesOPERATIONlast xmmblock, xmm0
  1459                              <4>  %endif
  1460                              <4>  %endif
  1461                              <4> 
  1462                              <4>  %assign block block+1
  1463                              <4> 
  1464                              <4>  %if round = 0
  1465                              <4>  pxor xmmblock, xmm0
  1466                              <4>  %else
  1467                              <4>  %if round < 14
  1468 000001B9 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1469                              <4>  %else
  1470                              <4>  aesOPERATIONlast xmmblock, xmm0
  1471                              <4>  %endif
  1472                              <4>  %endif
  1473                              <4> 
  1474                              <4>  %assign block block+1
  1475                              <4> 
  1476                              <4>  %if round = 0
  1477                              <4>  pxor xmmblock, xmm0
  1478                              <4>  %else
  1479                              <4>  %if round < 14
  1480 000001BE 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1481                              <4>  %else
  1482                              <4>  aesOPERATIONlast xmmblock, xmm0
  1483                              <4>  %endif
  1484                              <4>  %endif
  1485                              <4> 
  1486                              <4>  %assign block block+1
  1487                              <4> 
  1488                              <4>  %if round = 0
  1489                              <4>  pxor xmmblock, xmm0
  1490                              <4>  %else
  1491                              <4>  %if round < 14
  1492 000001C3 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1493                              <4>  %else
  1494                              <4>  aesOPERATIONlast xmmblock, xmm0
  1495                              <4>  %endif
  1496                              <4>  %endif
  1497                              <4> 
  1498                              <4>  %assign block block+1
  1499                              <3> 
  1500                              <3>  %assign round round+1
  1501 000001C8 F30F6F4150          <3>  movdqu xmm0, [Rcx + 16 * round]
  1502                              <3> 
  1503                              <3>  %assign block 1
  1504                              <3>  %rep BLOCK_COUNT
  1505                              <3> 
  1506                              <3>  %if round = 0
  1507                              <3>  pxor xmmblock, xmm0
  1508                              <3>  %else
  1509                              <3>  %if round < 14
  1510                              <3>  aesOPERATION xmmblock, xmm0
  1511                              <3>  %else
  1512                              <3>  aesOPERATIONlast xmmblock, xmm0
  1513                              <3>  %endif
  1514                              <3>  %endif
  1515                              <3> 
  1516                              <3>  %assign block block+1
  1517                              <3>  %endrep
  1518                              <4> 
  1519                              <4>  %if round = 0
  1520                              <4>  pxor xmmblock, xmm0
  1521                              <4>  %else
  1522                              <4>  %if round < 14
  1523 000001CD 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1524                              <4>  %else
  1525                              <4>  aesOPERATIONlast xmmblock, xmm0
  1526                              <4>  %endif
  1527                              <4>  %endif
  1528                              <4> 
  1529                              <4>  %assign block block+1
  1530                              <4> 
  1531                              <4>  %if round = 0
  1532                              <4>  pxor xmmblock, xmm0
  1533                              <4>  %else
  1534                              <4>  %if round < 14
  1535 000001D2 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1536                              <4>  %else
  1537                              <4>  aesOPERATIONlast xmmblock, xmm0
  1538                              <4>  %endif
  1539                              <4>  %endif
  1540                              <4> 
  1541                              <4>  %assign block block+1
  1542                              <4> 
  1543                              <4>  %if round = 0
  1544                              <4>  pxor xmmblock, xmm0
  1545                              <4>  %else
  1546                              <4>  %if round < 14
  1547 000001D7 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1548                              <4>  %else
  1549                              <4>  aesOPERATIONlast xmmblock, xmm0
  1550                              <4>  %endif
  1551                              <4>  %endif
  1552                              <4> 
  1553                              <4>  %assign block block+1
  1554                              <4> 
  1555                              <4>  %if round = 0
  1556                              <4>  pxor xmmblock, xmm0
  1557                              <4>  %else
  1558                              <4>  %if round < 14
  1559 000001DC 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1560                              <4>  %else
  1561                              <4>  aesOPERATIONlast xmmblock, xmm0
  1562                              <4>  %endif
  1563                              <4>  %endif
  1564                              <4> 
  1565                              <4>  %assign block block+1
  1566                              <4> 
  1567                              <4>  %if round = 0
  1568                              <4>  pxor xmmblock, xmm0
  1569                              <4>  %else
  1570                              <4>  %if round < 14
  1571 000001E1 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1572                              <4>  %else
  1573                              <4>  aesOPERATIONlast xmmblock, xmm0
  1574                              <4>  %endif
  1575                              <4>  %endif
  1576                              <4> 
  1577                              <4>  %assign block block+1
  1578                              <4> 
  1579                              <4>  %if round = 0
  1580                              <4>  pxor xmmblock, xmm0
  1581                              <4>  %else
  1582                              <4>  %if round < 14
  1583 000001E6 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1584                              <4>  %else
  1585                              <4>  aesOPERATIONlast xmmblock, xmm0
  1586                              <4>  %endif
  1587                              <4>  %endif
  1588                              <4> 
  1589                              <4>  %assign block block+1
  1590                              <4> 
  1591                              <4>  %if round = 0
  1592                              <4>  pxor xmmblock, xmm0
  1593                              <4>  %else
  1594                              <4>  %if round < 14
  1595 000001EB 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1596                              <4>  %else
  1597                              <4>  aesOPERATIONlast xmmblock, xmm0
  1598                              <4>  %endif
  1599                              <4>  %endif
  1600                              <4> 
  1601                              <4>  %assign block block+1
  1602                              <3> 
  1603                              <3>  %assign round round+1
  1604 000001F0 F30F6F4160          <3>  movdqu xmm0, [Rcx + 16 * round]
  1605                              <3> 
  1606                              <3>  %assign block 1
  1607                              <3>  %rep BLOCK_COUNT
  1608                              <3> 
  1609                              <3>  %if round = 0
  1610                              <3>  pxor xmmblock, xmm0
  1611                              <3>  %else
  1612                              <3>  %if round < 14
  1613                              <3>  aesOPERATION xmmblock, xmm0
  1614                              <3>  %else
  1615                              <3>  aesOPERATIONlast xmmblock, xmm0
  1616                              <3>  %endif
  1617                              <3>  %endif
  1618                              <3> 
  1619                              <3>  %assign block block+1
  1620                              <3>  %endrep
  1621                              <4> 
  1622                              <4>  %if round = 0
  1623                              <4>  pxor xmmblock, xmm0
  1624                              <4>  %else
  1625                              <4>  %if round < 14
  1626 000001F5 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1627                              <4>  %else
  1628                              <4>  aesOPERATIONlast xmmblock, xmm0
  1629                              <4>  %endif
  1630                              <4>  %endif
  1631                              <4> 
  1632                              <4>  %assign block block+1
  1633                              <4> 
  1634                              <4>  %if round = 0
  1635                              <4>  pxor xmmblock, xmm0
  1636                              <4>  %else
  1637                              <4>  %if round < 14
  1638 000001FA 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1639                              <4>  %else
  1640                              <4>  aesOPERATIONlast xmmblock, xmm0
  1641                              <4>  %endif
  1642                              <4>  %endif
  1643                              <4> 
  1644                              <4>  %assign block block+1
  1645                              <4> 
  1646                              <4>  %if round = 0
  1647                              <4>  pxor xmmblock, xmm0
  1648                              <4>  %else
  1649                              <4>  %if round < 14
  1650 000001FF 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1651                              <4>  %else
  1652                              <4>  aesOPERATIONlast xmmblock, xmm0
  1653                              <4>  %endif
  1654                              <4>  %endif
  1655                              <4> 
  1656                              <4>  %assign block block+1
  1657                              <4> 
  1658                              <4>  %if round = 0
  1659                              <4>  pxor xmmblock, xmm0
  1660                              <4>  %else
  1661                              <4>  %if round < 14
  1662 00000204 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1663                              <4>  %else
  1664                              <4>  aesOPERATIONlast xmmblock, xmm0
  1665                              <4>  %endif
  1666                              <4>  %endif
  1667                              <4> 
  1668                              <4>  %assign block block+1
  1669                              <4> 
  1670                              <4>  %if round = 0
  1671                              <4>  pxor xmmblock, xmm0
  1672                              <4>  %else
  1673                              <4>  %if round < 14
  1674 00000209 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1675                              <4>  %else
  1676                              <4>  aesOPERATIONlast xmmblock, xmm0
  1677                              <4>  %endif
  1678                              <4>  %endif
  1679                              <4> 
  1680                              <4>  %assign block block+1
  1681                              <4> 
  1682                              <4>  %if round = 0
  1683                              <4>  pxor xmmblock, xmm0
  1684                              <4>  %else
  1685                              <4>  %if round < 14
  1686 0000020E 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1687                              <4>  %else
  1688                              <4>  aesOPERATIONlast xmmblock, xmm0
  1689                              <4>  %endif
  1690                              <4>  %endif
  1691                              <4> 
  1692                              <4>  %assign block block+1
  1693                              <4> 
  1694                              <4>  %if round = 0
  1695                              <4>  pxor xmmblock, xmm0
  1696                              <4>  %else
  1697                              <4>  %if round < 14
  1698 00000213 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1699                              <4>  %else
  1700                              <4>  aesOPERATIONlast xmmblock, xmm0
  1701                              <4>  %endif
  1702                              <4>  %endif
  1703                              <4> 
  1704                              <4>  %assign block block+1
  1705                              <3> 
  1706                              <3>  %assign round round+1
  1707 00000218 F30F6F4170          <3>  movdqu xmm0, [Rcx + 16 * round]
  1708                              <3> 
  1709                              <3>  %assign block 1
  1710                              <3>  %rep BLOCK_COUNT
  1711                              <3> 
  1712                              <3>  %if round = 0
  1713                              <3>  pxor xmmblock, xmm0
  1714                              <3>  %else
  1715                              <3>  %if round < 14
  1716                              <3>  aesOPERATION xmmblock, xmm0
  1717                              <3>  %else
  1718                              <3>  aesOPERATIONlast xmmblock, xmm0
  1719                              <3>  %endif
  1720                              <3>  %endif
  1721                              <3> 
  1722                              <3>  %assign block block+1
  1723                              <3>  %endrep
  1724                              <4> 
  1725                              <4>  %if round = 0
  1726                              <4>  pxor xmmblock, xmm0
  1727                              <4>  %else
  1728                              <4>  %if round < 14
  1729 0000021D 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1730                              <4>  %else
  1731                              <4>  aesOPERATIONlast xmmblock, xmm0
  1732                              <4>  %endif
  1733                              <4>  %endif
  1734                              <4> 
  1735                              <4>  %assign block block+1
  1736                              <4> 
  1737                              <4>  %if round = 0
  1738                              <4>  pxor xmmblock, xmm0
  1739                              <4>  %else
  1740                              <4>  %if round < 14
  1741 00000222 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1742                              <4>  %else
  1743                              <4>  aesOPERATIONlast xmmblock, xmm0
  1744                              <4>  %endif
  1745                              <4>  %endif
  1746                              <4> 
  1747                              <4>  %assign block block+1
  1748                              <4> 
  1749                              <4>  %if round = 0
  1750                              <4>  pxor xmmblock, xmm0
  1751                              <4>  %else
  1752                              <4>  %if round < 14
  1753 00000227 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1754                              <4>  %else
  1755                              <4>  aesOPERATIONlast xmmblock, xmm0
  1756                              <4>  %endif
  1757                              <4>  %endif
  1758                              <4> 
  1759                              <4>  %assign block block+1
  1760                              <4> 
  1761                              <4>  %if round = 0
  1762                              <4>  pxor xmmblock, xmm0
  1763                              <4>  %else
  1764                              <4>  %if round < 14
  1765 0000022C 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1766                              <4>  %else
  1767                              <4>  aesOPERATIONlast xmmblock, xmm0
  1768                              <4>  %endif
  1769                              <4>  %endif
  1770                              <4> 
  1771                              <4>  %assign block block+1
  1772                              <4> 
  1773                              <4>  %if round = 0
  1774                              <4>  pxor xmmblock, xmm0
  1775                              <4>  %else
  1776                              <4>  %if round < 14
  1777 00000231 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1778                              <4>  %else
  1779                              <4>  aesOPERATIONlast xmmblock, xmm0
  1780                              <4>  %endif
  1781                              <4>  %endif
  1782                              <4> 
  1783                              <4>  %assign block block+1
  1784                              <4> 
  1785                              <4>  %if round = 0
  1786                              <4>  pxor xmmblock, xmm0
  1787                              <4>  %else
  1788                              <4>  %if round < 14
  1789 00000236 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1790                              <4>  %else
  1791                              <4>  aesOPERATIONlast xmmblock, xmm0
  1792                              <4>  %endif
  1793                              <4>  %endif
  1794                              <4> 
  1795                              <4>  %assign block block+1
  1796                              <4> 
  1797                              <4>  %if round = 0
  1798                              <4>  pxor xmmblock, xmm0
  1799                              <4>  %else
  1800                              <4>  %if round < 14
  1801 0000023B 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1802                              <4>  %else
  1803                              <4>  aesOPERATIONlast xmmblock, xmm0
  1804                              <4>  %endif
  1805                              <4>  %endif
  1806                              <4> 
  1807                              <4>  %assign block block+1
  1808                              <3> 
  1809                              <3>  %assign round round+1
  1810 00000240 F30F6F8180000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  1811                              <3> 
  1812                              <3>  %assign block 1
  1813                              <3>  %rep BLOCK_COUNT
  1814                              <3> 
  1815                              <3>  %if round = 0
  1816                              <3>  pxor xmmblock, xmm0
  1817                              <3>  %else
  1818                              <3>  %if round < 14
  1819                              <3>  aesOPERATION xmmblock, xmm0
  1820                              <3>  %else
  1821                              <3>  aesOPERATIONlast xmmblock, xmm0
  1822                              <3>  %endif
  1823                              <3>  %endif
  1824                              <3> 
  1825                              <3>  %assign block block+1
  1826                              <3>  %endrep
  1827                              <4> 
  1828                              <4>  %if round = 0
  1829                              <4>  pxor xmmblock, xmm0
  1830                              <4>  %else
  1831                              <4>  %if round < 14
  1832 00000248 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1833                              <4>  %else
  1834                              <4>  aesOPERATIONlast xmmblock, xmm0
  1835                              <4>  %endif
  1836                              <4>  %endif
  1837                              <4> 
  1838                              <4>  %assign block block+1
  1839                              <4> 
  1840                              <4>  %if round = 0
  1841                              <4>  pxor xmmblock, xmm0
  1842                              <4>  %else
  1843                              <4>  %if round < 14
  1844 0000024D 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1845                              <4>  %else
  1846                              <4>  aesOPERATIONlast xmmblock, xmm0
  1847                              <4>  %endif
  1848                              <4>  %endif
  1849                              <4> 
  1850                              <4>  %assign block block+1
  1851                              <4> 
  1852                              <4>  %if round = 0
  1853                              <4>  pxor xmmblock, xmm0
  1854                              <4>  %else
  1855                              <4>  %if round < 14
  1856 00000252 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1857                              <4>  %else
  1858                              <4>  aesOPERATIONlast xmmblock, xmm0
  1859                              <4>  %endif
  1860                              <4>  %endif
  1861                              <4> 
  1862                              <4>  %assign block block+1
  1863                              <4> 
  1864                              <4>  %if round = 0
  1865                              <4>  pxor xmmblock, xmm0
  1866                              <4>  %else
  1867                              <4>  %if round < 14
  1868 00000257 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1869                              <4>  %else
  1870                              <4>  aesOPERATIONlast xmmblock, xmm0
  1871                              <4>  %endif
  1872                              <4>  %endif
  1873                              <4> 
  1874                              <4>  %assign block block+1
  1875                              <4> 
  1876                              <4>  %if round = 0
  1877                              <4>  pxor xmmblock, xmm0
  1878                              <4>  %else
  1879                              <4>  %if round < 14
  1880 0000025C 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1881                              <4>  %else
  1882                              <4>  aesOPERATIONlast xmmblock, xmm0
  1883                              <4>  %endif
  1884                              <4>  %endif
  1885                              <4> 
  1886                              <4>  %assign block block+1
  1887                              <4> 
  1888                              <4>  %if round = 0
  1889                              <4>  pxor xmmblock, xmm0
  1890                              <4>  %else
  1891                              <4>  %if round < 14
  1892 00000261 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1893                              <4>  %else
  1894                              <4>  aesOPERATIONlast xmmblock, xmm0
  1895                              <4>  %endif
  1896                              <4>  %endif
  1897                              <4> 
  1898                              <4>  %assign block block+1
  1899                              <4> 
  1900                              <4>  %if round = 0
  1901                              <4>  pxor xmmblock, xmm0
  1902                              <4>  %else
  1903                              <4>  %if round < 14
  1904 00000266 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  1905                              <4>  %else
  1906                              <4>  aesOPERATIONlast xmmblock, xmm0
  1907                              <4>  %endif
  1908                              <4>  %endif
  1909                              <4> 
  1910                              <4>  %assign block block+1
  1911                              <3> 
  1912                              <3>  %assign round round+1
  1913 0000026B F30F6F8190000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  1914                              <3> 
  1915                              <3>  %assign block 1
  1916                              <3>  %rep BLOCK_COUNT
  1917                              <3> 
  1918                              <3>  %if round = 0
  1919                              <3>  pxor xmmblock, xmm0
  1920                              <3>  %else
  1921                              <3>  %if round < 14
  1922                              <3>  aesOPERATION xmmblock, xmm0
  1923                              <3>  %else
  1924                              <3>  aesOPERATIONlast xmmblock, xmm0
  1925                              <3>  %endif
  1926                              <3>  %endif
  1927                              <3> 
  1928                              <3>  %assign block block+1
  1929                              <3>  %endrep
  1930                              <4> 
  1931                              <4>  %if round = 0
  1932                              <4>  pxor xmmblock, xmm0
  1933                              <4>  %else
  1934                              <4>  %if round < 14
  1935 00000273 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  1936                              <4>  %else
  1937                              <4>  aesOPERATIONlast xmmblock, xmm0
  1938                              <4>  %endif
  1939                              <4>  %endif
  1940                              <4> 
  1941                              <4>  %assign block block+1
  1942                              <4> 
  1943                              <4>  %if round = 0
  1944                              <4>  pxor xmmblock, xmm0
  1945                              <4>  %else
  1946                              <4>  %if round < 14
  1947 00000278 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  1948                              <4>  %else
  1949                              <4>  aesOPERATIONlast xmmblock, xmm0
  1950                              <4>  %endif
  1951                              <4>  %endif
  1952                              <4> 
  1953                              <4>  %assign block block+1
  1954                              <4> 
  1955                              <4>  %if round = 0
  1956                              <4>  pxor xmmblock, xmm0
  1957                              <4>  %else
  1958                              <4>  %if round < 14
  1959 0000027D 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  1960                              <4>  %else
  1961                              <4>  aesOPERATIONlast xmmblock, xmm0
  1962                              <4>  %endif
  1963                              <4>  %endif
  1964                              <4> 
  1965                              <4>  %assign block block+1
  1966                              <4> 
  1967                              <4>  %if round = 0
  1968                              <4>  pxor xmmblock, xmm0
  1969                              <4>  %else
  1970                              <4>  %if round < 14
  1971 00000282 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  1972                              <4>  %else
  1973                              <4>  aesOPERATIONlast xmmblock, xmm0
  1974                              <4>  %endif
  1975                              <4>  %endif
  1976                              <4> 
  1977                              <4>  %assign block block+1
  1978                              <4> 
  1979                              <4>  %if round = 0
  1980                              <4>  pxor xmmblock, xmm0
  1981                              <4>  %else
  1982                              <4>  %if round < 14
  1983 00000287 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  1984                              <4>  %else
  1985                              <4>  aesOPERATIONlast xmmblock, xmm0
  1986                              <4>  %endif
  1987                              <4>  %endif
  1988                              <4> 
  1989                              <4>  %assign block block+1
  1990                              <4> 
  1991                              <4>  %if round = 0
  1992                              <4>  pxor xmmblock, xmm0
  1993                              <4>  %else
  1994                              <4>  %if round < 14
  1995 0000028C 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  1996                              <4>  %else
  1997                              <4>  aesOPERATIONlast xmmblock, xmm0
  1998                              <4>  %endif
  1999                              <4>  %endif
  2000                              <4> 
  2001                              <4>  %assign block block+1
  2002                              <4> 
  2003                              <4>  %if round = 0
  2004                              <4>  pxor xmmblock, xmm0
  2005                              <4>  %else
  2006                              <4>  %if round < 14
  2007 00000291 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  2008                              <4>  %else
  2009                              <4>  aesOPERATIONlast xmmblock, xmm0
  2010                              <4>  %endif
  2011                              <4>  %endif
  2012                              <4> 
  2013                              <4>  %assign block block+1
  2014                              <3> 
  2015                              <3>  %assign round round+1
  2016 00000296 F30F6F81A0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  2017                              <3> 
  2018                              <3>  %assign block 1
  2019                              <3>  %rep BLOCK_COUNT
  2020                              <3> 
  2021                              <3>  %if round = 0
  2022                              <3>  pxor xmmblock, xmm0
  2023                              <3>  %else
  2024                              <3>  %if round < 14
  2025                              <3>  aesOPERATION xmmblock, xmm0
  2026                              <3>  %else
  2027                              <3>  aesOPERATIONlast xmmblock, xmm0
  2028                              <3>  %endif
  2029                              <3>  %endif
  2030                              <3> 
  2031                              <3>  %assign block block+1
  2032                              <3>  %endrep
  2033                              <4> 
  2034                              <4>  %if round = 0
  2035                              <4>  pxor xmmblock, xmm0
  2036                              <4>  %else
  2037                              <4>  %if round < 14
  2038 0000029E 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2039                              <4>  %else
  2040                              <4>  aesOPERATIONlast xmmblock, xmm0
  2041                              <4>  %endif
  2042                              <4>  %endif
  2043                              <4> 
  2044                              <4>  %assign block block+1
  2045                              <4> 
  2046                              <4>  %if round = 0
  2047                              <4>  pxor xmmblock, xmm0
  2048                              <4>  %else
  2049                              <4>  %if round < 14
  2050 000002A3 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2051                              <4>  %else
  2052                              <4>  aesOPERATIONlast xmmblock, xmm0
  2053                              <4>  %endif
  2054                              <4>  %endif
  2055                              <4> 
  2056                              <4>  %assign block block+1
  2057                              <4> 
  2058                              <4>  %if round = 0
  2059                              <4>  pxor xmmblock, xmm0
  2060                              <4>  %else
  2061                              <4>  %if round < 14
  2062 000002A8 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2063                              <4>  %else
  2064                              <4>  aesOPERATIONlast xmmblock, xmm0
  2065                              <4>  %endif
  2066                              <4>  %endif
  2067                              <4> 
  2068                              <4>  %assign block block+1
  2069                              <4> 
  2070                              <4>  %if round = 0
  2071                              <4>  pxor xmmblock, xmm0
  2072                              <4>  %else
  2073                              <4>  %if round < 14
  2074 000002AD 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2075                              <4>  %else
  2076                              <4>  aesOPERATIONlast xmmblock, xmm0
  2077                              <4>  %endif
  2078                              <4>  %endif
  2079                              <4> 
  2080                              <4>  %assign block block+1
  2081                              <4> 
  2082                              <4>  %if round = 0
  2083                              <4>  pxor xmmblock, xmm0
  2084                              <4>  %else
  2085                              <4>  %if round < 14
  2086 000002B2 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  2087                              <4>  %else
  2088                              <4>  aesOPERATIONlast xmmblock, xmm0
  2089                              <4>  %endif
  2090                              <4>  %endif
  2091                              <4> 
  2092                              <4>  %assign block block+1
  2093                              <4> 
  2094                              <4>  %if round = 0
  2095                              <4>  pxor xmmblock, xmm0
  2096                              <4>  %else
  2097                              <4>  %if round < 14
  2098 000002B7 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  2099                              <4>  %else
  2100                              <4>  aesOPERATIONlast xmmblock, xmm0
  2101                              <4>  %endif
  2102                              <4>  %endif
  2103                              <4> 
  2104                              <4>  %assign block block+1
  2105                              <4> 
  2106                              <4>  %if round = 0
  2107                              <4>  pxor xmmblock, xmm0
  2108                              <4>  %else
  2109                              <4>  %if round < 14
  2110 000002BC 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  2111                              <4>  %else
  2112                              <4>  aesOPERATIONlast xmmblock, xmm0
  2113                              <4>  %endif
  2114                              <4>  %endif
  2115                              <4> 
  2116                              <4>  %assign block block+1
  2117                              <3> 
  2118                              <3>  %assign round round+1
  2119 000002C1 F30F6F81B0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  2120                              <3> 
  2121                              <3>  %assign block 1
  2122                              <3>  %rep BLOCK_COUNT
  2123                              <3> 
  2124                              <3>  %if round = 0
  2125                              <3>  pxor xmmblock, xmm0
  2126                              <3>  %else
  2127                              <3>  %if round < 14
  2128                              <3>  aesOPERATION xmmblock, xmm0
  2129                              <3>  %else
  2130                              <3>  aesOPERATIONlast xmmblock, xmm0
  2131                              <3>  %endif
  2132                              <3>  %endif
  2133                              <3> 
  2134                              <3>  %assign block block+1
  2135                              <3>  %endrep
  2136                              <4> 
  2137                              <4>  %if round = 0
  2138                              <4>  pxor xmmblock, xmm0
  2139                              <4>  %else
  2140                              <4>  %if round < 14
  2141 000002C9 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2142                              <4>  %else
  2143                              <4>  aesOPERATIONlast xmmblock, xmm0
  2144                              <4>  %endif
  2145                              <4>  %endif
  2146                              <4> 
  2147                              <4>  %assign block block+1
  2148                              <4> 
  2149                              <4>  %if round = 0
  2150                              <4>  pxor xmmblock, xmm0
  2151                              <4>  %else
  2152                              <4>  %if round < 14
  2153 000002CE 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2154                              <4>  %else
  2155                              <4>  aesOPERATIONlast xmmblock, xmm0
  2156                              <4>  %endif
  2157                              <4>  %endif
  2158                              <4> 
  2159                              <4>  %assign block block+1
  2160                              <4> 
  2161                              <4>  %if round = 0
  2162                              <4>  pxor xmmblock, xmm0
  2163                              <4>  %else
  2164                              <4>  %if round < 14
  2165 000002D3 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2166                              <4>  %else
  2167                              <4>  aesOPERATIONlast xmmblock, xmm0
  2168                              <4>  %endif
  2169                              <4>  %endif
  2170                              <4> 
  2171                              <4>  %assign block block+1
  2172                              <4> 
  2173                              <4>  %if round = 0
  2174                              <4>  pxor xmmblock, xmm0
  2175                              <4>  %else
  2176                              <4>  %if round < 14
  2177 000002D8 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2178                              <4>  %else
  2179                              <4>  aesOPERATIONlast xmmblock, xmm0
  2180                              <4>  %endif
  2181                              <4>  %endif
  2182                              <4> 
  2183                              <4>  %assign block block+1
  2184                              <4> 
  2185                              <4>  %if round = 0
  2186                              <4>  pxor xmmblock, xmm0
  2187                              <4>  %else
  2188                              <4>  %if round < 14
  2189 000002DD 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  2190                              <4>  %else
  2191                              <4>  aesOPERATIONlast xmmblock, xmm0
  2192                              <4>  %endif
  2193                              <4>  %endif
  2194                              <4> 
  2195                              <4>  %assign block block+1
  2196                              <4> 
  2197                              <4>  %if round = 0
  2198                              <4>  pxor xmmblock, xmm0
  2199                              <4>  %else
  2200                              <4>  %if round < 14
  2201 000002E2 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  2202                              <4>  %else
  2203                              <4>  aesOPERATIONlast xmmblock, xmm0
  2204                              <4>  %endif
  2205                              <4>  %endif
  2206                              <4> 
  2207                              <4>  %assign block block+1
  2208                              <4> 
  2209                              <4>  %if round = 0
  2210                              <4>  pxor xmmblock, xmm0
  2211                              <4>  %else
  2212                              <4>  %if round < 14
  2213 000002E7 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  2214                              <4>  %else
  2215                              <4>  aesOPERATIONlast xmmblock, xmm0
  2216                              <4>  %endif
  2217                              <4>  %endif
  2218                              <4> 
  2219                              <4>  %assign block block+1
  2220                              <3> 
  2221                              <3>  %assign round round+1
  2222 000002EC F30F6F81C0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  2223                              <3> 
  2224                              <3>  %assign block 1
  2225                              <3>  %rep BLOCK_COUNT
  2226                              <3> 
  2227                              <3>  %if round = 0
  2228                              <3>  pxor xmmblock, xmm0
  2229                              <3>  %else
  2230                              <3>  %if round < 14
  2231                              <3>  aesOPERATION xmmblock, xmm0
  2232                              <3>  %else
  2233                              <3>  aesOPERATIONlast xmmblock, xmm0
  2234                              <3>  %endif
  2235                              <3>  %endif
  2236                              <3> 
  2237                              <3>  %assign block block+1
  2238                              <3>  %endrep
  2239                              <4> 
  2240                              <4>  %if round = 0
  2241                              <4>  pxor xmmblock, xmm0
  2242                              <4>  %else
  2243                              <4>  %if round < 14
  2244 000002F4 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2245                              <4>  %else
  2246                              <4>  aesOPERATIONlast xmmblock, xmm0
  2247                              <4>  %endif
  2248                              <4>  %endif
  2249                              <4> 
  2250                              <4>  %assign block block+1
  2251                              <4> 
  2252                              <4>  %if round = 0
  2253                              <4>  pxor xmmblock, xmm0
  2254                              <4>  %else
  2255                              <4>  %if round < 14
  2256 000002F9 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2257                              <4>  %else
  2258                              <4>  aesOPERATIONlast xmmblock, xmm0
  2259                              <4>  %endif
  2260                              <4>  %endif
  2261                              <4> 
  2262                              <4>  %assign block block+1
  2263                              <4> 
  2264                              <4>  %if round = 0
  2265                              <4>  pxor xmmblock, xmm0
  2266                              <4>  %else
  2267                              <4>  %if round < 14
  2268 000002FE 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2269                              <4>  %else
  2270                              <4>  aesOPERATIONlast xmmblock, xmm0
  2271                              <4>  %endif
  2272                              <4>  %endif
  2273                              <4> 
  2274                              <4>  %assign block block+1
  2275                              <4> 
  2276                              <4>  %if round = 0
  2277                              <4>  pxor xmmblock, xmm0
  2278                              <4>  %else
  2279                              <4>  %if round < 14
  2280 00000303 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2281                              <4>  %else
  2282                              <4>  aesOPERATIONlast xmmblock, xmm0
  2283                              <4>  %endif
  2284                              <4>  %endif
  2285                              <4> 
  2286                              <4>  %assign block block+1
  2287                              <4> 
  2288                              <4>  %if round = 0
  2289                              <4>  pxor xmmblock, xmm0
  2290                              <4>  %else
  2291                              <4>  %if round < 14
  2292 00000308 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  2293                              <4>  %else
  2294                              <4>  aesOPERATIONlast xmmblock, xmm0
  2295                              <4>  %endif
  2296                              <4>  %endif
  2297                              <4> 
  2298                              <4>  %assign block block+1
  2299                              <4> 
  2300                              <4>  %if round = 0
  2301                              <4>  pxor xmmblock, xmm0
  2302                              <4>  %else
  2303                              <4>  %if round < 14
  2304 0000030D 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  2305                              <4>  %else
  2306                              <4>  aesOPERATIONlast xmmblock, xmm0
  2307                              <4>  %endif
  2308                              <4>  %endif
  2309                              <4> 
  2310                              <4>  %assign block block+1
  2311                              <4> 
  2312                              <4>  %if round = 0
  2313                              <4>  pxor xmmblock, xmm0
  2314                              <4>  %else
  2315                              <4>  %if round < 14
  2316 00000312 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  2317                              <4>  %else
  2318                              <4>  aesOPERATIONlast xmmblock, xmm0
  2319                              <4>  %endif
  2320                              <4>  %endif
  2321                              <4> 
  2322                              <4>  %assign block block+1
  2323                              <3> 
  2324                              <3>  %assign round round+1
  2325 00000317 F30F6F81D0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  2326                              <3> 
  2327                              <3>  %assign block 1
  2328                              <3>  %rep BLOCK_COUNT
  2329                              <3> 
  2330                              <3>  %if round = 0
  2331                              <3>  pxor xmmblock, xmm0
  2332                              <3>  %else
  2333                              <3>  %if round < 14
  2334                              <3>  aesOPERATION xmmblock, xmm0
  2335                              <3>  %else
  2336                              <3>  aesOPERATIONlast xmmblock, xmm0
  2337                              <3>  %endif
  2338                              <3>  %endif
  2339                              <3> 
  2340                              <3>  %assign block block+1
  2341                              <3>  %endrep
  2342                              <4> 
  2343                              <4>  %if round = 0
  2344                              <4>  pxor xmmblock, xmm0
  2345                              <4>  %else
  2346                              <4>  %if round < 14
  2347 0000031F 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2348                              <4>  %else
  2349                              <4>  aesOPERATIONlast xmmblock, xmm0
  2350                              <4>  %endif
  2351                              <4>  %endif
  2352                              <4> 
  2353                              <4>  %assign block block+1
  2354                              <4> 
  2355                              <4>  %if round = 0
  2356                              <4>  pxor xmmblock, xmm0
  2357                              <4>  %else
  2358                              <4>  %if round < 14
  2359 00000324 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2360                              <4>  %else
  2361                              <4>  aesOPERATIONlast xmmblock, xmm0
  2362                              <4>  %endif
  2363                              <4>  %endif
  2364                              <4> 
  2365                              <4>  %assign block block+1
  2366                              <4> 
  2367                              <4>  %if round = 0
  2368                              <4>  pxor xmmblock, xmm0
  2369                              <4>  %else
  2370                              <4>  %if round < 14
  2371 00000329 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2372                              <4>  %else
  2373                              <4>  aesOPERATIONlast xmmblock, xmm0
  2374                              <4>  %endif
  2375                              <4>  %endif
  2376                              <4> 
  2377                              <4>  %assign block block+1
  2378                              <4> 
  2379                              <4>  %if round = 0
  2380                              <4>  pxor xmmblock, xmm0
  2381                              <4>  %else
  2382                              <4>  %if round < 14
  2383 0000032E 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2384                              <4>  %else
  2385                              <4>  aesOPERATIONlast xmmblock, xmm0
  2386                              <4>  %endif
  2387                              <4>  %endif
  2388                              <4> 
  2389                              <4>  %assign block block+1
  2390                              <4> 
  2391                              <4>  %if round = 0
  2392                              <4>  pxor xmmblock, xmm0
  2393                              <4>  %else
  2394                              <4>  %if round < 14
  2395 00000333 660F38DEE8          <4>  aesOPERATION xmmblock, xmm0
  2396                              <4>  %else
  2397                              <4>  aesOPERATIONlast xmmblock, xmm0
  2398                              <4>  %endif
  2399                              <4>  %endif
  2400                              <4> 
  2401                              <4>  %assign block block+1
  2402                              <4> 
  2403                              <4>  %if round = 0
  2404                              <4>  pxor xmmblock, xmm0
  2405                              <4>  %else
  2406                              <4>  %if round < 14
  2407 00000338 660F38DEF0          <4>  aesOPERATION xmmblock, xmm0
  2408                              <4>  %else
  2409                              <4>  aesOPERATIONlast xmmblock, xmm0
  2410                              <4>  %endif
  2411                              <4>  %endif
  2412                              <4> 
  2413                              <4>  %assign block block+1
  2414                              <4> 
  2415                              <4>  %if round = 0
  2416                              <4>  pxor xmmblock, xmm0
  2417                              <4>  %else
  2418                              <4>  %if round < 14
  2419 0000033D 660F38DEF8          <4>  aesOPERATION xmmblock, xmm0
  2420                              <4>  %else
  2421                              <4>  aesOPERATIONlast xmmblock, xmm0
  2422                              <4>  %endif
  2423                              <4>  %endif
  2424                              <4> 
  2425                              <4>  %assign block block+1
  2426                              <3> 
  2427                              <3>  %assign round round+1
  2428 00000342 F30F6F81E0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  2429                              <3> 
  2430                              <3>  %assign block 1
  2431                              <3>  %rep BLOCK_COUNT
  2432                              <3> 
  2433                              <3>  %if round = 0
  2434                              <3>  pxor xmmblock, xmm0
  2435                              <3>  %else
  2436                              <3>  %if round < 14
  2437                              <3>  aesOPERATION xmmblock, xmm0
  2438                              <3>  %else
  2439                              <3>  aesOPERATIONlast xmmblock, xmm0
  2440                              <3>  %endif
  2441                              <3>  %endif
  2442                              <3> 
  2443                              <3>  %assign block block+1
  2444                              <3>  %endrep
  2445                              <4> 
  2446                              <4>  %if round = 0
  2447                              <4>  pxor xmmblock, xmm0
  2448                              <4>  %else
  2449                              <4>  %if round < 14
  2450                              <4>  aesOPERATION xmmblock, xmm0
  2451                              <4>  %else
  2452 0000034A 660F38DFC8          <4>  aesOPERATIONlast xmmblock, xmm0
  2453                              <4>  %endif
  2454                              <4>  %endif
  2455                              <4> 
  2456                              <4>  %assign block block+1
  2457                              <4> 
  2458                              <4>  %if round = 0
  2459                              <4>  pxor xmmblock, xmm0
  2460                              <4>  %else
  2461                              <4>  %if round < 14
  2462                              <4>  aesOPERATION xmmblock, xmm0
  2463                              <4>  %else
  2464 0000034F 660F38DFD0          <4>  aesOPERATIONlast xmmblock, xmm0
  2465                              <4>  %endif
  2466                              <4>  %endif
  2467                              <4> 
  2468                              <4>  %assign block block+1
  2469                              <4> 
  2470                              <4>  %if round = 0
  2471                              <4>  pxor xmmblock, xmm0
  2472                              <4>  %else
  2473                              <4>  %if round < 14
  2474                              <4>  aesOPERATION xmmblock, xmm0
  2475                              <4>  %else
  2476 00000354 660F38DFD8          <4>  aesOPERATIONlast xmmblock, xmm0
  2477                              <4>  %endif
  2478                              <4>  %endif
  2479                              <4> 
  2480                              <4>  %assign block block+1
  2481                              <4> 
  2482                              <4>  %if round = 0
  2483                              <4>  pxor xmmblock, xmm0
  2484                              <4>  %else
  2485                              <4>  %if round < 14
  2486                              <4>  aesOPERATION xmmblock, xmm0
  2487                              <4>  %else
  2488 00000359 660F38DFE0          <4>  aesOPERATIONlast xmmblock, xmm0
  2489                              <4>  %endif
  2490                              <4>  %endif
  2491                              <4> 
  2492                              <4>  %assign block block+1
  2493                              <4> 
  2494                              <4>  %if round = 0
  2495                              <4>  pxor xmmblock, xmm0
  2496                              <4>  %else
  2497                              <4>  %if round < 14
  2498                              <4>  aesOPERATION xmmblock, xmm0
  2499                              <4>  %else
  2500 0000035E 660F38DFE8          <4>  aesOPERATIONlast xmmblock, xmm0
  2501                              <4>  %endif
  2502                              <4>  %endif
  2503                              <4> 
  2504                              <4>  %assign block block+1
  2505                              <4> 
  2506                              <4>  %if round = 0
  2507                              <4>  pxor xmmblock, xmm0
  2508                              <4>  %else
  2509                              <4>  %if round < 14
  2510                              <4>  aesOPERATION xmmblock, xmm0
  2511                              <4>  %else
  2512 00000363 660F38DFF0          <4>  aesOPERATIONlast xmmblock, xmm0
  2513                              <4>  %endif
  2514                              <4>  %endif
  2515                              <4> 
  2516                              <4>  %assign block block+1
  2517                              <4> 
  2518                              <4>  %if round = 0
  2519                              <4>  pxor xmmblock, xmm0
  2520                              <4>  %else
  2521                              <4>  %if round < 14
  2522                              <4>  aesOPERATION xmmblock, xmm0
  2523                              <4>  %else
  2524 00000368 660F38DFF8          <4>  aesOPERATIONlast xmmblock, xmm0
  2525                              <4>  %endif
  2526                              <4>  %endif
  2527                              <4> 
  2528                              <4>  %assign block block+1
  2529                              <3> 
  2530                              <3>  %assign round round+1
  2531                              <2> 
  2532                              <2> 
  2533                              <2>  %assign block 1
  2534                              <2>  %rep BLOCK_COUNT
  2535                              <2>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2536                              <2>  %assign block block+1
  2537                              <2>  %endrep
  2538 0000036D F30F7F0A            <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2539                              <3>  %assign block block+1
  2540 00000371 F30F7F5210          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2541                              <3>  %assign block block+1
  2542 00000376 F30F7F5A20          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2543                              <3>  %assign block block+1
  2544 0000037B F30F7F6230          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2545                              <3>  %assign block block+1
  2546 00000380 F30F7F6A40          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2547                              <3>  %assign block block+1
  2548 00000385 F30F7F7250          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2549                              <3>  %assign block block+1
  2550 0000038A F30F7F7A60          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  2551                              <3>  %assign block block+1
  2552                              <2> 
  2553                              <2>  %undef OPERATION
  2554                              <2>  %undef BLOCK_COUNT
  2555                              <1> 
  2556 0000038F 83C270              <1>  add Rdx, 16 * MAX_REG_BLOCK_COUNT
  2557 00000392 48                  <1>  dec eax
  2558 00000393 0F854DFDFFFF        <1>  jnz .1
  2559                              <1> 
  2560                              <1>  %if (32 % MAX_REG_BLOCK_COUNT) != 0
  2561                              <1>  aes_hw_cpu OPERATION_32_BLOCKS, (32 % MAX_REG_BLOCK_COUNT)
  2562                              <2>  %define OPERATION %1
  2563                              <2>  %define BLOCK_COUNT %2
  2564                              <2> 
  2565                              <2> 
  2566                              <2>  %assign block 1
  2567                              <2>  %rep BLOCK_COUNT
  2568                              <2>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  2569                              <2>  %assign block block+1
  2570                              <2>  %endrep
  2571 00000399 F30F6F0A            <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  2572                              <3>  %assign block block+1
  2573 0000039D F30F6F5210          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  2574                              <3>  %assign block block+1
  2575 000003A2 F30F6F5A20          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  2576                              <3>  %assign block block+1
  2577 000003A7 F30F6F6230          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  2578                              <3>  %assign block block+1
  2579                              <2> 
  2580                              <2> 
  2581                              <2>  %assign round 0
  2582                              <2>  %rep 15
  2583                              <2>  movdqu xmm0, [Rcx + 16 * round]
  2584                              <2> 
  2585                              <2>  %assign block 1
  2586                              <2>  %rep BLOCK_COUNT
  2587                              <2> 
  2588                              <2>  %if round = 0
  2589                              <2>  pxor xmmblock, xmm0
  2590                              <2>  %else
  2591                              <2>  %if round < 14
  2592                              <2>  aesOPERATION xmmblock, xmm0
  2593                              <2>  %else
  2594                              <2>  aesOPERATIONlast xmmblock, xmm0
  2595                              <2>  %endif
  2596                              <2>  %endif
  2597                              <2> 
  2598                              <2>  %assign block block+1
  2599                              <2>  %endrep
  2600                              <2> 
  2601                              <2>  %assign round round+1
  2602                              <2>  %endrep
  2603 000003AC F30F6F01            <3>  movdqu xmm0, [Rcx + 16 * round]
  2604                              <3> 
  2605                              <3>  %assign block 1
  2606                              <3>  %rep BLOCK_COUNT
  2607                              <3> 
  2608                              <3>  %if round = 0
  2609                              <3>  pxor xmmblock, xmm0
  2610                              <3>  %else
  2611                              <3>  %if round < 14
  2612                              <3>  aesOPERATION xmmblock, xmm0
  2613                              <3>  %else
  2614                              <3>  aesOPERATIONlast xmmblock, xmm0
  2615                              <3>  %endif
  2616                              <3>  %endif
  2617                              <3> 
  2618                              <3>  %assign block block+1
  2619                              <3>  %endrep
  2620                              <4> 
  2621                              <4>  %if round = 0
  2622 000003B0 660FEFC8            <4>  pxor xmmblock, xmm0
  2623                              <4>  %else
  2624                              <4>  %if round < 14
  2625                              <4>  aesOPERATION xmmblock, xmm0
  2626                              <4>  %else
  2627                              <4>  aesOPERATIONlast xmmblock, xmm0
  2628                              <4>  %endif
  2629                              <4>  %endif
  2630                              <4> 
  2631                              <4>  %assign block block+1
  2632                              <4> 
  2633                              <4>  %if round = 0
  2634 000003B4 660FEFD0            <4>  pxor xmmblock, xmm0
  2635                              <4>  %else
  2636                              <4>  %if round < 14
  2637                              <4>  aesOPERATION xmmblock, xmm0
  2638                              <4>  %else
  2639                              <4>  aesOPERATIONlast xmmblock, xmm0
  2640                              <4>  %endif
  2641                              <4>  %endif
  2642                              <4> 
  2643                              <4>  %assign block block+1
  2644                              <4> 
  2645                              <4>  %if round = 0
  2646 000003B8 660FEFD8            <4>  pxor xmmblock, xmm0
  2647                              <4>  %else
  2648                              <4>  %if round < 14
  2649                              <4>  aesOPERATION xmmblock, xmm0
  2650                              <4>  %else
  2651                              <4>  aesOPERATIONlast xmmblock, xmm0
  2652                              <4>  %endif
  2653                              <4>  %endif
  2654                              <4> 
  2655                              <4>  %assign block block+1
  2656                              <4> 
  2657                              <4>  %if round = 0
  2658 000003BC 660FEFE0            <4>  pxor xmmblock, xmm0
  2659                              <4>  %else
  2660                              <4>  %if round < 14
  2661                              <4>  aesOPERATION xmmblock, xmm0
  2662                              <4>  %else
  2663                              <4>  aesOPERATIONlast xmmblock, xmm0
  2664                              <4>  %endif
  2665                              <4>  %endif
  2666                              <4> 
  2667                              <4>  %assign block block+1
  2668                              <3> 
  2669                              <3>  %assign round round+1
  2670 000003C0 F30F6F4110          <3>  movdqu xmm0, [Rcx + 16 * round]
  2671                              <3> 
  2672                              <3>  %assign block 1
  2673                              <3>  %rep BLOCK_COUNT
  2674                              <3> 
  2675                              <3>  %if round = 0
  2676                              <3>  pxor xmmblock, xmm0
  2677                              <3>  %else
  2678                              <3>  %if round < 14
  2679                              <3>  aesOPERATION xmmblock, xmm0
  2680                              <3>  %else
  2681                              <3>  aesOPERATIONlast xmmblock, xmm0
  2682                              <3>  %endif
  2683                              <3>  %endif
  2684                              <3> 
  2685                              <3>  %assign block block+1
  2686                              <3>  %endrep
  2687                              <4> 
  2688                              <4>  %if round = 0
  2689                              <4>  pxor xmmblock, xmm0
  2690                              <4>  %else
  2691                              <4>  %if round < 14
  2692 000003C5 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2693                              <4>  %else
  2694                              <4>  aesOPERATIONlast xmmblock, xmm0
  2695                              <4>  %endif
  2696                              <4>  %endif
  2697                              <4> 
  2698                              <4>  %assign block block+1
  2699                              <4> 
  2700                              <4>  %if round = 0
  2701                              <4>  pxor xmmblock, xmm0
  2702                              <4>  %else
  2703                              <4>  %if round < 14
  2704 000003CA 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2705                              <4>  %else
  2706                              <4>  aesOPERATIONlast xmmblock, xmm0
  2707                              <4>  %endif
  2708                              <4>  %endif
  2709                              <4> 
  2710                              <4>  %assign block block+1
  2711                              <4> 
  2712                              <4>  %if round = 0
  2713                              <4>  pxor xmmblock, xmm0
  2714                              <4>  %else
  2715                              <4>  %if round < 14
  2716 000003CF 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2717                              <4>  %else
  2718                              <4>  aesOPERATIONlast xmmblock, xmm0
  2719                              <4>  %endif
  2720                              <4>  %endif
  2721                              <4> 
  2722                              <4>  %assign block block+1
  2723                              <4> 
  2724                              <4>  %if round = 0
  2725                              <4>  pxor xmmblock, xmm0
  2726                              <4>  %else
  2727                              <4>  %if round < 14
  2728 000003D4 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2729                              <4>  %else
  2730                              <4>  aesOPERATIONlast xmmblock, xmm0
  2731                              <4>  %endif
  2732                              <4>  %endif
  2733                              <4> 
  2734                              <4>  %assign block block+1
  2735                              <3> 
  2736                              <3>  %assign round round+1
  2737 000003D9 F30F6F4120          <3>  movdqu xmm0, [Rcx + 16 * round]
  2738                              <3> 
  2739                              <3>  %assign block 1
  2740                              <3>  %rep BLOCK_COUNT
  2741                              <3> 
  2742                              <3>  %if round = 0
  2743                              <3>  pxor xmmblock, xmm0
  2744                              <3>  %else
  2745                              <3>  %if round < 14
  2746                              <3>  aesOPERATION xmmblock, xmm0
  2747                              <3>  %else
  2748                              <3>  aesOPERATIONlast xmmblock, xmm0
  2749                              <3>  %endif
  2750                              <3>  %endif
  2751                              <3> 
  2752                              <3>  %assign block block+1
  2753                              <3>  %endrep
  2754                              <4> 
  2755                              <4>  %if round = 0
  2756                              <4>  pxor xmmblock, xmm0
  2757                              <4>  %else
  2758                              <4>  %if round < 14
  2759 000003DE 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2760                              <4>  %else
  2761                              <4>  aesOPERATIONlast xmmblock, xmm0
  2762                              <4>  %endif
  2763                              <4>  %endif
  2764                              <4> 
  2765                              <4>  %assign block block+1
  2766                              <4> 
  2767                              <4>  %if round = 0
  2768                              <4>  pxor xmmblock, xmm0
  2769                              <4>  %else
  2770                              <4>  %if round < 14
  2771 000003E3 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2772                              <4>  %else
  2773                              <4>  aesOPERATIONlast xmmblock, xmm0
  2774                              <4>  %endif
  2775                              <4>  %endif
  2776                              <4> 
  2777                              <4>  %assign block block+1
  2778                              <4> 
  2779                              <4>  %if round = 0
  2780                              <4>  pxor xmmblock, xmm0
  2781                              <4>  %else
  2782                              <4>  %if round < 14
  2783 000003E8 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2784                              <4>  %else
  2785                              <4>  aesOPERATIONlast xmmblock, xmm0
  2786                              <4>  %endif
  2787                              <4>  %endif
  2788                              <4> 
  2789                              <4>  %assign block block+1
  2790                              <4> 
  2791                              <4>  %if round = 0
  2792                              <4>  pxor xmmblock, xmm0
  2793                              <4>  %else
  2794                              <4>  %if round < 14
  2795 000003ED 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2796                              <4>  %else
  2797                              <4>  aesOPERATIONlast xmmblock, xmm0
  2798                              <4>  %endif
  2799                              <4>  %endif
  2800                              <4> 
  2801                              <4>  %assign block block+1
  2802                              <3> 
  2803                              <3>  %assign round round+1
  2804 000003F2 F30F6F4130          <3>  movdqu xmm0, [Rcx + 16 * round]
  2805                              <3> 
  2806                              <3>  %assign block 1
  2807                              <3>  %rep BLOCK_COUNT
  2808                              <3> 
  2809                              <3>  %if round = 0
  2810                              <3>  pxor xmmblock, xmm0
  2811                              <3>  %else
  2812                              <3>  %if round < 14
  2813                              <3>  aesOPERATION xmmblock, xmm0
  2814                              <3>  %else
  2815                              <3>  aesOPERATIONlast xmmblock, xmm0
  2816                              <3>  %endif
  2817                              <3>  %endif
  2818                              <3> 
  2819                              <3>  %assign block block+1
  2820                              <3>  %endrep
  2821                              <4> 
  2822                              <4>  %if round = 0
  2823                              <4>  pxor xmmblock, xmm0
  2824                              <4>  %else
  2825                              <4>  %if round < 14
  2826 000003F7 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2827                              <4>  %else
  2828                              <4>  aesOPERATIONlast xmmblock, xmm0
  2829                              <4>  %endif
  2830                              <4>  %endif
  2831                              <4> 
  2832                              <4>  %assign block block+1
  2833                              <4> 
  2834                              <4>  %if round = 0
  2835                              <4>  pxor xmmblock, xmm0
  2836                              <4>  %else
  2837                              <4>  %if round < 14
  2838 000003FC 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2839                              <4>  %else
  2840                              <4>  aesOPERATIONlast xmmblock, xmm0
  2841                              <4>  %endif
  2842                              <4>  %endif
  2843                              <4> 
  2844                              <4>  %assign block block+1
  2845                              <4> 
  2846                              <4>  %if round = 0
  2847                              <4>  pxor xmmblock, xmm0
  2848                              <4>  %else
  2849                              <4>  %if round < 14
  2850 00000401 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2851                              <4>  %else
  2852                              <4>  aesOPERATIONlast xmmblock, xmm0
  2853                              <4>  %endif
  2854                              <4>  %endif
  2855                              <4> 
  2856                              <4>  %assign block block+1
  2857                              <4> 
  2858                              <4>  %if round = 0
  2859                              <4>  pxor xmmblock, xmm0
  2860                              <4>  %else
  2861                              <4>  %if round < 14
  2862 00000406 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2863                              <4>  %else
  2864                              <4>  aesOPERATIONlast xmmblock, xmm0
  2865                              <4>  %endif
  2866                              <4>  %endif
  2867                              <4> 
  2868                              <4>  %assign block block+1
  2869                              <3> 
  2870                              <3>  %assign round round+1
  2871 0000040B F30F6F4140          <3>  movdqu xmm0, [Rcx + 16 * round]
  2872                              <3> 
  2873                              <3>  %assign block 1
  2874                              <3>  %rep BLOCK_COUNT
  2875                              <3> 
  2876                              <3>  %if round = 0
  2877                              <3>  pxor xmmblock, xmm0
  2878                              <3>  %else
  2879                              <3>  %if round < 14
  2880                              <3>  aesOPERATION xmmblock, xmm0
  2881                              <3>  %else
  2882                              <3>  aesOPERATIONlast xmmblock, xmm0
  2883                              <3>  %endif
  2884                              <3>  %endif
  2885                              <3> 
  2886                              <3>  %assign block block+1
  2887                              <3>  %endrep
  2888                              <4> 
  2889                              <4>  %if round = 0
  2890                              <4>  pxor xmmblock, xmm0
  2891                              <4>  %else
  2892                              <4>  %if round < 14
  2893 00000410 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2894                              <4>  %else
  2895                              <4>  aesOPERATIONlast xmmblock, xmm0
  2896                              <4>  %endif
  2897                              <4>  %endif
  2898                              <4> 
  2899                              <4>  %assign block block+1
  2900                              <4> 
  2901                              <4>  %if round = 0
  2902                              <4>  pxor xmmblock, xmm0
  2903                              <4>  %else
  2904                              <4>  %if round < 14
  2905 00000415 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2906                              <4>  %else
  2907                              <4>  aesOPERATIONlast xmmblock, xmm0
  2908                              <4>  %endif
  2909                              <4>  %endif
  2910                              <4> 
  2911                              <4>  %assign block block+1
  2912                              <4> 
  2913                              <4>  %if round = 0
  2914                              <4>  pxor xmmblock, xmm0
  2915                              <4>  %else
  2916                              <4>  %if round < 14
  2917 0000041A 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2918                              <4>  %else
  2919                              <4>  aesOPERATIONlast xmmblock, xmm0
  2920                              <4>  %endif
  2921                              <4>  %endif
  2922                              <4> 
  2923                              <4>  %assign block block+1
  2924                              <4> 
  2925                              <4>  %if round = 0
  2926                              <4>  pxor xmmblock, xmm0
  2927                              <4>  %else
  2928                              <4>  %if round < 14
  2929 0000041F 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2930                              <4>  %else
  2931                              <4>  aesOPERATIONlast xmmblock, xmm0
  2932                              <4>  %endif
  2933                              <4>  %endif
  2934                              <4> 
  2935                              <4>  %assign block block+1
  2936                              <3> 
  2937                              <3>  %assign round round+1
  2938 00000424 F30F6F4150          <3>  movdqu xmm0, [Rcx + 16 * round]
  2939                              <3> 
  2940                              <3>  %assign block 1
  2941                              <3>  %rep BLOCK_COUNT
  2942                              <3> 
  2943                              <3>  %if round = 0
  2944                              <3>  pxor xmmblock, xmm0
  2945                              <3>  %else
  2946                              <3>  %if round < 14
  2947                              <3>  aesOPERATION xmmblock, xmm0
  2948                              <3>  %else
  2949                              <3>  aesOPERATIONlast xmmblock, xmm0
  2950                              <3>  %endif
  2951                              <3>  %endif
  2952                              <3> 
  2953                              <3>  %assign block block+1
  2954                              <3>  %endrep
  2955                              <4> 
  2956                              <4>  %if round = 0
  2957                              <4>  pxor xmmblock, xmm0
  2958                              <4>  %else
  2959                              <4>  %if round < 14
  2960 00000429 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  2961                              <4>  %else
  2962                              <4>  aesOPERATIONlast xmmblock, xmm0
  2963                              <4>  %endif
  2964                              <4>  %endif
  2965                              <4> 
  2966                              <4>  %assign block block+1
  2967                              <4> 
  2968                              <4>  %if round = 0
  2969                              <4>  pxor xmmblock, xmm0
  2970                              <4>  %else
  2971                              <4>  %if round < 14
  2972 0000042E 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  2973                              <4>  %else
  2974                              <4>  aesOPERATIONlast xmmblock, xmm0
  2975                              <4>  %endif
  2976                              <4>  %endif
  2977                              <4> 
  2978                              <4>  %assign block block+1
  2979                              <4> 
  2980                              <4>  %if round = 0
  2981                              <4>  pxor xmmblock, xmm0
  2982                              <4>  %else
  2983                              <4>  %if round < 14
  2984 00000433 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  2985                              <4>  %else
  2986                              <4>  aesOPERATIONlast xmmblock, xmm0
  2987                              <4>  %endif
  2988                              <4>  %endif
  2989                              <4> 
  2990                              <4>  %assign block block+1
  2991                              <4> 
  2992                              <4>  %if round = 0
  2993                              <4>  pxor xmmblock, xmm0
  2994                              <4>  %else
  2995                              <4>  %if round < 14
  2996 00000438 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  2997                              <4>  %else
  2998                              <4>  aesOPERATIONlast xmmblock, xmm0
  2999                              <4>  %endif
  3000                              <4>  %endif
  3001                              <4> 
  3002                              <4>  %assign block block+1
  3003                              <3> 
  3004                              <3>  %assign round round+1
  3005 0000043D F30F6F4160          <3>  movdqu xmm0, [Rcx + 16 * round]
  3006                              <3> 
  3007                              <3>  %assign block 1
  3008                              <3>  %rep BLOCK_COUNT
  3009                              <3> 
  3010                              <3>  %if round = 0
  3011                              <3>  pxor xmmblock, xmm0
  3012                              <3>  %else
  3013                              <3>  %if round < 14
  3014                              <3>  aesOPERATION xmmblock, xmm0
  3015                              <3>  %else
  3016                              <3>  aesOPERATIONlast xmmblock, xmm0
  3017                              <3>  %endif
  3018                              <3>  %endif
  3019                              <3> 
  3020                              <3>  %assign block block+1
  3021                              <3>  %endrep
  3022                              <4> 
  3023                              <4>  %if round = 0
  3024                              <4>  pxor xmmblock, xmm0
  3025                              <4>  %else
  3026                              <4>  %if round < 14
  3027 00000442 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3028                              <4>  %else
  3029                              <4>  aesOPERATIONlast xmmblock, xmm0
  3030                              <4>  %endif
  3031                              <4>  %endif
  3032                              <4> 
  3033                              <4>  %assign block block+1
  3034                              <4> 
  3035                              <4>  %if round = 0
  3036                              <4>  pxor xmmblock, xmm0
  3037                              <4>  %else
  3038                              <4>  %if round < 14
  3039 00000447 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3040                              <4>  %else
  3041                              <4>  aesOPERATIONlast xmmblock, xmm0
  3042                              <4>  %endif
  3043                              <4>  %endif
  3044                              <4> 
  3045                              <4>  %assign block block+1
  3046                              <4> 
  3047                              <4>  %if round = 0
  3048                              <4>  pxor xmmblock, xmm0
  3049                              <4>  %else
  3050                              <4>  %if round < 14
  3051 0000044C 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3052                              <4>  %else
  3053                              <4>  aesOPERATIONlast xmmblock, xmm0
  3054                              <4>  %endif
  3055                              <4>  %endif
  3056                              <4> 
  3057                              <4>  %assign block block+1
  3058                              <4> 
  3059                              <4>  %if round = 0
  3060                              <4>  pxor xmmblock, xmm0
  3061                              <4>  %else
  3062                              <4>  %if round < 14
  3063 00000451 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3064                              <4>  %else
  3065                              <4>  aesOPERATIONlast xmmblock, xmm0
  3066                              <4>  %endif
  3067                              <4>  %endif
  3068                              <4> 
  3069                              <4>  %assign block block+1
  3070                              <3> 
  3071                              <3>  %assign round round+1
  3072 00000456 F30F6F4170          <3>  movdqu xmm0, [Rcx + 16 * round]
  3073                              <3> 
  3074                              <3>  %assign block 1
  3075                              <3>  %rep BLOCK_COUNT
  3076                              <3> 
  3077                              <3>  %if round = 0
  3078                              <3>  pxor xmmblock, xmm0
  3079                              <3>  %else
  3080                              <3>  %if round < 14
  3081                              <3>  aesOPERATION xmmblock, xmm0
  3082                              <3>  %else
  3083                              <3>  aesOPERATIONlast xmmblock, xmm0
  3084                              <3>  %endif
  3085                              <3>  %endif
  3086                              <3> 
  3087                              <3>  %assign block block+1
  3088                              <3>  %endrep
  3089                              <4> 
  3090                              <4>  %if round = 0
  3091                              <4>  pxor xmmblock, xmm0
  3092                              <4>  %else
  3093                              <4>  %if round < 14
  3094 0000045B 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3095                              <4>  %else
  3096                              <4>  aesOPERATIONlast xmmblock, xmm0
  3097                              <4>  %endif
  3098                              <4>  %endif
  3099                              <4> 
  3100                              <4>  %assign block block+1
  3101                              <4> 
  3102                              <4>  %if round = 0
  3103                              <4>  pxor xmmblock, xmm0
  3104                              <4>  %else
  3105                              <4>  %if round < 14
  3106 00000460 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3107                              <4>  %else
  3108                              <4>  aesOPERATIONlast xmmblock, xmm0
  3109                              <4>  %endif
  3110                              <4>  %endif
  3111                              <4> 
  3112                              <4>  %assign block block+1
  3113                              <4> 
  3114                              <4>  %if round = 0
  3115                              <4>  pxor xmmblock, xmm0
  3116                              <4>  %else
  3117                              <4>  %if round < 14
  3118 00000465 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3119                              <4>  %else
  3120                              <4>  aesOPERATIONlast xmmblock, xmm0
  3121                              <4>  %endif
  3122                              <4>  %endif
  3123                              <4> 
  3124                              <4>  %assign block block+1
  3125                              <4> 
  3126                              <4>  %if round = 0
  3127                              <4>  pxor xmmblock, xmm0
  3128                              <4>  %else
  3129                              <4>  %if round < 14
  3130 0000046A 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3131                              <4>  %else
  3132                              <4>  aesOPERATIONlast xmmblock, xmm0
  3133                              <4>  %endif
  3134                              <4>  %endif
  3135                              <4> 
  3136                              <4>  %assign block block+1
  3137                              <3> 
  3138                              <3>  %assign round round+1
  3139 0000046F F30F6F8180000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  3140                              <3> 
  3141                              <3>  %assign block 1
  3142                              <3>  %rep BLOCK_COUNT
  3143                              <3> 
  3144                              <3>  %if round = 0
  3145                              <3>  pxor xmmblock, xmm0
  3146                              <3>  %else
  3147                              <3>  %if round < 14
  3148                              <3>  aesOPERATION xmmblock, xmm0
  3149                              <3>  %else
  3150                              <3>  aesOPERATIONlast xmmblock, xmm0
  3151                              <3>  %endif
  3152                              <3>  %endif
  3153                              <3> 
  3154                              <3>  %assign block block+1
  3155                              <3>  %endrep
  3156                              <4> 
  3157                              <4>  %if round = 0
  3158                              <4>  pxor xmmblock, xmm0
  3159                              <4>  %else
  3160                              <4>  %if round < 14
  3161 00000477 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3162                              <4>  %else
  3163                              <4>  aesOPERATIONlast xmmblock, xmm0
  3164                              <4>  %endif
  3165                              <4>  %endif
  3166                              <4> 
  3167                              <4>  %assign block block+1
  3168                              <4> 
  3169                              <4>  %if round = 0
  3170                              <4>  pxor xmmblock, xmm0
  3171                              <4>  %else
  3172                              <4>  %if round < 14
  3173 0000047C 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3174                              <4>  %else
  3175                              <4>  aesOPERATIONlast xmmblock, xmm0
  3176                              <4>  %endif
  3177                              <4>  %endif
  3178                              <4> 
  3179                              <4>  %assign block block+1
  3180                              <4> 
  3181                              <4>  %if round = 0
  3182                              <4>  pxor xmmblock, xmm0
  3183                              <4>  %else
  3184                              <4>  %if round < 14
  3185 00000481 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3186                              <4>  %else
  3187                              <4>  aesOPERATIONlast xmmblock, xmm0
  3188                              <4>  %endif
  3189                              <4>  %endif
  3190                              <4> 
  3191                              <4>  %assign block block+1
  3192                              <4> 
  3193                              <4>  %if round = 0
  3194                              <4>  pxor xmmblock, xmm0
  3195                              <4>  %else
  3196                              <4>  %if round < 14
  3197 00000486 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3198                              <4>  %else
  3199                              <4>  aesOPERATIONlast xmmblock, xmm0
  3200                              <4>  %endif
  3201                              <4>  %endif
  3202                              <4> 
  3203                              <4>  %assign block block+1
  3204                              <3> 
  3205                              <3>  %assign round round+1
  3206 0000048B F30F6F8190000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  3207                              <3> 
  3208                              <3>  %assign block 1
  3209                              <3>  %rep BLOCK_COUNT
  3210                              <3> 
  3211                              <3>  %if round = 0
  3212                              <3>  pxor xmmblock, xmm0
  3213                              <3>  %else
  3214                              <3>  %if round < 14
  3215                              <3>  aesOPERATION xmmblock, xmm0
  3216                              <3>  %else
  3217                              <3>  aesOPERATIONlast xmmblock, xmm0
  3218                              <3>  %endif
  3219                              <3>  %endif
  3220                              <3> 
  3221                              <3>  %assign block block+1
  3222                              <3>  %endrep
  3223                              <4> 
  3224                              <4>  %if round = 0
  3225                              <4>  pxor xmmblock, xmm0
  3226                              <4>  %else
  3227                              <4>  %if round < 14
  3228 00000493 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3229                              <4>  %else
  3230                              <4>  aesOPERATIONlast xmmblock, xmm0
  3231                              <4>  %endif
  3232                              <4>  %endif
  3233                              <4> 
  3234                              <4>  %assign block block+1
  3235                              <4> 
  3236                              <4>  %if round = 0
  3237                              <4>  pxor xmmblock, xmm0
  3238                              <4>  %else
  3239                              <4>  %if round < 14
  3240 00000498 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3241                              <4>  %else
  3242                              <4>  aesOPERATIONlast xmmblock, xmm0
  3243                              <4>  %endif
  3244                              <4>  %endif
  3245                              <4> 
  3246                              <4>  %assign block block+1
  3247                              <4> 
  3248                              <4>  %if round = 0
  3249                              <4>  pxor xmmblock, xmm0
  3250                              <4>  %else
  3251                              <4>  %if round < 14
  3252 0000049D 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3253                              <4>  %else
  3254                              <4>  aesOPERATIONlast xmmblock, xmm0
  3255                              <4>  %endif
  3256                              <4>  %endif
  3257                              <4> 
  3258                              <4>  %assign block block+1
  3259                              <4> 
  3260                              <4>  %if round = 0
  3261                              <4>  pxor xmmblock, xmm0
  3262                              <4>  %else
  3263                              <4>  %if round < 14
  3264 000004A2 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3265                              <4>  %else
  3266                              <4>  aesOPERATIONlast xmmblock, xmm0
  3267                              <4>  %endif
  3268                              <4>  %endif
  3269                              <4> 
  3270                              <4>  %assign block block+1
  3271                              <3> 
  3272                              <3>  %assign round round+1
  3273 000004A7 F30F6F81A0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  3274                              <3> 
  3275                              <3>  %assign block 1
  3276                              <3>  %rep BLOCK_COUNT
  3277                              <3> 
  3278                              <3>  %if round = 0
  3279                              <3>  pxor xmmblock, xmm0
  3280                              <3>  %else
  3281                              <3>  %if round < 14
  3282                              <3>  aesOPERATION xmmblock, xmm0
  3283                              <3>  %else
  3284                              <3>  aesOPERATIONlast xmmblock, xmm0
  3285                              <3>  %endif
  3286                              <3>  %endif
  3287                              <3> 
  3288                              <3>  %assign block block+1
  3289                              <3>  %endrep
  3290                              <4> 
  3291                              <4>  %if round = 0
  3292                              <4>  pxor xmmblock, xmm0
  3293                              <4>  %else
  3294                              <4>  %if round < 14
  3295 000004AF 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3296                              <4>  %else
  3297                              <4>  aesOPERATIONlast xmmblock, xmm0
  3298                              <4>  %endif
  3299                              <4>  %endif
  3300                              <4> 
  3301                              <4>  %assign block block+1
  3302                              <4> 
  3303                              <4>  %if round = 0
  3304                              <4>  pxor xmmblock, xmm0
  3305                              <4>  %else
  3306                              <4>  %if round < 14
  3307 000004B4 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3308                              <4>  %else
  3309                              <4>  aesOPERATIONlast xmmblock, xmm0
  3310                              <4>  %endif
  3311                              <4>  %endif
  3312                              <4> 
  3313                              <4>  %assign block block+1
  3314                              <4> 
  3315                              <4>  %if round = 0
  3316                              <4>  pxor xmmblock, xmm0
  3317                              <4>  %else
  3318                              <4>  %if round < 14
  3319 000004B9 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3320                              <4>  %else
  3321                              <4>  aesOPERATIONlast xmmblock, xmm0
  3322                              <4>  %endif
  3323                              <4>  %endif
  3324                              <4> 
  3325                              <4>  %assign block block+1
  3326                              <4> 
  3327                              <4>  %if round = 0
  3328                              <4>  pxor xmmblock, xmm0
  3329                              <4>  %else
  3330                              <4>  %if round < 14
  3331 000004BE 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3332                              <4>  %else
  3333                              <4>  aesOPERATIONlast xmmblock, xmm0
  3334                              <4>  %endif
  3335                              <4>  %endif
  3336                              <4> 
  3337                              <4>  %assign block block+1
  3338                              <3> 
  3339                              <3>  %assign round round+1
  3340 000004C3 F30F6F81B0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  3341                              <3> 
  3342                              <3>  %assign block 1
  3343                              <3>  %rep BLOCK_COUNT
  3344                              <3> 
  3345                              <3>  %if round = 0
  3346                              <3>  pxor xmmblock, xmm0
  3347                              <3>  %else
  3348                              <3>  %if round < 14
  3349                              <3>  aesOPERATION xmmblock, xmm0
  3350                              <3>  %else
  3351                              <3>  aesOPERATIONlast xmmblock, xmm0
  3352                              <3>  %endif
  3353                              <3>  %endif
  3354                              <3> 
  3355                              <3>  %assign block block+1
  3356                              <3>  %endrep
  3357                              <4> 
  3358                              <4>  %if round = 0
  3359                              <4>  pxor xmmblock, xmm0
  3360                              <4>  %else
  3361                              <4>  %if round < 14
  3362 000004CB 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3363                              <4>  %else
  3364                              <4>  aesOPERATIONlast xmmblock, xmm0
  3365                              <4>  %endif
  3366                              <4>  %endif
  3367                              <4> 
  3368                              <4>  %assign block block+1
  3369                              <4> 
  3370                              <4>  %if round = 0
  3371                              <4>  pxor xmmblock, xmm0
  3372                              <4>  %else
  3373                              <4>  %if round < 14
  3374 000004D0 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3375                              <4>  %else
  3376                              <4>  aesOPERATIONlast xmmblock, xmm0
  3377                              <4>  %endif
  3378                              <4>  %endif
  3379                              <4> 
  3380                              <4>  %assign block block+1
  3381                              <4> 
  3382                              <4>  %if round = 0
  3383                              <4>  pxor xmmblock, xmm0
  3384                              <4>  %else
  3385                              <4>  %if round < 14
  3386 000004D5 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3387                              <4>  %else
  3388                              <4>  aesOPERATIONlast xmmblock, xmm0
  3389                              <4>  %endif
  3390                              <4>  %endif
  3391                              <4> 
  3392                              <4>  %assign block block+1
  3393                              <4> 
  3394                              <4>  %if round = 0
  3395                              <4>  pxor xmmblock, xmm0
  3396                              <4>  %else
  3397                              <4>  %if round < 14
  3398 000004DA 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3399                              <4>  %else
  3400                              <4>  aesOPERATIONlast xmmblock, xmm0
  3401                              <4>  %endif
  3402                              <4>  %endif
  3403                              <4> 
  3404                              <4>  %assign block block+1
  3405                              <3> 
  3406                              <3>  %assign round round+1
  3407 000004DF F30F6F81C0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  3408                              <3> 
  3409                              <3>  %assign block 1
  3410                              <3>  %rep BLOCK_COUNT
  3411                              <3> 
  3412                              <3>  %if round = 0
  3413                              <3>  pxor xmmblock, xmm0
  3414                              <3>  %else
  3415                              <3>  %if round < 14
  3416                              <3>  aesOPERATION xmmblock, xmm0
  3417                              <3>  %else
  3418                              <3>  aesOPERATIONlast xmmblock, xmm0
  3419                              <3>  %endif
  3420                              <3>  %endif
  3421                              <3> 
  3422                              <3>  %assign block block+1
  3423                              <3>  %endrep
  3424                              <4> 
  3425                              <4>  %if round = 0
  3426                              <4>  pxor xmmblock, xmm0
  3427                              <4>  %else
  3428                              <4>  %if round < 14
  3429 000004E7 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3430                              <4>  %else
  3431                              <4>  aesOPERATIONlast xmmblock, xmm0
  3432                              <4>  %endif
  3433                              <4>  %endif
  3434                              <4> 
  3435                              <4>  %assign block block+1
  3436                              <4> 
  3437                              <4>  %if round = 0
  3438                              <4>  pxor xmmblock, xmm0
  3439                              <4>  %else
  3440                              <4>  %if round < 14
  3441 000004EC 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3442                              <4>  %else
  3443                              <4>  aesOPERATIONlast xmmblock, xmm0
  3444                              <4>  %endif
  3445                              <4>  %endif
  3446                              <4> 
  3447                              <4>  %assign block block+1
  3448                              <4> 
  3449                              <4>  %if round = 0
  3450                              <4>  pxor xmmblock, xmm0
  3451                              <4>  %else
  3452                              <4>  %if round < 14
  3453 000004F1 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3454                              <4>  %else
  3455                              <4>  aesOPERATIONlast xmmblock, xmm0
  3456                              <4>  %endif
  3457                              <4>  %endif
  3458                              <4> 
  3459                              <4>  %assign block block+1
  3460                              <4> 
  3461                              <4>  %if round = 0
  3462                              <4>  pxor xmmblock, xmm0
  3463                              <4>  %else
  3464                              <4>  %if round < 14
  3465 000004F6 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3466                              <4>  %else
  3467                              <4>  aesOPERATIONlast xmmblock, xmm0
  3468                              <4>  %endif
  3469                              <4>  %endif
  3470                              <4> 
  3471                              <4>  %assign block block+1
  3472                              <3> 
  3473                              <3>  %assign round round+1
  3474 000004FB F30F6F81D0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  3475                              <3> 
  3476                              <3>  %assign block 1
  3477                              <3>  %rep BLOCK_COUNT
  3478                              <3> 
  3479                              <3>  %if round = 0
  3480                              <3>  pxor xmmblock, xmm0
  3481                              <3>  %else
  3482                              <3>  %if round < 14
  3483                              <3>  aesOPERATION xmmblock, xmm0
  3484                              <3>  %else
  3485                              <3>  aesOPERATIONlast xmmblock, xmm0
  3486                              <3>  %endif
  3487                              <3>  %endif
  3488                              <3> 
  3489                              <3>  %assign block block+1
  3490                              <3>  %endrep
  3491                              <4> 
  3492                              <4>  %if round = 0
  3493                              <4>  pxor xmmblock, xmm0
  3494                              <4>  %else
  3495                              <4>  %if round < 14
  3496 00000503 660F38DEC8          <4>  aesOPERATION xmmblock, xmm0
  3497                              <4>  %else
  3498                              <4>  aesOPERATIONlast xmmblock, xmm0
  3499                              <4>  %endif
  3500                              <4>  %endif
  3501                              <4> 
  3502                              <4>  %assign block block+1
  3503                              <4> 
  3504                              <4>  %if round = 0
  3505                              <4>  pxor xmmblock, xmm0
  3506                              <4>  %else
  3507                              <4>  %if round < 14
  3508 00000508 660F38DED0          <4>  aesOPERATION xmmblock, xmm0
  3509                              <4>  %else
  3510                              <4>  aesOPERATIONlast xmmblock, xmm0
  3511                              <4>  %endif
  3512                              <4>  %endif
  3513                              <4> 
  3514                              <4>  %assign block block+1
  3515                              <4> 
  3516                              <4>  %if round = 0
  3517                              <4>  pxor xmmblock, xmm0
  3518                              <4>  %else
  3519                              <4>  %if round < 14
  3520 0000050D 660F38DED8          <4>  aesOPERATION xmmblock, xmm0
  3521                              <4>  %else
  3522                              <4>  aesOPERATIONlast xmmblock, xmm0
  3523                              <4>  %endif
  3524                              <4>  %endif
  3525                              <4> 
  3526                              <4>  %assign block block+1
  3527                              <4> 
  3528                              <4>  %if round = 0
  3529                              <4>  pxor xmmblock, xmm0
  3530                              <4>  %else
  3531                              <4>  %if round < 14
  3532 00000512 660F38DEE0          <4>  aesOPERATION xmmblock, xmm0
  3533                              <4>  %else
  3534                              <4>  aesOPERATIONlast xmmblock, xmm0
  3535                              <4>  %endif
  3536                              <4>  %endif
  3537                              <4> 
  3538                              <4>  %assign block block+1
  3539                              <3> 
  3540                              <3>  %assign round round+1
  3541 00000517 F30F6F81E0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  3542                              <3> 
  3543                              <3>  %assign block 1
  3544                              <3>  %rep BLOCK_COUNT
  3545                              <3> 
  3546                              <3>  %if round = 0
  3547                              <3>  pxor xmmblock, xmm0
  3548                              <3>  %else
  3549                              <3>  %if round < 14
  3550                              <3>  aesOPERATION xmmblock, xmm0
  3551                              <3>  %else
  3552                              <3>  aesOPERATIONlast xmmblock, xmm0
  3553                              <3>  %endif
  3554                              <3>  %endif
  3555                              <3> 
  3556                              <3>  %assign block block+1
  3557                              <3>  %endrep
  3558                              <4> 
  3559                              <4>  %if round = 0
  3560                              <4>  pxor xmmblock, xmm0
  3561                              <4>  %else
  3562                              <4>  %if round < 14
  3563                              <4>  aesOPERATION xmmblock, xmm0
  3564                              <4>  %else
  3565 0000051F 660F38DFC8          <4>  aesOPERATIONlast xmmblock, xmm0
  3566                              <4>  %endif
  3567                              <4>  %endif
  3568                              <4> 
  3569                              <4>  %assign block block+1
  3570                              <4> 
  3571                              <4>  %if round = 0
  3572                              <4>  pxor xmmblock, xmm0
  3573                              <4>  %else
  3574                              <4>  %if round < 14
  3575                              <4>  aesOPERATION xmmblock, xmm0
  3576                              <4>  %else
  3577 00000524 660F38DFD0          <4>  aesOPERATIONlast xmmblock, xmm0
  3578                              <4>  %endif
  3579                              <4>  %endif
  3580                              <4> 
  3581                              <4>  %assign block block+1
  3582                              <4> 
  3583                              <4>  %if round = 0
  3584                              <4>  pxor xmmblock, xmm0
  3585                              <4>  %else
  3586                              <4>  %if round < 14
  3587                              <4>  aesOPERATION xmmblock, xmm0
  3588                              <4>  %else
  3589 00000529 660F38DFD8          <4>  aesOPERATIONlast xmmblock, xmm0
  3590                              <4>  %endif
  3591                              <4>  %endif
  3592                              <4> 
  3593                              <4>  %assign block block+1
  3594                              <4> 
  3595                              <4>  %if round = 0
  3596                              <4>  pxor xmmblock, xmm0
  3597                              <4>  %else
  3598                              <4>  %if round < 14
  3599                              <4>  aesOPERATION xmmblock, xmm0
  3600                              <4>  %else
  3601 0000052E 660F38DFE0          <4>  aesOPERATIONlast xmmblock, xmm0
  3602                              <4>  %endif
  3603                              <4>  %endif
  3604                              <4> 
  3605                              <4>  %assign block block+1
  3606                              <3> 
  3607                              <3>  %assign round round+1
  3608                              <2> 
  3609                              <2> 
  3610                              <2>  %assign block 1
  3611                              <2>  %rep BLOCK_COUNT
  3612                              <2>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  3613                              <2>  %assign block block+1
  3614                              <2>  %endrep
  3615 00000533 F30F7F0A            <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  3616                              <3>  %assign block block+1
  3617 00000537 F30F7F5210          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  3618                              <3>  %assign block block+1
  3619 0000053C F30F7F5A20          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  3620                              <3>  %assign block block+1
  3621 00000541 F30F7F6230          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  3622                              <3>  %assign block block+1
  3623                              <2> 
  3624                              <2>  %undef OPERATION
  3625                              <2>  %undef BLOCK_COUNT
  3626                              <1>  %endif
  3627                              <1> 
  3628                              <1>  %ifidn __OUTPUT_FORMAT__, win64
  3629                              <1>  %if MAX_REG_BLOCK_COUNT > 5
  3630                              <1>  pop_xmm 6, MAX_REG_BLOCK_COUNT
  3631                              <1>  %endif
  3632                              <1>  %endif
  3633                              <1> 
  3634                              <1>  %undef OPERATION_32_BLOCKS
  3635                              <1>  %undef MAX_REG_BLOCK_COUNT
  3636                                  	aes_function_exit
  3637                              <1> 
  3638                              <1> 
  3639                              <1> 
  3640                              <1>  %ifdef MS_STDCALL
  3641 00000546 C20800              <1>  ret 8
  3642                              <1>  %else
  3643                              <1>  ret
  3644                              <1>  %endif
  3645                              <1> 
  3646                                  
  3647                                  
  3648                                  ; void aes_hw_cpu_encrypt (const byte *ks, byte *data);
  3649                                  
  3650                                  	aes_function_entry aes_hw_cpu_encrypt
  3651                              <1> 
  3652                              <1> 
  3653                              <1> 
  3654                              <1>  export_function %1, 8
  3655                              <2> 
  3656                              <2>  %ifdef MS_STDCALL
  3657                              <2>  global %1@%2
  3658                              <2>  export _%1@%2
  3659                              <2>  %1@%2:
  3660                              <2>  %elifidn __BITS__, 16
  3661                              <2>  global _%1
  3662                              <2>  _%1:
  3663                              <2>  %else
  3664                              <2>  global %1
  3665                              <2>  %1:
  3666                              <2>  %endif
  3667                              <2> 
  3668                              <1> 
  3669                              <1>  %ifidn __BITS__, 32
  3670 00000549 8B4C2404            <1>  mov ecx, [esp + 4 + 4 * 0]
  3671 0000054D 8B542408            <1>  mov edx, [esp + 4 + 4 * 1]
  3672                              <1>  %elifidn __BITS__, 64
  3673                              <1>  %ifnidn __OUTPUT_FORMAT__, win64
  3674                              <1>  mov rcx, rdi
  3675                              <1>  mov rdx, rsi
  3676                              <1>  %endif
  3677                              <1>  %endif
  3678                              <1> 
  3679                              <1> 
  3680                              <1> 
  3681                              <1> 
  3682                                  		aes_hw_cpu enc, 1
  3683                              <1>  %define OPERATION %1
  3684                              <1>  %define BLOCK_COUNT %2
  3685                              <1> 
  3686                              <1> 
  3687                              <1>  %assign block 1
  3688                              <1>  %rep BLOCK_COUNT
  3689                              <1>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  3690                              <1>  %assign block block+1
  3691                              <1>  %endrep
  3692 00000551 F30F6F0A            <2>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  3693                              <2>  %assign block block+1
  3694                              <1> 
  3695                              <1> 
  3696                              <1>  %assign round 0
  3697                              <1>  %rep 15
  3698                              <1>  movdqu xmm0, [Rcx + 16 * round]
  3699                              <1> 
  3700                              <1>  %assign block 1
  3701                              <1>  %rep BLOCK_COUNT
  3702                              <1> 
  3703                              <1>  %if round = 0
  3704                              <1>  pxor xmmblock, xmm0
  3705                              <1>  %else
  3706                              <1>  %if round < 14
  3707                              <1>  aesOPERATION xmmblock, xmm0
  3708                              <1>  %else
  3709                              <1>  aesOPERATIONlast xmmblock, xmm0
  3710                              <1>  %endif
  3711                              <1>  %endif
  3712                              <1> 
  3713                              <1>  %assign block block+1
  3714                              <1>  %endrep
  3715                              <1> 
  3716                              <1>  %assign round round+1
  3717                              <1>  %endrep
  3718 00000555 F30F6F01            <2>  movdqu xmm0, [Rcx + 16 * round]
  3719                              <2> 
  3720                              <2>  %assign block 1
  3721                              <2>  %rep BLOCK_COUNT
  3722                              <2> 
  3723                              <2>  %if round = 0
  3724                              <2>  pxor xmmblock, xmm0
  3725                              <2>  %else
  3726                              <2>  %if round < 14
  3727                              <2>  aesOPERATION xmmblock, xmm0
  3728                              <2>  %else
  3729                              <2>  aesOPERATIONlast xmmblock, xmm0
  3730                              <2>  %endif
  3731                              <2>  %endif
  3732                              <2> 
  3733                              <2>  %assign block block+1
  3734                              <2>  %endrep
  3735                              <3> 
  3736                              <3>  %if round = 0
  3737 00000559 660FEFC8            <3>  pxor xmmblock, xmm0
  3738                              <3>  %else
  3739                              <3>  %if round < 14
  3740                              <3>  aesOPERATION xmmblock, xmm0
  3741                              <3>  %else
  3742                              <3>  aesOPERATIONlast xmmblock, xmm0
  3743                              <3>  %endif
  3744                              <3>  %endif
  3745                              <3> 
  3746                              <3>  %assign block block+1
  3747                              <2> 
  3748                              <2>  %assign round round+1
  3749 0000055D F30F6F4110          <2>  movdqu xmm0, [Rcx + 16 * round]
  3750                              <2> 
  3751                              <2>  %assign block 1
  3752                              <2>  %rep BLOCK_COUNT
  3753                              <2> 
  3754                              <2>  %if round = 0
  3755                              <2>  pxor xmmblock, xmm0
  3756                              <2>  %else
  3757                              <2>  %if round < 14
  3758                              <2>  aesOPERATION xmmblock, xmm0
  3759                              <2>  %else
  3760                              <2>  aesOPERATIONlast xmmblock, xmm0
  3761                              <2>  %endif
  3762                              <2>  %endif
  3763                              <2> 
  3764                              <2>  %assign block block+1
  3765                              <2>  %endrep
  3766                              <3> 
  3767                              <3>  %if round = 0
  3768                              <3>  pxor xmmblock, xmm0
  3769                              <3>  %else
  3770                              <3>  %if round < 14
  3771 00000562 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3772                              <3>  %else
  3773                              <3>  aesOPERATIONlast xmmblock, xmm0
  3774                              <3>  %endif
  3775                              <3>  %endif
  3776                              <3> 
  3777                              <3>  %assign block block+1
  3778                              <2> 
  3779                              <2>  %assign round round+1
  3780 00000567 F30F6F4120          <2>  movdqu xmm0, [Rcx + 16 * round]
  3781                              <2> 
  3782                              <2>  %assign block 1
  3783                              <2>  %rep BLOCK_COUNT
  3784                              <2> 
  3785                              <2>  %if round = 0
  3786                              <2>  pxor xmmblock, xmm0
  3787                              <2>  %else
  3788                              <2>  %if round < 14
  3789                              <2>  aesOPERATION xmmblock, xmm0
  3790                              <2>  %else
  3791                              <2>  aesOPERATIONlast xmmblock, xmm0
  3792                              <2>  %endif
  3793                              <2>  %endif
  3794                              <2> 
  3795                              <2>  %assign block block+1
  3796                              <2>  %endrep
  3797                              <3> 
  3798                              <3>  %if round = 0
  3799                              <3>  pxor xmmblock, xmm0
  3800                              <3>  %else
  3801                              <3>  %if round < 14
  3802 0000056C 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3803                              <3>  %else
  3804                              <3>  aesOPERATIONlast xmmblock, xmm0
  3805                              <3>  %endif
  3806                              <3>  %endif
  3807                              <3> 
  3808                              <3>  %assign block block+1
  3809                              <2> 
  3810                              <2>  %assign round round+1
  3811 00000571 F30F6F4130          <2>  movdqu xmm0, [Rcx + 16 * round]
  3812                              <2> 
  3813                              <2>  %assign block 1
  3814                              <2>  %rep BLOCK_COUNT
  3815                              <2> 
  3816                              <2>  %if round = 0
  3817                              <2>  pxor xmmblock, xmm0
  3818                              <2>  %else
  3819                              <2>  %if round < 14
  3820                              <2>  aesOPERATION xmmblock, xmm0
  3821                              <2>  %else
  3822                              <2>  aesOPERATIONlast xmmblock, xmm0
  3823                              <2>  %endif
  3824                              <2>  %endif
  3825                              <2> 
  3826                              <2>  %assign block block+1
  3827                              <2>  %endrep
  3828                              <3> 
  3829                              <3>  %if round = 0
  3830                              <3>  pxor xmmblock, xmm0
  3831                              <3>  %else
  3832                              <3>  %if round < 14
  3833 00000576 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3834                              <3>  %else
  3835                              <3>  aesOPERATIONlast xmmblock, xmm0
  3836                              <3>  %endif
  3837                              <3>  %endif
  3838                              <3> 
  3839                              <3>  %assign block block+1
  3840                              <2> 
  3841                              <2>  %assign round round+1
  3842 0000057B F30F6F4140          <2>  movdqu xmm0, [Rcx + 16 * round]
  3843                              <2> 
  3844                              <2>  %assign block 1
  3845                              <2>  %rep BLOCK_COUNT
  3846                              <2> 
  3847                              <2>  %if round = 0
  3848                              <2>  pxor xmmblock, xmm0
  3849                              <2>  %else
  3850                              <2>  %if round < 14
  3851                              <2>  aesOPERATION xmmblock, xmm0
  3852                              <2>  %else
  3853                              <2>  aesOPERATIONlast xmmblock, xmm0
  3854                              <2>  %endif
  3855                              <2>  %endif
  3856                              <2> 
  3857                              <2>  %assign block block+1
  3858                              <2>  %endrep
  3859                              <3> 
  3860                              <3>  %if round = 0
  3861                              <3>  pxor xmmblock, xmm0
  3862                              <3>  %else
  3863                              <3>  %if round < 14
  3864 00000580 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3865                              <3>  %else
  3866                              <3>  aesOPERATIONlast xmmblock, xmm0
  3867                              <3>  %endif
  3868                              <3>  %endif
  3869                              <3> 
  3870                              <3>  %assign block block+1
  3871                              <2> 
  3872                              <2>  %assign round round+1
  3873 00000585 F30F6F4150          <2>  movdqu xmm0, [Rcx + 16 * round]
  3874                              <2> 
  3875                              <2>  %assign block 1
  3876                              <2>  %rep BLOCK_COUNT
  3877                              <2> 
  3878                              <2>  %if round = 0
  3879                              <2>  pxor xmmblock, xmm0
  3880                              <2>  %else
  3881                              <2>  %if round < 14
  3882                              <2>  aesOPERATION xmmblock, xmm0
  3883                              <2>  %else
  3884                              <2>  aesOPERATIONlast xmmblock, xmm0
  3885                              <2>  %endif
  3886                              <2>  %endif
  3887                              <2> 
  3888                              <2>  %assign block block+1
  3889                              <2>  %endrep
  3890                              <3> 
  3891                              <3>  %if round = 0
  3892                              <3>  pxor xmmblock, xmm0
  3893                              <3>  %else
  3894                              <3>  %if round < 14
  3895 0000058A 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3896                              <3>  %else
  3897                              <3>  aesOPERATIONlast xmmblock, xmm0
  3898                              <3>  %endif
  3899                              <3>  %endif
  3900                              <3> 
  3901                              <3>  %assign block block+1
  3902                              <2> 
  3903                              <2>  %assign round round+1
  3904 0000058F F30F6F4160          <2>  movdqu xmm0, [Rcx + 16 * round]
  3905                              <2> 
  3906                              <2>  %assign block 1
  3907                              <2>  %rep BLOCK_COUNT
  3908                              <2> 
  3909                              <2>  %if round = 0
  3910                              <2>  pxor xmmblock, xmm0
  3911                              <2>  %else
  3912                              <2>  %if round < 14
  3913                              <2>  aesOPERATION xmmblock, xmm0
  3914                              <2>  %else
  3915                              <2>  aesOPERATIONlast xmmblock, xmm0
  3916                              <2>  %endif
  3917                              <2>  %endif
  3918                              <2> 
  3919                              <2>  %assign block block+1
  3920                              <2>  %endrep
  3921                              <3> 
  3922                              <3>  %if round = 0
  3923                              <3>  pxor xmmblock, xmm0
  3924                              <3>  %else
  3925                              <3>  %if round < 14
  3926 00000594 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3927                              <3>  %else
  3928                              <3>  aesOPERATIONlast xmmblock, xmm0
  3929                              <3>  %endif
  3930                              <3>  %endif
  3931                              <3> 
  3932                              <3>  %assign block block+1
  3933                              <2> 
  3934                              <2>  %assign round round+1
  3935 00000599 F30F6F4170          <2>  movdqu xmm0, [Rcx + 16 * round]
  3936                              <2> 
  3937                              <2>  %assign block 1
  3938                              <2>  %rep BLOCK_COUNT
  3939                              <2> 
  3940                              <2>  %if round = 0
  3941                              <2>  pxor xmmblock, xmm0
  3942                              <2>  %else
  3943                              <2>  %if round < 14
  3944                              <2>  aesOPERATION xmmblock, xmm0
  3945                              <2>  %else
  3946                              <2>  aesOPERATIONlast xmmblock, xmm0
  3947                              <2>  %endif
  3948                              <2>  %endif
  3949                              <2> 
  3950                              <2>  %assign block block+1
  3951                              <2>  %endrep
  3952                              <3> 
  3953                              <3>  %if round = 0
  3954                              <3>  pxor xmmblock, xmm0
  3955                              <3>  %else
  3956                              <3>  %if round < 14
  3957 0000059E 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3958                              <3>  %else
  3959                              <3>  aesOPERATIONlast xmmblock, xmm0
  3960                              <3>  %endif
  3961                              <3>  %endif
  3962                              <3> 
  3963                              <3>  %assign block block+1
  3964                              <2> 
  3965                              <2>  %assign round round+1
  3966 000005A3 F30F6F8180000000    <2>  movdqu xmm0, [Rcx + 16 * round]
  3967                              <2> 
  3968                              <2>  %assign block 1
  3969                              <2>  %rep BLOCK_COUNT
  3970                              <2> 
  3971                              <2>  %if round = 0
  3972                              <2>  pxor xmmblock, xmm0
  3973                              <2>  %else
  3974                              <2>  %if round < 14
  3975                              <2>  aesOPERATION xmmblock, xmm0
  3976                              <2>  %else
  3977                              <2>  aesOPERATIONlast xmmblock, xmm0
  3978                              <2>  %endif
  3979                              <2>  %endif
  3980                              <2> 
  3981                              <2>  %assign block block+1
  3982                              <2>  %endrep
  3983                              <3> 
  3984                              <3>  %if round = 0
  3985                              <3>  pxor xmmblock, xmm0
  3986                              <3>  %else
  3987                              <3>  %if round < 14
  3988 000005AB 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  3989                              <3>  %else
  3990                              <3>  aesOPERATIONlast xmmblock, xmm0
  3991                              <3>  %endif
  3992                              <3>  %endif
  3993                              <3> 
  3994                              <3>  %assign block block+1
  3995                              <2> 
  3996                              <2>  %assign round round+1
  3997 000005B0 F30F6F8190000000    <2>  movdqu xmm0, [Rcx + 16 * round]
  3998                              <2> 
  3999                              <2>  %assign block 1
  4000                              <2>  %rep BLOCK_COUNT
  4001                              <2> 
  4002                              <2>  %if round = 0
  4003                              <2>  pxor xmmblock, xmm0
  4004                              <2>  %else
  4005                              <2>  %if round < 14
  4006                              <2>  aesOPERATION xmmblock, xmm0
  4007                              <2>  %else
  4008                              <2>  aesOPERATIONlast xmmblock, xmm0
  4009                              <2>  %endif
  4010                              <2>  %endif
  4011                              <2> 
  4012                              <2>  %assign block block+1
  4013                              <2>  %endrep
  4014                              <3> 
  4015                              <3>  %if round = 0
  4016                              <3>  pxor xmmblock, xmm0
  4017                              <3>  %else
  4018                              <3>  %if round < 14
  4019 000005B8 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  4020                              <3>  %else
  4021                              <3>  aesOPERATIONlast xmmblock, xmm0
  4022                              <3>  %endif
  4023                              <3>  %endif
  4024                              <3> 
  4025                              <3>  %assign block block+1
  4026                              <2> 
  4027                              <2>  %assign round round+1
  4028 000005BD F30F6F81A0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
  4029                              <2> 
  4030                              <2>  %assign block 1
  4031                              <2>  %rep BLOCK_COUNT
  4032                              <2> 
  4033                              <2>  %if round = 0
  4034                              <2>  pxor xmmblock, xmm0
  4035                              <2>  %else
  4036                              <2>  %if round < 14
  4037                              <2>  aesOPERATION xmmblock, xmm0
  4038                              <2>  %else
  4039                              <2>  aesOPERATIONlast xmmblock, xmm0
  4040                              <2>  %endif
  4041                              <2>  %endif
  4042                              <2> 
  4043                              <2>  %assign block block+1
  4044                              <2>  %endrep
  4045                              <3> 
  4046                              <3>  %if round = 0
  4047                              <3>  pxor xmmblock, xmm0
  4048                              <3>  %else
  4049                              <3>  %if round < 14
  4050 000005C5 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  4051                              <3>  %else
  4052                              <3>  aesOPERATIONlast xmmblock, xmm0
  4053                              <3>  %endif
  4054                              <3>  %endif
  4055                              <3> 
  4056                              <3>  %assign block block+1
  4057                              <2> 
  4058                              <2>  %assign round round+1
  4059 000005CA F30F6F81B0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
  4060                              <2> 
  4061                              <2>  %assign block 1
  4062                              <2>  %rep BLOCK_COUNT
  4063                              <2> 
  4064                              <2>  %if round = 0
  4065                              <2>  pxor xmmblock, xmm0
  4066                              <2>  %else
  4067                              <2>  %if round < 14
  4068                              <2>  aesOPERATION xmmblock, xmm0
  4069                              <2>  %else
  4070                              <2>  aesOPERATIONlast xmmblock, xmm0
  4071                              <2>  %endif
  4072                              <2>  %endif
  4073                              <2> 
  4074                              <2>  %assign block block+1
  4075                              <2>  %endrep
  4076                              <3> 
  4077                              <3>  %if round = 0
  4078                              <3>  pxor xmmblock, xmm0
  4079                              <3>  %else
  4080                              <3>  %if round < 14
  4081 000005D2 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  4082                              <3>  %else
  4083                              <3>  aesOPERATIONlast xmmblock, xmm0
  4084                              <3>  %endif
  4085                              <3>  %endif
  4086                              <3> 
  4087                              <3>  %assign block block+1
  4088                              <2> 
  4089                              <2>  %assign round round+1
  4090 000005D7 F30F6F81C0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
  4091                              <2> 
  4092                              <2>  %assign block 1
  4093                              <2>  %rep BLOCK_COUNT
  4094                              <2> 
  4095                              <2>  %if round = 0
  4096                              <2>  pxor xmmblock, xmm0
  4097                              <2>  %else
  4098                              <2>  %if round < 14
  4099                              <2>  aesOPERATION xmmblock, xmm0
  4100                              <2>  %else
  4101                              <2>  aesOPERATIONlast xmmblock, xmm0
  4102                              <2>  %endif
  4103                              <2>  %endif
  4104                              <2> 
  4105                              <2>  %assign block block+1
  4106                              <2>  %endrep
  4107                              <3> 
  4108                              <3>  %if round = 0
  4109                              <3>  pxor xmmblock, xmm0
  4110                              <3>  %else
  4111                              <3>  %if round < 14
  4112 000005DF 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  4113                              <3>  %else
  4114                              <3>  aesOPERATIONlast xmmblock, xmm0
  4115                              <3>  %endif
  4116                              <3>  %endif
  4117                              <3> 
  4118                              <3>  %assign block block+1
  4119                              <2> 
  4120                              <2>  %assign round round+1
  4121 000005E4 F30F6F81D0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
  4122                              <2> 
  4123                              <2>  %assign block 1
  4124                              <2>  %rep BLOCK_COUNT
  4125                              <2> 
  4126                              <2>  %if round = 0
  4127                              <2>  pxor xmmblock, xmm0
  4128                              <2>  %else
  4129                              <2>  %if round < 14
  4130                              <2>  aesOPERATION xmmblock, xmm0
  4131                              <2>  %else
  4132                              <2>  aesOPERATIONlast xmmblock, xmm0
  4133                              <2>  %endif
  4134                              <2>  %endif
  4135                              <2> 
  4136                              <2>  %assign block block+1
  4137                              <2>  %endrep
  4138                              <3> 
  4139                              <3>  %if round = 0
  4140                              <3>  pxor xmmblock, xmm0
  4141                              <3>  %else
  4142                              <3>  %if round < 14
  4143 000005EC 660F38DCC8          <3>  aesOPERATION xmmblock, xmm0
  4144                              <3>  %else
  4145                              <3>  aesOPERATIONlast xmmblock, xmm0
  4146                              <3>  %endif
  4147                              <3>  %endif
  4148                              <3> 
  4149                              <3>  %assign block block+1
  4150                              <2> 
  4151                              <2>  %assign round round+1
  4152 000005F1 F30F6F81E0000000    <2>  movdqu xmm0, [Rcx + 16 * round]
  4153                              <2> 
  4154                              <2>  %assign block 1
  4155                              <2>  %rep BLOCK_COUNT
  4156                              <2> 
  4157                              <2>  %if round = 0
  4158                              <2>  pxor xmmblock, xmm0
  4159                              <2>  %else
  4160                              <2>  %if round < 14
  4161                              <2>  aesOPERATION xmmblock, xmm0
  4162                              <2>  %else
  4163                              <2>  aesOPERATIONlast xmmblock, xmm0
  4164                              <2>  %endif
  4165                              <2>  %endif
  4166                              <2> 
  4167                              <2>  %assign block block+1
  4168                              <2>  %endrep
  4169                              <3> 
  4170                              <3>  %if round = 0
  4171                              <3>  pxor xmmblock, xmm0
  4172                              <3>  %else
  4173                              <3>  %if round < 14
  4174                              <3>  aesOPERATION xmmblock, xmm0
  4175                              <3>  %else
  4176 000005F9 660F38DDC8          <3>  aesOPERATIONlast xmmblock, xmm0
  4177                              <3>  %endif
  4178                              <3>  %endif
  4179                              <3> 
  4180                              <3>  %assign block block+1
  4181                              <2> 
  4182                              <2>  %assign round round+1
  4183                              <1> 
  4184                              <1> 
  4185                              <1>  %assign block 1
  4186                              <1>  %rep BLOCK_COUNT
  4187                              <1>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  4188                              <1>  %assign block block+1
  4189                              <1>  %endrep
  4190 000005FE F30F7F0A            <2>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  4191                              <2>  %assign block block+1
  4192                              <1> 
  4193                              <1>  %undef OPERATION
  4194                              <1>  %undef BLOCK_COUNT
  4195                                  	aes_function_exit
  4196                              <1> 
  4197                              <1> 
  4198                              <1> 
  4199                              <1>  %ifdef MS_STDCALL
  4200 00000602 C20800              <1>  ret 8
  4201                              <1>  %else
  4202                              <1>  ret
  4203                              <1>  %endif
  4204                              <1> 
  4205                                  
  4206                                  
  4207                                  ; void aes_hw_cpu_encrypt_32_blocks (const byte *ks, byte *data);
  4208                                  
  4209                                  	aes_function_entry aes_hw_cpu_encrypt_32_blocks
  4210                              <1> 
  4211                              <1> 
  4212                              <1> 
  4213                              <1>  export_function %1, 8
  4214                              <2> 
  4215                              <2>  %ifdef MS_STDCALL
  4216                              <2>  global %1@%2
  4217                              <2>  export _%1@%2
  4218                              <2>  %1@%2:
  4219                              <2>  %elifidn __BITS__, 16
  4220                              <2>  global _%1
  4221                              <2>  _%1:
  4222                              <2>  %else
  4223                              <2>  global %1
  4224                              <2>  %1:
  4225                              <2>  %endif
  4226                              <2> 
  4227                              <1> 
  4228                              <1>  %ifidn __BITS__, 32
  4229 00000605 8B4C2404            <1>  mov ecx, [esp + 4 + 4 * 0]
  4230 00000609 8B542408            <1>  mov edx, [esp + 4 + 4 * 1]
  4231                              <1>  %elifidn __BITS__, 64
  4232                              <1>  %ifnidn __OUTPUT_FORMAT__, win64
  4233                              <1>  mov rcx, rdi
  4234                              <1>  mov rdx, rsi
  4235                              <1>  %endif
  4236                              <1>  %endif
  4237                              <1> 
  4238                              <1> 
  4239                              <1> 
  4240                              <1> 
  4241                                  		aes_hw_cpu_32_blocks enc
  4242                              <1>  %define OPERATION_32_BLOCKS %1
  4243                              <1> 
  4244                              <1>  %ifidn __BITS__, 64
  4245                              <1>  %define MAX_REG_BLOCK_COUNT 15
  4246                              <1>  %else
  4247                              <1>  %define MAX_REG_BLOCK_COUNT 7
  4248                              <1>  %endif
  4249                              <1> 
  4250                              <1>  %ifidn __OUTPUT_FORMAT__, win64
  4251                              <1>  %if MAX_REG_BLOCK_COUNT > 5
  4252                              <1>  push_xmm 6, MAX_REG_BLOCK_COUNT
  4253                              <1>  %endif
  4254                              <1>  %endif
  4255                              <1> 
  4256 0000060D B804000000          <1>  mov eax, 32 / MAX_REG_BLOCK_COUNT
  4257                              <1>  .1:
  4258                              <1>  aes_hw_cpu OPERATION_32_BLOCKS, MAX_REG_BLOCK_COUNT
  4259                              <2>  %define OPERATION %1
  4260                              <2>  %define BLOCK_COUNT %2
  4261                              <2> 
  4262                              <2> 
  4263                              <2>  %assign block 1
  4264                              <2>  %rep BLOCK_COUNT
  4265                              <2>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4266                              <2>  %assign block block+1
  4267                              <2>  %endrep
  4268 00000612 F30F6F0A            <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4269                              <3>  %assign block block+1
  4270 00000616 F30F6F5210          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4271                              <3>  %assign block block+1
  4272 0000061B F30F6F5A20          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4273                              <3>  %assign block block+1
  4274 00000620 F30F6F6230          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4275                              <3>  %assign block block+1
  4276 00000625 F30F6F6A40          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4277                              <3>  %assign block block+1
  4278 0000062A F30F6F7250          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4279                              <3>  %assign block block+1
  4280 0000062F F30F6F7A60          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  4281                              <3>  %assign block block+1
  4282                              <2> 
  4283                              <2> 
  4284                              <2>  %assign round 0
  4285                              <2>  %rep 15
  4286                              <2>  movdqu xmm0, [Rcx + 16 * round]
  4287                              <2> 
  4288                              <2>  %assign block 1
  4289                              <2>  %rep BLOCK_COUNT
  4290                              <2> 
  4291                              <2>  %if round = 0
  4292                              <2>  pxor xmmblock, xmm0
  4293                              <2>  %else
  4294                              <2>  %if round < 14
  4295                              <2>  aesOPERATION xmmblock, xmm0
  4296                              <2>  %else
  4297                              <2>  aesOPERATIONlast xmmblock, xmm0
  4298                              <2>  %endif
  4299                              <2>  %endif
  4300                              <2> 
  4301                              <2>  %assign block block+1
  4302                              <2>  %endrep
  4303                              <2> 
  4304                              <2>  %assign round round+1
  4305                              <2>  %endrep
  4306 00000634 F30F6F01            <3>  movdqu xmm0, [Rcx + 16 * round]
  4307                              <3> 
  4308                              <3>  %assign block 1
  4309                              <3>  %rep BLOCK_COUNT
  4310                              <3> 
  4311                              <3>  %if round = 0
  4312                              <3>  pxor xmmblock, xmm0
  4313                              <3>  %else
  4314                              <3>  %if round < 14
  4315                              <3>  aesOPERATION xmmblock, xmm0
  4316                              <3>  %else
  4317                              <3>  aesOPERATIONlast xmmblock, xmm0
  4318                              <3>  %endif
  4319                              <3>  %endif
  4320                              <3> 
  4321                              <3>  %assign block block+1
  4322                              <3>  %endrep
  4323                              <4> 
  4324                              <4>  %if round = 0
  4325 00000638 660FEFC8            <4>  pxor xmmblock, xmm0
  4326                              <4>  %else
  4327                              <4>  %if round < 14
  4328                              <4>  aesOPERATION xmmblock, xmm0
  4329                              <4>  %else
  4330                              <4>  aesOPERATIONlast xmmblock, xmm0
  4331                              <4>  %endif
  4332                              <4>  %endif
  4333                              <4> 
  4334                              <4>  %assign block block+1
  4335                              <4> 
  4336                              <4>  %if round = 0
  4337 0000063C 660FEFD0            <4>  pxor xmmblock, xmm0
  4338                              <4>  %else
  4339                              <4>  %if round < 14
  4340                              <4>  aesOPERATION xmmblock, xmm0
  4341                              <4>  %else
  4342                              <4>  aesOPERATIONlast xmmblock, xmm0
  4343                              <4>  %endif
  4344                              <4>  %endif
  4345                              <4> 
  4346                              <4>  %assign block block+1
  4347                              <4> 
  4348                              <4>  %if round = 0
  4349 00000640 660FEFD8            <4>  pxor xmmblock, xmm0
  4350                              <4>  %else
  4351                              <4>  %if round < 14
  4352                              <4>  aesOPERATION xmmblock, xmm0
  4353                              <4>  %else
  4354                              <4>  aesOPERATIONlast xmmblock, xmm0
  4355                              <4>  %endif
  4356                              <4>  %endif
  4357                              <4> 
  4358                              <4>  %assign block block+1
  4359                              <4> 
  4360                              <4>  %if round = 0
  4361 00000644 660FEFE0            <4>  pxor xmmblock, xmm0
  4362                              <4>  %else
  4363                              <4>  %if round < 14
  4364                              <4>  aesOPERATION xmmblock, xmm0
  4365                              <4>  %else
  4366                              <4>  aesOPERATIONlast xmmblock, xmm0
  4367                              <4>  %endif
  4368                              <4>  %endif
  4369                              <4> 
  4370                              <4>  %assign block block+1
  4371                              <4> 
  4372                              <4>  %if round = 0
  4373 00000648 660FEFE8            <4>  pxor xmmblock, xmm0
  4374                              <4>  %else
  4375                              <4>  %if round < 14
  4376                              <4>  aesOPERATION xmmblock, xmm0
  4377                              <4>  %else
  4378                              <4>  aesOPERATIONlast xmmblock, xmm0
  4379                              <4>  %endif
  4380                              <4>  %endif
  4381                              <4> 
  4382                              <4>  %assign block block+1
  4383                              <4> 
  4384                              <4>  %if round = 0
  4385 0000064C 660FEFF0            <4>  pxor xmmblock, xmm0
  4386                              <4>  %else
  4387                              <4>  %if round < 14
  4388                              <4>  aesOPERATION xmmblock, xmm0
  4389                              <4>  %else
  4390                              <4>  aesOPERATIONlast xmmblock, xmm0
  4391                              <4>  %endif
  4392                              <4>  %endif
  4393                              <4> 
  4394                              <4>  %assign block block+1
  4395                              <4> 
  4396                              <4>  %if round = 0
  4397 00000650 660FEFF8            <4>  pxor xmmblock, xmm0
  4398                              <4>  %else
  4399                              <4>  %if round < 14
  4400                              <4>  aesOPERATION xmmblock, xmm0
  4401                              <4>  %else
  4402                              <4>  aesOPERATIONlast xmmblock, xmm0
  4403                              <4>  %endif
  4404                              <4>  %endif
  4405                              <4> 
  4406                              <4>  %assign block block+1
  4407                              <3> 
  4408                              <3>  %assign round round+1
  4409 00000654 F30F6F4110          <3>  movdqu xmm0, [Rcx + 16 * round]
  4410                              <3> 
  4411                              <3>  %assign block 1
  4412                              <3>  %rep BLOCK_COUNT
  4413                              <3> 
  4414                              <3>  %if round = 0
  4415                              <3>  pxor xmmblock, xmm0
  4416                              <3>  %else
  4417                              <3>  %if round < 14
  4418                              <3>  aesOPERATION xmmblock, xmm0
  4419                              <3>  %else
  4420                              <3>  aesOPERATIONlast xmmblock, xmm0
  4421                              <3>  %endif
  4422                              <3>  %endif
  4423                              <3> 
  4424                              <3>  %assign block block+1
  4425                              <3>  %endrep
  4426                              <4> 
  4427                              <4>  %if round = 0
  4428                              <4>  pxor xmmblock, xmm0
  4429                              <4>  %else
  4430                              <4>  %if round < 14
  4431 00000659 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  4432                              <4>  %else
  4433                              <4>  aesOPERATIONlast xmmblock, xmm0
  4434                              <4>  %endif
  4435                              <4>  %endif
  4436                              <4> 
  4437                              <4>  %assign block block+1
  4438                              <4> 
  4439                              <4>  %if round = 0
  4440                              <4>  pxor xmmblock, xmm0
  4441                              <4>  %else
  4442                              <4>  %if round < 14
  4443 0000065E 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  4444                              <4>  %else
  4445                              <4>  aesOPERATIONlast xmmblock, xmm0
  4446                              <4>  %endif
  4447                              <4>  %endif
  4448                              <4> 
  4449                              <4>  %assign block block+1
  4450                              <4> 
  4451                              <4>  %if round = 0
  4452                              <4>  pxor xmmblock, xmm0
  4453                              <4>  %else
  4454                              <4>  %if round < 14
  4455 00000663 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  4456                              <4>  %else
  4457                              <4>  aesOPERATIONlast xmmblock, xmm0
  4458                              <4>  %endif
  4459                              <4>  %endif
  4460                              <4> 
  4461                              <4>  %assign block block+1
  4462                              <4> 
  4463                              <4>  %if round = 0
  4464                              <4>  pxor xmmblock, xmm0
  4465                              <4>  %else
  4466                              <4>  %if round < 14
  4467 00000668 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  4468                              <4>  %else
  4469                              <4>  aesOPERATIONlast xmmblock, xmm0
  4470                              <4>  %endif
  4471                              <4>  %endif
  4472                              <4> 
  4473                              <4>  %assign block block+1
  4474                              <4> 
  4475                              <4>  %if round = 0
  4476                              <4>  pxor xmmblock, xmm0
  4477                              <4>  %else
  4478                              <4>  %if round < 14
  4479 0000066D 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  4480                              <4>  %else
  4481                              <4>  aesOPERATIONlast xmmblock, xmm0
  4482                              <4>  %endif
  4483                              <4>  %endif
  4484                              <4> 
  4485                              <4>  %assign block block+1
  4486                              <4> 
  4487                              <4>  %if round = 0
  4488                              <4>  pxor xmmblock, xmm0
  4489                              <4>  %else
  4490                              <4>  %if round < 14
  4491 00000672 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  4492                              <4>  %else
  4493                              <4>  aesOPERATIONlast xmmblock, xmm0
  4494                              <4>  %endif
  4495                              <4>  %endif
  4496                              <4> 
  4497                              <4>  %assign block block+1
  4498                              <4> 
  4499                              <4>  %if round = 0
  4500                              <4>  pxor xmmblock, xmm0
  4501                              <4>  %else
  4502                              <4>  %if round < 14
  4503 00000677 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  4504                              <4>  %else
  4505                              <4>  aesOPERATIONlast xmmblock, xmm0
  4506                              <4>  %endif
  4507                              <4>  %endif
  4508                              <4> 
  4509                              <4>  %assign block block+1
  4510                              <3> 
  4511                              <3>  %assign round round+1
  4512 0000067C F30F6F4120          <3>  movdqu xmm0, [Rcx + 16 * round]
  4513                              <3> 
  4514                              <3>  %assign block 1
  4515                              <3>  %rep BLOCK_COUNT
  4516                              <3> 
  4517                              <3>  %if round = 0
  4518                              <3>  pxor xmmblock, xmm0
  4519                              <3>  %else
  4520                              <3>  %if round < 14
  4521                              <3>  aesOPERATION xmmblock, xmm0
  4522                              <3>  %else
  4523                              <3>  aesOPERATIONlast xmmblock, xmm0
  4524                              <3>  %endif
  4525                              <3>  %endif
  4526                              <3> 
  4527                              <3>  %assign block block+1
  4528                              <3>  %endrep
  4529                              <4> 
  4530                              <4>  %if round = 0
  4531                              <4>  pxor xmmblock, xmm0
  4532                              <4>  %else
  4533                              <4>  %if round < 14
  4534 00000681 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  4535                              <4>  %else
  4536                              <4>  aesOPERATIONlast xmmblock, xmm0
  4537                              <4>  %endif
  4538                              <4>  %endif
  4539                              <4> 
  4540                              <4>  %assign block block+1
  4541                              <4> 
  4542                              <4>  %if round = 0
  4543                              <4>  pxor xmmblock, xmm0
  4544                              <4>  %else
  4545                              <4>  %if round < 14
  4546 00000686 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  4547                              <4>  %else
  4548                              <4>  aesOPERATIONlast xmmblock, xmm0
  4549                              <4>  %endif
  4550                              <4>  %endif
  4551                              <4> 
  4552                              <4>  %assign block block+1
  4553                              <4> 
  4554                              <4>  %if round = 0
  4555                              <4>  pxor xmmblock, xmm0
  4556                              <4>  %else
  4557                              <4>  %if round < 14
  4558 0000068B 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  4559                              <4>  %else
  4560                              <4>  aesOPERATIONlast xmmblock, xmm0
  4561                              <4>  %endif
  4562                              <4>  %endif
  4563                              <4> 
  4564                              <4>  %assign block block+1
  4565                              <4> 
  4566                              <4>  %if round = 0
  4567                              <4>  pxor xmmblock, xmm0
  4568                              <4>  %else
  4569                              <4>  %if round < 14
  4570 00000690 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  4571                              <4>  %else
  4572                              <4>  aesOPERATIONlast xmmblock, xmm0
  4573                              <4>  %endif
  4574                              <4>  %endif
  4575                              <4> 
  4576                              <4>  %assign block block+1
  4577                              <4> 
  4578                              <4>  %if round = 0
  4579                              <4>  pxor xmmblock, xmm0
  4580                              <4>  %else
  4581                              <4>  %if round < 14
  4582 00000695 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  4583                              <4>  %else
  4584                              <4>  aesOPERATIONlast xmmblock, xmm0
  4585                              <4>  %endif
  4586                              <4>  %endif
  4587                              <4> 
  4588                              <4>  %assign block block+1
  4589                              <4> 
  4590                              <4>  %if round = 0
  4591                              <4>  pxor xmmblock, xmm0
  4592                              <4>  %else
  4593                              <4>  %if round < 14
  4594 0000069A 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  4595                              <4>  %else
  4596                              <4>  aesOPERATIONlast xmmblock, xmm0
  4597                              <4>  %endif
  4598                              <4>  %endif
  4599                              <4> 
  4600                              <4>  %assign block block+1
  4601                              <4> 
  4602                              <4>  %if round = 0
  4603                              <4>  pxor xmmblock, xmm0
  4604                              <4>  %else
  4605                              <4>  %if round < 14
  4606 0000069F 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  4607                              <4>  %else
  4608                              <4>  aesOPERATIONlast xmmblock, xmm0
  4609                              <4>  %endif
  4610                              <4>  %endif
  4611                              <4> 
  4612                              <4>  %assign block block+1
  4613                              <3> 
  4614                              <3>  %assign round round+1
  4615 000006A4 F30F6F4130          <3>  movdqu xmm0, [Rcx + 16 * round]
  4616                              <3> 
  4617                              <3>  %assign block 1
  4618                              <3>  %rep BLOCK_COUNT
  4619                              <3> 
  4620                              <3>  %if round = 0
  4621                              <3>  pxor xmmblock, xmm0
  4622                              <3>  %else
  4623                              <3>  %if round < 14
  4624                              <3>  aesOPERATION xmmblock, xmm0
  4625                              <3>  %else
  4626                              <3>  aesOPERATIONlast xmmblock, xmm0
  4627                              <3>  %endif
  4628                              <3>  %endif
  4629                              <3> 
  4630                              <3>  %assign block block+1
  4631                              <3>  %endrep
  4632                              <4> 
  4633                              <4>  %if round = 0
  4634                              <4>  pxor xmmblock, xmm0
  4635                              <4>  %else
  4636                              <4>  %if round < 14
  4637 000006A9 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  4638                              <4>  %else
  4639                              <4>  aesOPERATIONlast xmmblock, xmm0
  4640                              <4>  %endif
  4641                              <4>  %endif
  4642                              <4> 
  4643                              <4>  %assign block block+1
  4644                              <4> 
  4645                              <4>  %if round = 0
  4646                              <4>  pxor xmmblock, xmm0
  4647                              <4>  %else
  4648                              <4>  %if round < 14
  4649 000006AE 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  4650                              <4>  %else
  4651                              <4>  aesOPERATIONlast xmmblock, xmm0
  4652                              <4>  %endif
  4653                              <4>  %endif
  4654                              <4> 
  4655                              <4>  %assign block block+1
  4656                              <4> 
  4657                              <4>  %if round = 0
  4658                              <4>  pxor xmmblock, xmm0
  4659                              <4>  %else
  4660                              <4>  %if round < 14
  4661 000006B3 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  4662                              <4>  %else
  4663                              <4>  aesOPERATIONlast xmmblock, xmm0
  4664                              <4>  %endif
  4665                              <4>  %endif
  4666                              <4> 
  4667                              <4>  %assign block block+1
  4668                              <4> 
  4669                              <4>  %if round = 0
  4670                              <4>  pxor xmmblock, xmm0
  4671                              <4>  %else
  4672                              <4>  %if round < 14
  4673 000006B8 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  4674                              <4>  %else
  4675                              <4>  aesOPERATIONlast xmmblock, xmm0
  4676                              <4>  %endif
  4677                              <4>  %endif
  4678                              <4> 
  4679                              <4>  %assign block block+1
  4680                              <4> 
  4681                              <4>  %if round = 0
  4682                              <4>  pxor xmmblock, xmm0
  4683                              <4>  %else
  4684                              <4>  %if round < 14
  4685 000006BD 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  4686                              <4>  %else
  4687                              <4>  aesOPERATIONlast xmmblock, xmm0
  4688                              <4>  %endif
  4689                              <4>  %endif
  4690                              <4> 
  4691                              <4>  %assign block block+1
  4692                              <4> 
  4693                              <4>  %if round = 0
  4694                              <4>  pxor xmmblock, xmm0
  4695                              <4>  %else
  4696                              <4>  %if round < 14
  4697 000006C2 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  4698                              <4>  %else
  4699                              <4>  aesOPERATIONlast xmmblock, xmm0
  4700                              <4>  %endif
  4701                              <4>  %endif
  4702                              <4> 
  4703                              <4>  %assign block block+1
  4704                              <4> 
  4705                              <4>  %if round = 0
  4706                              <4>  pxor xmmblock, xmm0
  4707                              <4>  %else
  4708                              <4>  %if round < 14
  4709 000006C7 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  4710                              <4>  %else
  4711                              <4>  aesOPERATIONlast xmmblock, xmm0
  4712                              <4>  %endif
  4713                              <4>  %endif
  4714                              <4> 
  4715                              <4>  %assign block block+1
  4716                              <3> 
  4717                              <3>  %assign round round+1
  4718 000006CC F30F6F4140          <3>  movdqu xmm0, [Rcx + 16 * round]
  4719                              <3> 
  4720                              <3>  %assign block 1
  4721                              <3>  %rep BLOCK_COUNT
  4722                              <3> 
  4723                              <3>  %if round = 0
  4724                              <3>  pxor xmmblock, xmm0
  4725                              <3>  %else
  4726                              <3>  %if round < 14
  4727                              <3>  aesOPERATION xmmblock, xmm0
  4728                              <3>  %else
  4729                              <3>  aesOPERATIONlast xmmblock, xmm0
  4730                              <3>  %endif
  4731                              <3>  %endif
  4732                              <3> 
  4733                              <3>  %assign block block+1
  4734                              <3>  %endrep
  4735                              <4> 
  4736                              <4>  %if round = 0
  4737                              <4>  pxor xmmblock, xmm0
  4738                              <4>  %else
  4739                              <4>  %if round < 14
  4740 000006D1 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  4741                              <4>  %else
  4742                              <4>  aesOPERATIONlast xmmblock, xmm0
  4743                              <4>  %endif
  4744                              <4>  %endif
  4745                              <4> 
  4746                              <4>  %assign block block+1
  4747                              <4> 
  4748                              <4>  %if round = 0
  4749                              <4>  pxor xmmblock, xmm0
  4750                              <4>  %else
  4751                              <4>  %if round < 14
  4752 000006D6 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  4753                              <4>  %else
  4754                              <4>  aesOPERATIONlast xmmblock, xmm0
  4755                              <4>  %endif
  4756                              <4>  %endif
  4757                              <4> 
  4758                              <4>  %assign block block+1
  4759                              <4> 
  4760                              <4>  %if round = 0
  4761                              <4>  pxor xmmblock, xmm0
  4762                              <4>  %else
  4763                              <4>  %if round < 14
  4764 000006DB 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  4765                              <4>  %else
  4766                              <4>  aesOPERATIONlast xmmblock, xmm0
  4767                              <4>  %endif
  4768                              <4>  %endif
  4769                              <4> 
  4770                              <4>  %assign block block+1
  4771                              <4> 
  4772                              <4>  %if round = 0
  4773                              <4>  pxor xmmblock, xmm0
  4774                              <4>  %else
  4775                              <4>  %if round < 14
  4776 000006E0 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  4777                              <4>  %else
  4778                              <4>  aesOPERATIONlast xmmblock, xmm0
  4779                              <4>  %endif
  4780                              <4>  %endif
  4781                              <4> 
  4782                              <4>  %assign block block+1
  4783                              <4> 
  4784                              <4>  %if round = 0
  4785                              <4>  pxor xmmblock, xmm0
  4786                              <4>  %else
  4787                              <4>  %if round < 14
  4788 000006E5 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  4789                              <4>  %else
  4790                              <4>  aesOPERATIONlast xmmblock, xmm0
  4791                              <4>  %endif
  4792                              <4>  %endif
  4793                              <4> 
  4794                              <4>  %assign block block+1
  4795                              <4> 
  4796                              <4>  %if round = 0
  4797                              <4>  pxor xmmblock, xmm0
  4798                              <4>  %else
  4799                              <4>  %if round < 14
  4800 000006EA 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  4801                              <4>  %else
  4802                              <4>  aesOPERATIONlast xmmblock, xmm0
  4803                              <4>  %endif
  4804                              <4>  %endif
  4805                              <4> 
  4806                              <4>  %assign block block+1
  4807                              <4> 
  4808                              <4>  %if round = 0
  4809                              <4>  pxor xmmblock, xmm0
  4810                              <4>  %else
  4811                              <4>  %if round < 14
  4812 000006EF 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  4813                              <4>  %else
  4814                              <4>  aesOPERATIONlast xmmblock, xmm0
  4815                              <4>  %endif
  4816                              <4>  %endif
  4817                              <4> 
  4818                              <4>  %assign block block+1
  4819                              <3> 
  4820                              <3>  %assign round round+1
  4821 000006F4 F30F6F4150          <3>  movdqu xmm0, [Rcx + 16 * round]
  4822                              <3> 
  4823                              <3>  %assign block 1
  4824                              <3>  %rep BLOCK_COUNT
  4825                              <3> 
  4826                              <3>  %if round = 0
  4827                              <3>  pxor xmmblock, xmm0
  4828                              <3>  %else
  4829                              <3>  %if round < 14
  4830                              <3>  aesOPERATION xmmblock, xmm0
  4831                              <3>  %else
  4832                              <3>  aesOPERATIONlast xmmblock, xmm0
  4833                              <3>  %endif
  4834                              <3>  %endif
  4835                              <3> 
  4836                              <3>  %assign block block+1
  4837                              <3>  %endrep
  4838                              <4> 
  4839                              <4>  %if round = 0
  4840                              <4>  pxor xmmblock, xmm0
  4841                              <4>  %else
  4842                              <4>  %if round < 14
  4843 000006F9 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  4844                              <4>  %else
  4845                              <4>  aesOPERATIONlast xmmblock, xmm0
  4846                              <4>  %endif
  4847                              <4>  %endif
  4848                              <4> 
  4849                              <4>  %assign block block+1
  4850                              <4> 
  4851                              <4>  %if round = 0
  4852                              <4>  pxor xmmblock, xmm0
  4853                              <4>  %else
  4854                              <4>  %if round < 14
  4855 000006FE 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  4856                              <4>  %else
  4857                              <4>  aesOPERATIONlast xmmblock, xmm0
  4858                              <4>  %endif
  4859                              <4>  %endif
  4860                              <4> 
  4861                              <4>  %assign block block+1
  4862                              <4> 
  4863                              <4>  %if round = 0
  4864                              <4>  pxor xmmblock, xmm0
  4865                              <4>  %else
  4866                              <4>  %if round < 14
  4867 00000703 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  4868                              <4>  %else
  4869                              <4>  aesOPERATIONlast xmmblock, xmm0
  4870                              <4>  %endif
  4871                              <4>  %endif
  4872                              <4> 
  4873                              <4>  %assign block block+1
  4874                              <4> 
  4875                              <4>  %if round = 0
  4876                              <4>  pxor xmmblock, xmm0
  4877                              <4>  %else
  4878                              <4>  %if round < 14
  4879 00000708 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  4880                              <4>  %else
  4881                              <4>  aesOPERATIONlast xmmblock, xmm0
  4882                              <4>  %endif
  4883                              <4>  %endif
  4884                              <4> 
  4885                              <4>  %assign block block+1
  4886                              <4> 
  4887                              <4>  %if round = 0
  4888                              <4>  pxor xmmblock, xmm0
  4889                              <4>  %else
  4890                              <4>  %if round < 14
  4891 0000070D 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  4892                              <4>  %else
  4893                              <4>  aesOPERATIONlast xmmblock, xmm0
  4894                              <4>  %endif
  4895                              <4>  %endif
  4896                              <4> 
  4897                              <4>  %assign block block+1
  4898                              <4> 
  4899                              <4>  %if round = 0
  4900                              <4>  pxor xmmblock, xmm0
  4901                              <4>  %else
  4902                              <4>  %if round < 14
  4903 00000712 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  4904                              <4>  %else
  4905                              <4>  aesOPERATIONlast xmmblock, xmm0
  4906                              <4>  %endif
  4907                              <4>  %endif
  4908                              <4> 
  4909                              <4>  %assign block block+1
  4910                              <4> 
  4911                              <4>  %if round = 0
  4912                              <4>  pxor xmmblock, xmm0
  4913                              <4>  %else
  4914                              <4>  %if round < 14
  4915 00000717 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  4916                              <4>  %else
  4917                              <4>  aesOPERATIONlast xmmblock, xmm0
  4918                              <4>  %endif
  4919                              <4>  %endif
  4920                              <4> 
  4921                              <4>  %assign block block+1
  4922                              <3> 
  4923                              <3>  %assign round round+1
  4924 0000071C F30F6F4160          <3>  movdqu xmm0, [Rcx + 16 * round]
  4925                              <3> 
  4926                              <3>  %assign block 1
  4927                              <3>  %rep BLOCK_COUNT
  4928                              <3> 
  4929                              <3>  %if round = 0
  4930                              <3>  pxor xmmblock, xmm0
  4931                              <3>  %else
  4932                              <3>  %if round < 14
  4933                              <3>  aesOPERATION xmmblock, xmm0
  4934                              <3>  %else
  4935                              <3>  aesOPERATIONlast xmmblock, xmm0
  4936                              <3>  %endif
  4937                              <3>  %endif
  4938                              <3> 
  4939                              <3>  %assign block block+1
  4940                              <3>  %endrep
  4941                              <4> 
  4942                              <4>  %if round = 0
  4943                              <4>  pxor xmmblock, xmm0
  4944                              <4>  %else
  4945                              <4>  %if round < 14
  4946 00000721 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  4947                              <4>  %else
  4948                              <4>  aesOPERATIONlast xmmblock, xmm0
  4949                              <4>  %endif
  4950                              <4>  %endif
  4951                              <4> 
  4952                              <4>  %assign block block+1
  4953                              <4> 
  4954                              <4>  %if round = 0
  4955                              <4>  pxor xmmblock, xmm0
  4956                              <4>  %else
  4957                              <4>  %if round < 14
  4958 00000726 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  4959                              <4>  %else
  4960                              <4>  aesOPERATIONlast xmmblock, xmm0
  4961                              <4>  %endif
  4962                              <4>  %endif
  4963                              <4> 
  4964                              <4>  %assign block block+1
  4965                              <4> 
  4966                              <4>  %if round = 0
  4967                              <4>  pxor xmmblock, xmm0
  4968                              <4>  %else
  4969                              <4>  %if round < 14
  4970 0000072B 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  4971                              <4>  %else
  4972                              <4>  aesOPERATIONlast xmmblock, xmm0
  4973                              <4>  %endif
  4974                              <4>  %endif
  4975                              <4> 
  4976                              <4>  %assign block block+1
  4977                              <4> 
  4978                              <4>  %if round = 0
  4979                              <4>  pxor xmmblock, xmm0
  4980                              <4>  %else
  4981                              <4>  %if round < 14
  4982 00000730 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  4983                              <4>  %else
  4984                              <4>  aesOPERATIONlast xmmblock, xmm0
  4985                              <4>  %endif
  4986                              <4>  %endif
  4987                              <4> 
  4988                              <4>  %assign block block+1
  4989                              <4> 
  4990                              <4>  %if round = 0
  4991                              <4>  pxor xmmblock, xmm0
  4992                              <4>  %else
  4993                              <4>  %if round < 14
  4994 00000735 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  4995                              <4>  %else
  4996                              <4>  aesOPERATIONlast xmmblock, xmm0
  4997                              <4>  %endif
  4998                              <4>  %endif
  4999                              <4> 
  5000                              <4>  %assign block block+1
  5001                              <4> 
  5002                              <4>  %if round = 0
  5003                              <4>  pxor xmmblock, xmm0
  5004                              <4>  %else
  5005                              <4>  %if round < 14
  5006 0000073A 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5007                              <4>  %else
  5008                              <4>  aesOPERATIONlast xmmblock, xmm0
  5009                              <4>  %endif
  5010                              <4>  %endif
  5011                              <4> 
  5012                              <4>  %assign block block+1
  5013                              <4> 
  5014                              <4>  %if round = 0
  5015                              <4>  pxor xmmblock, xmm0
  5016                              <4>  %else
  5017                              <4>  %if round < 14
  5018 0000073F 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5019                              <4>  %else
  5020                              <4>  aesOPERATIONlast xmmblock, xmm0
  5021                              <4>  %endif
  5022                              <4>  %endif
  5023                              <4> 
  5024                              <4>  %assign block block+1
  5025                              <3> 
  5026                              <3>  %assign round round+1
  5027 00000744 F30F6F4170          <3>  movdqu xmm0, [Rcx + 16 * round]
  5028                              <3> 
  5029                              <3>  %assign block 1
  5030                              <3>  %rep BLOCK_COUNT
  5031                              <3> 
  5032                              <3>  %if round = 0
  5033                              <3>  pxor xmmblock, xmm0
  5034                              <3>  %else
  5035                              <3>  %if round < 14
  5036                              <3>  aesOPERATION xmmblock, xmm0
  5037                              <3>  %else
  5038                              <3>  aesOPERATIONlast xmmblock, xmm0
  5039                              <3>  %endif
  5040                              <3>  %endif
  5041                              <3> 
  5042                              <3>  %assign block block+1
  5043                              <3>  %endrep
  5044                              <4> 
  5045                              <4>  %if round = 0
  5046                              <4>  pxor xmmblock, xmm0
  5047                              <4>  %else
  5048                              <4>  %if round < 14
  5049 00000749 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  5050                              <4>  %else
  5051                              <4>  aesOPERATIONlast xmmblock, xmm0
  5052                              <4>  %endif
  5053                              <4>  %endif
  5054                              <4> 
  5055                              <4>  %assign block block+1
  5056                              <4> 
  5057                              <4>  %if round = 0
  5058                              <4>  pxor xmmblock, xmm0
  5059                              <4>  %else
  5060                              <4>  %if round < 14
  5061 0000074E 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  5062                              <4>  %else
  5063                              <4>  aesOPERATIONlast xmmblock, xmm0
  5064                              <4>  %endif
  5065                              <4>  %endif
  5066                              <4> 
  5067                              <4>  %assign block block+1
  5068                              <4> 
  5069                              <4>  %if round = 0
  5070                              <4>  pxor xmmblock, xmm0
  5071                              <4>  %else
  5072                              <4>  %if round < 14
  5073 00000753 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  5074                              <4>  %else
  5075                              <4>  aesOPERATIONlast xmmblock, xmm0
  5076                              <4>  %endif
  5077                              <4>  %endif
  5078                              <4> 
  5079                              <4>  %assign block block+1
  5080                              <4> 
  5081                              <4>  %if round = 0
  5082                              <4>  pxor xmmblock, xmm0
  5083                              <4>  %else
  5084                              <4>  %if round < 14
  5085 00000758 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  5086                              <4>  %else
  5087                              <4>  aesOPERATIONlast xmmblock, xmm0
  5088                              <4>  %endif
  5089                              <4>  %endif
  5090                              <4> 
  5091                              <4>  %assign block block+1
  5092                              <4> 
  5093                              <4>  %if round = 0
  5094                              <4>  pxor xmmblock, xmm0
  5095                              <4>  %else
  5096                              <4>  %if round < 14
  5097 0000075D 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  5098                              <4>  %else
  5099                              <4>  aesOPERATIONlast xmmblock, xmm0
  5100                              <4>  %endif
  5101                              <4>  %endif
  5102                              <4> 
  5103                              <4>  %assign block block+1
  5104                              <4> 
  5105                              <4>  %if round = 0
  5106                              <4>  pxor xmmblock, xmm0
  5107                              <4>  %else
  5108                              <4>  %if round < 14
  5109 00000762 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5110                              <4>  %else
  5111                              <4>  aesOPERATIONlast xmmblock, xmm0
  5112                              <4>  %endif
  5113                              <4>  %endif
  5114                              <4> 
  5115                              <4>  %assign block block+1
  5116                              <4> 
  5117                              <4>  %if round = 0
  5118                              <4>  pxor xmmblock, xmm0
  5119                              <4>  %else
  5120                              <4>  %if round < 14
  5121 00000767 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5122                              <4>  %else
  5123                              <4>  aesOPERATIONlast xmmblock, xmm0
  5124                              <4>  %endif
  5125                              <4>  %endif
  5126                              <4> 
  5127                              <4>  %assign block block+1
  5128                              <3> 
  5129                              <3>  %assign round round+1
  5130 0000076C F30F6F8180000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  5131                              <3> 
  5132                              <3>  %assign block 1
  5133                              <3>  %rep BLOCK_COUNT
  5134                              <3> 
  5135                              <3>  %if round = 0
  5136                              <3>  pxor xmmblock, xmm0
  5137                              <3>  %else
  5138                              <3>  %if round < 14
  5139                              <3>  aesOPERATION xmmblock, xmm0
  5140                              <3>  %else
  5141                              <3>  aesOPERATIONlast xmmblock, xmm0
  5142                              <3>  %endif
  5143                              <3>  %endif
  5144                              <3> 
  5145                              <3>  %assign block block+1
  5146                              <3>  %endrep
  5147                              <4> 
  5148                              <4>  %if round = 0
  5149                              <4>  pxor xmmblock, xmm0
  5150                              <4>  %else
  5151                              <4>  %if round < 14
  5152 00000774 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  5153                              <4>  %else
  5154                              <4>  aesOPERATIONlast xmmblock, xmm0
  5155                              <4>  %endif
  5156                              <4>  %endif
  5157                              <4> 
  5158                              <4>  %assign block block+1
  5159                              <4> 
  5160                              <4>  %if round = 0
  5161                              <4>  pxor xmmblock, xmm0
  5162                              <4>  %else
  5163                              <4>  %if round < 14
  5164 00000779 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  5165                              <4>  %else
  5166                              <4>  aesOPERATIONlast xmmblock, xmm0
  5167                              <4>  %endif
  5168                              <4>  %endif
  5169                              <4> 
  5170                              <4>  %assign block block+1
  5171                              <4> 
  5172                              <4>  %if round = 0
  5173                              <4>  pxor xmmblock, xmm0
  5174                              <4>  %else
  5175                              <4>  %if round < 14
  5176 0000077E 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  5177                              <4>  %else
  5178                              <4>  aesOPERATIONlast xmmblock, xmm0
  5179                              <4>  %endif
  5180                              <4>  %endif
  5181                              <4> 
  5182                              <4>  %assign block block+1
  5183                              <4> 
  5184                              <4>  %if round = 0
  5185                              <4>  pxor xmmblock, xmm0
  5186                              <4>  %else
  5187                              <4>  %if round < 14
  5188 00000783 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  5189                              <4>  %else
  5190                              <4>  aesOPERATIONlast xmmblock, xmm0
  5191                              <4>  %endif
  5192                              <4>  %endif
  5193                              <4> 
  5194                              <4>  %assign block block+1
  5195                              <4> 
  5196                              <4>  %if round = 0
  5197                              <4>  pxor xmmblock, xmm0
  5198                              <4>  %else
  5199                              <4>  %if round < 14
  5200 00000788 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  5201                              <4>  %else
  5202                              <4>  aesOPERATIONlast xmmblock, xmm0
  5203                              <4>  %endif
  5204                              <4>  %endif
  5205                              <4> 
  5206                              <4>  %assign block block+1
  5207                              <4> 
  5208                              <4>  %if round = 0
  5209                              <4>  pxor xmmblock, xmm0
  5210                              <4>  %else
  5211                              <4>  %if round < 14
  5212 0000078D 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5213                              <4>  %else
  5214                              <4>  aesOPERATIONlast xmmblock, xmm0
  5215                              <4>  %endif
  5216                              <4>  %endif
  5217                              <4> 
  5218                              <4>  %assign block block+1
  5219                              <4> 
  5220                              <4>  %if round = 0
  5221                              <4>  pxor xmmblock, xmm0
  5222                              <4>  %else
  5223                              <4>  %if round < 14
  5224 00000792 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5225                              <4>  %else
  5226                              <4>  aesOPERATIONlast xmmblock, xmm0
  5227                              <4>  %endif
  5228                              <4>  %endif
  5229                              <4> 
  5230                              <4>  %assign block block+1
  5231                              <3> 
  5232                              <3>  %assign round round+1
  5233 00000797 F30F6F8190000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  5234                              <3> 
  5235                              <3>  %assign block 1
  5236                              <3>  %rep BLOCK_COUNT
  5237                              <3> 
  5238                              <3>  %if round = 0
  5239                              <3>  pxor xmmblock, xmm0
  5240                              <3>  %else
  5241                              <3>  %if round < 14
  5242                              <3>  aesOPERATION xmmblock, xmm0
  5243                              <3>  %else
  5244                              <3>  aesOPERATIONlast xmmblock, xmm0
  5245                              <3>  %endif
  5246                              <3>  %endif
  5247                              <3> 
  5248                              <3>  %assign block block+1
  5249                              <3>  %endrep
  5250                              <4> 
  5251                              <4>  %if round = 0
  5252                              <4>  pxor xmmblock, xmm0
  5253                              <4>  %else
  5254                              <4>  %if round < 14
  5255 0000079F 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  5256                              <4>  %else
  5257                              <4>  aesOPERATIONlast xmmblock, xmm0
  5258                              <4>  %endif
  5259                              <4>  %endif
  5260                              <4> 
  5261                              <4>  %assign block block+1
  5262                              <4> 
  5263                              <4>  %if round = 0
  5264                              <4>  pxor xmmblock, xmm0
  5265                              <4>  %else
  5266                              <4>  %if round < 14
  5267 000007A4 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  5268                              <4>  %else
  5269                              <4>  aesOPERATIONlast xmmblock, xmm0
  5270                              <4>  %endif
  5271                              <4>  %endif
  5272                              <4> 
  5273                              <4>  %assign block block+1
  5274                              <4> 
  5275                              <4>  %if round = 0
  5276                              <4>  pxor xmmblock, xmm0
  5277                              <4>  %else
  5278                              <4>  %if round < 14
  5279 000007A9 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  5280                              <4>  %else
  5281                              <4>  aesOPERATIONlast xmmblock, xmm0
  5282                              <4>  %endif
  5283                              <4>  %endif
  5284                              <4> 
  5285                              <4>  %assign block block+1
  5286                              <4> 
  5287                              <4>  %if round = 0
  5288                              <4>  pxor xmmblock, xmm0
  5289                              <4>  %else
  5290                              <4>  %if round < 14
  5291 000007AE 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  5292                              <4>  %else
  5293                              <4>  aesOPERATIONlast xmmblock, xmm0
  5294                              <4>  %endif
  5295                              <4>  %endif
  5296                              <4> 
  5297                              <4>  %assign block block+1
  5298                              <4> 
  5299                              <4>  %if round = 0
  5300                              <4>  pxor xmmblock, xmm0
  5301                              <4>  %else
  5302                              <4>  %if round < 14
  5303 000007B3 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  5304                              <4>  %else
  5305                              <4>  aesOPERATIONlast xmmblock, xmm0
  5306                              <4>  %endif
  5307                              <4>  %endif
  5308                              <4> 
  5309                              <4>  %assign block block+1
  5310                              <4> 
  5311                              <4>  %if round = 0
  5312                              <4>  pxor xmmblock, xmm0
  5313                              <4>  %else
  5314                              <4>  %if round < 14
  5315 000007B8 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5316                              <4>  %else
  5317                              <4>  aesOPERATIONlast xmmblock, xmm0
  5318                              <4>  %endif
  5319                              <4>  %endif
  5320                              <4> 
  5321                              <4>  %assign block block+1
  5322                              <4> 
  5323                              <4>  %if round = 0
  5324                              <4>  pxor xmmblock, xmm0
  5325                              <4>  %else
  5326                              <4>  %if round < 14
  5327 000007BD 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5328                              <4>  %else
  5329                              <4>  aesOPERATIONlast xmmblock, xmm0
  5330                              <4>  %endif
  5331                              <4>  %endif
  5332                              <4> 
  5333                              <4>  %assign block block+1
  5334                              <3> 
  5335                              <3>  %assign round round+1
  5336 000007C2 F30F6F81A0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  5337                              <3> 
  5338                              <3>  %assign block 1
  5339                              <3>  %rep BLOCK_COUNT
  5340                              <3> 
  5341                              <3>  %if round = 0
  5342                              <3>  pxor xmmblock, xmm0
  5343                              <3>  %else
  5344                              <3>  %if round < 14
  5345                              <3>  aesOPERATION xmmblock, xmm0
  5346                              <3>  %else
  5347                              <3>  aesOPERATIONlast xmmblock, xmm0
  5348                              <3>  %endif
  5349                              <3>  %endif
  5350                              <3> 
  5351                              <3>  %assign block block+1
  5352                              <3>  %endrep
  5353                              <4> 
  5354                              <4>  %if round = 0
  5355                              <4>  pxor xmmblock, xmm0
  5356                              <4>  %else
  5357                              <4>  %if round < 14
  5358 000007CA 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  5359                              <4>  %else
  5360                              <4>  aesOPERATIONlast xmmblock, xmm0
  5361                              <4>  %endif
  5362                              <4>  %endif
  5363                              <4> 
  5364                              <4>  %assign block block+1
  5365                              <4> 
  5366                              <4>  %if round = 0
  5367                              <4>  pxor xmmblock, xmm0
  5368                              <4>  %else
  5369                              <4>  %if round < 14
  5370 000007CF 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  5371                              <4>  %else
  5372                              <4>  aesOPERATIONlast xmmblock, xmm0
  5373                              <4>  %endif
  5374                              <4>  %endif
  5375                              <4> 
  5376                              <4>  %assign block block+1
  5377                              <4> 
  5378                              <4>  %if round = 0
  5379                              <4>  pxor xmmblock, xmm0
  5380                              <4>  %else
  5381                              <4>  %if round < 14
  5382 000007D4 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  5383                              <4>  %else
  5384                              <4>  aesOPERATIONlast xmmblock, xmm0
  5385                              <4>  %endif
  5386                              <4>  %endif
  5387                              <4> 
  5388                              <4>  %assign block block+1
  5389                              <4> 
  5390                              <4>  %if round = 0
  5391                              <4>  pxor xmmblock, xmm0
  5392                              <4>  %else
  5393                              <4>  %if round < 14
  5394 000007D9 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  5395                              <4>  %else
  5396                              <4>  aesOPERATIONlast xmmblock, xmm0
  5397                              <4>  %endif
  5398                              <4>  %endif
  5399                              <4> 
  5400                              <4>  %assign block block+1
  5401                              <4> 
  5402                              <4>  %if round = 0
  5403                              <4>  pxor xmmblock, xmm0
  5404                              <4>  %else
  5405                              <4>  %if round < 14
  5406 000007DE 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  5407                              <4>  %else
  5408                              <4>  aesOPERATIONlast xmmblock, xmm0
  5409                              <4>  %endif
  5410                              <4>  %endif
  5411                              <4> 
  5412                              <4>  %assign block block+1
  5413                              <4> 
  5414                              <4>  %if round = 0
  5415                              <4>  pxor xmmblock, xmm0
  5416                              <4>  %else
  5417                              <4>  %if round < 14
  5418 000007E3 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5419                              <4>  %else
  5420                              <4>  aesOPERATIONlast xmmblock, xmm0
  5421                              <4>  %endif
  5422                              <4>  %endif
  5423                              <4> 
  5424                              <4>  %assign block block+1
  5425                              <4> 
  5426                              <4>  %if round = 0
  5427                              <4>  pxor xmmblock, xmm0
  5428                              <4>  %else
  5429                              <4>  %if round < 14
  5430 000007E8 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5431                              <4>  %else
  5432                              <4>  aesOPERATIONlast xmmblock, xmm0
  5433                              <4>  %endif
  5434                              <4>  %endif
  5435                              <4> 
  5436                              <4>  %assign block block+1
  5437                              <3> 
  5438                              <3>  %assign round round+1
  5439 000007ED F30F6F81B0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  5440                              <3> 
  5441                              <3>  %assign block 1
  5442                              <3>  %rep BLOCK_COUNT
  5443                              <3> 
  5444                              <3>  %if round = 0
  5445                              <3>  pxor xmmblock, xmm0
  5446                              <3>  %else
  5447                              <3>  %if round < 14
  5448                              <3>  aesOPERATION xmmblock, xmm0
  5449                              <3>  %else
  5450                              <3>  aesOPERATIONlast xmmblock, xmm0
  5451                              <3>  %endif
  5452                              <3>  %endif
  5453                              <3> 
  5454                              <3>  %assign block block+1
  5455                              <3>  %endrep
  5456                              <4> 
  5457                              <4>  %if round = 0
  5458                              <4>  pxor xmmblock, xmm0
  5459                              <4>  %else
  5460                              <4>  %if round < 14
  5461 000007F5 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  5462                              <4>  %else
  5463                              <4>  aesOPERATIONlast xmmblock, xmm0
  5464                              <4>  %endif
  5465                              <4>  %endif
  5466                              <4> 
  5467                              <4>  %assign block block+1
  5468                              <4> 
  5469                              <4>  %if round = 0
  5470                              <4>  pxor xmmblock, xmm0
  5471                              <4>  %else
  5472                              <4>  %if round < 14
  5473 000007FA 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  5474                              <4>  %else
  5475                              <4>  aesOPERATIONlast xmmblock, xmm0
  5476                              <4>  %endif
  5477                              <4>  %endif
  5478                              <4> 
  5479                              <4>  %assign block block+1
  5480                              <4> 
  5481                              <4>  %if round = 0
  5482                              <4>  pxor xmmblock, xmm0
  5483                              <4>  %else
  5484                              <4>  %if round < 14
  5485 000007FF 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  5486                              <4>  %else
  5487                              <4>  aesOPERATIONlast xmmblock, xmm0
  5488                              <4>  %endif
  5489                              <4>  %endif
  5490                              <4> 
  5491                              <4>  %assign block block+1
  5492                              <4> 
  5493                              <4>  %if round = 0
  5494                              <4>  pxor xmmblock, xmm0
  5495                              <4>  %else
  5496                              <4>  %if round < 14
  5497 00000804 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  5498                              <4>  %else
  5499                              <4>  aesOPERATIONlast xmmblock, xmm0
  5500                              <4>  %endif
  5501                              <4>  %endif
  5502                              <4> 
  5503                              <4>  %assign block block+1
  5504                              <4> 
  5505                              <4>  %if round = 0
  5506                              <4>  pxor xmmblock, xmm0
  5507                              <4>  %else
  5508                              <4>  %if round < 14
  5509 00000809 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  5510                              <4>  %else
  5511                              <4>  aesOPERATIONlast xmmblock, xmm0
  5512                              <4>  %endif
  5513                              <4>  %endif
  5514                              <4> 
  5515                              <4>  %assign block block+1
  5516                              <4> 
  5517                              <4>  %if round = 0
  5518                              <4>  pxor xmmblock, xmm0
  5519                              <4>  %else
  5520                              <4>  %if round < 14
  5521 0000080E 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5522                              <4>  %else
  5523                              <4>  aesOPERATIONlast xmmblock, xmm0
  5524                              <4>  %endif
  5525                              <4>  %endif
  5526                              <4> 
  5527                              <4>  %assign block block+1
  5528                              <4> 
  5529                              <4>  %if round = 0
  5530                              <4>  pxor xmmblock, xmm0
  5531                              <4>  %else
  5532                              <4>  %if round < 14
  5533 00000813 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5534                              <4>  %else
  5535                              <4>  aesOPERATIONlast xmmblock, xmm0
  5536                              <4>  %endif
  5537                              <4>  %endif
  5538                              <4> 
  5539                              <4>  %assign block block+1
  5540                              <3> 
  5541                              <3>  %assign round round+1
  5542 00000818 F30F6F81C0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  5543                              <3> 
  5544                              <3>  %assign block 1
  5545                              <3>  %rep BLOCK_COUNT
  5546                              <3> 
  5547                              <3>  %if round = 0
  5548                              <3>  pxor xmmblock, xmm0
  5549                              <3>  %else
  5550                              <3>  %if round < 14
  5551                              <3>  aesOPERATION xmmblock, xmm0
  5552                              <3>  %else
  5553                              <3>  aesOPERATIONlast xmmblock, xmm0
  5554                              <3>  %endif
  5555                              <3>  %endif
  5556                              <3> 
  5557                              <3>  %assign block block+1
  5558                              <3>  %endrep
  5559                              <4> 
  5560                              <4>  %if round = 0
  5561                              <4>  pxor xmmblock, xmm0
  5562                              <4>  %else
  5563                              <4>  %if round < 14
  5564 00000820 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  5565                              <4>  %else
  5566                              <4>  aesOPERATIONlast xmmblock, xmm0
  5567                              <4>  %endif
  5568                              <4>  %endif
  5569                              <4> 
  5570                              <4>  %assign block block+1
  5571                              <4> 
  5572                              <4>  %if round = 0
  5573                              <4>  pxor xmmblock, xmm0
  5574                              <4>  %else
  5575                              <4>  %if round < 14
  5576 00000825 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  5577                              <4>  %else
  5578                              <4>  aesOPERATIONlast xmmblock, xmm0
  5579                              <4>  %endif
  5580                              <4>  %endif
  5581                              <4> 
  5582                              <4>  %assign block block+1
  5583                              <4> 
  5584                              <4>  %if round = 0
  5585                              <4>  pxor xmmblock, xmm0
  5586                              <4>  %else
  5587                              <4>  %if round < 14
  5588 0000082A 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  5589                              <4>  %else
  5590                              <4>  aesOPERATIONlast xmmblock, xmm0
  5591                              <4>  %endif
  5592                              <4>  %endif
  5593                              <4> 
  5594                              <4>  %assign block block+1
  5595                              <4> 
  5596                              <4>  %if round = 0
  5597                              <4>  pxor xmmblock, xmm0
  5598                              <4>  %else
  5599                              <4>  %if round < 14
  5600 0000082F 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  5601                              <4>  %else
  5602                              <4>  aesOPERATIONlast xmmblock, xmm0
  5603                              <4>  %endif
  5604                              <4>  %endif
  5605                              <4> 
  5606                              <4>  %assign block block+1
  5607                              <4> 
  5608                              <4>  %if round = 0
  5609                              <4>  pxor xmmblock, xmm0
  5610                              <4>  %else
  5611                              <4>  %if round < 14
  5612 00000834 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  5613                              <4>  %else
  5614                              <4>  aesOPERATIONlast xmmblock, xmm0
  5615                              <4>  %endif
  5616                              <4>  %endif
  5617                              <4> 
  5618                              <4>  %assign block block+1
  5619                              <4> 
  5620                              <4>  %if round = 0
  5621                              <4>  pxor xmmblock, xmm0
  5622                              <4>  %else
  5623                              <4>  %if round < 14
  5624 00000839 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5625                              <4>  %else
  5626                              <4>  aesOPERATIONlast xmmblock, xmm0
  5627                              <4>  %endif
  5628                              <4>  %endif
  5629                              <4> 
  5630                              <4>  %assign block block+1
  5631                              <4> 
  5632                              <4>  %if round = 0
  5633                              <4>  pxor xmmblock, xmm0
  5634                              <4>  %else
  5635                              <4>  %if round < 14
  5636 0000083E 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5637                              <4>  %else
  5638                              <4>  aesOPERATIONlast xmmblock, xmm0
  5639                              <4>  %endif
  5640                              <4>  %endif
  5641                              <4> 
  5642                              <4>  %assign block block+1
  5643                              <3> 
  5644                              <3>  %assign round round+1
  5645 00000843 F30F6F81D0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  5646                              <3> 
  5647                              <3>  %assign block 1
  5648                              <3>  %rep BLOCK_COUNT
  5649                              <3> 
  5650                              <3>  %if round = 0
  5651                              <3>  pxor xmmblock, xmm0
  5652                              <3>  %else
  5653                              <3>  %if round < 14
  5654                              <3>  aesOPERATION xmmblock, xmm0
  5655                              <3>  %else
  5656                              <3>  aesOPERATIONlast xmmblock, xmm0
  5657                              <3>  %endif
  5658                              <3>  %endif
  5659                              <3> 
  5660                              <3>  %assign block block+1
  5661                              <3>  %endrep
  5662                              <4> 
  5663                              <4>  %if round = 0
  5664                              <4>  pxor xmmblock, xmm0
  5665                              <4>  %else
  5666                              <4>  %if round < 14
  5667 0000084B 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  5668                              <4>  %else
  5669                              <4>  aesOPERATIONlast xmmblock, xmm0
  5670                              <4>  %endif
  5671                              <4>  %endif
  5672                              <4> 
  5673                              <4>  %assign block block+1
  5674                              <4> 
  5675                              <4>  %if round = 0
  5676                              <4>  pxor xmmblock, xmm0
  5677                              <4>  %else
  5678                              <4>  %if round < 14
  5679 00000850 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  5680                              <4>  %else
  5681                              <4>  aesOPERATIONlast xmmblock, xmm0
  5682                              <4>  %endif
  5683                              <4>  %endif
  5684                              <4> 
  5685                              <4>  %assign block block+1
  5686                              <4> 
  5687                              <4>  %if round = 0
  5688                              <4>  pxor xmmblock, xmm0
  5689                              <4>  %else
  5690                              <4>  %if round < 14
  5691 00000855 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  5692                              <4>  %else
  5693                              <4>  aesOPERATIONlast xmmblock, xmm0
  5694                              <4>  %endif
  5695                              <4>  %endif
  5696                              <4> 
  5697                              <4>  %assign block block+1
  5698                              <4> 
  5699                              <4>  %if round = 0
  5700                              <4>  pxor xmmblock, xmm0
  5701                              <4>  %else
  5702                              <4>  %if round < 14
  5703 0000085A 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  5704                              <4>  %else
  5705                              <4>  aesOPERATIONlast xmmblock, xmm0
  5706                              <4>  %endif
  5707                              <4>  %endif
  5708                              <4> 
  5709                              <4>  %assign block block+1
  5710                              <4> 
  5711                              <4>  %if round = 0
  5712                              <4>  pxor xmmblock, xmm0
  5713                              <4>  %else
  5714                              <4>  %if round < 14
  5715 0000085F 660F38DCE8          <4>  aesOPERATION xmmblock, xmm0
  5716                              <4>  %else
  5717                              <4>  aesOPERATIONlast xmmblock, xmm0
  5718                              <4>  %endif
  5719                              <4>  %endif
  5720                              <4> 
  5721                              <4>  %assign block block+1
  5722                              <4> 
  5723                              <4>  %if round = 0
  5724                              <4>  pxor xmmblock, xmm0
  5725                              <4>  %else
  5726                              <4>  %if round < 14
  5727 00000864 660F38DCF0          <4>  aesOPERATION xmmblock, xmm0
  5728                              <4>  %else
  5729                              <4>  aesOPERATIONlast xmmblock, xmm0
  5730                              <4>  %endif
  5731                              <4>  %endif
  5732                              <4> 
  5733                              <4>  %assign block block+1
  5734                              <4> 
  5735                              <4>  %if round = 0
  5736                              <4>  pxor xmmblock, xmm0
  5737                              <4>  %else
  5738                              <4>  %if round < 14
  5739 00000869 660F38DCF8          <4>  aesOPERATION xmmblock, xmm0
  5740                              <4>  %else
  5741                              <4>  aesOPERATIONlast xmmblock, xmm0
  5742                              <4>  %endif
  5743                              <4>  %endif
  5744                              <4> 
  5745                              <4>  %assign block block+1
  5746                              <3> 
  5747                              <3>  %assign round round+1
  5748 0000086E F30F6F81E0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  5749                              <3> 
  5750                              <3>  %assign block 1
  5751                              <3>  %rep BLOCK_COUNT
  5752                              <3> 
  5753                              <3>  %if round = 0
  5754                              <3>  pxor xmmblock, xmm0
  5755                              <3>  %else
  5756                              <3>  %if round < 14
  5757                              <3>  aesOPERATION xmmblock, xmm0
  5758                              <3>  %else
  5759                              <3>  aesOPERATIONlast xmmblock, xmm0
  5760                              <3>  %endif
  5761                              <3>  %endif
  5762                              <3> 
  5763                              <3>  %assign block block+1
  5764                              <3>  %endrep
  5765                              <4> 
  5766                              <4>  %if round = 0
  5767                              <4>  pxor xmmblock, xmm0
  5768                              <4>  %else
  5769                              <4>  %if round < 14
  5770                              <4>  aesOPERATION xmmblock, xmm0
  5771                              <4>  %else
  5772 00000876 660F38DDC8          <4>  aesOPERATIONlast xmmblock, xmm0
  5773                              <4>  %endif
  5774                              <4>  %endif
  5775                              <4> 
  5776                              <4>  %assign block block+1
  5777                              <4> 
  5778                              <4>  %if round = 0
  5779                              <4>  pxor xmmblock, xmm0
  5780                              <4>  %else
  5781                              <4>  %if round < 14
  5782                              <4>  aesOPERATION xmmblock, xmm0
  5783                              <4>  %else
  5784 0000087B 660F38DDD0          <4>  aesOPERATIONlast xmmblock, xmm0
  5785                              <4>  %endif
  5786                              <4>  %endif
  5787                              <4> 
  5788                              <4>  %assign block block+1
  5789                              <4> 
  5790                              <4>  %if round = 0
  5791                              <4>  pxor xmmblock, xmm0
  5792                              <4>  %else
  5793                              <4>  %if round < 14
  5794                              <4>  aesOPERATION xmmblock, xmm0
  5795                              <4>  %else
  5796 00000880 660F38DDD8          <4>  aesOPERATIONlast xmmblock, xmm0
  5797                              <4>  %endif
  5798                              <4>  %endif
  5799                              <4> 
  5800                              <4>  %assign block block+1
  5801                              <4> 
  5802                              <4>  %if round = 0
  5803                              <4>  pxor xmmblock, xmm0
  5804                              <4>  %else
  5805                              <4>  %if round < 14
  5806                              <4>  aesOPERATION xmmblock, xmm0
  5807                              <4>  %else
  5808 00000885 660F38DDE0          <4>  aesOPERATIONlast xmmblock, xmm0
  5809                              <4>  %endif
  5810                              <4>  %endif
  5811                              <4> 
  5812                              <4>  %assign block block+1
  5813                              <4> 
  5814                              <4>  %if round = 0
  5815                              <4>  pxor xmmblock, xmm0
  5816                              <4>  %else
  5817                              <4>  %if round < 14
  5818                              <4>  aesOPERATION xmmblock, xmm0
  5819                              <4>  %else
  5820 0000088A 660F38DDE8          <4>  aesOPERATIONlast xmmblock, xmm0
  5821                              <4>  %endif
  5822                              <4>  %endif
  5823                              <4> 
  5824                              <4>  %assign block block+1
  5825                              <4> 
  5826                              <4>  %if round = 0
  5827                              <4>  pxor xmmblock, xmm0
  5828                              <4>  %else
  5829                              <4>  %if round < 14
  5830                              <4>  aesOPERATION xmmblock, xmm0
  5831                              <4>  %else
  5832 0000088F 660F38DDF0          <4>  aesOPERATIONlast xmmblock, xmm0
  5833                              <4>  %endif
  5834                              <4>  %endif
  5835                              <4> 
  5836                              <4>  %assign block block+1
  5837                              <4> 
  5838                              <4>  %if round = 0
  5839                              <4>  pxor xmmblock, xmm0
  5840                              <4>  %else
  5841                              <4>  %if round < 14
  5842                              <4>  aesOPERATION xmmblock, xmm0
  5843                              <4>  %else
  5844 00000894 660F38DDF8          <4>  aesOPERATIONlast xmmblock, xmm0
  5845                              <4>  %endif
  5846                              <4>  %endif
  5847                              <4> 
  5848                              <4>  %assign block block+1
  5849                              <3> 
  5850                              <3>  %assign round round+1
  5851                              <2> 
  5852                              <2> 
  5853                              <2>  %assign block 1
  5854                              <2>  %rep BLOCK_COUNT
  5855                              <2>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5856                              <2>  %assign block block+1
  5857                              <2>  %endrep
  5858 00000899 F30F7F0A            <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5859                              <3>  %assign block block+1
  5860 0000089D F30F7F5210          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5861                              <3>  %assign block block+1
  5862 000008A2 F30F7F5A20          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5863                              <3>  %assign block block+1
  5864 000008A7 F30F7F6230          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5865                              <3>  %assign block block+1
  5866 000008AC F30F7F6A40          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5867                              <3>  %assign block block+1
  5868 000008B1 F30F7F7250          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5869                              <3>  %assign block block+1
  5870 000008B6 F30F7F7A60          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  5871                              <3>  %assign block block+1
  5872                              <2> 
  5873                              <2>  %undef OPERATION
  5874                              <2>  %undef BLOCK_COUNT
  5875                              <1> 
  5876 000008BB 83C270              <1>  add Rdx, 16 * MAX_REG_BLOCK_COUNT
  5877 000008BE 48                  <1>  dec eax
  5878 000008BF 0F854DFDFFFF        <1>  jnz .1
  5879                              <1> 
  5880                              <1>  %if (32 % MAX_REG_BLOCK_COUNT) != 0
  5881                              <1>  aes_hw_cpu OPERATION_32_BLOCKS, (32 % MAX_REG_BLOCK_COUNT)
  5882                              <2>  %define OPERATION %1
  5883                              <2>  %define BLOCK_COUNT %2
  5884                              <2> 
  5885                              <2> 
  5886                              <2>  %assign block 1
  5887                              <2>  %rep BLOCK_COUNT
  5888                              <2>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  5889                              <2>  %assign block block+1
  5890                              <2>  %endrep
  5891 000008C5 F30F6F0A            <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  5892                              <3>  %assign block block+1
  5893 000008C9 F30F6F5210          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  5894                              <3>  %assign block block+1
  5895 000008CE F30F6F5A20          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  5896                              <3>  %assign block block+1
  5897 000008D3 F30F6F6230          <3>  movdqu xmmblock, [Rdx + 16 * (block - 1)]
  5898                              <3>  %assign block block+1
  5899                              <2> 
  5900                              <2> 
  5901                              <2>  %assign round 0
  5902                              <2>  %rep 15
  5903                              <2>  movdqu xmm0, [Rcx + 16 * round]
  5904                              <2> 
  5905                              <2>  %assign block 1
  5906                              <2>  %rep BLOCK_COUNT
  5907                              <2> 
  5908                              <2>  %if round = 0
  5909                              <2>  pxor xmmblock, xmm0
  5910                              <2>  %else
  5911                              <2>  %if round < 14
  5912                              <2>  aesOPERATION xmmblock, xmm0
  5913                              <2>  %else
  5914                              <2>  aesOPERATIONlast xmmblock, xmm0
  5915                              <2>  %endif
  5916                              <2>  %endif
  5917                              <2> 
  5918                              <2>  %assign block block+1
  5919                              <2>  %endrep
  5920                              <2> 
  5921                              <2>  %assign round round+1
  5922                              <2>  %endrep
  5923 000008D8 F30F6F01            <3>  movdqu xmm0, [Rcx + 16 * round]
  5924                              <3> 
  5925                              <3>  %assign block 1
  5926                              <3>  %rep BLOCK_COUNT
  5927                              <3> 
  5928                              <3>  %if round = 0
  5929                              <3>  pxor xmmblock, xmm0
  5930                              <3>  %else
  5931                              <3>  %if round < 14
  5932                              <3>  aesOPERATION xmmblock, xmm0
  5933                              <3>  %else
  5934                              <3>  aesOPERATIONlast xmmblock, xmm0
  5935                              <3>  %endif
  5936                              <3>  %endif
  5937                              <3> 
  5938                              <3>  %assign block block+1
  5939                              <3>  %endrep
  5940                              <4> 
  5941                              <4>  %if round = 0
  5942 000008DC 660FEFC8            <4>  pxor xmmblock, xmm0
  5943                              <4>  %else
  5944                              <4>  %if round < 14
  5945                              <4>  aesOPERATION xmmblock, xmm0
  5946                              <4>  %else
  5947                              <4>  aesOPERATIONlast xmmblock, xmm0
  5948                              <4>  %endif
  5949                              <4>  %endif
  5950                              <4> 
  5951                              <4>  %assign block block+1
  5952                              <4> 
  5953                              <4>  %if round = 0
  5954 000008E0 660FEFD0            <4>  pxor xmmblock, xmm0
  5955                              <4>  %else
  5956                              <4>  %if round < 14
  5957                              <4>  aesOPERATION xmmblock, xmm0
  5958                              <4>  %else
  5959                              <4>  aesOPERATIONlast xmmblock, xmm0
  5960                              <4>  %endif
  5961                              <4>  %endif
  5962                              <4> 
  5963                              <4>  %assign block block+1
  5964                              <4> 
  5965                              <4>  %if round = 0
  5966 000008E4 660FEFD8            <4>  pxor xmmblock, xmm0
  5967                              <4>  %else
  5968                              <4>  %if round < 14
  5969                              <4>  aesOPERATION xmmblock, xmm0
  5970                              <4>  %else
  5971                              <4>  aesOPERATIONlast xmmblock, xmm0
  5972                              <4>  %endif
  5973                              <4>  %endif
  5974                              <4> 
  5975                              <4>  %assign block block+1
  5976                              <4> 
  5977                              <4>  %if round = 0
  5978 000008E8 660FEFE0            <4>  pxor xmmblock, xmm0
  5979                              <4>  %else
  5980                              <4>  %if round < 14
  5981                              <4>  aesOPERATION xmmblock, xmm0
  5982                              <4>  %else
  5983                              <4>  aesOPERATIONlast xmmblock, xmm0
  5984                              <4>  %endif
  5985                              <4>  %endif
  5986                              <4> 
  5987                              <4>  %assign block block+1
  5988                              <3> 
  5989                              <3>  %assign round round+1
  5990 000008EC F30F6F4110          <3>  movdqu xmm0, [Rcx + 16 * round]
  5991                              <3> 
  5992                              <3>  %assign block 1
  5993                              <3>  %rep BLOCK_COUNT
  5994                              <3> 
  5995                              <3>  %if round = 0
  5996                              <3>  pxor xmmblock, xmm0
  5997                              <3>  %else
  5998                              <3>  %if round < 14
  5999                              <3>  aesOPERATION xmmblock, xmm0
  6000                              <3>  %else
  6001                              <3>  aesOPERATIONlast xmmblock, xmm0
  6002                              <3>  %endif
  6003                              <3>  %endif
  6004                              <3> 
  6005                              <3>  %assign block block+1
  6006                              <3>  %endrep
  6007                              <4> 
  6008                              <4>  %if round = 0
  6009                              <4>  pxor xmmblock, xmm0
  6010                              <4>  %else
  6011                              <4>  %if round < 14
  6012 000008F1 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6013                              <4>  %else
  6014                              <4>  aesOPERATIONlast xmmblock, xmm0
  6015                              <4>  %endif
  6016                              <4>  %endif
  6017                              <4> 
  6018                              <4>  %assign block block+1
  6019                              <4> 
  6020                              <4>  %if round = 0
  6021                              <4>  pxor xmmblock, xmm0
  6022                              <4>  %else
  6023                              <4>  %if round < 14
  6024 000008F6 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6025                              <4>  %else
  6026                              <4>  aesOPERATIONlast xmmblock, xmm0
  6027                              <4>  %endif
  6028                              <4>  %endif
  6029                              <4> 
  6030                              <4>  %assign block block+1
  6031                              <4> 
  6032                              <4>  %if round = 0
  6033                              <4>  pxor xmmblock, xmm0
  6034                              <4>  %else
  6035                              <4>  %if round < 14
  6036 000008FB 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6037                              <4>  %else
  6038                              <4>  aesOPERATIONlast xmmblock, xmm0
  6039                              <4>  %endif
  6040                              <4>  %endif
  6041                              <4> 
  6042                              <4>  %assign block block+1
  6043                              <4> 
  6044                              <4>  %if round = 0
  6045                              <4>  pxor xmmblock, xmm0
  6046                              <4>  %else
  6047                              <4>  %if round < 14
  6048 00000900 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6049                              <4>  %else
  6050                              <4>  aesOPERATIONlast xmmblock, xmm0
  6051                              <4>  %endif
  6052                              <4>  %endif
  6053                              <4> 
  6054                              <4>  %assign block block+1
  6055                              <3> 
  6056                              <3>  %assign round round+1
  6057 00000905 F30F6F4120          <3>  movdqu xmm0, [Rcx + 16 * round]
  6058                              <3> 
  6059                              <3>  %assign block 1
  6060                              <3>  %rep BLOCK_COUNT
  6061                              <3> 
  6062                              <3>  %if round = 0
  6063                              <3>  pxor xmmblock, xmm0
  6064                              <3>  %else
  6065                              <3>  %if round < 14
  6066                              <3>  aesOPERATION xmmblock, xmm0
  6067                              <3>  %else
  6068                              <3>  aesOPERATIONlast xmmblock, xmm0
  6069                              <3>  %endif
  6070                              <3>  %endif
  6071                              <3> 
  6072                              <3>  %assign block block+1
  6073                              <3>  %endrep
  6074                              <4> 
  6075                              <4>  %if round = 0
  6076                              <4>  pxor xmmblock, xmm0
  6077                              <4>  %else
  6078                              <4>  %if round < 14
  6079 0000090A 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6080                              <4>  %else
  6081                              <4>  aesOPERATIONlast xmmblock, xmm0
  6082                              <4>  %endif
  6083                              <4>  %endif
  6084                              <4> 
  6085                              <4>  %assign block block+1
  6086                              <4> 
  6087                              <4>  %if round = 0
  6088                              <4>  pxor xmmblock, xmm0
  6089                              <4>  %else
  6090                              <4>  %if round < 14
  6091 0000090F 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6092                              <4>  %else
  6093                              <4>  aesOPERATIONlast xmmblock, xmm0
  6094                              <4>  %endif
  6095                              <4>  %endif
  6096                              <4> 
  6097                              <4>  %assign block block+1
  6098                              <4> 
  6099                              <4>  %if round = 0
  6100                              <4>  pxor xmmblock, xmm0
  6101                              <4>  %else
  6102                              <4>  %if round < 14
  6103 00000914 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6104                              <4>  %else
  6105                              <4>  aesOPERATIONlast xmmblock, xmm0
  6106                              <4>  %endif
  6107                              <4>  %endif
  6108                              <4> 
  6109                              <4>  %assign block block+1
  6110                              <4> 
  6111                              <4>  %if round = 0
  6112                              <4>  pxor xmmblock, xmm0
  6113                              <4>  %else
  6114                              <4>  %if round < 14
  6115 00000919 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6116                              <4>  %else
  6117                              <4>  aesOPERATIONlast xmmblock, xmm0
  6118                              <4>  %endif
  6119                              <4>  %endif
  6120                              <4> 
  6121                              <4>  %assign block block+1
  6122                              <3> 
  6123                              <3>  %assign round round+1
  6124 0000091E F30F6F4130          <3>  movdqu xmm0, [Rcx + 16 * round]
  6125                              <3> 
  6126                              <3>  %assign block 1
  6127                              <3>  %rep BLOCK_COUNT
  6128                              <3> 
  6129                              <3>  %if round = 0
  6130                              <3>  pxor xmmblock, xmm0
  6131                              <3>  %else
  6132                              <3>  %if round < 14
  6133                              <3>  aesOPERATION xmmblock, xmm0
  6134                              <3>  %else
  6135                              <3>  aesOPERATIONlast xmmblock, xmm0
  6136                              <3>  %endif
  6137                              <3>  %endif
  6138                              <3> 
  6139                              <3>  %assign block block+1
  6140                              <3>  %endrep
  6141                              <4> 
  6142                              <4>  %if round = 0
  6143                              <4>  pxor xmmblock, xmm0
  6144                              <4>  %else
  6145                              <4>  %if round < 14
  6146 00000923 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6147                              <4>  %else
  6148                              <4>  aesOPERATIONlast xmmblock, xmm0
  6149                              <4>  %endif
  6150                              <4>  %endif
  6151                              <4> 
  6152                              <4>  %assign block block+1
  6153                              <4> 
  6154                              <4>  %if round = 0
  6155                              <4>  pxor xmmblock, xmm0
  6156                              <4>  %else
  6157                              <4>  %if round < 14
  6158 00000928 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6159                              <4>  %else
  6160                              <4>  aesOPERATIONlast xmmblock, xmm0
  6161                              <4>  %endif
  6162                              <4>  %endif
  6163                              <4> 
  6164                              <4>  %assign block block+1
  6165                              <4> 
  6166                              <4>  %if round = 0
  6167                              <4>  pxor xmmblock, xmm0
  6168                              <4>  %else
  6169                              <4>  %if round < 14
  6170 0000092D 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6171                              <4>  %else
  6172                              <4>  aesOPERATIONlast xmmblock, xmm0
  6173                              <4>  %endif
  6174                              <4>  %endif
  6175                              <4> 
  6176                              <4>  %assign block block+1
  6177                              <4> 
  6178                              <4>  %if round = 0
  6179                              <4>  pxor xmmblock, xmm0
  6180                              <4>  %else
  6181                              <4>  %if round < 14
  6182 00000932 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6183                              <4>  %else
  6184                              <4>  aesOPERATIONlast xmmblock, xmm0
  6185                              <4>  %endif
  6186                              <4>  %endif
  6187                              <4> 
  6188                              <4>  %assign block block+1
  6189                              <3> 
  6190                              <3>  %assign round round+1
  6191 00000937 F30F6F4140          <3>  movdqu xmm0, [Rcx + 16 * round]
  6192                              <3> 
  6193                              <3>  %assign block 1
  6194                              <3>  %rep BLOCK_COUNT
  6195                              <3> 
  6196                              <3>  %if round = 0
  6197                              <3>  pxor xmmblock, xmm0
  6198                              <3>  %else
  6199                              <3>  %if round < 14
  6200                              <3>  aesOPERATION xmmblock, xmm0
  6201                              <3>  %else
  6202                              <3>  aesOPERATIONlast xmmblock, xmm0
  6203                              <3>  %endif
  6204                              <3>  %endif
  6205                              <3> 
  6206                              <3>  %assign block block+1
  6207                              <3>  %endrep
  6208                              <4> 
  6209                              <4>  %if round = 0
  6210                              <4>  pxor xmmblock, xmm0
  6211                              <4>  %else
  6212                              <4>  %if round < 14
  6213 0000093C 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6214                              <4>  %else
  6215                              <4>  aesOPERATIONlast xmmblock, xmm0
  6216                              <4>  %endif
  6217                              <4>  %endif
  6218                              <4> 
  6219                              <4>  %assign block block+1
  6220                              <4> 
  6221                              <4>  %if round = 0
  6222                              <4>  pxor xmmblock, xmm0
  6223                              <4>  %else
  6224                              <4>  %if round < 14
  6225 00000941 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6226                              <4>  %else
  6227                              <4>  aesOPERATIONlast xmmblock, xmm0
  6228                              <4>  %endif
  6229                              <4>  %endif
  6230                              <4> 
  6231                              <4>  %assign block block+1
  6232                              <4> 
  6233                              <4>  %if round = 0
  6234                              <4>  pxor xmmblock, xmm0
  6235                              <4>  %else
  6236                              <4>  %if round < 14
  6237 00000946 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6238                              <4>  %else
  6239                              <4>  aesOPERATIONlast xmmblock, xmm0
  6240                              <4>  %endif
  6241                              <4>  %endif
  6242                              <4> 
  6243                              <4>  %assign block block+1
  6244                              <4> 
  6245                              <4>  %if round = 0
  6246                              <4>  pxor xmmblock, xmm0
  6247                              <4>  %else
  6248                              <4>  %if round < 14
  6249 0000094B 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6250                              <4>  %else
  6251                              <4>  aesOPERATIONlast xmmblock, xmm0
  6252                              <4>  %endif
  6253                              <4>  %endif
  6254                              <4> 
  6255                              <4>  %assign block block+1
  6256                              <3> 
  6257                              <3>  %assign round round+1
  6258 00000950 F30F6F4150          <3>  movdqu xmm0, [Rcx + 16 * round]
  6259                              <3> 
  6260                              <3>  %assign block 1
  6261                              <3>  %rep BLOCK_COUNT
  6262                              <3> 
  6263                              <3>  %if round = 0
  6264                              <3>  pxor xmmblock, xmm0
  6265                              <3>  %else
  6266                              <3>  %if round < 14
  6267                              <3>  aesOPERATION xmmblock, xmm0
  6268                              <3>  %else
  6269                              <3>  aesOPERATIONlast xmmblock, xmm0
  6270                              <3>  %endif
  6271                              <3>  %endif
  6272                              <3> 
  6273                              <3>  %assign block block+1
  6274                              <3>  %endrep
  6275                              <4> 
  6276                              <4>  %if round = 0
  6277                              <4>  pxor xmmblock, xmm0
  6278                              <4>  %else
  6279                              <4>  %if round < 14
  6280 00000955 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6281                              <4>  %else
  6282                              <4>  aesOPERATIONlast xmmblock, xmm0
  6283                              <4>  %endif
  6284                              <4>  %endif
  6285                              <4> 
  6286                              <4>  %assign block block+1
  6287                              <4> 
  6288                              <4>  %if round = 0
  6289                              <4>  pxor xmmblock, xmm0
  6290                              <4>  %else
  6291                              <4>  %if round < 14
  6292 0000095A 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6293                              <4>  %else
  6294                              <4>  aesOPERATIONlast xmmblock, xmm0
  6295                              <4>  %endif
  6296                              <4>  %endif
  6297                              <4> 
  6298                              <4>  %assign block block+1
  6299                              <4> 
  6300                              <4>  %if round = 0
  6301                              <4>  pxor xmmblock, xmm0
  6302                              <4>  %else
  6303                              <4>  %if round < 14
  6304 0000095F 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6305                              <4>  %else
  6306                              <4>  aesOPERATIONlast xmmblock, xmm0
  6307                              <4>  %endif
  6308                              <4>  %endif
  6309                              <4> 
  6310                              <4>  %assign block block+1
  6311                              <4> 
  6312                              <4>  %if round = 0
  6313                              <4>  pxor xmmblock, xmm0
  6314                              <4>  %else
  6315                              <4>  %if round < 14
  6316 00000964 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6317                              <4>  %else
  6318                              <4>  aesOPERATIONlast xmmblock, xmm0
  6319                              <4>  %endif
  6320                              <4>  %endif
  6321                              <4> 
  6322                              <4>  %assign block block+1
  6323                              <3> 
  6324                              <3>  %assign round round+1
  6325 00000969 F30F6F4160          <3>  movdqu xmm0, [Rcx + 16 * round]
  6326                              <3> 
  6327                              <3>  %assign block 1
  6328                              <3>  %rep BLOCK_COUNT
  6329                              <3> 
  6330                              <3>  %if round = 0
  6331                              <3>  pxor xmmblock, xmm0
  6332                              <3>  %else
  6333                              <3>  %if round < 14
  6334                              <3>  aesOPERATION xmmblock, xmm0
  6335                              <3>  %else
  6336                              <3>  aesOPERATIONlast xmmblock, xmm0
  6337                              <3>  %endif
  6338                              <3>  %endif
  6339                              <3> 
  6340                              <3>  %assign block block+1
  6341                              <3>  %endrep
  6342                              <4> 
  6343                              <4>  %if round = 0
  6344                              <4>  pxor xmmblock, xmm0
  6345                              <4>  %else
  6346                              <4>  %if round < 14
  6347 0000096E 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6348                              <4>  %else
  6349                              <4>  aesOPERATIONlast xmmblock, xmm0
  6350                              <4>  %endif
  6351                              <4>  %endif
  6352                              <4> 
  6353                              <4>  %assign block block+1
  6354                              <4> 
  6355                              <4>  %if round = 0
  6356                              <4>  pxor xmmblock, xmm0
  6357                              <4>  %else
  6358                              <4>  %if round < 14
  6359 00000973 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6360                              <4>  %else
  6361                              <4>  aesOPERATIONlast xmmblock, xmm0
  6362                              <4>  %endif
  6363                              <4>  %endif
  6364                              <4> 
  6365                              <4>  %assign block block+1
  6366                              <4> 
  6367                              <4>  %if round = 0
  6368                              <4>  pxor xmmblock, xmm0
  6369                              <4>  %else
  6370                              <4>  %if round < 14
  6371 00000978 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6372                              <4>  %else
  6373                              <4>  aesOPERATIONlast xmmblock, xmm0
  6374                              <4>  %endif
  6375                              <4>  %endif
  6376                              <4> 
  6377                              <4>  %assign block block+1
  6378                              <4> 
  6379                              <4>  %if round = 0
  6380                              <4>  pxor xmmblock, xmm0
  6381                              <4>  %else
  6382                              <4>  %if round < 14
  6383 0000097D 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6384                              <4>  %else
  6385                              <4>  aesOPERATIONlast xmmblock, xmm0
  6386                              <4>  %endif
  6387                              <4>  %endif
  6388                              <4> 
  6389                              <4>  %assign block block+1
  6390                              <3> 
  6391                              <3>  %assign round round+1
  6392 00000982 F30F6F4170          <3>  movdqu xmm0, [Rcx + 16 * round]
  6393                              <3> 
  6394                              <3>  %assign block 1
  6395                              <3>  %rep BLOCK_COUNT
  6396                              <3> 
  6397                              <3>  %if round = 0
  6398                              <3>  pxor xmmblock, xmm0
  6399                              <3>  %else
  6400                              <3>  %if round < 14
  6401                              <3>  aesOPERATION xmmblock, xmm0
  6402                              <3>  %else
  6403                              <3>  aesOPERATIONlast xmmblock, xmm0
  6404                              <3>  %endif
  6405                              <3>  %endif
  6406                              <3> 
  6407                              <3>  %assign block block+1
  6408                              <3>  %endrep
  6409                              <4> 
  6410                              <4>  %if round = 0
  6411                              <4>  pxor xmmblock, xmm0
  6412                              <4>  %else
  6413                              <4>  %if round < 14
  6414 00000987 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6415                              <4>  %else
  6416                              <4>  aesOPERATIONlast xmmblock, xmm0
  6417                              <4>  %endif
  6418                              <4>  %endif
  6419                              <4> 
  6420                              <4>  %assign block block+1
  6421                              <4> 
  6422                              <4>  %if round = 0
  6423                              <4>  pxor xmmblock, xmm0
  6424                              <4>  %else
  6425                              <4>  %if round < 14
  6426 0000098C 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6427                              <4>  %else
  6428                              <4>  aesOPERATIONlast xmmblock, xmm0
  6429                              <4>  %endif
  6430                              <4>  %endif
  6431                              <4> 
  6432                              <4>  %assign block block+1
  6433                              <4> 
  6434                              <4>  %if round = 0
  6435                              <4>  pxor xmmblock, xmm0
  6436                              <4>  %else
  6437                              <4>  %if round < 14
  6438 00000991 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6439                              <4>  %else
  6440                              <4>  aesOPERATIONlast xmmblock, xmm0
  6441                              <4>  %endif
  6442                              <4>  %endif
  6443                              <4> 
  6444                              <4>  %assign block block+1
  6445                              <4> 
  6446                              <4>  %if round = 0
  6447                              <4>  pxor xmmblock, xmm0
  6448                              <4>  %else
  6449                              <4>  %if round < 14
  6450 00000996 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6451                              <4>  %else
  6452                              <4>  aesOPERATIONlast xmmblock, xmm0
  6453                              <4>  %endif
  6454                              <4>  %endif
  6455                              <4> 
  6456                              <4>  %assign block block+1
  6457                              <3> 
  6458                              <3>  %assign round round+1
  6459 0000099B F30F6F8180000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  6460                              <3> 
  6461                              <3>  %assign block 1
  6462                              <3>  %rep BLOCK_COUNT
  6463                              <3> 
  6464                              <3>  %if round = 0
  6465                              <3>  pxor xmmblock, xmm0
  6466                              <3>  %else
  6467                              <3>  %if round < 14
  6468                              <3>  aesOPERATION xmmblock, xmm0
  6469                              <3>  %else
  6470                              <3>  aesOPERATIONlast xmmblock, xmm0
  6471                              <3>  %endif
  6472                              <3>  %endif
  6473                              <3> 
  6474                              <3>  %assign block block+1
  6475                              <3>  %endrep
  6476                              <4> 
  6477                              <4>  %if round = 0
  6478                              <4>  pxor xmmblock, xmm0
  6479                              <4>  %else
  6480                              <4>  %if round < 14
  6481 000009A3 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6482                              <4>  %else
  6483                              <4>  aesOPERATIONlast xmmblock, xmm0
  6484                              <4>  %endif
  6485                              <4>  %endif
  6486                              <4> 
  6487                              <4>  %assign block block+1
  6488                              <4> 
  6489                              <4>  %if round = 0
  6490                              <4>  pxor xmmblock, xmm0
  6491                              <4>  %else
  6492                              <4>  %if round < 14
  6493 000009A8 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6494                              <4>  %else
  6495                              <4>  aesOPERATIONlast xmmblock, xmm0
  6496                              <4>  %endif
  6497                              <4>  %endif
  6498                              <4> 
  6499                              <4>  %assign block block+1
  6500                              <4> 
  6501                              <4>  %if round = 0
  6502                              <4>  pxor xmmblock, xmm0
  6503                              <4>  %else
  6504                              <4>  %if round < 14
  6505 000009AD 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6506                              <4>  %else
  6507                              <4>  aesOPERATIONlast xmmblock, xmm0
  6508                              <4>  %endif
  6509                              <4>  %endif
  6510                              <4> 
  6511                              <4>  %assign block block+1
  6512                              <4> 
  6513                              <4>  %if round = 0
  6514                              <4>  pxor xmmblock, xmm0
  6515                              <4>  %else
  6516                              <4>  %if round < 14
  6517 000009B2 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6518                              <4>  %else
  6519                              <4>  aesOPERATIONlast xmmblock, xmm0
  6520                              <4>  %endif
  6521                              <4>  %endif
  6522                              <4> 
  6523                              <4>  %assign block block+1
  6524                              <3> 
  6525                              <3>  %assign round round+1
  6526 000009B7 F30F6F8190000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  6527                              <3> 
  6528                              <3>  %assign block 1
  6529                              <3>  %rep BLOCK_COUNT
  6530                              <3> 
  6531                              <3>  %if round = 0
  6532                              <3>  pxor xmmblock, xmm0
  6533                              <3>  %else
  6534                              <3>  %if round < 14
  6535                              <3>  aesOPERATION xmmblock, xmm0
  6536                              <3>  %else
  6537                              <3>  aesOPERATIONlast xmmblock, xmm0
  6538                              <3>  %endif
  6539                              <3>  %endif
  6540                              <3> 
  6541                              <3>  %assign block block+1
  6542                              <3>  %endrep
  6543                              <4> 
  6544                              <4>  %if round = 0
  6545                              <4>  pxor xmmblock, xmm0
  6546                              <4>  %else
  6547                              <4>  %if round < 14
  6548 000009BF 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6549                              <4>  %else
  6550                              <4>  aesOPERATIONlast xmmblock, xmm0
  6551                              <4>  %endif
  6552                              <4>  %endif
  6553                              <4> 
  6554                              <4>  %assign block block+1
  6555                              <4> 
  6556                              <4>  %if round = 0
  6557                              <4>  pxor xmmblock, xmm0
  6558                              <4>  %else
  6559                              <4>  %if round < 14
  6560 000009C4 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6561                              <4>  %else
  6562                              <4>  aesOPERATIONlast xmmblock, xmm0
  6563                              <4>  %endif
  6564                              <4>  %endif
  6565                              <4> 
  6566                              <4>  %assign block block+1
  6567                              <4> 
  6568                              <4>  %if round = 0
  6569                              <4>  pxor xmmblock, xmm0
  6570                              <4>  %else
  6571                              <4>  %if round < 14
  6572 000009C9 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6573                              <4>  %else
  6574                              <4>  aesOPERATIONlast xmmblock, xmm0
  6575                              <4>  %endif
  6576                              <4>  %endif
  6577                              <4> 
  6578                              <4>  %assign block block+1
  6579                              <4> 
  6580                              <4>  %if round = 0
  6581                              <4>  pxor xmmblock, xmm0
  6582                              <4>  %else
  6583                              <4>  %if round < 14
  6584 000009CE 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6585                              <4>  %else
  6586                              <4>  aesOPERATIONlast xmmblock, xmm0
  6587                              <4>  %endif
  6588                              <4>  %endif
  6589                              <4> 
  6590                              <4>  %assign block block+1
  6591                              <3> 
  6592                              <3>  %assign round round+1
  6593 000009D3 F30F6F81A0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  6594                              <3> 
  6595                              <3>  %assign block 1
  6596                              <3>  %rep BLOCK_COUNT
  6597                              <3> 
  6598                              <3>  %if round = 0
  6599                              <3>  pxor xmmblock, xmm0
  6600                              <3>  %else
  6601                              <3>  %if round < 14
  6602                              <3>  aesOPERATION xmmblock, xmm0
  6603                              <3>  %else
  6604                              <3>  aesOPERATIONlast xmmblock, xmm0
  6605                              <3>  %endif
  6606                              <3>  %endif
  6607                              <3> 
  6608                              <3>  %assign block block+1
  6609                              <3>  %endrep
  6610                              <4> 
  6611                              <4>  %if round = 0
  6612                              <4>  pxor xmmblock, xmm0
  6613                              <4>  %else
  6614                              <4>  %if round < 14
  6615 000009DB 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6616                              <4>  %else
  6617                              <4>  aesOPERATIONlast xmmblock, xmm0
  6618                              <4>  %endif
  6619                              <4>  %endif
  6620                              <4> 
  6621                              <4>  %assign block block+1
  6622                              <4> 
  6623                              <4>  %if round = 0
  6624                              <4>  pxor xmmblock, xmm0
  6625                              <4>  %else
  6626                              <4>  %if round < 14
  6627 000009E0 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6628                              <4>  %else
  6629                              <4>  aesOPERATIONlast xmmblock, xmm0
  6630                              <4>  %endif
  6631                              <4>  %endif
  6632                              <4> 
  6633                              <4>  %assign block block+1
  6634                              <4> 
  6635                              <4>  %if round = 0
  6636                              <4>  pxor xmmblock, xmm0
  6637                              <4>  %else
  6638                              <4>  %if round < 14
  6639 000009E5 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6640                              <4>  %else
  6641                              <4>  aesOPERATIONlast xmmblock, xmm0
  6642                              <4>  %endif
  6643                              <4>  %endif
  6644                              <4> 
  6645                              <4>  %assign block block+1
  6646                              <4> 
  6647                              <4>  %if round = 0
  6648                              <4>  pxor xmmblock, xmm0
  6649                              <4>  %else
  6650                              <4>  %if round < 14
  6651 000009EA 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6652                              <4>  %else
  6653                              <4>  aesOPERATIONlast xmmblock, xmm0
  6654                              <4>  %endif
  6655                              <4>  %endif
  6656                              <4> 
  6657                              <4>  %assign block block+1
  6658                              <3> 
  6659                              <3>  %assign round round+1
  6660 000009EF F30F6F81B0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  6661                              <3> 
  6662                              <3>  %assign block 1
  6663                              <3>  %rep BLOCK_COUNT
  6664                              <3> 
  6665                              <3>  %if round = 0
  6666                              <3>  pxor xmmblock, xmm0
  6667                              <3>  %else
  6668                              <3>  %if round < 14
  6669                              <3>  aesOPERATION xmmblock, xmm0
  6670                              <3>  %else
  6671                              <3>  aesOPERATIONlast xmmblock, xmm0
  6672                              <3>  %endif
  6673                              <3>  %endif
  6674                              <3> 
  6675                              <3>  %assign block block+1
  6676                              <3>  %endrep
  6677                              <4> 
  6678                              <4>  %if round = 0
  6679                              <4>  pxor xmmblock, xmm0
  6680                              <4>  %else
  6681                              <4>  %if round < 14
  6682 000009F7 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6683                              <4>  %else
  6684                              <4>  aesOPERATIONlast xmmblock, xmm0
  6685                              <4>  %endif
  6686                              <4>  %endif
  6687                              <4> 
  6688                              <4>  %assign block block+1
  6689                              <4> 
  6690                              <4>  %if round = 0
  6691                              <4>  pxor xmmblock, xmm0
  6692                              <4>  %else
  6693                              <4>  %if round < 14
  6694 000009FC 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6695                              <4>  %else
  6696                              <4>  aesOPERATIONlast xmmblock, xmm0
  6697                              <4>  %endif
  6698                              <4>  %endif
  6699                              <4> 
  6700                              <4>  %assign block block+1
  6701                              <4> 
  6702                              <4>  %if round = 0
  6703                              <4>  pxor xmmblock, xmm0
  6704                              <4>  %else
  6705                              <4>  %if round < 14
  6706 00000A01 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6707                              <4>  %else
  6708                              <4>  aesOPERATIONlast xmmblock, xmm0
  6709                              <4>  %endif
  6710                              <4>  %endif
  6711                              <4> 
  6712                              <4>  %assign block block+1
  6713                              <4> 
  6714                              <4>  %if round = 0
  6715                              <4>  pxor xmmblock, xmm0
  6716                              <4>  %else
  6717                              <4>  %if round < 14
  6718 00000A06 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6719                              <4>  %else
  6720                              <4>  aesOPERATIONlast xmmblock, xmm0
  6721                              <4>  %endif
  6722                              <4>  %endif
  6723                              <4> 
  6724                              <4>  %assign block block+1
  6725                              <3> 
  6726                              <3>  %assign round round+1
  6727 00000A0B F30F6F81C0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  6728                              <3> 
  6729                              <3>  %assign block 1
  6730                              <3>  %rep BLOCK_COUNT
  6731                              <3> 
  6732                              <3>  %if round = 0
  6733                              <3>  pxor xmmblock, xmm0
  6734                              <3>  %else
  6735                              <3>  %if round < 14
  6736                              <3>  aesOPERATION xmmblock, xmm0
  6737                              <3>  %else
  6738                              <3>  aesOPERATIONlast xmmblock, xmm0
  6739                              <3>  %endif
  6740                              <3>  %endif
  6741                              <3> 
  6742                              <3>  %assign block block+1
  6743                              <3>  %endrep
  6744                              <4> 
  6745                              <4>  %if round = 0
  6746                              <4>  pxor xmmblock, xmm0
  6747                              <4>  %else
  6748                              <4>  %if round < 14
  6749 00000A13 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6750                              <4>  %else
  6751                              <4>  aesOPERATIONlast xmmblock, xmm0
  6752                              <4>  %endif
  6753                              <4>  %endif
  6754                              <4> 
  6755                              <4>  %assign block block+1
  6756                              <4> 
  6757                              <4>  %if round = 0
  6758                              <4>  pxor xmmblock, xmm0
  6759                              <4>  %else
  6760                              <4>  %if round < 14
  6761 00000A18 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6762                              <4>  %else
  6763                              <4>  aesOPERATIONlast xmmblock, xmm0
  6764                              <4>  %endif
  6765                              <4>  %endif
  6766                              <4> 
  6767                              <4>  %assign block block+1
  6768                              <4> 
  6769                              <4>  %if round = 0
  6770                              <4>  pxor xmmblock, xmm0
  6771                              <4>  %else
  6772                              <4>  %if round < 14
  6773 00000A1D 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6774                              <4>  %else
  6775                              <4>  aesOPERATIONlast xmmblock, xmm0
  6776                              <4>  %endif
  6777                              <4>  %endif
  6778                              <4> 
  6779                              <4>  %assign block block+1
  6780                              <4> 
  6781                              <4>  %if round = 0
  6782                              <4>  pxor xmmblock, xmm0
  6783                              <4>  %else
  6784                              <4>  %if round < 14
  6785 00000A22 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6786                              <4>  %else
  6787                              <4>  aesOPERATIONlast xmmblock, xmm0
  6788                              <4>  %endif
  6789                              <4>  %endif
  6790                              <4> 
  6791                              <4>  %assign block block+1
  6792                              <3> 
  6793                              <3>  %assign round round+1
  6794 00000A27 F30F6F81D0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  6795                              <3> 
  6796                              <3>  %assign block 1
  6797                              <3>  %rep BLOCK_COUNT
  6798                              <3> 
  6799                              <3>  %if round = 0
  6800                              <3>  pxor xmmblock, xmm0
  6801                              <3>  %else
  6802                              <3>  %if round < 14
  6803                              <3>  aesOPERATION xmmblock, xmm0
  6804                              <3>  %else
  6805                              <3>  aesOPERATIONlast xmmblock, xmm0
  6806                              <3>  %endif
  6807                              <3>  %endif
  6808                              <3> 
  6809                              <3>  %assign block block+1
  6810                              <3>  %endrep
  6811                              <4> 
  6812                              <4>  %if round = 0
  6813                              <4>  pxor xmmblock, xmm0
  6814                              <4>  %else
  6815                              <4>  %if round < 14
  6816 00000A2F 660F38DCC8          <4>  aesOPERATION xmmblock, xmm0
  6817                              <4>  %else
  6818                              <4>  aesOPERATIONlast xmmblock, xmm0
  6819                              <4>  %endif
  6820                              <4>  %endif
  6821                              <4> 
  6822                              <4>  %assign block block+1
  6823                              <4> 
  6824                              <4>  %if round = 0
  6825                              <4>  pxor xmmblock, xmm0
  6826                              <4>  %else
  6827                              <4>  %if round < 14
  6828 00000A34 660F38DCD0          <4>  aesOPERATION xmmblock, xmm0
  6829                              <4>  %else
  6830                              <4>  aesOPERATIONlast xmmblock, xmm0
  6831                              <4>  %endif
  6832                              <4>  %endif
  6833                              <4> 
  6834                              <4>  %assign block block+1
  6835                              <4> 
  6836                              <4>  %if round = 0
  6837                              <4>  pxor xmmblock, xmm0
  6838                              <4>  %else
  6839                              <4>  %if round < 14
  6840 00000A39 660F38DCD8          <4>  aesOPERATION xmmblock, xmm0
  6841                              <4>  %else
  6842                              <4>  aesOPERATIONlast xmmblock, xmm0
  6843                              <4>  %endif
  6844                              <4>  %endif
  6845                              <4> 
  6846                              <4>  %assign block block+1
  6847                              <4> 
  6848                              <4>  %if round = 0
  6849                              <4>  pxor xmmblock, xmm0
  6850                              <4>  %else
  6851                              <4>  %if round < 14
  6852 00000A3E 660F38DCE0          <4>  aesOPERATION xmmblock, xmm0
  6853                              <4>  %else
  6854                              <4>  aesOPERATIONlast xmmblock, xmm0
  6855                              <4>  %endif
  6856                              <4>  %endif
  6857                              <4> 
  6858                              <4>  %assign block block+1
  6859                              <3> 
  6860                              <3>  %assign round round+1
  6861 00000A43 F30F6F81E0000000    <3>  movdqu xmm0, [Rcx + 16 * round]
  6862                              <3> 
  6863                              <3>  %assign block 1
  6864                              <3>  %rep BLOCK_COUNT
  6865                              <3> 
  6866                              <3>  %if round = 0
  6867                              <3>  pxor xmmblock, xmm0
  6868                              <3>  %else
  6869                              <3>  %if round < 14
  6870                              <3>  aesOPERATION xmmblock, xmm0
  6871                              <3>  %else
  6872                              <3>  aesOPERATIONlast xmmblock, xmm0
  6873                              <3>  %endif
  6874                              <3>  %endif
  6875                              <3> 
  6876                              <3>  %assign block block+1
  6877                              <3>  %endrep
  6878                              <4> 
  6879                              <4>  %if round = 0
  6880                              <4>  pxor xmmblock, xmm0
  6881                              <4>  %else
  6882                              <4>  %if round < 14
  6883                              <4>  aesOPERATION xmmblock, xmm0
  6884                              <4>  %else
  6885 00000A4B 660F38DDC8          <4>  aesOPERATIONlast xmmblock, xmm0
  6886                              <4>  %endif
  6887                              <4>  %endif
  6888                              <4> 
  6889                              <4>  %assign block block+1
  6890                              <4> 
  6891                              <4>  %if round = 0
  6892                              <4>  pxor xmmblock, xmm0
  6893                              <4>  %else
  6894                              <4>  %if round < 14
  6895                              <4>  aesOPERATION xmmblock, xmm0
  6896                              <4>  %else
  6897 00000A50 660F38DDD0          <4>  aesOPERATIONlast xmmblock, xmm0
  6898                              <4>  %endif
  6899                              <4>  %endif
  6900                              <4> 
  6901                              <4>  %assign block block+1
  6902                              <4> 
  6903                              <4>  %if round = 0
  6904                              <4>  pxor xmmblock, xmm0
  6905                              <4>  %else
  6906                              <4>  %if round < 14
  6907                              <4>  aesOPERATION xmmblock, xmm0
  6908                              <4>  %else
  6909 00000A55 660F38DDD8          <4>  aesOPERATIONlast xmmblock, xmm0
  6910                              <4>  %endif
  6911                              <4>  %endif
  6912                              <4> 
  6913                              <4>  %assign block block+1
  6914                              <4> 
  6915                              <4>  %if round = 0
  6916                              <4>  pxor xmmblock, xmm0
  6917                              <4>  %else
  6918                              <4>  %if round < 14
  6919                              <4>  aesOPERATION xmmblock, xmm0
  6920                              <4>  %else
  6921 00000A5A 660F38DDE0          <4>  aesOPERATIONlast xmmblock, xmm0
  6922                              <4>  %endif
  6923                              <4>  %endif
  6924                              <4> 
  6925                              <4>  %assign block block+1
  6926                              <3> 
  6927                              <3>  %assign round round+1
  6928                              <2> 
  6929                              <2> 
  6930                              <2>  %assign block 1
  6931                              <2>  %rep BLOCK_COUNT
  6932                              <2>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  6933                              <2>  %assign block block+1
  6934                              <2>  %endrep
  6935 00000A5F F30F7F0A            <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  6936                              <3>  %assign block block+1
  6937 00000A63 F30F7F5210          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  6938                              <3>  %assign block block+1
  6939 00000A68 F30F7F5A20          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  6940                              <3>  %assign block block+1
  6941 00000A6D F30F7F6230          <3>  movdqu [Rdx + 16 * (block - 1)], xmmblock
  6942                              <3>  %assign block block+1
  6943                              <2> 
  6944                              <2>  %undef OPERATION
  6945                              <2>  %undef BLOCK_COUNT
  6946                              <1>  %endif
  6947                              <1> 
  6948                              <1>  %ifidn __OUTPUT_FORMAT__, win64
  6949                              <1>  %if MAX_REG_BLOCK_COUNT > 5
  6950                              <1>  pop_xmm 6, MAX_REG_BLOCK_COUNT
  6951                              <1>  %endif
  6952                              <1>  %endif
  6953                              <1> 
  6954                              <1>  %undef OPERATION_32_BLOCKS
  6955                              <1>  %undef MAX_REG_BLOCK_COUNT
  6956                                  	aes_function_exit
  6957                              <1> 
  6958                              <1> 
  6959                              <1> 
  6960                              <1>  %ifdef MS_STDCALL
  6961 00000A72 C20800              <1>  ret 8
  6962                              <1>  %else
  6963                              <1>  ret
  6964                              <1>  %endif
  6965                              <1> 
  6966                                  
  6967                                  
  6968                                  %endif	; __BITS__ != 16
