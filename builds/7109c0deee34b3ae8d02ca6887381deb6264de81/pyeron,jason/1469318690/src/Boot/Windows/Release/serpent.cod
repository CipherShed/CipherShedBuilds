;	Static Name Aliases
;
	TITLE   ..\..\..\crypto\serpent.c
	.MODEL  SMALL
	.386p
	.387
_TEXT	SEGMENT  WORD USE16 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT  WORD USE16 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT  WORD USE16 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT  WORD USE16 PUBLIC 'BSS'
_BSS	ENDS
DGROUP	GROUP	CONST, _BSS, _DATA
	ASSUME DS: DGROUP, SS: DGROUP
_TEXT      SEGMENT
	ASSUME	CS: _TEXT

S0f	PROC NEAR	;  COMDAT
;|*** // serpent.cpp - written and placed in the public domain by Wei Dai
;|*** 
;|*** /* Adapted for CipherShed */
;|*** 
;|*** #ifdef TC_WINDOWS_BOOT
;|*** #pragma optimize ("t", on)
;|*** #endif
;|*** 
;|*** #include "Serpent.h"
;|*** #include "../Common/Endian.h"
;|*** 
;|*** #include <memory.h>
;|*** 
;|*** #if defined(_WIN32) && !defined(_DEBUG)
;|*** #include <stdlib.h>
;|*** #define rotlFixed _rotl
;|*** #define rotrFixed _rotr
;|*** #else
;|*** #define rotlFixed(x,n)   (((x) << (n)) | ((x) >> (32 - (n))))
;|*** #define rotrFixed(x,n)   (((x) >> (n)) | ((x) << (32 - (n))))
;|*** #endif
;|*** 
;|*** // linear transformation
;|*** #define LT(i,a,b,c,d,e)	{\
;|*** 	a = rotlFixed(a, 13);	\
;|*** 	c = rotlFixed(c, 3); 	\
;|*** 	d = rotlFixed(d ^ c ^ (a << 3), 7); 	\
;|*** 	b = rotlFixed(b ^ a ^ c, 1); 	\
;|*** 	a = rotlFixed(a ^ b ^ d, 5); 		\
;|*** 	c = rotlFixed(c ^ d ^ (b << 7), 22);}
;|*** 
;|*** // inverse linear transformation
;|*** #define ILT(i,a,b,c,d,e)	{\
;|*** 	c = rotrFixed(c, 22);	\
;|*** 	a = rotrFixed(a, 5); 	\
;|*** 	c ^= d ^ (b << 7);	\
;|*** 	a ^= b ^ d; 		\
;|*** 	b = rotrFixed(b, 1); 	\
;|*** 	d = rotrFixed(d, 7) ^ c ^ (a << 3);	\
;|*** 	b ^= a ^ c; 		\
;|*** 	c = rotrFixed(c, 3); 	\
;|*** 	a = rotrFixed(a, 13);}
;|*** 
;|*** // order of output from S-box functions
;|*** #define beforeS0(f) f(0,a,b,c,d,e)
;|*** #define afterS0(f) f(1,b,e,c,a,d)
;|*** #define afterS1(f) f(2,c,b,a,e,d)
;|*** #define afterS2(f) f(3,a,e,b,d,c)
;|*** #define afterS3(f) f(4,e,b,d,c,a)
;|*** #define afterS4(f) f(5,b,a,e,c,d)
;|*** #define afterS5(f) f(6,a,c,b,e,d)
;|*** #define afterS6(f) f(7,a,c,d,b,e)
;|*** #define afterS7(f) f(8,d,e,b,a,c)
;|*** 
;|*** // order of output from inverse S-box functions
;|*** #define beforeI7(f) f(8,a,b,c,d,e)
;|*** #define afterI7(f) f(7,d,a,b,e,c)
;|*** #define afterI6(f) f(6,a,b,c,e,d)
;|*** #define afterI5(f) f(5,b,d,e,c,a)
;|*** #define afterI4(f) f(4,b,c,e,a,d)
;|*** #define afterI3(f) f(3,a,b,e,c,d)
;|*** #define afterI2(f) f(2,b,d,e,c,a)
;|*** #define afterI1(f) f(1,a,b,c,e,d)
;|*** #define afterI0(f) f(0,a,d,b,e,c)
;|*** 
;|*** // The instruction sequences for the S-box functions 
;|*** // come from Dag Arne Osvik's paper "Speeding up Serpent".
;|*** 
;|*** #define S0(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r3 ^= r0;   \
;|***     r4 = r1;   \
;|***     r1 &= r3;   \
;|***     r4 ^= r2;   \
;|***     r1 ^= r0;   \
;|***     r0 |= r3;   \
;|***     r0 ^= r4;   \
;|***     r4 ^= r3;   \
;|***     r3 ^= r2;   \
;|***     r2 |= r1;   \
;|***     r2 ^= r4;   \
;|***     r4 = ~r4;      \
;|***     r4 |= r1;   \
;|***     r1 ^= r3;   \
;|***     r1 ^= r4;   \
;|***     r3 |= r0;   \
;|***     r1 ^= r3;   \
;|***     r4 ^= r3;   \
;|***             }
;|*** 
;|*** #define I0(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r2 = ~r2;      \
;|***     r4 = r1;   \
;|***     r1 |= r0;   \
;|***     r4 = ~r4;      \
;|***     r1 ^= r2;   \
;|***     r2 |= r4;   \
;|***     r1 ^= r3;   \
;|***     r0 ^= r4;   \
;|***     r2 ^= r0;   \
;|***     r0 &= r3;   \
;|***     r4 ^= r0;   \
;|***     r0 |= r1;   \
;|***     r0 ^= r2;   \
;|***     r3 ^= r4;   \
;|***     r2 ^= r1;   \
;|***     r3 ^= r0;   \
;|***     r3 ^= r1;   \
;|***     r2 &= r3;   \
;|***     r4 ^= r2;   \
;|***             }
;|*** 
;|*** #define S1(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r0 = ~r0;      \
;|***     r2 = ~r2;      \
;|***     r4 = r0;   \
;|***     r0 &= r1;   \
;|***     r2 ^= r0;   \
;|***     r0 |= r3;   \
;|***     r3 ^= r2;   \
;|***     r1 ^= r0;   \
;|***     r0 ^= r4;   \
;|***     r4 |= r1;   \
;|***     r1 ^= r3;   \
;|***     r2 |= r0;   \
;|***     r2 &= r4;   \
;|***     r0 ^= r1;   \
;|***     r1 &= r2;   \
;|***     r1 ^= r0;   \
;|***     r0 &= r2;   \
;|***     r0 ^= r4;   \
;|***             }
;|*** 
;|*** #define I1(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r4 = r1;   \
;|***     r1 ^= r3;   \
;|***     r3 &= r1;   \
;|***     r4 ^= r2;   \
;|***     r3 ^= r0;   \
;|***     r0 |= r1;   \
;|***     r2 ^= r3;   \
;|***     r0 ^= r4;   \
;|***     r0 |= r2;   \
;|***     r1 ^= r3;   \
;|***     r0 ^= r1;   \
;|***     r1 |= r3;   \
;|***     r1 ^= r0;   \
;|***     r4 = ~r4;      \
;|***     r4 ^= r1;   \
;|***     r1 |= r0;   \
;|***     r1 ^= r0;   \
;|***     r1 |= r4;   \
;|***     r3 ^= r1;   \
;|***             }
;|*** 
;|*** #define S2(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r4 = r0;   \
;|***     r0 &= r2;   \
;|***     r0 ^= r3;   \
;|***     r2 ^= r1;   \
;|***     r2 ^= r0;   \
;|***     r3 |= r4;   \
;|***     r3 ^= r1;   \
;|***     r4 ^= r2;   \
;|***     r1 = r3;   \
;|***     r3 |= r4;   \
;|***     r3 ^= r0;   \
;|***     r0 &= r1;   \
;|***     r4 ^= r0;   \
;|***     r1 ^= r3;   \
;|***     r1 ^= r4;   \
;|***     r4 = ~r4;      \
;|***             }
;|*** 
;|*** #define I2(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r2 ^= r3;   \
;|***     r3 ^= r0;   \
;|***     r4 = r3;   \
;|***     r3 &= r2;   \
;|***     r3 ^= r1;   \
;|***     r1 |= r2;   \
;|***     r1 ^= r4;   \
;|***     r4 &= r3;   \
;|***     r2 ^= r3;   \
;|***     r4 &= r0;   \
;|***     r4 ^= r2;   \
;|***     r2 &= r1;   \
;|***     r2 |= r0;   \
;|***     r3 = ~r3;      \
;|***     r2 ^= r3;   \
;|***     r0 ^= r3;   \
;|***     r0 &= r1;   \
;|***     r3 ^= r4;   \
;|***     r3 ^= r0;   \
;|***             }
;|*** 
;|*** #define S3(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r4 = r0;   \
;|***     r0 |= r3;   \
;|***     r3 ^= r1;   \
;|***     r1 &= r4;   \
;|***     r4 ^= r2;   \
;|***     r2 ^= r3;   \
;|***     r3 &= r0;   \
;|***     r4 |= r1;   \
;|***     r3 ^= r4;   \
;|***     r0 ^= r1;   \
;|***     r4 &= r0;   \
;|***     r1 ^= r3;   \
;|***     r4 ^= r2;   \
;|***     r1 |= r0;   \
;|***     r1 ^= r2;   \
;|***     r0 ^= r3;   \
;|***     r2 = r1;   \
;|***     r1 |= r3;   \
;|***     r1 ^= r0;   \
;|***             }
;|*** 
;|*** #define I3(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r4 = r2;   \
;|***     r2 ^= r1;   \
;|***     r1 &= r2;   \
;|***     r1 ^= r0;   \
;|***     r0 &= r4;   \
;|***     r4 ^= r3;   \
;|***     r3 |= r1;   \
;|***     r3 ^= r2;   \
;|***     r0 ^= r4;   \
;|***     r2 ^= r0;   \
;|***     r0 |= r3;   \
;|***     r0 ^= r1;   \
;|***     r4 ^= r2;   \
;|***     r2 &= r3;   \
;|***     r1 |= r3;   \
;|***     r1 ^= r2;   \
;|***     r4 ^= r0;   \
;|***     r2 ^= r4;   \
;|***             }
;|*** 
;|*** #define S4(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r1 ^= r3;   \
;|***     r3 = ~r3;      \
;|***     r2 ^= r3;   \
;|***     r3 ^= r0;   \
;|***     r4 = r1;   \
;|***     r1 &= r3;   \
;|***     r1 ^= r2;   \
;|***     r4 ^= r3;   \
;|***     r0 ^= r4;   \
;|***     r2 &= r4;   \
;|***     r2 ^= r0;   \
;|***     r0 &= r1;   \
;|***     r3 ^= r0;   \
;|***     r4 |= r1;   \
;|***     r4 ^= r0;   \
;|***     r0 |= r3;   \
;|***     r0 ^= r2;   \
;|***     r2 &= r3;   \
;|***     r0 = ~r0;      \
;|***     r4 ^= r2;   \
;|***             }
;|*** 
;|*** #define I4(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r4 = r2;   \
;|***     r2 &= r3;   \
;|***     r2 ^= r1;   \
;|***     r1 |= r3;   \
;|***     r1 &= r0;   \
;|***     r4 ^= r2;   \
;|***     r4 ^= r1;   \
;|***     r1 &= r2;   \
;|***     r0 = ~r0;      \
;|***     r3 ^= r4;   \
;|***     r1 ^= r3;   \
;|***     r3 &= r0;   \
;|***     r3 ^= r2;   \
;|***     r0 ^= r1;   \
;|***     r2 &= r0;   \
;|***     r3 ^= r0;   \
;|***     r2 ^= r4;   \
;|***     r2 |= r3;   \
;|***     r3 ^= r0;   \
;|***     r2 ^= r1;   \
;|***             }
;|*** 
;|*** #define S5(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r0 ^= r1;   \
;|***     r1 ^= r3;   \
;|***     r3 = ~r3;      \
;|***     r4 = r1;   \
;|***     r1 &= r0;   \
;|***     r2 ^= r3;   \
;|***     r1 ^= r2;   \
;|***     r2 |= r4;   \
;|***     r4 ^= r3;   \
;|***     r3 &= r1;   \
;|***     r3 ^= r0;   \
;|***     r4 ^= r1;   \
;|***     r4 ^= r2;   \
;|***     r2 ^= r0;   \
;|***     r0 &= r3;   \
;|***     r2 = ~r2;      \
;|***     r0 ^= r4;   \
;|***     r4 |= r3;   \
;|***     r2 ^= r4;   \
;|***             }
;|*** 
;|*** #define I5(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r1 = ~r1;      \
;|***     r4 = r3;   \
;|***     r2 ^= r1;   \
;|***     r3 |= r0;   \
;|***     r3 ^= r2;   \
;|***     r2 |= r1;   \
;|***     r2 &= r0;   \
;|***     r4 ^= r3;   \
;|***     r2 ^= r4;   \
;|***     r4 |= r0;   \
;|***     r4 ^= r1;   \
;|***     r1 &= r2;   \
;|***     r1 ^= r3;   \
;|***     r4 ^= r2;   \
;|***     r3 &= r4;   \
;|***     r4 ^= r1;   \
;|***     r3 ^= r0;   \
;|***     r3 ^= r4;   \
;|***     r4 = ~r4;      \
;|***             }
;|*** 
;|*** #define S6(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r2 = ~r2;      \
;|***     r4 = r3;   \
;|***     r3 &= r0;   \
;|***     r0 ^= r4;   \
;|***     r3 ^= r2;   \
;|***     r2 |= r4;   \
;|***     r1 ^= r3;   \
;|***     r2 ^= r0;   \
;|***     r0 |= r1;   \
;|***     r2 ^= r1;   \
;|***     r4 ^= r0;   \
;|***     r0 |= r3;   \
;|***     r0 ^= r2;   \
;|***     r4 ^= r3;   \
;|***     r4 ^= r0;   \
;|***     r3 = ~r3;      \
;|***     r2 &= r4;   \
;|***     r2 ^= r3;   \
;|***             }
;|*** 
;|*** #define I6(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r0 ^= r2;   \
;|***     r4 = r2;   \
;|***     r2 &= r0;   \
;|***     r4 ^= r3;   \
;|***     r2 = ~r2;      \
;|***     r3 ^= r1;   \
;|***     r2 ^= r3;   \
;|***     r4 |= r0;   \
;|***     r0 ^= r2;   \
;|***     r3 ^= r4;   \
;|***     r4 ^= r1;   \
;|***     r1 &= r3;   \
;|***     r1 ^= r0;   \
;|***     r0 ^= r3;   \
;|***     r0 |= r2;   \
;|***     r3 ^= r1;   \
;|***     r4 ^= r0;   \
;|***             }
;|*** 
;|*** #define S7(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r4 = r2;   \
;|***     r2 &= r1;   \
;|***     r2 ^= r3;   \
;|***     r3 &= r1;   \
;|***     r4 ^= r2;   \
;|***     r2 ^= r1;   \
;|***     r1 ^= r0;   \
;|***     r0 |= r4;   \
;|***     r0 ^= r2;   \
;|***     r3 ^= r1;   \
;|***     r2 ^= r3;   \
;|***     r3 &= r0;   \
;|***     r3 ^= r4;   \
;|***     r4 ^= r2;   \
;|***     r2 &= r0;   \
;|***     r4 = ~r4;      \
;|***     r2 ^= r4;   \
;|***     r4 &= r0;   \
;|***     r1 ^= r3;   \
;|***     r4 ^= r1;   \
;|***             }
;|*** 
;|*** #define I7(i, r0, r1, r2, r3, r4) \
;|***        {           \
;|***     r4 = r2;   \
;|***     r2 ^= r0;   \
;|***     r0 &= r3;   \
;|***     r2 = ~r2;      \
;|***     r4 |= r3;   \
;|***     r3 ^= r1;   \
;|***     r1 |= r0;   \
;|***     r0 ^= r2;   \
;|***     r2 &= r4;   \
;|***     r1 ^= r2;   \
;|***     r2 ^= r0;   \
;|***     r0 |= r2;   \
;|***     r3 &= r4;   \
;|***     r0 ^= r3;   \
;|***     r4 ^= r1;   \
;|***     r3 ^= r4;   \
;|***     r4 |= r0;   \
;|***     r3 ^= r2;   \
;|***     r4 ^= r2;   \
;|***             }
;|*** 
;|*** // key xor
;|*** #define KX(r, a, b, c, d, e)	{\
;|*** 	a ^= k[4 * r + 0]; \
;|*** 	b ^= k[4 * r + 1]; \
;|*** 	c ^= k[4 * r + 2]; \
;|*** 	d ^= k[4 * r + 3];}
;|*** 
;|*** 
;|*** #ifdef TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** static void S0f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {
; Line 442
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r0 = 4
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
	*** 000005	8b 4e 06 		mov	cx,WORD PTR [bp+6]	;r1
	*** 000008	8b 7e 0a 		mov	di,WORD PTR [bp+10]	;r3
	*** 00000b	8b 76 04 		mov	si,WORD PTR [bp+4]	;r0
	*** 00000e	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
;|*** 	*r3 ^= *r0;
; Line 443
	*** 000011	8b 04 			mov	ax,WORD PTR [si]
	*** 000013	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 000016	31 05 			xor	WORD PTR [di],ax
	*** 000018	8b f1 			mov	si,cx
	*** 00001a	31 55 02 		xor	WORD PTR [di+2],dx
;|*** 	*r4 = *r1;
; Line 444
	*** 00001d	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000020	66 89 07 		mov	DWORD PTR [bx],eax
;|*** 	*r1 &= *r3;
; Line 445
	*** 000023	66 8b 05 		mov	eax,DWORD PTR [di]
	*** 000026	66 21 04 		and	DWORD PTR [si],eax
;|*** 	*r4 ^= *r2;
; Line 446
	*** 000029	8b c3 			mov	ax,bx
	*** 00002b	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 00002e	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000031	8b d8 			mov	bx,ax
	*** 000033	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r1 ^= *r0;
; Line 447
	*** 000036	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 000039	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00003c	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r0 |= *r3;
; Line 448
	*** 00003f	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000042	66 09 0f 		or	DWORD PTR [bx],ecx
;|*** 	*r0 ^= *r4;
; Line 449
	*** 000045	8b d8 			mov	bx,ax
	*** 000047	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00004a	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 00004d	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 ^= *r3;
; Line 450
	*** 000050	8b 0d 			mov	cx,WORD PTR [di]
	*** 000052	8b d8 			mov	bx,ax
	*** 000054	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000057	31 0f 			xor	WORD PTR [bx],cx
	*** 000059	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** 	*r3 ^= *r2;
; Line 451
	*** 00005c	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 00005f	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000062	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r2 |= *r1;
; Line 452
	*** 000065	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 000068	66 09 0f 		or	DWORD PTR [bx],ecx
;|*** 	*r2 ^= *r4;
; Line 453
	*** 00006b	8b d8 			mov	bx,ax
	*** 00006d	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000070	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 000073	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 = ~*r4;
; Line 454
	*** 000076	8b d8 			mov	bx,ax
	*** 000078	f7 17 			not	WORD PTR [bx]
	*** 00007a	f7 57 02 		not	WORD PTR [bx+2]
;|*** 	*r4 |= *r1;
; Line 455
	*** 00007d	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 000080	66 09 0f 		or	DWORD PTR [bx],ecx
;|*** 	*r1 ^= *r3;
; Line 456
	*** 000083	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000086	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r1 ^= *r4;
; Line 457
	*** 000089	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00008c	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r3 |= *r0;
;|*** 	*r1 ^= *r3;
; Line 459
	*** 00008f	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 000092	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000095	66 09 0d 		or	DWORD PTR [di],ecx
	*** 000098	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 00009b	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r4 ^= *r3;
; Line 460
	*** 00009e	8b d8 			mov	bx,ax
	*** 0000a0	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 0000a3	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** }
; Line 461
	*** 0000a6	5e 			pop	si
	*** 0000a7	5f 			pop	di
	*** 0000a8	c9 			leave	
	*** 0000a9	c3 			ret	

S0f	ENDP

S1f	PROC NEAR	;  COMDAT
;|*** 
;|*** static void S1f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {        
; Line 464
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r0 = 4
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
	*** 000005	8b 4e 06 		mov	cx,WORD PTR [bp+6]	;r1
	*** 000008	8b 7e 08 		mov	di,WORD PTR [bp+8]	;r2
	*** 00000b	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
;|***     *r0 = ~*r0;   
; Line 465
	*** 00000e	f7 17 			not	WORD PTR [bx]
	*** 000010	f7 57 02 		not	WORD PTR [bx+2]
;|***     *r2 = ~*r2;   
; Line 466
	*** 000013	f7 15 			not	WORD PTR [di]
	*** 000015	f7 55 02 		not	WORD PTR [di+2]
;|***     *r4 = *r0;
; Line 467
	*** 000018	8b 07 			mov	ax,WORD PTR [bx]
	*** 00001a	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 00001d	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000020	89 04 			mov	WORD PTR [si],ax
	*** 000022	89 54 02 		mov	WORD PTR [si+2],dx
;|***     *r0 &= *r1;
;|***     *r2 ^= *r0;
; Line 469
	*** 000025	8b f1 			mov	si,cx
	*** 000027	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 00002a	66 21 07 		and	DWORD PTR [bx],eax
	*** 00002d	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 000030	66 31 05 		xor	DWORD PTR [di],eax
;|***     *r0 |= *r3;
; Line 470
	*** 000033	8b c3 			mov	ax,bx
	*** 000035	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 000038	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00003b	8b d8 			mov	bx,ax
	*** 00003d	66 09 0f 		or	DWORD PTR [bx],ecx
;|***     *r3 ^= *r2;
; Line 471
	*** 000040	8b 0d 			mov	cx,WORD PTR [di]
	*** 000042	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 000045	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000048	31 0f 			xor	WORD PTR [bx],cx
	*** 00004a	31 57 02 		xor	WORD PTR [bx+2],dx
;|***     *r1 ^= *r0;
; Line 472
	*** 00004d	8b d8 			mov	bx,ax
	*** 00004f	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000052	66 31 0c 		xor	DWORD PTR [si],ecx
;|***     *r0 ^= *r4;
; Line 473
	*** 000055	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000058	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00005b	8b d8 			mov	bx,ax
	*** 00005d	66 31 0f 		xor	DWORD PTR [bx],ecx
;|***     *r4 |= *r1;
; Line 474
	*** 000060	8b 0c 			mov	cx,WORD PTR [si]
	*** 000062	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000065	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 000068	09 0f 			or	WORD PTR [bx],cx
	*** 00006a	09 57 02 		or	WORD PTR [bx+2],dx
;|***     *r1 ^= *r3;
; Line 475
	*** 00006d	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 000070	8b 0f 			mov	cx,WORD PTR [bx]
	*** 000072	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000075	31 0c 			xor	WORD PTR [si],cx
	*** 000077	8b d8 			mov	bx,ax
	*** 000079	31 54 02 		xor	WORD PTR [si+2],dx
;|***     *r2 |= *r0;
; Line 476
	*** 00007c	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00007f	66 09 0d 		or	DWORD PTR [di],ecx
;|***     *r2 &= *r4;
; Line 477
	*** 000082	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000085	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000088	66 21 0d 		and	DWORD PTR [di],ecx
;|***     *r0 ^= *r1;
; Line 478
	*** 00008b	8b 0c 			mov	cx,WORD PTR [si]
	*** 00008d	8b d8 			mov	bx,ax
	*** 00008f	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 000092	31 0f 			xor	WORD PTR [bx],cx
	*** 000094	31 57 02 		xor	WORD PTR [bx+2],dx
;|***     *r1 &= *r2;
; Line 479
	*** 000097	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 00009a	66 21 0c 		and	DWORD PTR [si],ecx
;|***     *r1 ^= *r0;
; Line 480
	*** 00009d	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 0000a0	66 31 0c 		xor	DWORD PTR [si],ecx
;|***     *r0 &= *r2;
; Line 481
	*** 0000a3	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 0000a6	66 21 0f 		and	DWORD PTR [bx],ecx
;|***     *r0 ^= *r4;
; Line 482
	*** 0000a9	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 0000ac	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 0000af	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** }
; Line 483
	*** 0000b2	5e 			pop	si
	*** 0000b3	5f 			pop	di
	*** 0000b4	c9 			leave	
	*** 0000b5	c3 			ret	

S1f	ENDP

S2f	PROC NEAR	;  COMDAT
;|*** 
;|*** static void S2f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {        
; Line 486
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r0 = 4
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
	*** 000005	8b 4e 04 		mov	cx,WORD PTR [bp+4]	;r0
	*** 000008	8b 7e 0a 		mov	di,WORD PTR [bp+10]	;r3
	*** 00000b	8b f1 			mov	si,cx
	*** 00000d	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
;|*** 	*r4 = *r0;
; Line 487
	*** 000010	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000013	66 89 07 		mov	DWORD PTR [bx],eax
;|*** 	*r0 &= *r2;
; Line 488
	*** 000016	8b c3 			mov	ax,bx
	*** 000018	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 00001b	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00001e	66 21 0c 		and	DWORD PTR [si],ecx
;|*** 	*r0 ^= *r3;
; Line 489
	*** 000021	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000024	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r2 ^= *r1;
; Line 490
	*** 000027	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 00002a	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00002d	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 000030	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r2 ^= *r0;
; Line 491
	*** 000033	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 000036	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r3 |= *r4;
; Line 492
	*** 000039	8b d8 			mov	bx,ax
	*** 00003b	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00003e	66 09 0d 		or	DWORD PTR [di],ecx
;|*** 	*r3 ^= *r1;
; Line 493
	*** 000041	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 000044	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000047	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r4 ^= *r2;
; Line 494
	*** 00004a	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 00004d	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000050	8b d8 			mov	bx,ax
	*** 000052	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r1 = *r3;
; Line 495
	*** 000055	8b 0d 			mov	cx,WORD PTR [di]
	*** 000057	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 00005a	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 00005d	89 0f 			mov	WORD PTR [bx],cx
	*** 00005f	89 57 02 		mov	WORD PTR [bx+2],dx
;|*** 	*r3 |= *r4;
; Line 496
	*** 000062	8b d8 			mov	bx,ax
	*** 000064	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000067	66 09 0d 		or	DWORD PTR [di],ecx
;|*** 	*r3 ^= *r0;
; Line 497
	*** 00006a	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 00006d	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r0 &= *r1;
;|*** 	*r4 ^= *r0;
; Line 499
	*** 000070	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 000073	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000076	66 21 0c 		and	DWORD PTR [si],ecx
	*** 000079	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 00007c	8b f0 			mov	si,ax
	*** 00007e	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r1 ^= *r3;
; Line 500
	*** 000081	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000084	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r1 ^= *r4;
; Line 501
	*** 000087	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 00008a	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 = ~*r4;   
; Line 502
	*** 00008d	f7 14 			not	WORD PTR [si]
	*** 00008f	f7 54 02 		not	WORD PTR [si+2]
;|*** }
; Line 503
	*** 000092	5e 			pop	si
	*** 000093	5f 			pop	di
	*** 000094	c9 			leave	
	*** 000095	c3 			ret	

S2f	ENDP

S3f	PROC NEAR	;  COMDAT
;|*** 
;|*** static void S3f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {        
; Line 506
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r0 = 4
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
	*** 000005	8b 4e 04 		mov	cx,WORD PTR [bp+4]	;r0
	*** 000008	8b 7e 0a 		mov	di,WORD PTR [bp+10]	;r3
	*** 00000b	8b f1 			mov	si,cx
	*** 00000d	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
;|*** 	*r4 = *r0;
; Line 507
	*** 000010	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000013	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 000016	66 89 04 		mov	DWORD PTR [si],eax
;|*** 	*r0 |= *r3;
; Line 508
	*** 000019	8b 05 			mov	ax,WORD PTR [di]
	*** 00001b	8b f1 			mov	si,cx
	*** 00001d	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000020	09 04 			or	WORD PTR [si],ax
	*** 000022	09 54 02 		or	WORD PTR [si+2],dx
;|*** 	*r3 ^= *r1;
; Line 509
	*** 000025	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 000028	66 31 05 		xor	DWORD PTR [di],eax
;|*** 	*r1 &= *r4;
; Line 510
	*** 00002b	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 00002e	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000031	66 21 07 		and	DWORD PTR [bx],eax
;|*** 	*r4 ^= *r2;
; Line 511
	*** 000034	8b 76 08 		mov	si,WORD PTR [bp+8]	;r2
	*** 000037	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 00003a	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 00003d	66 31 04 		xor	DWORD PTR [si],eax
;|*** 	*r2 ^= *r3;
; Line 512
	*** 000040	8b 05 			mov	ax,WORD PTR [di]
	*** 000042	8b 76 08 		mov	si,WORD PTR [bp+8]	;r2
	*** 000045	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000048	31 04 			xor	WORD PTR [si],ax
	*** 00004a	31 54 02 		xor	WORD PTR [si+2],dx
;|*** 	*r3 &= *r0;
; Line 513
	*** 00004d	8b f1 			mov	si,cx
	*** 00004f	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000052	66 21 05 		and	DWORD PTR [di],eax
;|*** 	*r4 |= *r1;
;|*** 	*r3 ^= *r4;
; Line 515
	*** 000055	8b 07 			mov	ax,WORD PTR [bx]
	*** 000057	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 00005a	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 00005d	09 04 			or	WORD PTR [si],ax
	*** 00005f	09 54 02 		or	WORD PTR [si+2],dx
	*** 000062	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000065	66 31 05 		xor	DWORD PTR [di],eax
;|*** 	*r0 ^= *r1;
;|*** 	*r4 &= *r0;
; Line 517
	*** 000068	8b 07 			mov	ax,WORD PTR [bx]
	*** 00006a	8b f1 			mov	si,cx
	*** 00006c	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 00006f	31 04 			xor	WORD PTR [si],ax
	*** 000071	31 54 02 		xor	WORD PTR [si+2],dx
	*** 000074	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000077	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 00007a	66 21 04 		and	DWORD PTR [si],eax
;|*** 	*r1 ^= *r3;
; Line 518
	*** 00007d	66 8b 05 		mov	eax,DWORD PTR [di]
	*** 000080	66 31 07 		xor	DWORD PTR [bx],eax
;|*** 	*r4 ^= *r2;
; Line 519
	*** 000083	8b 76 08 		mov	si,WORD PTR [bp+8]	;r2
	*** 000086	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000089	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 00008c	66 31 04 		xor	DWORD PTR [si],eax
;|*** 	*r1 |= *r0;
; Line 520
	*** 00008f	8b f1 			mov	si,cx
	*** 000091	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000094	66 09 07 		or	DWORD PTR [bx],eax
;|*** 	*r1 ^= *r2;
; Line 521
	*** 000097	8b 76 08 		mov	si,WORD PTR [bp+8]	;r2
	*** 00009a	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 00009d	66 31 07 		xor	DWORD PTR [bx],eax
;|*** 	*r0 ^= *r3;
; Line 522
	*** 0000a0	8b 05 			mov	ax,WORD PTR [di]
	*** 0000a2	8b f1 			mov	si,cx
	*** 0000a4	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 0000a7	31 04 			xor	WORD PTR [si],ax
	*** 0000a9	31 54 02 		xor	WORD PTR [si+2],dx
;|*** 	*r2 = *r1;
; Line 523
	*** 0000ac	8b 07 			mov	ax,WORD PTR [bx]
	*** 0000ae	8b 76 08 		mov	si,WORD PTR [bp+8]	;r2
	*** 0000b1	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 0000b4	89 04 			mov	WORD PTR [si],ax
	*** 0000b6	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*r1 |= *r3;
; Line 524
	*** 0000b9	8b 05 			mov	ax,WORD PTR [di]
	*** 0000bb	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 0000be	09 07 			or	WORD PTR [bx],ax
	*** 0000c0	8b f1 			mov	si,cx
	*** 0000c2	09 57 02 		or	WORD PTR [bx+2],dx
;|*** 	*r1 ^= *r0;
; Line 525
	*** 0000c5	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 0000c8	66 31 07 		xor	DWORD PTR [bx],eax
;|*** }
; Line 526
	*** 0000cb	5e 			pop	si
	*** 0000cc	5f 			pop	di
	*** 0000cd	c9 			leave	
	*** 0000ce	c3 			ret	

S3f	ENDP

S4f	PROC NEAR	;  COMDAT
;|*** 
;|*** static void S4f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {        
; Line 529
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
;	r0 = 4
	*** 000005	8b 4e 08 		mov	cx,WORD PTR [bp+8]	;r2
	*** 000008	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 00000b	8b 7e 04 		mov	di,WORD PTR [bp+4]	;r0
;|*** 	*r1 ^= *r3;
; Line 530
	*** 00000e	8b 07 			mov	ax,WORD PTR [bx]
	*** 000010	8b 76 06 		mov	si,WORD PTR [bp+6]	;r1
	*** 000013	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000016	31 04 			xor	WORD PTR [si],ax
	*** 000018	31 54 02 		xor	WORD PTR [si+2],dx
;|*** 	*r3 = ~*r3;   
;|*** 	*r2 ^= *r3;
; Line 532
	*** 00001b	8b 07 			mov	ax,WORD PTR [bx]
	*** 00001d	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000020	f7 d0 			not	ax
	*** 000022	f7 d2 			not	dx
	*** 000024	89 07 			mov	WORD PTR [bx],ax
	*** 000026	8b f1 			mov	si,cx
	*** 000028	89 57 02 		mov	WORD PTR [bx+2],dx
	*** 00002b	31 04 			xor	WORD PTR [si],ax
	*** 00002d	31 54 02 		xor	WORD PTR [si+2],dx
;|*** 	*r3 ^= *r0;
; Line 533
	*** 000030	66 8b 05 		mov	eax,DWORD PTR [di]
	*** 000033	66 31 07 		xor	DWORD PTR [bx],eax
;|*** 	*r4 = *r1;
; Line 534
	*** 000036	8b c3 			mov	ax,bx
	*** 000038	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 00003b	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00003e	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000041	66 89 0f 		mov	DWORD PTR [bx],ecx
;|*** 	*r1 &= *r3;
; Line 535
	*** 000044	8b d8 			mov	bx,ax
	*** 000046	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000049	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 00004c	66 21 0f 		and	DWORD PTR [bx],ecx
;|*** 	*r1 ^= *r2;
; Line 536
	*** 00004f	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 000052	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 ^= *r3;
;|*** 	*r0 ^= *r4;
; Line 538
	*** 000055	8b d8 			mov	bx,ax
	*** 000057	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00005a	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 00005d	66 31 0f 		xor	DWORD PTR [bx],ecx
	*** 000060	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000063	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r2 &= *r4;
; Line 539
	*** 000066	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000069	66 21 0c 		and	DWORD PTR [si],ecx
;|*** 	*r2 ^= *r0;
; Line 540
	*** 00006c	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 00006f	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r0 &= *r1;
;|*** 	*r3 ^= *r0;
; Line 542
	*** 000072	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 000075	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000078	66 21 0d 		and	DWORD PTR [di],ecx
	*** 00007b	8b 0d 			mov	cx,WORD PTR [di]
	*** 00007d	8b d8 			mov	bx,ax
	*** 00007f	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000082	31 0f 			xor	WORD PTR [bx],cx
	*** 000084	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** 	*r4 |= *r1;
; Line 543
	*** 000087	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 00008a	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00008d	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000090	66 09 0f 		or	DWORD PTR [bx],ecx
;|*** 	*r4 ^= *r0;
; Line 544
	*** 000093	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000096	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r0 |= *r3;
; Line 545
	*** 000099	8b d8 			mov	bx,ax
	*** 00009b	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00009e	66 09 0d 		or	DWORD PTR [di],ecx
;|*** 	*r0 ^= *r2;
; Line 546
	*** 0000a1	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 0000a4	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r2 &= *r3;
; Line 547
	*** 0000a7	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 0000aa	66 21 0c 		and	DWORD PTR [si],ecx
;|*** 	*r0 = ~*r0;   
; Line 548
	*** 0000ad	f7 15 			not	WORD PTR [di]
	*** 0000af	f7 55 02 		not	WORD PTR [di+2]
;|*** 	*r4 ^= *r2;
; Line 549
	*** 0000b2	8b 04 			mov	ax,WORD PTR [si]
	*** 0000b4	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 0000b7	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 0000ba	31 07 			xor	WORD PTR [bx],ax
	*** 0000bc	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** }
; Line 550
	*** 0000bf	5e 			pop	si
	*** 0000c0	5f 			pop	di
	*** 0000c1	c9 			leave	
	*** 0000c2	c3 			ret	

S4f	ENDP

S5f	PROC NEAR	;  COMDAT
;|*** 
;|*** static void S5f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {        
; Line 553
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r0 = 4
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
	*** 000005	8b 4e 0c 		mov	cx,WORD PTR [bp+12]	;r4
	*** 000008	8b 7e 06 		mov	di,WORD PTR [bp+6]	;r1
	*** 00000b	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
;|*** 	*r0 ^= *r1;
; Line 554
	*** 00000e	8b 05 			mov	ax,WORD PTR [di]
	*** 000010	8b 76 04 		mov	si,WORD PTR [bp+4]	;r0
	*** 000013	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000016	31 04 			xor	WORD PTR [si],ax
	*** 000018	31 54 02 		xor	WORD PTR [si+2],dx
;|*** 	*r1 ^= *r3;
; Line 555
	*** 00001b	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 00001e	66 31 05 		xor	DWORD PTR [di],eax
;|*** 	*r3 = ~*r3;   
; Line 556
	*** 000021	f7 17 			not	WORD PTR [bx]
	*** 000023	f7 57 02 		not	WORD PTR [bx+2]
;|*** 	*r4 = *r1;
; Line 557
	*** 000026	8b 05 			mov	ax,WORD PTR [di]
	*** 000028	8b f1 			mov	si,cx
	*** 00002a	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 00002d	89 04 			mov	WORD PTR [si],ax
	*** 00002f	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*r1 &= *r0;
; Line 558
	*** 000032	8b c3 			mov	ax,bx
	*** 000034	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 000037	8b 0f 			mov	cx,WORD PTR [bx]
	*** 000039	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 00003c	21 0d 			and	WORD PTR [di],cx
	*** 00003e	8b d8 			mov	bx,ax
	*** 000040	21 55 02 		and	WORD PTR [di+2],dx
;|*** 	*r2 ^= *r3;
;|*** 	*r1 ^= *r2;
; Line 560
	*** 000043	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000046	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 000049	66 31 0f 		xor	DWORD PTR [bx],ecx
	*** 00004c	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00004f	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r2 |= *r4;
; Line 561
	*** 000052	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 000055	66 09 0f 		or	DWORD PTR [bx],ecx
;|*** 	*r4 ^= *r3;
; Line 562
	*** 000058	8b d8 			mov	bx,ax
	*** 00005a	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00005d	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r3 &= *r1;
; Line 563
	*** 000060	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000063	66 21 0f 		and	DWORD PTR [bx],ecx
;|*** 	*r3 ^= *r0;
; Line 564
	*** 000066	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 000069	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00006c	8b d8 			mov	bx,ax
	*** 00006e	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 ^= *r1;
; Line 565
	*** 000071	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000074	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r4 ^= *r2;
; Line 566
	*** 000077	8b 7e 08 		mov	di,WORD PTR [bp+8]	;r2
	*** 00007a	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 00007d	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r2 ^= *r0;
; Line 567
	*** 000080	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 000083	8b 0f 			mov	cx,WORD PTR [bx]
	*** 000085	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000088	31 0d 			xor	WORD PTR [di],cx
	*** 00008a	8b d8 			mov	bx,ax
	*** 00008c	31 55 02 		xor	WORD PTR [di+2],dx
;|*** 	*r0 &= *r3;
; Line 568
	*** 00008f	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000092	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 000095	66 21 0f 		and	DWORD PTR [bx],ecx
;|*** 	*r2 = ~*r2;   
; Line 569
	*** 000098	f7 15 			not	WORD PTR [di]
	*** 00009a	f7 55 02 		not	WORD PTR [di+2]
;|*** 	*r0 ^= *r4;
; Line 570
	*** 00009d	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 0000a0	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 |= *r3;
;|*** 	*r2 ^= *r4;
; Line 572
	*** 0000a3	8b d8 			mov	bx,ax
	*** 0000a5	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 0000a8	66 09 0c 		or	DWORD PTR [si],ecx
	*** 0000ab	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 0000ae	66 31 05 		xor	DWORD PTR [di],eax
;|*** }
; Line 573
	*** 0000b1	5e 			pop	si
	*** 0000b2	5f 			pop	di
	*** 0000b3	c9 			leave	
	*** 0000b4	c3 			ret	

S5f	ENDP

S6f	PROC NEAR	;  COMDAT
;|*** 
;|*** static void S6f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {        
; Line 576
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r0 = 4
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
	*** 000005	8b 4e 04 		mov	cx,WORD PTR [bp+4]	;r0
	*** 000008	8b 7e 0a 		mov	di,WORD PTR [bp+10]	;r3
	*** 00000b	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
;|*** 	*r2 = ~*r2;   
; Line 577
	*** 00000e	f7 17 			not	WORD PTR [bx]
	*** 000010	f7 57 02 		not	WORD PTR [bx+2]
;|*** 	*r4 = *r3;
; Line 578
	*** 000013	8b 05 			mov	ax,WORD PTR [di]
	*** 000015	8b 76 0c 		mov	si,WORD PTR [bp+12]	;r4
	*** 000018	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 00001b	89 04 			mov	WORD PTR [si],ax
	*** 00001d	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*r3 &= *r0;
; Line 579
	*** 000020	8b f1 			mov	si,cx
	*** 000022	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000025	66 21 05 		and	DWORD PTR [di],eax
;|*** 	*r0 ^= *r4;
; Line 580
	*** 000028	8b c3 			mov	ax,bx
	*** 00002a	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 00002d	8b 0f 			mov	cx,WORD PTR [bx]
	*** 00002f	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000032	31 0c 			xor	WORD PTR [si],cx
	*** 000034	8b d8 			mov	bx,ax
	*** 000036	31 54 02 		xor	WORD PTR [si+2],dx
;|*** 	*r3 ^= *r2;
; Line 581
	*** 000039	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00003c	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r2 |= *r4;
; Line 582
	*** 00003f	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000042	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000045	8b d8 			mov	bx,ax
	*** 000047	66 09 0f 		or	DWORD PTR [bx],ecx
;|*** 	*r1 ^= *r3;
; Line 583
	*** 00004a	8b 0d 			mov	cx,WORD PTR [di]
	*** 00004c	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 00004f	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000052	31 0f 			xor	WORD PTR [bx],cx
	*** 000054	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** 	*r2 ^= *r0;
; Line 584
	*** 000057	8b 0c 			mov	cx,WORD PTR [si]
	*** 000059	8b d8 			mov	bx,ax
	*** 00005b	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 00005e	31 0f 			xor	WORD PTR [bx],cx
	*** 000060	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** 	*r0 |= *r1;
; Line 585
	*** 000063	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r1
	*** 000066	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000069	66 09 0c 		or	DWORD PTR [si],ecx
;|*** 	*r2 ^= *r1;
; Line 586
	*** 00006c	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00006f	8b d8 			mov	bx,ax
	*** 000071	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 ^= *r0;
; Line 587
	*** 000074	8b 0c 			mov	cx,WORD PTR [si]
	*** 000076	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000079	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 00007c	31 0f 			xor	WORD PTR [bx],cx
	*** 00007e	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** 	*r0 |= *r3;
; Line 588
	*** 000081	8b 0d 			mov	cx,WORD PTR [di]
	*** 000083	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000086	09 0c 			or	WORD PTR [si],cx
	*** 000088	8b d8 			mov	bx,ax
	*** 00008a	09 54 02 		or	WORD PTR [si+2],dx
;|*** 	*r0 ^= *r2;
; Line 589
	*** 00008d	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000090	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r4 ^= *r3;
; Line 590
	*** 000093	8b 0d 			mov	cx,WORD PTR [di]
	*** 000095	8b 5e 0c 		mov	bx,WORD PTR [bp+12]	;r4
	*** 000098	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 00009b	31 0f 			xor	WORD PTR [bx],cx
	*** 00009d	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** 	*r4 ^= *r0;
; Line 591
	*** 0000a0	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 0000a3	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r3 = ~*r3;   
; Line 592
	*** 0000a6	f7 15 			not	WORD PTR [di]
	*** 0000a8	f7 55 02 		not	WORD PTR [di+2]
;|*** 	*r2 &= *r4;
; Line 593
	*** 0000ab	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 0000ae	8b d8 			mov	bx,ax
	*** 0000b0	66 21 0f 		and	DWORD PTR [bx],ecx
;|*** 	*r2 ^= *r3;
; Line 594
	*** 0000b3	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 0000b6	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** }
; Line 595
	*** 0000b9	5e 			pop	si
	*** 0000ba	5f 			pop	di
	*** 0000bb	c9 			leave	
	*** 0000bc	c3 			ret	

S6f	ENDP

S7f	PROC NEAR	;  COMDAT
;|*** 
;|*** static void S7f (unsigned __int32 *r0, unsigned __int32 *r1, unsigned __int32 *r2, unsigned __int32 *r3, unsigned __int32 *r4)
;|*** {        
; Line 598
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	r0 = 4
;	r1 = 6
;	r2 = 8
;	r3 = 10
;	r4 = 12
	*** 000005	8b 4e 06 		mov	cx,WORD PTR [bp+6]	;r1
	*** 000008	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;r2
	*** 00000b	8b 7e 0c 		mov	di,WORD PTR [bp+12]	;r4
;|*** 	*r4 = *r2;
; Line 599
	*** 00000e	8b 07 			mov	ax,WORD PTR [bx]
	*** 000010	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000013	89 05 			mov	WORD PTR [di],ax
	*** 000015	8b f1 			mov	si,cx
	*** 000017	89 55 02 		mov	WORD PTR [di+2],dx
;|*** 	*r2 &= *r1;
; Line 600
	*** 00001a	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 00001d	66 21 07 		and	DWORD PTR [bx],eax
;|*** 	*r2 ^= *r3;
; Line 601
	*** 000020	8b c3 			mov	ax,bx
	*** 000022	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 000025	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000028	8b d8 			mov	bx,ax
	*** 00002a	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r3 &= *r1;
; Line 602
	*** 00002d	8b 0c 			mov	cx,WORD PTR [si]
	*** 00002f	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 000032	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 000035	21 0f 			and	WORD PTR [bx],cx
	*** 000037	21 57 02 		and	WORD PTR [bx+2],dx
;|*** 	*r4 ^= *r2;
; Line 603
	*** 00003a	8b d8 			mov	bx,ax
	*** 00003c	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00003f	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r2 ^= *r1;
; Line 604
	*** 000042	66 8b 0c 		mov	ecx,DWORD PTR [si]
	*** 000045	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r1 ^= *r0;
; Line 605
	*** 000048	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 00004b	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00004e	66 31 0c 		xor	DWORD PTR [si],ecx
;|*** 	*r0 |= *r4;
; Line 606
	*** 000051	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000054	66 09 0f 		or	DWORD PTR [bx],ecx
;|*** 	*r0 ^= *r2;
; Line 607
	*** 000057	8b d8 			mov	bx,ax
	*** 000059	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00005c	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 00005f	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r3 ^= *r1;
;|*** 	*r2 ^= *r3;
; Line 609
	*** 000062	8b 0c 			mov	cx,WORD PTR [si]
	*** 000064	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 000067	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 00006a	31 0f 			xor	WORD PTR [bx],cx
	*** 00006c	31 57 02 		xor	WORD PTR [bx+2],dx
	*** 00006f	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000072	8b d8 			mov	bx,ax
	*** 000074	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r3 &= *r0;
; Line 610
	*** 000077	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 00007a	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00007d	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 000080	66 21 0f 		and	DWORD PTR [bx],ecx
;|*** 	*r3 ^= *r4;
; Line 611
	*** 000083	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 000086	66 31 0f 		xor	DWORD PTR [bx],ecx
;|*** 	*r4 ^= *r2;
; Line 612
	*** 000089	8b d8 			mov	bx,ax
	*** 00008b	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00008e	66 31 0d 		xor	DWORD PTR [di],ecx
;|*** 	*r2 &= *r0;
; Line 613
	*** 000091	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 000094	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 000097	8b d8 			mov	bx,ax
	*** 000099	66 21 0f 		and	DWORD PTR [bx],ecx
;|*** 	*r4 = ~*r4;   
;|*** 	*r2 ^= *r4;
; Line 615
	*** 00009c	8b 0d 			mov	cx,WORD PTR [di]
	*** 00009e	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 0000a1	f7 d1 			not	cx
	*** 0000a3	f7 d2 			not	dx
	*** 0000a5	89 0d 			mov	WORD PTR [di],cx
	*** 0000a7	89 55 02 		mov	WORD PTR [di+2],dx
	*** 0000aa	31 0f 			xor	WORD PTR [bx],cx
	*** 0000ac	31 57 02 		xor	WORD PTR [bx+2],dx
;|*** 	*r4 &= *r0;
; Line 616
	*** 0000af	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;r0
	*** 0000b2	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 0000b5	66 21 05 		and	DWORD PTR [di],eax
;|*** 	*r1 ^= *r3;
;|*** 	*r4 ^= *r1;
; Line 618
	*** 0000b8	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;r3
	*** 0000bb	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 0000be	66 31 04 		xor	DWORD PTR [si],eax
	*** 0000c1	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 0000c4	66 31 05 		xor	DWORD PTR [di],eax
;|*** }
; Line 619
	*** 0000c7	5e 			pop	si
	*** 0000c8	5f 			pop	di
	*** 0000c9	c9 			leave	
	*** 0000ca	c3 			ret	

S7f	ENDP

KXf	PROC NEAR	;  COMDAT
;|*** 
;|*** static void KXf (const unsigned __int32 *k, unsigned int r, unsigned __int32 *a, unsigned __int32 *b, unsigned __int32 *c, unsigned __int32 *d)
;|*** {
; Line 622
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	k = 4
;	r = 6
;	a = 8
;	b = 10
;	c = 12
;	d = 14
	*** 000005	8b 7e 04 		mov	di,WORD PTR [bp+4]	;k
	*** 000008	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r
;|*** 	*a ^= k[r];
; Line 623
	*** 00000b	c1 e3 02 		shl	bx,2
	*** 00000e	8b 76 08 		mov	si,WORD PTR [bp+8]	;a
	*** 000011	66 8b 01 		mov	eax,DWORD PTR [bx][di]
	*** 000014	66 31 04 		xor	DWORD PTR [si],eax
;|*** 	*b ^= k[r + 1];
; Line 624
	*** 000017	03 df 			add	bx,di
	*** 000019	8b 76 0a 		mov	si,WORD PTR [bp+10]	;b
	*** 00001c	66 8b 47 04 		mov	eax,DWORD PTR [bx+4]
	*** 000020	66 31 04 		xor	DWORD PTR [si],eax
;|*** 	*c ^= k[r + 2];
; Line 625
	*** 000023	8b 47 08 		mov	ax,WORD PTR [bx+8]
	*** 000026	8b 76 0c 		mov	si,WORD PTR [bp+12]	;c
	*** 000029	8b 57 0a 		mov	dx,WORD PTR [bx+10]
	*** 00002c	31 04 			xor	WORD PTR [si],ax
	*** 00002e	31 54 02 		xor	WORD PTR [si+2],dx
;|*** 	*d ^= k[r + 3];
; Line 626
	*** 000031	66 8b 47 0c 		mov	eax,DWORD PTR [bx+12]
	*** 000035	8b 5e 0e 		mov	bx,WORD PTR [bp+14]	;d
	*** 000038	66 31 07 		xor	DWORD PTR [bx],eax
;|*** }
; Line 627
	*** 00003b	5e 			pop	si
	*** 00003c	5f 			pop	di
	*** 00003d	c9 			leave	
	*** 00003e	c3 			ret	

KXf	ENDP

LKf	PROC NEAR	;  COMDAT
;|*** 
;|*** #endif // TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** #ifndef TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** void serpent_set_key(const unsigned __int8 userKey[], int keylen, unsigned __int8 *ks)
;|*** {
;|*** 	unsigned __int32 a,b,c,d,e;
;|*** 	unsigned __int32 *k = (unsigned __int32 *)ks;
;|*** 	unsigned __int32 t;
;|*** 	int i;
;|*** 
;|*** 	for (i = 0; i < keylen / (int)sizeof(__int32); i++)
;|*** 		k[i] = LE32(((unsigned __int32*)userKey)[i]);
;|*** 
;|*** 	if (keylen < 32)
;|*** 		k[keylen/4] |= (unsigned __int32)1 << ((keylen%4)*8);
;|*** 
;|*** 	k += 8;
;|*** 	t = k[-1];
;|*** 	for (i = 0; i < 132; ++i)
;|*** 		k[i] = t = rotlFixed(k[i-8] ^ k[i-5] ^ k[i-3] ^ t ^ 0x9e3779b9 ^ i, 11);
;|*** 	k -= 20;
;|*** 
;|*** #define LK(r, a, b, c, d, e)	{\
;|*** 	a = k[(8-r)*4 + 0];		\
;|*** 	b = k[(8-r)*4 + 1];		\
;|*** 	c = k[(8-r)*4 + 2];		\
;|*** 	d = k[(8-r)*4 + 3];}
;|*** 
;|*** #define SK(r, a, b, c, d, e)	{\
;|*** 	k[(8-r)*4 + 4] = a;		\
;|*** 	k[(8-r)*4 + 5] = b;		\
;|*** 	k[(8-r)*4 + 6] = c;		\
;|*** 	k[(8-r)*4 + 7] = d;}	\
;|*** 
;|*** 	for (i=0; i<4; i++)
;|*** 	{
;|*** 		afterS2(LK); afterS2(S3); afterS3(SK);
;|*** 		afterS1(LK); afterS1(S2); afterS2(SK);
;|*** 		afterS0(LK); afterS0(S1); afterS1(SK);
;|*** 		beforeS0(LK); beforeS0(S0); afterS0(SK);
;|*** 		k += 8*4;
;|*** 		afterS6(LK); afterS6(S7); afterS7(SK);
;|*** 		afterS5(LK); afterS5(S6); afterS6(SK);
;|*** 		afterS4(LK); afterS4(S5); afterS5(SK);
;|*** 		afterS3(LK); afterS3(S4); afterS4(SK);
;|*** 	}
;|*** 	afterS2(LK); afterS2(S3); afterS3(SK);
;|*** }
;|*** 
;|*** #else // TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** static void LKf (unsigned __int32 *k, unsigned int r, unsigned __int32 *a, unsigned __int32 *b, unsigned __int32 *c, unsigned __int32 *d)
;|*** {
; Line 682
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	a = 8
;	b = 10
;	c = 12
;	d = 14
;	k = 4
;	r = 6
	*** 000005	8b 7e 04 		mov	di,WORD PTR [bp+4]	;k
	*** 000008	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r
;|*** 	*a = k[r];
; Line 683
	*** 00000b	c1 e3 02 		shl	bx,2
	*** 00000e	8b 76 08 		mov	si,WORD PTR [bp+8]	;a
	*** 000011	8b 01 			mov	ax,WORD PTR [bx][di]
	*** 000013	8b 51 02 		mov	dx,WORD PTR [bx+2][di]
	*** 000016	89 04 			mov	WORD PTR [si],ax
	*** 000018	03 df 			add	bx,di
	*** 00001a	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*b = k[r + 1];
; Line 684
	*** 00001d	8b 47 04 		mov	ax,WORD PTR [bx+4]
	*** 000020	8b 76 0a 		mov	si,WORD PTR [bp+10]	;b
	*** 000023	8b 57 06 		mov	dx,WORD PTR [bx+6]
	*** 000026	89 04 			mov	WORD PTR [si],ax
	*** 000028	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*c = k[r + 2];
; Line 685
	*** 00002b	8b 47 08 		mov	ax,WORD PTR [bx+8]
	*** 00002e	8b 76 0c 		mov	si,WORD PTR [bp+12]	;c
	*** 000031	8b 57 0a 		mov	dx,WORD PTR [bx+10]
	*** 000034	89 04 			mov	WORD PTR [si],ax
	*** 000036	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*d = k[r + 3];
; Line 686
	*** 000039	66 8b 47 0c 		mov	eax,DWORD PTR [bx+12]
	*** 00003d	8b 5e 0e 		mov	bx,WORD PTR [bp+14]	;d
	*** 000040	66 89 07 		mov	DWORD PTR [bx],eax
;|*** }
; Line 687
	*** 000043	5e 			pop	si
	*** 000044	5f 			pop	di
	*** 000045	c9 			leave	
	*** 000046	c3 			ret	

LKf	ENDP

SKf	PROC NEAR	;  COMDAT
;|*** 
;|*** static void SKf (unsigned __int32 *k, unsigned int r, unsigned __int32 *a, unsigned __int32 *b, unsigned __int32 *c, unsigned __int32 *d)
;|*** {
; Line 690
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	57 			push	di
	*** 000004	56 			push	si
;	k = 4
;	r = 6
;	a = 8
;	b = 10
;	c = 12
;	d = 14
	*** 000005	8b 7e 04 		mov	di,WORD PTR [bp+4]	;k
	*** 000008	8b 76 08 		mov	si,WORD PTR [bp+8]	;a
	*** 00000b	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;r
;|*** 	k[r + 4] = *a;
; Line 691
	*** 00000e	8b 04 			mov	ax,WORD PTR [si]
	*** 000010	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 000013	c1 e3 02 		shl	bx,2
	*** 000016	03 df 			add	bx,di
	*** 000018	89 47 10 		mov	WORD PTR [bx+16],ax
	*** 00001b	89 57 12 		mov	WORD PTR [bx+18],dx
;|*** 	k[r + 5] = *b;
; Line 692
	*** 00001e	8b 76 0a 		mov	si,WORD PTR [bp+10]	;b
	*** 000021	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000024	66 89 47 14 		mov	DWORD PTR [bx+20],eax
;|*** 	k[r + 6] = *c;
; Line 693
	*** 000028	8b 76 0c 		mov	si,WORD PTR [bp+12]	;c
	*** 00002b	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 00002e	66 89 47 18 		mov	DWORD PTR [bx+24],eax
;|*** 	k[r + 7] = *d;
; Line 694
	*** 000032	8b 76 0e 		mov	si,WORD PTR [bp+14]	;d
	*** 000035	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000038	66 89 47 1c 		mov	DWORD PTR [bx+28],eax
;|*** }
; Line 695
	*** 00003c	5e 			pop	si
	*** 00003d	5f 			pop	di
	*** 00003e	c9 			leave	
	*** 00003f	c3 			ret	

SKf	ENDP
	PUBLIC	_serpent_set_key
_serpent_set_key	PROC NEAR	;  COMDAT
;|*** 
;|*** void serpent_set_key(const unsigned __int8 userKey[], int keylen, unsigned __int8 *ks)
;|*** {
; Line 698
	*** 000000	c8 26 00 00 		enter	38,0
	*** 000004	57 			push	di
	*** 000005	56 			push	si
;	userKey = 4
;	keylen = 6
;	ks = 8
;	a = -18
;	b = -10
;	c = -22
;	d = -26
;	e = -14
;	k = -2
;	t = -6
;	register bx = i
;|*** 	unsigned __int32 a,b,c,d,e;
;|*** 	unsigned __int32 *k = (unsigned __int32 *)ks;
; Line 700
	*** 000006	8b 76 08 		mov	si,WORD PTR [bp+8]	;ks
;|*** 	unsigned __int32 t;
;|*** 	int i;
;|*** 
;|*** 	for (i = 0; i < keylen / (int)sizeof(__int32); i++)
; Line 704
	*** 000009	33 db 			xor	bx,bx
	*** 00000b	89 76 fe 		mov	WORD PTR [bp-2],si	;k
	*** 00000e	eb 15 			jmp	SHORT $L448
					$F358:
;|*** 		k[i] = LE32(((unsigned __int32*)userKey)[i]);
; Line 705
	*** 000010	8b fb 			mov	di,bx
	*** 000012	c1 e7 02 		shl	di,2
	*** 000015	8b c7 			mov	ax,di
	*** 000017	03 7e 04 		add	di,WORD PTR [bp+4]	;userKey
	*** 00001a	66 8b 0d 		mov	ecx,DWORD PTR [di]
	*** 00001d	8b fe 			mov	di,si
	*** 00001f	03 f8 			add	di,ax
	*** 000021	66 89 0d 		mov	DWORD PTR [di],ecx
;|*** 	for (i = 0; i < keylen / (int)sizeof(__int32); i++)
; Line 704
	*** 000024	43 			inc	bx
					$L448:
	*** 000025	8b 46 06 		mov	ax,WORD PTR [bp+6]	;keylen
	*** 000028	99 			cwd	
	*** 000029	83 e2 03 		and	dx,3
	*** 00002c	03 c2 			add	ax,dx
	*** 00002e	c1 f8 02 		sar	ax,2
	*** 000031	3b c3 			cmp	ax,bx
	*** 000033	7f db 			jg	SHORT $F358
;|*** 		k[i] = LE32(((unsigned __int32*)userKey)[i]);
; Line 705
	*** 000035	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;keylen
;|*** 
;|*** 	if (keylen < 32)
; Line 707
	*** 000038	83 fb 20 		cmp	bx,32	;0020H
	*** 00003b	7d 34 			jge	SHORT $I361
;|*** 		k[keylen/4] |= (unsigned __int32)1 << ((keylen%4)*8);
; Line 708
	*** 00003d	8b c3 			mov	ax,bx
	*** 00003f	b9 04 00 		mov	cx,4
	*** 000042	99 			cwd	
	*** 000043	f7 f9 			idiv	cx
	*** 000045	8b c3 			mov	ax,bx
	*** 000047	8b fa 			mov	di,dx
	*** 000049	99 			cwd	
	*** 00004a	83 e2 03 		and	dx,3
	*** 00004d	03 c2 			add	ax,dx
	*** 00004f	c1 f8 02 		sar	ax,2
	*** 000052	8b d8 			mov	bx,ax
	*** 000054	c1 e3 02 		shl	bx,2
	*** 000057	b8 01 00 		mov	ax,1
	*** 00005a	99 			cwd	
	*** 00005b	8b cf 			mov	cx,di
	*** 00005d	c0 e1 03 		shl	cl,3
	*** 000060	0a c9 			or	cl,cl
	*** 000062	74 08 			je	SHORT $L444
					$L443:
	*** 000064	03 c0 			add	ax,ax
	*** 000066	13 d2 			adc	dx,dx
	*** 000068	fe c9 			dec	cl
	*** 00006a	75 f8 			jne	SHORT $L443
					$L444:
	*** 00006c	09 00 			or	WORD PTR [bx][si],ax
	*** 00006e	09 50 02 		or	WORD PTR [bx+2][si],dx
;|*** 
;|*** 	k += 8;
; Line 710
					$I361:
;|*** 	t = k[-1];
; Line 711
	*** 000071	83 c6 20 		add	si,32	;0020H
	*** 000074	66 8b 44 fc 		mov	eax,DWORD PTR [si-4]
	*** 000078	66 89 46 fa 		mov	DWORD PTR [bp-6],eax	;t
;|*** 	for (i = 0; i < 132; ++i)
; Line 712
	*** 00007c	33 db 			xor	bx,bx
	*** 00007e	89 76 fe 		mov	WORD PTR [bp-2],si	;k
	*** 000081	eb 6d 			jmp	SHORT $L449
	*** 000083	90 			nop	
					$F362:
;|*** 		k[i] = t = rotlFixed(k[i-8] ^ k[i-5] ^ k[i-3] ^ t ^ 0x9e3779b9 ^ i, 11);
; Line 713
	*** 000084	8b fb 			mov	di,bx
	*** 000086	c1 e7 02 		shl	di,2
	*** 000089	03 fe 			add	di,si
	*** 00008b	66 8b 45 f4 		mov	eax,DWORD PTR [di-12]
	*** 00008f	66 33 45 ec 		xor	eax,DWORD PTR [di-20]
	*** 000093	66 33 45 e0 		xor	eax,DWORD PTR [di-32]
	*** 000097	66 33 46 fa 		xor	eax,DWORD PTR [bp-6]	;t
	*** 00009b	66 8b d0 		mov	edx,eax
	*** 00009e	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 0000a2	8b c8 			mov	cx,ax
	*** 0000a4	8b c3 			mov	ax,bx
	*** 0000a6	89 4e e2 		mov	WORD PTR [bp-30],cx
	*** 0000a9	89 56 e4 		mov	WORD PTR [bp-28],dx
	*** 0000ac	99 			cwd	
	*** 0000ad	33 c1 			xor	ax,cx
	*** 0000af	33 56 e4 		xor	dx,WORD PTR [bp-28]
	*** 0000b2	89 46 de 		mov	WORD PTR [bp-34],ax
	*** 0000b5	89 56 e0 		mov	WORD PTR [bp-32],dx
	*** 0000b8	35 b9 79 		xor	ax,31161	;79b9H
	*** 0000bb	83 f2 f7 		xor	dx,-9	;fff7H
	*** 0000be	8a f2 			mov	dh,dl
	*** 0000c0	8a d4 			mov	dl,ah
	*** 0000c2	8a e0 			mov	ah,al
	*** 0000c4	2a c0 			sub	al,al
	*** 0000c6	03 c0 			add	ax,ax
	*** 0000c8	13 d2 			adc	dx,dx
	*** 0000ca	03 c0 			add	ax,ax
	*** 0000cc	13 d2 			adc	dx,dx
	*** 0000ce	03 c0 			add	ax,ax
	*** 0000d0	13 d2 			adc	dx,dx
	*** 0000d2	8b 4e e0 		mov	cx,WORD PTR [bp-32]
	*** 0000d5	81 f1 3f 9e 		xor	cx,-25025	;9e3fH
	*** 0000d9	c1 e9 05 		shr	cx,5
	*** 0000dc	89 46 da 		mov	WORD PTR [bp-38],ax
	*** 0000df	89 56 dc 		mov	WORD PTR [bp-36],dx
	*** 0000e2	0b c8 			or	cx,ax
	*** 0000e4	89 4e fa 		mov	WORD PTR [bp-6],cx	;t
	*** 0000e7	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 0000ea	89 0d 			mov	WORD PTR [di],cx
	*** 0000ec	89 55 02 		mov	WORD PTR [di+2],dx
;|*** 	for (i = 0; i < 132; ++i)
; Line 712
	*** 0000ef	43 			inc	bx
					$L449:
	*** 0000f0	81 fb 84 00 		cmp	bx,132	;0084H
	*** 0000f4	7c 8e 			jl	SHORT $F362
;|*** 		k[i] = t = rotlFixed(k[i-8] ^ k[i-5] ^ k[i-3] ^ t ^ 0x9e3779b9 ^ i, 11);
;|*** 	k -= 20;
; Line 714
	*** 0000f6	83 ee 50 		sub	si,80	;0050H
;|*** 
;|*** 	for (i=0; i<4; i++)
; Line 716
	*** 0000f9	33 ff 			xor	di,di
					$F365:
;|*** 	{
;|*** 		LKf (k, 20, &a, &e, &b, &d); S3f (&a, &e, &b, &d, &c); SKf (k, 16, &e, &b, &d, &c);
; Line 718
	*** 0000fb	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 0000fe	50 			push	ax
	*** 0000ff	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 000102	51 			push	cx
	*** 000103	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 000106	52 			push	dx
	*** 000107	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 00010a	53 			push	bx
	*** 00010b	6a 14 			push	20	;0014H
	*** 00010d	56 			push	si
	*** 00010e	e8 00 00 		call	LKf
	*** 000111	83 c4 0c 		add	sp,12	;000cH
	*** 000114	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 000117	50 			push	ax
	*** 000118	8d 4e e6 		lea	cx,WORD PTR [bp-26]	;d
	*** 00011b	51 			push	cx
	*** 00011c	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 00011f	52 			push	dx
	*** 000120	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 000123	53 			push	bx
	*** 000124	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 000127	50 			push	ax
	*** 000128	e8 00 00 		call	S3f
	*** 00012b	83 c4 0a 		add	sp,10	;000aH
	*** 00012e	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 000131	50 			push	ax
	*** 000132	8d 4e e6 		lea	cx,WORD PTR [bp-26]	;d
	*** 000135	51 			push	cx
	*** 000136	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 000139	52 			push	dx
	*** 00013a	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 00013d	53 			push	bx
	*** 00013e	6a 10 			push	16	;0010H
	*** 000140	56 			push	si
	*** 000141	e8 00 00 		call	SKf
	*** 000144	83 c4 0c 		add	sp,12	;000cH
;|*** 		LKf (k, 24, &c, &b, &a, &e); S2f (&c, &b, &a, &e, &d); SKf (k, 20, &a, &e, &b, &d);
; Line 719
	*** 000147	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 00014a	50 			push	ax
	*** 00014b	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;a
	*** 00014e	51 			push	cx
	*** 00014f	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 000152	52 			push	dx
	*** 000153	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;c
	*** 000156	53 			push	bx
	*** 000157	6a 18 			push	24	;0018H
	*** 000159	56 			push	si
	*** 00015a	e8 00 00 		call	LKf
	*** 00015d	83 c4 0c 		add	sp,12	;000cH
	*** 000160	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 000163	50 			push	ax
	*** 000164	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 000167	51 			push	cx
	*** 000168	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;a
	*** 00016b	52 			push	dx
	*** 00016c	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 00016f	53 			push	bx
	*** 000170	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 000173	50 			push	ax
	*** 000174	e8 00 00 		call	S2f
	*** 000177	83 c4 0a 		add	sp,10	;000aH
	*** 00017a	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 00017d	50 			push	ax
	*** 00017e	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 000181	51 			push	cx
	*** 000182	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 000185	52 			push	dx
	*** 000186	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 000189	53 			push	bx
	*** 00018a	6a 14 			push	20	;0014H
	*** 00018c	56 			push	si
	*** 00018d	e8 00 00 		call	SKf
	*** 000190	83 c4 0c 		add	sp,12	;000cH
;|*** 		LKf (k, 28, &b, &e, &c, &a); S1f (&b, &e, &c, &a, &d); SKf (k, 24, &c, &b, &a, &e);
; Line 720
	*** 000193	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 000196	50 			push	ax
	*** 000197	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;c
	*** 00019a	51 			push	cx
	*** 00019b	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 00019e	52 			push	dx
	*** 00019f	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 0001a2	53 			push	bx
	*** 0001a3	6a 1c 			push	28	;001cH
	*** 0001a5	56 			push	si
	*** 0001a6	e8 00 00 		call	LKf
	*** 0001a9	83 c4 0c 		add	sp,12	;000cH
	*** 0001ac	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 0001af	50 			push	ax
	*** 0001b0	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;a
	*** 0001b3	51 			push	cx
	*** 0001b4	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;c
	*** 0001b7	52 			push	dx
	*** 0001b8	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 0001bb	53 			push	bx
	*** 0001bc	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;b
	*** 0001bf	50 			push	ax
	*** 0001c0	e8 00 00 		call	S1f
	*** 0001c3	83 c4 0a 		add	sp,10	;000aH
	*** 0001c6	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 0001c9	50 			push	ax
	*** 0001ca	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;a
	*** 0001cd	51 			push	cx
	*** 0001ce	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 0001d1	52 			push	dx
	*** 0001d2	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;c
	*** 0001d5	53 			push	bx
	*** 0001d6	6a 18 			push	24	;0018H
	*** 0001d8	56 			push	si
	*** 0001d9	e8 00 00 		call	SKf
	*** 0001dc	83 c4 0c 		add	sp,12	;000cH
;|*** 		LKf (k, 32, &a, &b, &c, &d); S0f (&a, &b, &c, &d, &e); SKf (k, 28, &b, &e, &c, &a);
; Line 721
	*** 0001df	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 0001e2	50 			push	ax
	*** 0001e3	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;c
	*** 0001e6	51 			push	cx
	*** 0001e7	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 0001ea	52 			push	dx
	*** 0001eb	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 0001ee	53 			push	bx
	*** 0001ef	6a 20 			push	32	;0020H
	*** 0001f1	56 			push	si
	*** 0001f2	e8 00 00 		call	LKf
	*** 0001f5	83 c4 0c 		add	sp,12	;000cH
	*** 0001f8	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 0001fb	50 			push	ax
	*** 0001fc	8d 4e e6 		lea	cx,WORD PTR [bp-26]	;d
	*** 0001ff	51 			push	cx
	*** 000200	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;c
	*** 000203	52 			push	dx
	*** 000204	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 000207	53 			push	bx
	*** 000208	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 00020b	50 			push	ax
	*** 00020c	e8 00 00 		call	S0f
	*** 00020f	83 c4 0a 		add	sp,10	;000aH
	*** 000212	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 000215	50 			push	ax
	*** 000216	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;c
	*** 000219	51 			push	cx
	*** 00021a	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 00021d	52 			push	dx
	*** 00021e	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 000221	53 			push	bx
	*** 000222	6a 1c 			push	28	;001cH
	*** 000224	56 			push	si
	*** 000225	e8 00 00 		call	SKf
	*** 000228	83 c4 0c 		add	sp,12	;000cH
;|*** 		k += 8*4;
;|*** 		LKf (k,  4, &a, &c, &d, &b); S7f (&a, &c, &d, &b, &e); SKf (k,  0, &d, &e, &b, &a);
; Line 723
	*** 00022b	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;b
	*** 00022e	50 			push	ax
	*** 00022f	8d 4e e6 		lea	cx,WORD PTR [bp-26]	;d
	*** 000232	51 			push	cx
	*** 000233	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;c
	*** 000236	52 			push	dx
	*** 000237	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 00023a	53 			push	bx
	*** 00023b	6a 04 			push	4
	*** 00023d	81 c6 80 00 		add	si,128	;0080H
	*** 000241	56 			push	si
	*** 000242	e8 00 00 		call	LKf
	*** 000245	83 c4 0c 		add	sp,12	;000cH
	*** 000248	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 00024b	50 			push	ax
	*** 00024c	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 00024f	51 			push	cx
	*** 000250	8d 56 e6 		lea	dx,WORD PTR [bp-26]	;d
	*** 000253	52 			push	dx
	*** 000254	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;c
	*** 000257	53 			push	bx
	*** 000258	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 00025b	50 			push	ax
	*** 00025c	e8 00 00 		call	S7f
	*** 00025f	83 c4 0a 		add	sp,10	;000aH
	*** 000262	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 000265	50 			push	ax
	*** 000266	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 000269	51 			push	cx
	*** 00026a	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 00026d	52 			push	dx
	*** 00026e	8d 5e e6 		lea	bx,WORD PTR [bp-26]	;d
	*** 000271	53 			push	bx
	*** 000272	6a 00 			push	0
	*** 000274	56 			push	si
	*** 000275	e8 00 00 		call	SKf
	*** 000278	83 c4 0c 		add	sp,12	;000cH
;|*** 		LKf (k,  8, &a, &c, &b, &e); S6f (&a, &c, &b, &e, &d); SKf (k,  4, &a, &c, &d, &b);
; Line 724
	*** 00027b	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 00027e	50 			push	ax
	*** 00027f	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 000282	51 			push	cx
	*** 000283	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;c
	*** 000286	52 			push	dx
	*** 000287	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 00028a	53 			push	bx
	*** 00028b	6a 08 			push	8
	*** 00028d	56 			push	si
	*** 00028e	e8 00 00 		call	LKf
	*** 000291	83 c4 0c 		add	sp,12	;000cH
	*** 000294	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 000297	50 			push	ax
	*** 000298	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 00029b	51 			push	cx
	*** 00029c	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 00029f	52 			push	dx
	*** 0002a0	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;c
	*** 0002a3	53 			push	bx
	*** 0002a4	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 0002a7	50 			push	ax
	*** 0002a8	e8 00 00 		call	S6f
	*** 0002ab	83 c4 0a 		add	sp,10	;000aH
	*** 0002ae	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;b
	*** 0002b1	50 			push	ax
	*** 0002b2	8d 4e e6 		lea	cx,WORD PTR [bp-26]	;d
	*** 0002b5	51 			push	cx
	*** 0002b6	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;c
	*** 0002b9	52 			push	dx
	*** 0002ba	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 0002bd	53 			push	bx
	*** 0002be	6a 04 			push	4
	*** 0002c0	56 			push	si
	*** 0002c1	e8 00 00 		call	SKf
	*** 0002c4	83 c4 0c 		add	sp,12	;000cH
;|*** 		LKf (k, 12, &b, &a, &e, &c); S5f (&b, &a, &e, &c, &d); SKf (k,  8, &a, &c, &b, &e);
; Line 725
	*** 0002c7	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 0002ca	50 			push	ax
	*** 0002cb	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 0002ce	51 			push	cx
	*** 0002cf	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;a
	*** 0002d2	52 			push	dx
	*** 0002d3	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 0002d6	53 			push	bx
	*** 0002d7	6a 0c 			push	12	;000cH
	*** 0002d9	56 			push	si
	*** 0002da	e8 00 00 		call	LKf
	*** 0002dd	83 c4 0c 		add	sp,12	;000cH
	*** 0002e0	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 0002e3	50 			push	ax
	*** 0002e4	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;c
	*** 0002e7	51 			push	cx
	*** 0002e8	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 0002eb	52 			push	dx
	*** 0002ec	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 0002ef	53 			push	bx
	*** 0002f0	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;b
	*** 0002f3	50 			push	ax
	*** 0002f4	e8 00 00 		call	S5f
	*** 0002f7	83 c4 0a 		add	sp,10	;000aH
	*** 0002fa	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 0002fd	50 			push	ax
	*** 0002fe	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 000301	51 			push	cx
	*** 000302	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;c
	*** 000305	52 			push	dx
	*** 000306	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 000309	53 			push	bx
	*** 00030a	6a 08 			push	8
	*** 00030c	56 			push	si
	*** 00030d	e8 00 00 		call	SKf
	*** 000310	83 c4 0c 		add	sp,12	;000cH
;|*** 		LKf (k, 16, &e, &b, &d, &c); S4f (&e, &b, &d, &c, &a); SKf (k, 12, &b, &a, &e, &c);
; Line 726
	*** 000313	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 000316	50 			push	ax
	*** 000317	8d 4e e6 		lea	cx,WORD PTR [bp-26]	;d
	*** 00031a	51 			push	cx
	*** 00031b	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 00031e	52 			push	dx
	*** 00031f	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 000322	53 			push	bx
	*** 000323	6a 10 			push	16	;0010H
	*** 000325	56 			push	si
	*** 000326	e8 00 00 		call	LKf
	*** 000329	83 c4 0c 		add	sp,12	;000cH
	*** 00032c	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 00032f	50 			push	ax
	*** 000330	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;c
	*** 000333	51 			push	cx
	*** 000334	8d 56 e6 		lea	dx,WORD PTR [bp-26]	;d
	*** 000337	52 			push	dx
	*** 000338	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 00033b	52 			push	dx
	*** 00033c	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 00033f	53 			push	bx
	*** 000340	e8 00 00 		call	S4f
	*** 000343	83 c4 0a 		add	sp,10	;000aH
	*** 000346	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 000349	50 			push	ax
	*** 00034a	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 00034d	50 			push	ax
	*** 00034e	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;a
	*** 000351	50 			push	ax
	*** 000352	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;b
	*** 000355	50 			push	ax
	*** 000356	6a 0c 			push	12	;000cH
	*** 000358	56 			push	si
	*** 000359	e8 00 00 		call	SKf
	*** 00035c	83 c4 0c 		add	sp,12	;000cH
;|*** 	for (i=0; i<4; i++)
; Line 716
	*** 00035f	47 			inc	di
	*** 000360	83 ff 04 		cmp	di,4
	*** 000363	0f 8c 94 fd 		jl	$F365
;|*** 	{
;|*** 		LKf (k, 20, &a, &e, &b, &d); S3f (&a, &e, &b, &d, &c); SKf (k, 16, &e, &b, &d, &c);
;|*** 		LKf (k, 24, &c, &b, &a, &e); S2f (&c, &b, &a, &e, &d); SKf (k, 20, &a, &e, &b, &d);
;|*** 		LKf (k, 28, &b, &e, &c, &a); S1f (&b, &e, &c, &a, &d); SKf (k, 24, &c, &b, &a, &e);
;|*** 		LKf (k, 32, &a, &b, &c, &d); S0f (&a, &b, &c, &d, &e); SKf (k, 28, &b, &e, &c, &a);
;|*** 		k += 8*4;
;|*** 		LKf (k,  4, &a, &c, &d, &b); S7f (&a, &c, &d, &b, &e); SKf (k,  0, &d, &e, &b, &a);
;|*** 		LKf (k,  8, &a, &c, &b, &e); S6f (&a, &c, &b, &e, &d); SKf (k,  4, &a, &c, &d, &b);
;|*** 		LKf (k, 12, &b, &a, &e, &c); S5f (&b, &a, &e, &c, &d); SKf (k,  8, &a, &c, &b, &e);
;|*** 		LKf (k, 16, &e, &b, &d, &c); S4f (&e, &b, &d, &c, &a); SKf (k, 12, &b, &a, &e, &c);
;|*** 	}
;|*** 	LKf (k, 20, &a, &e, &b, &d); S3f (&a, &e, &b, &d, &c); SKf (k, 16, &e, &b, &d, &c);
; Line 728
	*** 000367	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 00036a	50 			push	ax
	*** 00036b	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 00036e	51 			push	cx
	*** 00036f	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 000372	52 			push	dx
	*** 000373	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;a
	*** 000376	53 			push	bx
	*** 000377	6a 14 			push	20	;0014H
	*** 000379	56 			push	si
	*** 00037a	e8 00 00 		call	LKf
	*** 00037d	83 c4 0c 		add	sp,12	;000cH
	*** 000380	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 000383	50 			push	ax
	*** 000384	8d 4e e6 		lea	cx,WORD PTR [bp-26]	;d
	*** 000387	51 			push	cx
	*** 000388	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 00038b	52 			push	dx
	*** 00038c	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 00038f	53 			push	bx
	*** 000390	8d 7e ee 		lea	di,WORD PTR [bp-18]	;a
	*** 000393	57 			push	di
	*** 000394	e8 00 00 		call	S3f
	*** 000397	83 c4 0a 		add	sp,10	;000aH
	*** 00039a	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;c
	*** 00039d	50 			push	ax
	*** 00039e	8d 46 e6 		lea	ax,WORD PTR [bp-26]	;d
	*** 0003a1	50 			push	ax
	*** 0003a2	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;b
	*** 0003a5	50 			push	ax
	*** 0003a6	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 0003a9	50 			push	ax
	*** 0003aa	6a 10 			push	16	;0010H
	*** 0003ac	56 			push	si
	*** 0003ad	e8 00 00 		call	SKf
	*** 0003b0	83 c4 0c 		add	sp,12	;000cH
;|*** }
; Line 729
	*** 0003b3	5e 			pop	si
	*** 0003b4	5f 			pop	di
	*** 0003b5	c9 			leave	
	*** 0003b6	c3 			ret	

_serpent_set_key	ENDP

LTf	PROC NEAR	;  COMDAT
;|*** 
;|*** #endif // TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** 
;|*** #ifndef TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** void serpent_encrypt(const unsigned __int8 *inBlock, unsigned __int8 *outBlock, unsigned __int8 *ks)
;|*** {
;|*** 	unsigned __int32 a, b, c, d, e;
;|*** 	unsigned int i=1;
;|*** 	const unsigned __int32 *k = (unsigned __int32 *)ks + 8;
;|*** 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
;|*** 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
;|*** 
;|***     a = LE32(in[0]);
;|*** 	b = LE32(in[1]);
;|*** 	c = LE32(in[2]);
;|*** 	d = LE32(in[3]);
;|*** 
;|*** 	do
;|*** 	{
;|*** 		beforeS0(KX); beforeS0(S0); afterS0(LT);
;|*** 		afterS0(KX); afterS0(S1); afterS1(LT);
;|*** 		afterS1(KX); afterS1(S2); afterS2(LT);
;|*** 		afterS2(KX); afterS2(S3); afterS3(LT);
;|*** 		afterS3(KX); afterS3(S4); afterS4(LT);
;|*** 		afterS4(KX); afterS4(S5); afterS5(LT);
;|*** 		afterS5(KX); afterS5(S6); afterS6(LT);
;|*** 		afterS6(KX); afterS6(S7);
;|*** 
;|*** 		if (i == 4)
;|*** 			break;
;|*** 
;|*** 		++i;
;|*** 		c = b;
;|*** 		b = e;
;|*** 		e = d;
;|*** 		d = a;
;|*** 		a = e;
;|*** 		k += 32;
;|*** 		beforeS0(LT);
;|*** 	}
;|*** 	while (1);
;|*** 
;|*** 	afterS7(KX);
;|*** 	
;|***     out[0] = LE32(d);
;|*** 	out[1] = LE32(e);
;|*** 	out[2] = LE32(b);
;|*** 	out[3] = LE32(a);
;|*** }
;|*** 
;|*** #else // TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** typedef unsigned __int32 uint32;
;|*** 
;|*** static void LTf (uint32 *a, uint32 *b, uint32 *c, uint32 *d)
;|*** {
; Line 787
	*** 000000	c8 0e 00 00 		enter	14,0
	*** 000004	57 			push	di
	*** 000005	56 			push	si
;	a = 4
;	b = 6
;	c = 8
;	d = 10
	*** 000006	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;a
	*** 000009	8b 7e 08 		mov	di,WORD PTR [bp+8]	;c
;|*** 	*a = rotlFixed(*a, 13);
; Line 788
	*** 00000c	8b 07 			mov	ax,WORD PTR [bx]
	*** 00000e	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000011	8b c8 			mov	cx,ax
	*** 000013	8b f2 			mov	si,dx
	*** 000015	d1 ee 			shr	si,1
	*** 000017	d1 d9 			rcr	cx,1
	*** 000019	d1 de 			rcr	si,1
	*** 00001b	d1 d9 			rcr	cx,1
	*** 00001d	d1 de 			rcr	si,1
	*** 00001f	d1 d9 			rcr	cx,1
	*** 000021	d1 de 			rcr	si,1
	*** 000023	87 f1 			xchg	si,cx
	*** 000025	81 e1 00 e0 		and	cx,-8192	;e000H
	*** 000029	c1 ea 03 		shr	dx,3
	*** 00002c	0b ca 			or	cx,dx
	*** 00002e	89 0f 			mov	WORD PTR [bx],cx
	*** 000030	89 77 02 		mov	WORD PTR [bx+2],si
;|*** 	*c = rotlFixed(*c, 3);
; Line 789
	*** 000033	8b 05 			mov	ax,WORD PTR [di]
	*** 000035	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000038	8b c8 			mov	cx,ax
	*** 00003a	8b f2 			mov	si,dx
	*** 00003c	03 c8 			add	cx,ax
	*** 00003e	13 f2 			adc	si,dx
	*** 000040	03 c9 			add	cx,cx
	*** 000042	13 f6 			adc	si,si
	*** 000044	03 c9 			add	cx,cx
	*** 000046	13 f6 			adc	si,si
	*** 000048	c1 ea 0d 		shr	dx,13	;000dH
	*** 00004b	0b ca 			or	cx,dx
	*** 00004d	89 0d 			mov	WORD PTR [di],cx
	*** 00004f	89 75 02 		mov	WORD PTR [di+2],si
;|*** 	*d = rotlFixed(*d ^ *c ^ (*a << 3), 7);
; Line 790
	*** 000052	8b 07 			mov	ax,WORD PTR [bx]
	*** 000054	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000057	8b f2 			mov	si,dx
	*** 000059	03 c0 			add	ax,ax
	*** 00005b	13 d2 			adc	dx,dx
	*** 00005d	03 c0 			add	ax,ax
	*** 00005f	13 d2 			adc	dx,dx
	*** 000061	03 c0 			add	ax,ax
	*** 000063	13 d2 			adc	dx,dx
	*** 000065	33 05 			xor	ax,WORD PTR [di]
	*** 000067	33 55 02 		xor	dx,WORD PTR [di+2]
	*** 00006a	89 5e fe 		mov	WORD PTR [bp-2],bx
	*** 00006d	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;d
	*** 000070	33 07 			xor	ax,WORD PTR [bx]
	*** 000072	33 57 02 		xor	dx,WORD PTR [bx+2]
	*** 000075	8b 5d 02 		mov	bx,WORD PTR [di+2]
	*** 000078	89 5e fc 		mov	WORD PTR [bp-4],bx
	*** 00007b	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;d
	*** 00007e	89 46 f8 		mov	WORD PTR [bp-8],ax
	*** 000081	8b 46 fc 		mov	ax,WORD PTR [bp-4]
	*** 000084	33 47 02 		xor	ax,WORD PTR [bx+2]
	*** 000087	c1 e8 09 		shr	ax,9
	*** 00008a	81 e6 c0 1f 		and	si,8128	;1fc0H
	*** 00008e	c1 ee 06 		shr	si,6
	*** 000091	33 c6 			xor	ax,si
	*** 000093	8b 4e f8 		mov	cx,WORD PTR [bp-8]
	*** 000096	8b f2 			mov	si,dx
	*** 000098	03 c9 			add	cx,cx
	*** 00009a	13 f2 			adc	si,dx
	*** 00009c	03 c9 			add	cx,cx
	*** 00009e	13 f6 			adc	si,si
	*** 0000a0	03 c9 			add	cx,cx
	*** 0000a2	13 f6 			adc	si,si
	*** 0000a4	03 c9 			add	cx,cx
	*** 0000a6	13 f6 			adc	si,si
	*** 0000a8	03 c9 			add	cx,cx
	*** 0000aa	13 f6 			adc	si,si
	*** 0000ac	03 c9 			add	cx,cx
	*** 0000ae	13 f6 			adc	si,si
	*** 0000b0	03 c9 			add	cx,cx
	*** 0000b2	13 f6 			adc	si,si
	*** 0000b4	0b c1 			or	ax,cx
	*** 0000b6	89 07 			mov	WORD PTR [bx],ax
	*** 0000b8	89 77 02 		mov	WORD PTR [bx+2],si
;|*** 	*b = rotlFixed(*b ^ *a ^ *c, 1);
; Line 791
	*** 0000bb	8b 05 			mov	ax,WORD PTR [di]
	*** 0000bd	8b 76 fe 		mov	si,WORD PTR [bp-2]
	*** 0000c0	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 0000c3	33 04 			xor	ax,WORD PTR [si]
	*** 0000c5	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;b
	*** 0000c8	33 54 02 		xor	dx,WORD PTR [si+2]
	*** 0000cb	33 07 			xor	ax,WORD PTR [bx]
	*** 0000cd	33 57 02 		xor	dx,WORD PTR [bx+2]
	*** 0000d0	8b c8 			mov	cx,ax
	*** 0000d2	8b da 			mov	bx,dx
	*** 0000d4	03 c8 			add	cx,ax
	*** 0000d6	13 da 			adc	bx,dx
	*** 0000d8	c1 ea 0f 		shr	dx,15	;000fH
	*** 0000db	8b 76 06 		mov	si,WORD PTR [bp+6]	;b
	*** 0000de	0b ca 			or	cx,dx
	*** 0000e0	89 0c 			mov	WORD PTR [si],cx
	*** 0000e2	89 5c 02 		mov	WORD PTR [si+2],bx
;|*** 	*a = rotlFixed(*a ^ *b ^ *d, 5);
; Line 792
	*** 0000e5	8b 5e fe 		mov	bx,WORD PTR [bp-2]
	*** 0000e8	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 0000eb	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;d
	*** 0000ee	66 33 07 		xor	eax,DWORD PTR [bx]
	*** 0000f1	66 33 04 		xor	eax,DWORD PTR [si]
	*** 0000f4	66 8b d0 		mov	edx,eax
	*** 0000f7	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 0000fb	8b c8 			mov	cx,ax
	*** 0000fd	8b da 			mov	bx,dx
	*** 0000ff	03 c8 			add	cx,ax
	*** 000101	13 da 			adc	bx,dx
	*** 000103	03 c9 			add	cx,cx
	*** 000105	13 db 			adc	bx,bx
	*** 000107	03 c9 			add	cx,cx
	*** 000109	13 db 			adc	bx,bx
	*** 00010b	03 c9 			add	cx,cx
	*** 00010d	13 db 			adc	bx,bx
	*** 00010f	03 c9 			add	cx,cx
	*** 000111	13 db 			adc	bx,bx
	*** 000113	c1 ea 0b 		shr	dx,11	;000bH
	*** 000116	8b 76 fe 		mov	si,WORD PTR [bp-2]
	*** 000119	0b ca 			or	cx,dx
	*** 00011b	89 0c 			mov	WORD PTR [si],cx
	*** 00011d	89 5c 02 		mov	WORD PTR [si+2],bx
;|*** 	*c = rotlFixed(*c ^ *d ^ (*b << 7), 22);
; Line 793
	*** 000120	8b 05 			mov	ax,WORD PTR [di]
	*** 000122	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;d
	*** 000125	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 000128	33 07 			xor	ax,WORD PTR [bx]
	*** 00012a	33 57 02 		xor	dx,WORD PTR [bx+2]
	*** 00012d	8b c8 			mov	cx,ax
	*** 00012f	8b da 			mov	bx,dx
	*** 000131	d1 eb 			shr	bx,1
	*** 000133	d1 d9 			rcr	cx,1
	*** 000135	d1 eb 			shr	bx,1
	*** 000137	d1 d9 			rcr	cx,1
	*** 000139	d1 eb 			shr	bx,1
	*** 00013b	d1 d9 			rcr	cx,1
	*** 00013d	d1 eb 			shr	bx,1
	*** 00013f	d1 d9 			rcr	cx,1
	*** 000141	d1 eb 			shr	bx,1
	*** 000143	d1 d9 			rcr	cx,1
	*** 000145	d1 eb 			shr	bx,1
	*** 000147	d1 d9 			rcr	cx,1
	*** 000149	d1 eb 			shr	bx,1
	*** 00014b	d1 d9 			rcr	cx,1
	*** 00014d	8b 76 06 		mov	si,WORD PTR [bp+6]	;b
	*** 000150	89 46 f6 		mov	WORD PTR [bp-10],ax
	*** 000153	8b 04 			mov	ax,WORD PTR [si]
	*** 000155	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 000158	89 46 f2 		mov	WORD PTR [bp-14],ax
	*** 00015b	25 f8 ff 		and	ax,-8	;fff8H
	*** 00015e	81 e2 ff 01 		and	dx,511	;01ffH
	*** 000162	33 c8 			xor	cx,ax
	*** 000164	33 da 			xor	bx,dx
	*** 000166	d1 eb 			shr	bx,1
	*** 000168	d1 d9 			rcr	cx,1
	*** 00016a	d1 eb 			shr	bx,1
	*** 00016c	d1 d9 			rcr	cx,1
	*** 00016e	d1 eb 			shr	bx,1
	*** 000170	d1 d9 			rcr	cx,1
	*** 000172	8b 46 f6 		mov	ax,WORD PTR [bp-10]
	*** 000175	c1 e0 06 		shl	ax,6
	*** 000178	8b 56 f2 		mov	dx,WORD PTR [bp-14]
	*** 00017b	c1 e2 0d 		shl	dx,13	;000dH
	*** 00017e	33 c2 			xor	ax,dx
	*** 000180	0b d8 			or	bx,ax
	*** 000182	89 0d 			mov	WORD PTR [di],cx
	*** 000184	89 5d 02 		mov	WORD PTR [di+2],bx
;|*** }
; Line 794
	*** 000187	5e 			pop	si
	*** 000188	5f 			pop	di
	*** 000189	c9 			leave	
	*** 00018a	c3 			ret	

LTf	ENDP
	PUBLIC	_serpent_encrypt
_serpent_encrypt	PROC NEAR	;  COMDAT
;|*** 
;|*** void serpent_encrypt(const unsigned __int8 *inBlock, unsigned __int8 *outBlock, unsigned __int8 *ks)
;|*** {
; Line 797
	*** 000000	c8 16 00 00 		enter	22,0
	*** 000004	57 			push	di
	*** 000005	56 			push	si
;	a = -10
;	b = -6
;	c = -18
;	d = -22
;	e = -14
;	register di = i
;	register si = k
;	in = -26
;	out = -2
;	inBlock = 4
;	outBlock = 6
;	ks = 8
	*** 000006	8b 4e 04 		mov	cx,WORD PTR [bp+4]	;inBlock
;|*** 	unsigned __int32 a, b, c, d, e;
;|*** 	unsigned int i=1;
; Line 799
	*** 000009	bf 01 00 		mov	di,1
;|*** 	const unsigned __int32 *k = (unsigned __int32 *)ks + 8;
; Line 800
	*** 00000c	8b 76 08 		mov	si,WORD PTR [bp+8]	;ks
	*** 00000f	83 c6 20 		add	si,32	;0020H
;|*** 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
;|*** 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
; Line 802
	*** 000012	8b 46 06 		mov	ax,WORD PTR [bp+6]	;outBlock
	*** 000015	8b d9 			mov	bx,cx
	*** 000017	89 46 fe 		mov	WORD PTR [bp-2],ax	;out
;|*** 
;|***     a = LE32(in[0]);
; Line 804
	*** 00001a	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 00001d	66 89 46 f6 		mov	DWORD PTR [bp-10],eax	;a
;|*** 	b = LE32(in[1]);
; Line 805
	*** 000021	66 8b 47 04 		mov	eax,DWORD PTR [bx+4]
	*** 000025	66 89 46 fa 		mov	DWORD PTR [bp-6],eax	;b
;|*** 	c = LE32(in[2]);
; Line 806
	*** 000029	66 8b 47 08 		mov	eax,DWORD PTR [bx+8]
	*** 00002d	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;c
;|*** 	d = LE32(in[3]);
; Line 807
	*** 000031	66 8b 47 0c 		mov	eax,DWORD PTR [bx+12]
	*** 000035	66 89 46 ea 		mov	DWORD PTR [bp-22],eax	;d
;|*** 
;|*** 	do
; Line 809
	*** 000039	eb 44 			jmp	SHORT $L451
	*** 00003b	90 			nop	
					$D394:
;|*** 	{
;|*** 		KXf (k,  0, &a, &b, &c, &d); S0f (&a, &b, &c, &d, &e); LTf (&b, &e, &c, &a);
;|*** 		KXf (k,  4, &b, &e, &c, &a); S1f (&b, &e, &c, &a, &d); LTf (&c, &b, &a, &e);
;|*** 		KXf (k,  8, &c, &b, &a, &e); S2f (&c, &b, &a, &e, &d); LTf (&a, &e, &b, &d);
;|*** 		KXf (k, 12, &a, &e, &b, &d); S3f (&a, &e, &b, &d, &c); LTf (&e, &b, &d, &c);
;|*** 		KXf (k, 16, &e, &b, &d, &c); S4f (&e, &b, &d, &c, &a); LTf (&b, &a, &e, &c);
;|*** 		KXf (k, 20, &b, &a, &e, &c); S5f (&b, &a, &e, &c, &d); LTf (&a, &c, &b, &e);
;|*** 		KXf (k, 24, &a, &c, &b, &e); S6f (&a, &c, &b, &e, &d); LTf (&a, &c, &d, &b);
;|*** 		KXf (k, 28, &a, &c, &d, &b); S7f (&a, &c, &d, &b, &e);
;|*** 
;|*** 		if (i == 4)
;|*** 			break;
;|*** 
;|*** 		++i;
; Line 823
	*** 00003c	47 			inc	di
;|*** 		c = b;
; Line 824
	*** 00003d	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;b
	*** 000041	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;c
;|*** 		b = e;
; Line 825
	*** 000045	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000049	66 89 46 fa 		mov	DWORD PTR [bp-6],eax	;b
;|*** 		e = d;
; Line 826
	*** 00004d	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;d
	*** 000051	66 89 46 f2 		mov	DWORD PTR [bp-14],eax	;e
;|*** 		d = a;
; Line 827
	*** 000055	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;a
	*** 000059	66 89 46 ea 		mov	DWORD PTR [bp-22],eax	;d
;|*** 		a = e;
; Line 828
	*** 00005d	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000061	66 89 46 f6 		mov	DWORD PTR [bp-10],eax	;a
;|*** 		k += 32;
; Line 829
	*** 000065	81 c6 80 00 		add	si,128	;0080H
;|*** 		LTf (&a,&b,&c,&d);
; Line 830
	*** 000069	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 00006c	50 			push	ax
	*** 00006d	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 000070	50 			push	ax
	*** 000071	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;b
	*** 000074	50 			push	ax
	*** 000075	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 000078	50 			push	ax
	*** 000079	e8 00 00 		call	LTf
	*** 00007c	83 c4 08 		add	sp,8
;|*** 	}
;|*** 	while (1);
; Line 832
					$L451:
	*** 00007f	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 000082	50 			push	ax
	*** 000083	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;c
	*** 000086	51 			push	cx
	*** 000087	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;b
	*** 00008a	52 			push	dx
	*** 00008b	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 00008e	53 			push	bx
	*** 00008f	6a 00 			push	0
	*** 000091	56 			push	si
	*** 000092	e8 00 00 		call	KXf
	*** 000095	83 c4 0c 		add	sp,12	;000cH
	*** 000098	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 00009b	50 			push	ax
	*** 00009c	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;d
	*** 00009f	51 			push	cx
	*** 0000a0	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;c
	*** 0000a3	52 			push	dx
	*** 0000a4	8d 5e fa 		lea	bx,WORD PTR [bp-6]	;b
	*** 0000a7	53 			push	bx
	*** 0000a8	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 0000ab	50 			push	ax
	*** 0000ac	e8 00 00 		call	S0f
	*** 0000af	83 c4 0a 		add	sp,10	;000aH
	*** 0000b2	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 0000b5	50 			push	ax
	*** 0000b6	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;c
	*** 0000b9	51 			push	cx
	*** 0000ba	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 0000bd	52 			push	dx
	*** 0000be	8d 5e fa 		lea	bx,WORD PTR [bp-6]	;b
	*** 0000c1	53 			push	bx
	*** 0000c2	e8 00 00 		call	LTf
	*** 0000c5	83 c4 08 		add	sp,8
;|*** 		KXf (k,  4, &b, &e, &c, &a); S1f (&b, &e, &c, &a, &d); LTf (&c, &b, &a, &e);
; Line 812
	*** 0000c8	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 0000cb	50 			push	ax
	*** 0000cc	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;c
	*** 0000cf	51 			push	cx
	*** 0000d0	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 0000d3	52 			push	dx
	*** 0000d4	8d 5e fa 		lea	bx,WORD PTR [bp-6]	;b
	*** 0000d7	53 			push	bx
	*** 0000d8	6a 04 			push	4
	*** 0000da	56 			push	si
	*** 0000db	e8 00 00 		call	KXf
	*** 0000de	83 c4 0c 		add	sp,12	;000cH
	*** 0000e1	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 0000e4	50 			push	ax
	*** 0000e5	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;a
	*** 0000e8	51 			push	cx
	*** 0000e9	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;c
	*** 0000ec	52 			push	dx
	*** 0000ed	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 0000f0	53 			push	bx
	*** 0000f1	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;b
	*** 0000f4	50 			push	ax
	*** 0000f5	e8 00 00 		call	S1f
	*** 0000f8	83 c4 0a 		add	sp,10	;000aH
	*** 0000fb	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 0000fe	50 			push	ax
	*** 0000ff	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;a
	*** 000102	51 			push	cx
	*** 000103	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;b
	*** 000106	52 			push	dx
	*** 000107	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;c
	*** 00010a	53 			push	bx
	*** 00010b	e8 00 00 		call	LTf
	*** 00010e	83 c4 08 		add	sp,8
;|*** 		KXf (k,  8, &c, &b, &a, &e); S2f (&c, &b, &a, &e, &d); LTf (&a, &e, &b, &d);
; Line 813
	*** 000111	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000114	50 			push	ax
	*** 000115	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;a
	*** 000118	51 			push	cx
	*** 000119	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;b
	*** 00011c	52 			push	dx
	*** 00011d	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;c
	*** 000120	53 			push	bx
	*** 000121	6a 08 			push	8
	*** 000123	56 			push	si
	*** 000124	e8 00 00 		call	KXf
	*** 000127	83 c4 0c 		add	sp,12	;000cH
	*** 00012a	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 00012d	50 			push	ax
	*** 00012e	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 000131	51 			push	cx
	*** 000132	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;a
	*** 000135	52 			push	dx
	*** 000136	8d 5e fa 		lea	bx,WORD PTR [bp-6]	;b
	*** 000139	53 			push	bx
	*** 00013a	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 00013d	50 			push	ax
	*** 00013e	e8 00 00 		call	S2f
	*** 000141	83 c4 0a 		add	sp,10	;000aH
	*** 000144	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 000147	50 			push	ax
	*** 000148	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;b
	*** 00014b	51 			push	cx
	*** 00014c	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 00014f	52 			push	dx
	*** 000150	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 000153	53 			push	bx
	*** 000154	e8 00 00 		call	LTf
	*** 000157	83 c4 08 		add	sp,8
;|*** 		KXf (k, 12, &a, &e, &b, &d); S3f (&a, &e, &b, &d, &c); LTf (&e, &b, &d, &c);
; Line 814
	*** 00015a	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 00015d	50 			push	ax
	*** 00015e	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;b
	*** 000161	51 			push	cx
	*** 000162	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 000165	52 			push	dx
	*** 000166	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 000169	53 			push	bx
	*** 00016a	6a 0c 			push	12	;000cH
	*** 00016c	56 			push	si
	*** 00016d	e8 00 00 		call	KXf
	*** 000170	83 c4 0c 		add	sp,12	;000cH
	*** 000173	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 000176	50 			push	ax
	*** 000177	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;d
	*** 00017a	51 			push	cx
	*** 00017b	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;b
	*** 00017e	52 			push	dx
	*** 00017f	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 000182	53 			push	bx
	*** 000183	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 000186	50 			push	ax
	*** 000187	e8 00 00 		call	S3f
	*** 00018a	83 c4 0a 		add	sp,10	;000aH
	*** 00018d	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 000190	50 			push	ax
	*** 000191	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;d
	*** 000194	51 			push	cx
	*** 000195	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;b
	*** 000198	52 			push	dx
	*** 000199	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 00019c	53 			push	bx
	*** 00019d	e8 00 00 		call	LTf
	*** 0001a0	83 c4 08 		add	sp,8
;|*** 		KXf (k, 16, &e, &b, &d, &c); S4f (&e, &b, &d, &c, &a); LTf (&b, &a, &e, &c);
; Line 815
	*** 0001a3	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 0001a6	50 			push	ax
	*** 0001a7	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;d
	*** 0001aa	51 			push	cx
	*** 0001ab	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;b
	*** 0001ae	52 			push	dx
	*** 0001af	8d 5e f2 		lea	bx,WORD PTR [bp-14]	;e
	*** 0001b2	53 			push	bx
	*** 0001b3	6a 10 			push	16	;0010H
	*** 0001b5	56 			push	si
	*** 0001b6	e8 00 00 		call	KXf
	*** 0001b9	83 c4 0c 		add	sp,12	;000cH
	*** 0001bc	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 0001bf	50 			push	ax
	*** 0001c0	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;c
	*** 0001c3	51 			push	cx
	*** 0001c4	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;d
	*** 0001c7	52 			push	dx
	*** 0001c8	8d 5e fa 		lea	bx,WORD PTR [bp-6]	;b
	*** 0001cb	53 			push	bx
	*** 0001cc	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 0001cf	50 			push	ax
	*** 0001d0	e8 00 00 		call	S4f
	*** 0001d3	83 c4 0a 		add	sp,10	;000aH
	*** 0001d6	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 0001d9	50 			push	ax
	*** 0001da	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 0001dd	51 			push	cx
	*** 0001de	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;a
	*** 0001e1	52 			push	dx
	*** 0001e2	8d 5e fa 		lea	bx,WORD PTR [bp-6]	;b
	*** 0001e5	53 			push	bx
	*** 0001e6	e8 00 00 		call	LTf
	*** 0001e9	83 c4 08 		add	sp,8
;|*** 		KXf (k, 20, &b, &a, &e, &c); S5f (&b, &a, &e, &c, &d); LTf (&a, &c, &b, &e);
; Line 816
	*** 0001ec	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 0001ef	50 			push	ax
	*** 0001f0	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 0001f3	51 			push	cx
	*** 0001f4	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;a
	*** 0001f7	52 			push	dx
	*** 0001f8	8d 5e fa 		lea	bx,WORD PTR [bp-6]	;b
	*** 0001fb	53 			push	bx
	*** 0001fc	6a 14 			push	20	;0014H
	*** 0001fe	56 			push	si
	*** 0001ff	e8 00 00 		call	KXf
	*** 000202	83 c4 0c 		add	sp,12	;000cH
	*** 000205	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 000208	50 			push	ax
	*** 000209	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;c
	*** 00020c	51 			push	cx
	*** 00020d	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 000210	52 			push	dx
	*** 000211	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 000214	53 			push	bx
	*** 000215	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;b
	*** 000218	50 			push	ax
	*** 000219	e8 00 00 		call	S5f
	*** 00021c	83 c4 0a 		add	sp,10	;000aH
	*** 00021f	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000222	50 			push	ax
	*** 000223	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;b
	*** 000226	51 			push	cx
	*** 000227	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;c
	*** 00022a	52 			push	dx
	*** 00022b	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 00022e	53 			push	bx
	*** 00022f	e8 00 00 		call	LTf
	*** 000232	83 c4 08 		add	sp,8
;|*** 		KXf (k, 24, &a, &c, &b, &e); S6f (&a, &c, &b, &e, &d); LTf (&a, &c, &d, &b);
; Line 817
	*** 000235	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000238	50 			push	ax
	*** 000239	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;b
	*** 00023c	51 			push	cx
	*** 00023d	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;c
	*** 000240	52 			push	dx
	*** 000241	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 000244	53 			push	bx
	*** 000245	6a 18 			push	24	;0018H
	*** 000247	56 			push	si
	*** 000248	e8 00 00 		call	KXf
	*** 00024b	83 c4 0c 		add	sp,12	;000cH
	*** 00024e	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 000251	50 			push	ax
	*** 000252	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 000255	51 			push	cx
	*** 000256	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;b
	*** 000259	52 			push	dx
	*** 00025a	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;c
	*** 00025d	53 			push	bx
	*** 00025e	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 000261	50 			push	ax
	*** 000262	e8 00 00 		call	S6f
	*** 000265	83 c4 0a 		add	sp,10	;000aH
	*** 000268	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;b
	*** 00026b	50 			push	ax
	*** 00026c	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;d
	*** 00026f	51 			push	cx
	*** 000270	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;c
	*** 000273	52 			push	dx
	*** 000274	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 000277	53 			push	bx
	*** 000278	e8 00 00 		call	LTf
	*** 00027b	83 c4 08 		add	sp,8
;|*** 		KXf (k, 28, &a, &c, &d, &b); S7f (&a, &c, &d, &b, &e);
; Line 818
	*** 00027e	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;b
	*** 000281	50 			push	ax
	*** 000282	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;d
	*** 000285	51 			push	cx
	*** 000286	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;c
	*** 000289	52 			push	dx
	*** 00028a	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;a
	*** 00028d	53 			push	bx
	*** 00028e	6a 1c 			push	28	;001cH
	*** 000290	56 			push	si
	*** 000291	e8 00 00 		call	KXf
	*** 000294	83 c4 0c 		add	sp,12	;000cH
	*** 000297	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 00029a	50 			push	ax
	*** 00029b	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;b
	*** 00029e	50 			push	ax
	*** 00029f	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;d
	*** 0002a2	50 			push	ax
	*** 0002a3	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;c
	*** 0002a6	50 			push	ax
	*** 0002a7	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 0002aa	50 			push	ax
	*** 0002ab	e8 00 00 		call	S7f
	*** 0002ae	83 c4 0a 		add	sp,10	;000aH
;|*** 
;|*** 		if (i == 4)
; Line 820
	*** 0002b1	83 ff 04 		cmp	di,4
	*** 0002b4	0f 85 84 fd 		jne	$D394
	*** 0002b8	8b 7e fe 		mov	di,WORD PTR [bp-2]	;out
;|*** 			break;
;|*** 
;|*** 		++i;
;|*** 		c = b;
;|*** 		b = e;
;|*** 		e = d;
;|*** 		d = a;
;|*** 		a = e;
;|*** 		k += 32;
;|*** 		LTf (&a,&b,&c,&d);
;|*** 	}
;|*** 	while (1);
;|*** 
;|*** 	KXf (k, 32, &d, &e, &b, &a);
; Line 834
	*** 0002bb	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;a
	*** 0002be	50 			push	ax
	*** 0002bf	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;b
	*** 0002c2	51 			push	cx
	*** 0002c3	8d 56 f2 		lea	dx,WORD PTR [bp-14]	;e
	*** 0002c6	52 			push	dx
	*** 0002c7	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;d
	*** 0002ca	53 			push	bx
	*** 0002cb	6a 20 			push	32	;0020H
	*** 0002cd	56 			push	si
	*** 0002ce	e8 00 00 		call	KXf
	*** 0002d1	83 c4 0c 		add	sp,12	;000cH
;|*** 	
;|***     out[0] = LE32(d);
; Line 836
	*** 0002d4	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;d
	*** 0002d8	66 89 05 		mov	DWORD PTR [di],eax
;|*** 	out[1] = LE32(e);
; Line 837
	*** 0002db	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0002df	66 89 45 04 		mov	DWORD PTR [di+4],eax
;|*** 	out[2] = LE32(b);
; Line 838
	*** 0002e3	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;b
	*** 0002e7	66 89 45 08 		mov	DWORD PTR [di+8],eax
;|*** 	out[3] = LE32(a);
; Line 839
	*** 0002eb	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;a
	*** 0002ef	66 89 45 0c 		mov	DWORD PTR [di+12],eax
;|*** }
; Line 840
	*** 0002f3	5e 			pop	si
	*** 0002f4	5f 			pop	di
	*** 0002f5	c9 			leave	
	*** 0002f6	c3 			ret	

_serpent_encrypt	ENDP

ILTf	PROC NEAR	;  COMDAT
;|*** 
;|*** #endif // TC_MINIMIZE_CODE_SIZE
;|*** 
;|*** #if !defined (TC_MINIMIZE_CODE_SIZE) || defined (TC_WINDOWS_BOOT_SERPENT)
;|*** 
;|*** void serpent_decrypt(const unsigned __int8 *inBlock, unsigned __int8 *outBlock, unsigned __int8 *ks)
;|*** {
;|*** 	unsigned __int32 a, b, c, d, e;
;|*** 	const unsigned __int32 *k = (unsigned __int32 *)ks + 104;
;|*** 	unsigned int i=4;
;|*** 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
;|*** 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
;|*** 
;|***     a = LE32(in[0]);
;|*** 	b = LE32(in[1]);
;|*** 	c = LE32(in[2]);
;|*** 	d = LE32(in[3]);
;|*** 
;|*** 	beforeI7(KX);
;|*** 	goto start;
;|*** 
;|*** 	do
;|*** 	{
;|*** 		c = b;
;|*** 		b = d;
;|*** 		d = e;
;|*** 		k -= 32;
;|*** 		beforeI7(ILT);
;|*** start:
;|*** 		beforeI7(I7); afterI7(KX); 
;|*** 		afterI7(ILT); afterI7(I6); afterI6(KX); 
;|*** 		afterI6(ILT); afterI6(I5); afterI5(KX); 
;|*** 		afterI5(ILT); afterI5(I4); afterI4(KX); 
;|*** 		afterI4(ILT); afterI4(I3); afterI3(KX); 
;|*** 		afterI3(ILT); afterI3(I2); afterI2(KX); 
;|*** 		afterI2(ILT); afterI2(I1); afterI1(KX); 
;|*** 		afterI1(ILT); afterI1(I0); afterI0(KX);
;|*** 	}
;|*** 	while (--i != 0);
;|*** 	
;|***     out[0] = LE32(a);
;|*** 	out[1] = LE32(d);
;|*** 	out[2] = LE32(b);
;|*** 	out[3] = LE32(e);
;|*** }
;|*** 
;|*** #else // TC_MINIMIZE_CODE_SIZE && !TC_WINDOWS_BOOT_SERPENT
;|*** 
;|*** static void ILTf (uint32 *a, uint32 *b, uint32 *c, uint32 *d)
;|*** { 
; Line 890
	*** 000000	c8 16 00 00 		enter	22,0
	*** 000004	57 			push	di
	*** 000005	56 			push	si
;	a = 4
;	b = 6
;	c = 8
;	d = 10
	*** 000006	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;c
	*** 000009	8b 7e 04 		mov	di,WORD PTR [bp+4]	;a
;|*** 	*c = rotrFixed(*c, 22);
; Line 891
	*** 00000c	8b 07 			mov	ax,WORD PTR [bx]
	*** 00000e	8b 57 02 		mov	dx,WORD PTR [bx+2]
	*** 000011	89 56 fe 		mov	WORD PTR [bp-2],dx
	*** 000014	8a f2 			mov	dh,dl
	*** 000016	8a d4 			mov	dl,ah
	*** 000018	8a e0 			mov	ah,al
	*** 00001a	2a c0 			sub	al,al
	*** 00001c	03 c0 			add	ax,ax
	*** 00001e	13 d2 			adc	dx,dx
	*** 000020	03 c0 			add	ax,ax
	*** 000022	13 d2 			adc	dx,dx
	*** 000024	8b 4e fe 		mov	cx,WORD PTR [bp-2]
	*** 000027	c1 e9 06 		shr	cx,6
	*** 00002a	0b c1 			or	ax,cx
	*** 00002c	89 07 			mov	WORD PTR [bx],ax
	*** 00002e	89 57 02 		mov	WORD PTR [bx+2],dx
;|*** 	*a = rotrFixed(*a, 5);
; Line 892
	*** 000031	8b 05 			mov	ax,WORD PTR [di]
	*** 000033	c1 e0 0b 		shl	ax,11	;000bH
	*** 000036	89 46 fc 		mov	WORD PTR [bp-4],ax
	*** 000039	66 8b 05 		mov	eax,DWORD PTR [di]
	*** 00003c	66 c1 e8 05 		shr	eax,5
	*** 000040	66 8b d0 		mov	edx,eax
	*** 000043	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 000047	0b 56 fc 		or	dx,WORD PTR [bp-4]
	*** 00004a	89 05 			mov	WORD PTR [di],ax
	*** 00004c	89 55 02 		mov	WORD PTR [di+2],dx
;|*** 	*c ^= *d ^ (*b << 7);
; Line 893
	*** 00004f	8b 76 06 		mov	si,WORD PTR [bp+6]	;b
	*** 000052	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000055	66 c1 e0 07 		shl	eax,7
	*** 000059	8b 76 0a 		mov	si,WORD PTR [bp+10]	;d
	*** 00005c	66 33 04 		xor	eax,DWORD PTR [si]
	*** 00005f	66 31 07 		xor	DWORD PTR [bx],eax
;|*** 	*a ^= *b ^ *d;
; Line 894
	*** 000062	66 8b 04 		mov	eax,DWORD PTR [si]
	*** 000065	8b 76 06 		mov	si,WORD PTR [bp+6]	;b
	*** 000068	66 33 04 		xor	eax,DWORD PTR [si]
	*** 00006b	66 31 05 		xor	DWORD PTR [di],eax
;|*** 	*b = rotrFixed(*b, 1);
; Line 895
	*** 00006e	8b 04 			mov	ax,WORD PTR [si]
	*** 000070	c1 e0 0f 		shl	ax,15	;000fH
	*** 000073	89 46 f8 		mov	WORD PTR [bp-8],ax
	*** 000076	8b 04 			mov	ax,WORD PTR [si]
	*** 000078	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 00007b	d1 ea 			shr	dx,1
	*** 00007d	d1 d8 			rcr	ax,1
	*** 00007f	0b 56 f8 		or	dx,WORD PTR [bp-8]
	*** 000082	89 04 			mov	WORD PTR [si],ax
	*** 000084	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*d = rotrFixed(*d, 7) ^ *c ^ (*a << 3);
; Line 896
	*** 000087	66 8b 05 		mov	eax,DWORD PTR [di]
	*** 00008a	66 c1 e0 03 		shl	eax,3
	*** 00008e	66 8b d0 		mov	edx,eax
	*** 000091	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 000095	8b 76 0a 		mov	si,WORD PTR [bp+10]	;d
	*** 000098	8b 0c 			mov	cx,WORD PTR [si]
	*** 00009a	c1 e1 09 		shl	cx,9
	*** 00009d	89 46 f2 		mov	WORD PTR [bp-14],ax
	*** 0000a0	89 56 f4 		mov	WORD PTR [bp-12],dx
	*** 0000a3	8b c1 			mov	ax,cx
	*** 0000a5	2b f6 			sub	si,si
	*** 0000a7	8b cb 			mov	cx,bx
	*** 0000a9	8b 5e 0a 		mov	bx,WORD PTR [bp+10]	;d
	*** 0000ac	8b d6 			mov	dx,si
	*** 0000ae	8b f1 			mov	si,cx
	*** 0000b0	89 56 ee 		mov	WORD PTR [bp-18],dx
	*** 0000b3	89 46 f0 		mov	WORD PTR [bp-16],ax
	*** 0000b6	66 8b 07 		mov	eax,DWORD PTR [bx]
	*** 0000b9	66 c1 e8 07 		shr	eax,7
	*** 0000bd	66 0b 46 ee 		or	eax,DWORD PTR [bp-18]
	*** 0000c1	66 33 46 f2 		xor	eax,DWORD PTR [bp-14]
	*** 0000c5	66 33 04 		xor	eax,DWORD PTR [si]
	*** 0000c8	66 89 07 		mov	DWORD PTR [bx],eax
;|*** 	*b ^= *a ^ *c;
; Line 897
	*** 0000cb	8b 04 			mov	ax,WORD PTR [si]
	*** 0000cd	8b 54 02 		mov	dx,WORD PTR [si+2]
	*** 0000d0	33 05 			xor	ax,WORD PTR [di]
	*** 0000d2	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;b
	*** 0000d5	33 55 02 		xor	dx,WORD PTR [di+2]
	*** 0000d8	33 07 			xor	ax,WORD PTR [bx]
	*** 0000da	33 57 02 		xor	dx,WORD PTR [bx+2]
	*** 0000dd	89 07 			mov	WORD PTR [bx],ax
	*** 0000df	89 57 02 		mov	WORD PTR [bx+2],dx
;|*** 	*c = rotrFixed(*c, 3);
; Line 898
	*** 0000e2	8b 14 			mov	dx,WORD PTR [si]
	*** 0000e4	8b c2 			mov	ax,dx
	*** 0000e6	8b 5c 02 		mov	bx,WORD PTR [si+2]
	*** 0000e9	d1 eb 			shr	bx,1
	*** 0000eb	d1 da 			rcr	dx,1
	*** 0000ed	d1 eb 			shr	bx,1
	*** 0000ef	d1 da 			rcr	dx,1
	*** 0000f1	d1 eb 			shr	bx,1
	*** 0000f3	d1 da 			rcr	dx,1
	*** 0000f5	c1 e0 0d 		shl	ax,13	;000dH
	*** 0000f8	89 56 ea 		mov	WORD PTR [bp-22],dx
	*** 0000fb	8b d0 			mov	dx,ax
	*** 0000fd	8b 4e ea 		mov	cx,WORD PTR [bp-22]
	*** 000100	0b d3 			or	dx,bx
	*** 000102	89 0c 			mov	WORD PTR [si],cx
	*** 000104	89 54 02 		mov	WORD PTR [si+2],dx
;|*** 	*a = rotrFixed(*a, 13);
; Line 899
	*** 000107	8b 05 			mov	ax,WORD PTR [di]
	*** 000109	8b 55 02 		mov	dx,WORD PTR [di+2]
	*** 00010c	8b c8 			mov	cx,ax
	*** 00010e	8b da 			mov	bx,dx
	*** 000110	c1 e0 03 		shl	ax,3
	*** 000113	03 c9 			add	cx,cx
	*** 000115	13 da 			adc	bx,dx
	*** 000117	13 c9 			adc	cx,cx
	*** 000119	13 db 			adc	bx,bx
	*** 00011b	13 c9 			adc	cx,cx
	*** 00011d	13 db 			adc	bx,bx
	*** 00011f	13 c9 			adc	cx,cx
	*** 000121	87 cb 			xchg	cx,bx
	*** 000123	83 e3 07 		and	bx,7
	*** 000126	0b d8 			or	bx,ax
	*** 000128	89 0d 			mov	WORD PTR [di],cx
	*** 00012a	89 5d 02 		mov	WORD PTR [di+2],bx
;|*** }
; Line 900
	*** 00012d	5e 			pop	si
	*** 00012e	5f 			pop	di
	*** 00012f	c9 			leave	
	*** 000130	c3 			ret	

ILTf	ENDP
	PUBLIC	_serpent_decrypt
_serpent_decrypt	PROC NEAR	;  COMDAT
;|*** 
;|*** void serpent_decrypt(const unsigned __int8 *inBlock, unsigned __int8 *outBlock, unsigned __int8 *ks)
;|*** {
; Line 903
	*** 000000	c8 2a 00 00 		enter	42,0
	*** 000004	57 			push	di
	*** 000005	56 			push	si
;	inBlock = 4
;	outBlock = 6
;	ks = 8
;	a = -22
;	b = -10
;	c = -6
;	d = -18
;	e = -14
;	register si = k
;	register di = i
;	in = -26
;	out = -2
;|*** 	unsigned __int32 a, b, c, d, e;
;|*** 	const unsigned __int32 *k = (unsigned __int32 *)ks + 104;
; Line 905
	*** 000006	8b 46 08 		mov	ax,WORD PTR [bp+8]	;ks
	*** 000009	05 a0 01 		add	ax,416	;01a0H
	*** 00000c	8b f0 			mov	si,ax
;|*** 	unsigned int i=4;
; Line 906
	*** 00000e	bf 04 00 		mov	di,4
;|*** 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
;|*** 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
; Line 908
	*** 000011	8b 4e 06 		mov	cx,WORD PTR [bp+6]	;outBlock
	*** 000014	89 4e fe 		mov	WORD PTR [bp-2],cx	;out
;|*** 
;|***     a = LE32(in[0]);
; Line 910
	*** 000017	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;inBlock
	*** 00001a	66 8b 0f 		mov	ecx,DWORD PTR [bx]
	*** 00001d	66 89 4e ea 		mov	DWORD PTR [bp-22],ecx	;a
;|*** 	b = LE32(in[1]);
; Line 911
	*** 000021	66 8b 4f 04 		mov	ecx,DWORD PTR [bx+4]
	*** 000025	66 89 4e f6 		mov	DWORD PTR [bp-10],ecx	;b
;|*** 	c = LE32(in[2]);
; Line 912
	*** 000029	66 8b 4f 08 		mov	ecx,DWORD PTR [bx+8]
	*** 00002d	66 89 4e fa 		mov	DWORD PTR [bp-6],ecx	;c
;|*** 	d = LE32(in[3]);
; Line 913
	*** 000031	66 8b 4f 0c 		mov	ecx,DWORD PTR [bx+12]
	*** 000035	66 89 4e ee 		mov	DWORD PTR [bp-18],ecx	;d
;|*** 
;|*** 	KXf (k, 32, &a, &b, &c, &d);
; Line 915
	*** 000039	8d 4e ee 		lea	cx,WORD PTR [bp-18]	;d
	*** 00003c	51 			push	cx
	*** 00003d	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;c
	*** 000040	51 			push	cx
	*** 000041	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 000044	51 			push	cx
	*** 000045	8d 4e ea 		lea	cx,WORD PTR [bp-22]	;a
	*** 000048	51 			push	cx
	*** 000049	6a 20 			push	32	;0020H
	*** 00004b	50 			push	ax
	*** 00004c	e8 00 00 		call	KXf
	*** 00004f	83 c4 0c 		add	sp,12	;000cH
;|*** 	goto start;
;|*** 
;|*** 	do
;|*** 	{
;|*** 		c = b;
;|*** 		b = d;
;|*** 		d = e;
;|*** 		k -= 32;
;|*** 		beforeI7(ILT);
;|*** start:
; Line 925
	*** 000052	e9 3f 01 		jmp	$L452
	*** 000055	90 			nop	
					$start424:
;|*** 		c = b;
; Line 920
	*** 000056	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 00005a	66 89 46 fa 		mov	DWORD PTR [bp-6],eax	;c
;|*** 		b = d;
; Line 921
	*** 00005e	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 000062	66 89 46 f6 		mov	DWORD PTR [bp-10],eax	;b
;|*** 		d = e;
; Line 922
	*** 000066	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 00006a	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
;|*** 		k -= 32;
; Line 923
	*** 00006e	81 ee 80 00 		sub	si,128	;0080H
;|*** 		beforeI7(ILT);
; Line 924
	*** 000072	8b 56 fc 		mov	dx,WORD PTR [bp-4]
	*** 000075	8b c2 			mov	ax,dx
	*** 000077	c1 e8 06 		shr	ax,6
	*** 00007a	8b c8 			mov	cx,ax
	*** 00007c	8b 46 fa 		mov	ax,WORD PTR [bp-6]	;c
	*** 00007f	8a f2 			mov	dh,dl
	*** 000081	8a d4 			mov	dl,ah
	*** 000083	8a e0 			mov	ah,al
	*** 000085	2a c0 			sub	al,al
	*** 000087	03 c0 			add	ax,ax
	*** 000089	13 d2 			adc	dx,dx
	*** 00008b	03 c0 			add	ax,ax
	*** 00008d	13 d2 			adc	dx,dx
	*** 00008f	0b c1 			or	ax,cx
	*** 000091	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 000094	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 000097	8b 46 ea 		mov	ax,WORD PTR [bp-22]	;a
	*** 00009a	c1 e0 0b 		shl	ax,11	;000bH
	*** 00009d	2b c9 			sub	cx,cx
	*** 00009f	89 4e e6 		mov	WORD PTR [bp-26],cx	;in
	*** 0000a2	89 46 e8 		mov	WORD PTR [bp-24],ax
	*** 0000a5	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 0000a9	66 c1 e8 05 		shr	eax,5
	*** 0000ad	66 8b d0 		mov	edx,eax
	*** 0000b0	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 0000b4	0b 56 e8 		or	dx,WORD PTR [bp-24]
	*** 0000b7	89 46 ea 		mov	WORD PTR [bp-22],ax	;a
	*** 0000ba	89 56 ec 		mov	WORD PTR [bp-20],dx
	*** 0000bd	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 0000c1	66 c1 e0 07 		shl	eax,7
	*** 0000c5	66 33 46 f2 		xor	eax,DWORD PTR [bp-14]	;e
	*** 0000c9	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 0000cd	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0000d1	66 33 46 f6 		xor	eax,DWORD PTR [bp-10]	;b
	*** 0000d5	66 31 46 ea 		xor	DWORD PTR [bp-22],eax	;a
	*** 0000d9	8b 46 f2 		mov	ax,WORD PTR [bp-14]	;e
	*** 0000dc	c1 e0 09 		shl	ax,9
	*** 0000df	89 4e e2 		mov	WORD PTR [bp-30],cx
	*** 0000e2	89 46 e4 		mov	WORD PTR [bp-28],ax
	*** 0000e5	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0000e9	66 c1 e8 07 		shr	eax,7
	*** 0000ed	66 8b d0 		mov	edx,eax
	*** 0000f0	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 0000f4	0b 56 e4 		or	dx,WORD PTR [bp-28]
	*** 0000f7	8b 4e ea 		mov	cx,WORD PTR [bp-22]	;a
	*** 0000fa	8b 5e ec 		mov	bx,WORD PTR [bp-20]
	*** 0000fd	03 c9 			add	cx,cx
	*** 0000ff	13 db 			adc	bx,bx
	*** 000101	03 c9 			add	cx,cx
	*** 000103	13 db 			adc	bx,bx
	*** 000105	03 c9 			add	cx,cx
	*** 000107	13 db 			adc	bx,bx
	*** 000109	33 c1 			xor	ax,cx
	*** 00010b	33 d3 			xor	dx,bx
	*** 00010d	33 46 fa 		xor	ax,WORD PTR [bp-6]	;c
	*** 000110	33 56 fc 		xor	dx,WORD PTR [bp-4]
	*** 000113	89 46 ee 		mov	WORD PTR [bp-18],ax	;d
	*** 000116	89 56 f0 		mov	WORD PTR [bp-16],dx
	*** 000119	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;b
	*** 00011c	c1 e0 0f 		shl	ax,15	;000fH
	*** 00011f	2b c9 			sub	cx,cx
	*** 000121	89 4e de 		mov	WORD PTR [bp-34],cx
	*** 000124	89 46 e0 		mov	WORD PTR [bp-32],ax
	*** 000127	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;b
	*** 00012a	8b 56 f8 		mov	dx,WORD PTR [bp-8]
	*** 00012d	d1 ea 			shr	dx,1
	*** 00012f	d1 d8 			rcr	ax,1
	*** 000131	0b 56 e0 		or	dx,WORD PTR [bp-32]
	*** 000134	89 46 f6 		mov	WORD PTR [bp-10],ax	;b
	*** 000137	89 56 f8 		mov	WORD PTR [bp-8],dx
	*** 00013a	33 46 fa 		xor	ax,WORD PTR [bp-6]	;c
	*** 00013d	33 56 fc 		xor	dx,WORD PTR [bp-4]
	*** 000140	33 46 ea 		xor	ax,WORD PTR [bp-22]	;a
	*** 000143	33 56 ec 		xor	dx,WORD PTR [bp-20]
	*** 000146	89 46 f6 		mov	WORD PTR [bp-10],ax	;b
	*** 000149	89 56 f8 		mov	WORD PTR [bp-8],dx
	*** 00014c	8b 46 fa 		mov	ax,WORD PTR [bp-6]	;c
	*** 00014f	c1 e0 0d 		shl	ax,13	;000dH
	*** 000152	89 4e da 		mov	WORD PTR [bp-38],cx
	*** 000155	89 46 dc 		mov	WORD PTR [bp-36],ax
	*** 000158	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 00015c	66 c1 e8 03 		shr	eax,3
	*** 000160	66 8b d0 		mov	edx,eax
	*** 000163	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 000167	0b 56 dc 		or	dx,WORD PTR [bp-36]
	*** 00016a	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 00016d	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 000170	8b 46 ea 		mov	ax,WORD PTR [bp-22]	;a
	*** 000173	c1 e0 03 		shl	ax,3
	*** 000176	89 4e d6 		mov	WORD PTR [bp-42],cx
	*** 000179	89 46 d8 		mov	WORD PTR [bp-40],ax
	*** 00017c	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000180	66 c1 e8 0d 		shr	eax,13	;0000000dH
	*** 000184	66 8b d0 		mov	edx,eax
	*** 000187	66 c1 ea 10 		shr	edx,16	;00000010H
	*** 00018b	0b 56 d8 		or	dx,WORD PTR [bp-40]
	*** 00018e	89 46 ea 		mov	WORD PTR [bp-22],ax	;a
	*** 000191	89 56 ec 		mov	WORD PTR [bp-20],dx
					$L452:
	*** 000194	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 000198	66 89 46 f2 		mov	DWORD PTR [bp-14],eax	;e
	*** 00019c	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 0001a0	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 0001a4	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 0001a8	66 21 46 ea 		and	DWORD PTR [bp-22],eax	;a
	*** 0001ac	66 09 46 f2 		or	DWORD PTR [bp-14],eax	;e
	*** 0001b0	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 0001b4	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 0001b8	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 0001bc	66 09 46 f6 		or	DWORD PTR [bp-10],eax	;b
	*** 0001c0	8b 46 fa 		mov	ax,WORD PTR [bp-6]	;c
	*** 0001c3	8b 56 fc 		mov	dx,WORD PTR [bp-4]
	*** 0001c6	f7 d0 			not	ax
	*** 0001c8	f7 d2 			not	dx
	*** 0001ca	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 0001cd	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 0001d0	31 46 ea 		xor	WORD PTR [bp-22],ax	;a
	*** 0001d3	31 56 ec 		xor	WORD PTR [bp-20],dx
	*** 0001d6	23 46 f2 		and	ax,WORD PTR [bp-14]	;e
	*** 0001d9	23 56 f4 		and	dx,WORD PTR [bp-12]
	*** 0001dc	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 0001df	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 0001e2	31 46 f6 		xor	WORD PTR [bp-10],ax	;b
	*** 0001e5	31 56 f8 		xor	WORD PTR [bp-8],dx
	*** 0001e8	33 46 ea 		xor	ax,WORD PTR [bp-22]	;a
	*** 0001eb	33 56 ec 		xor	dx,WORD PTR [bp-20]
	*** 0001ee	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 0001f1	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 0001f4	09 46 ea 		or	WORD PTR [bp-22],ax	;a
	*** 0001f7	09 56 ec 		or	WORD PTR [bp-20],dx
	*** 0001fa	66 8b 4e f2 		mov	ecx,DWORD PTR [bp-14]	;e
	*** 0001fe	66 21 4e ee 		and	DWORD PTR [bp-18],ecx	;d
	*** 000202	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 000206	8b 5e f0 		mov	bx,WORD PTR [bp-16]
	*** 000209	66 31 4e ea 		xor	DWORD PTR [bp-22],ecx	;a
	*** 00020d	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 000211	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 000215	33 4e f2 		xor	cx,WORD PTR [bp-14]	;e
	*** 000218	33 5e f4 		xor	bx,WORD PTR [bp-12]
	*** 00021b	89 4e ee 		mov	WORD PTR [bp-18],cx	;d
	*** 00021e	89 5e f0 		mov	WORD PTR [bp-16],bx
	*** 000221	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000225	66 09 46 f2 		or	DWORD PTR [bp-14],eax	;e
	*** 000229	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 00022d	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 000231	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 000235	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000238	50 			push	ax
	*** 000239	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 00023c	51 			push	cx
	*** 00023d	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;a
	*** 000240	52 			push	dx
	*** 000241	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;d
	*** 000244	53 			push	bx
	*** 000245	6a 1c 			push	28	;001cH
	*** 000247	56 			push	si
	*** 000248	e8 00 00 		call	KXf
	*** 00024b	83 c4 0c 		add	sp,12	;000cH
;|*** start:
;|*** 		beforeI7(I7); KXf (k, 28, &d, &a, &b, &e);
;|*** 		ILTf (&d, &a, &b, &e); afterI7(I6); KXf (k, 24, &a, &b, &c, &e); 
; Line 927
	*** 00024e	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000251	50 			push	ax
	*** 000252	8d 4e f6 		lea	cx,WORD PTR [bp-10]	;b
	*** 000255	51 			push	cx
	*** 000256	8d 56 ea 		lea	dx,WORD PTR [bp-22]	;a
	*** 000259	52 			push	dx
	*** 00025a	8d 5e ee 		lea	bx,WORD PTR [bp-18]	;d
	*** 00025d	53 			push	bx
	*** 00025e	e8 00 00 		call	ILTf
	*** 000261	83 c4 08 		add	sp,8
	*** 000264	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 000268	8b 56 f8 		mov	dx,WORD PTR [bp-8]
	*** 00026b	66 89 46 fa 		mov	DWORD PTR [bp-6],eax	;c
	*** 00026f	66 8b 4e f2 		mov	ecx,DWORD PTR [bp-14]	;e
	*** 000273	66 31 4e fa 		xor	DWORD PTR [bp-6],ecx	;c
	*** 000277	31 46 ee 		xor	WORD PTR [bp-18],ax	;d
	*** 00027a	31 56 f0 		xor	WORD PTR [bp-16],dx
	*** 00027d	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 000281	66 21 46 f6 		and	DWORD PTR [bp-10],eax	;b
	*** 000285	8b 4e f6 		mov	cx,WORD PTR [bp-10]	;b
	*** 000288	8b 5e f8 		mov	bx,WORD PTR [bp-8]
	*** 00028b	f7 d1 			not	cx
	*** 00028d	f7 d3 			not	bx
	*** 00028f	89 4e f6 		mov	WORD PTR [bp-10],cx	;b
	*** 000292	89 5e f8 		mov	WORD PTR [bp-8],bx
	*** 000295	66 8b 4e ea 		mov	ecx,DWORD PTR [bp-22]	;a
	*** 000299	8b 5e ec 		mov	bx,WORD PTR [bp-20]
	*** 00029c	66 31 4e f2 		xor	DWORD PTR [bp-14],ecx	;e
	*** 0002a0	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0002a4	66 31 46 f6 		xor	DWORD PTR [bp-10],eax	;b
	*** 0002a8	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 0002ac	66 09 46 fa 		or	DWORD PTR [bp-6],eax	;c
	*** 0002b0	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0002b4	8b 56 f4 		mov	dx,WORD PTR [bp-12]
	*** 0002b7	66 33 46 fa 		xor	eax,DWORD PTR [bp-6]	;c
	*** 0002bb	33 56 fc 		xor	dx,WORD PTR [bp-4]
	*** 0002be	66 89 46 f2 		mov	DWORD PTR [bp-14],eax	;e
	*** 0002c2	31 4e fa 		xor	WORD PTR [bp-6],cx	;c
	*** 0002c5	31 5e fc 		xor	WORD PTR [bp-4],bx
	*** 0002c8	66 21 46 ea 		and	DWORD PTR [bp-22],eax	;a
	*** 0002cc	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 0002d0	8b 5e f0 		mov	bx,WORD PTR [bp-16]
	*** 0002d3	66 33 4e f6 		xor	ecx,DWORD PTR [bp-10]	;b
	*** 0002d7	33 5e f8 		xor	bx,WORD PTR [bp-8]
	*** 0002da	66 89 4e ee 		mov	DWORD PTR [bp-18],ecx	;d
	*** 0002de	66 31 4e ea 		xor	DWORD PTR [bp-22],ecx	;a
	*** 0002e2	33 c8 			xor	cx,ax
	*** 0002e4	33 da 			xor	bx,dx
	*** 0002e6	89 4e ee 		mov	WORD PTR [bp-18],cx	;d
	*** 0002e9	89 5e f0 		mov	WORD PTR [bp-16],bx
	*** 0002ec	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 0002f0	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 0002f4	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 0002f8	66 09 46 ee 		or	DWORD PTR [bp-18],eax	;d
	*** 0002fc	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 000300	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 000304	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000307	50 			push	ax
	*** 000308	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;c
	*** 00030b	51 			push	cx
	*** 00030c	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 00030f	52 			push	dx
	*** 000310	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;a
	*** 000313	53 			push	bx
	*** 000314	6a 18 			push	24	;0018H
	*** 000316	56 			push	si
	*** 000317	e8 00 00 		call	KXf
	*** 00031a	83 c4 0c 		add	sp,12	;000cH
;|*** 		ILTf (&a, &b, &c, &e); afterI6(I5); KXf (k, 20, &b, &d, &e, &c); 
; Line 928
	*** 00031d	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000320	50 			push	ax
	*** 000321	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;c
	*** 000324	51 			push	cx
	*** 000325	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 000328	52 			push	dx
	*** 000329	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;a
	*** 00032c	53 			push	bx
	*** 00032d	e8 00 00 		call	ILTf
	*** 000330	83 c4 08 		add	sp,8
	*** 000333	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000337	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
	*** 00033b	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 00033f	66 09 46 f2 		or	DWORD PTR [bp-14],eax	;e
	*** 000343	8b 4e f6 		mov	cx,WORD PTR [bp-10]	;b
	*** 000346	8b 5e f8 		mov	bx,WORD PTR [bp-8]
	*** 000349	f7 d1 			not	cx
	*** 00034b	f7 d3 			not	bx
	*** 00034d	89 4e f6 		mov	WORD PTR [bp-10],cx	;b
	*** 000350	89 5e f8 		mov	WORD PTR [bp-8],bx
	*** 000353	31 4e fa 		xor	WORD PTR [bp-6],cx	;c
	*** 000356	31 5e fc 		xor	WORD PTR [bp-4],bx
	*** 000359	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 00035d	8b 56 fc 		mov	dx,WORD PTR [bp-4]
	*** 000360	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 000364	0b c1 			or	ax,cx
	*** 000366	0b d3 			or	dx,bx
	*** 000368	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 00036b	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 00036e	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000372	66 21 46 fa 		and	DWORD PTR [bp-6],eax	;c
	*** 000376	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 00037a	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 00037e	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 000382	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 000386	66 0b 46 ea 		or	eax,DWORD PTR [bp-22]	;a
	*** 00038a	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
	*** 00038e	31 4e ee 		xor	WORD PTR [bp-18],cx	;d
	*** 000391	31 5e f0 		xor	WORD PTR [bp-16],bx
	*** 000394	23 4e fa 		and	cx,WORD PTR [bp-6]	;c
	*** 000397	23 5e fc 		and	bx,WORD PTR [bp-4]
	*** 00039a	89 4e f6 		mov	WORD PTR [bp-10],cx	;b
	*** 00039d	89 5e f8 		mov	WORD PTR [bp-8],bx
	*** 0003a0	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0003a4	66 31 46 f6 		xor	DWORD PTR [bp-10],eax	;b
	*** 0003a8	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 0003ac	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 0003b0	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 0003b4	66 21 46 f2 		and	DWORD PTR [bp-14],eax	;e
	*** 0003b8	66 33 46 f6 		xor	eax,DWORD PTR [bp-10]	;b
	*** 0003bc	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
	*** 0003c0	66 33 46 ea 		xor	eax,DWORD PTR [bp-22]	;a
	*** 0003c4	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 0003c8	f7 56 ee 		not	WORD PTR [bp-18]	;d
	*** 0003cb	f7 56 f0 		not	WORD PTR [bp-16]
	*** 0003ce	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;c
	*** 0003d1	50 			push	ax
	*** 0003d2	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 0003d5	51 			push	cx
	*** 0003d6	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;d
	*** 0003d9	52 			push	dx
	*** 0003da	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 0003dd	53 			push	bx
	*** 0003de	6a 14 			push	20	;0014H
	*** 0003e0	56 			push	si
	*** 0003e1	e8 00 00 		call	KXf
	*** 0003e4	83 c4 0c 		add	sp,12	;000cH
;|*** 		ILTf (&b, &d, &e, &c); afterI5(I4); KXf (k, 16, &b, &c, &e, &a); 
; Line 929
	*** 0003e7	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;c
	*** 0003ea	50 			push	ax
	*** 0003eb	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 0003ee	51 			push	cx
	*** 0003ef	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;d
	*** 0003f2	52 			push	dx
	*** 0003f3	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 0003f6	53 			push	bx
	*** 0003f7	e8 00 00 		call	ILTf
	*** 0003fa	83 c4 08 		add	sp,8
	*** 0003fd	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000401	66 89 46 ea 		mov	DWORD PTR [bp-22],eax	;a
	*** 000405	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 000409	8b 56 fc 		mov	dx,WORD PTR [bp-4]
	*** 00040c	66 21 46 f2 		and	DWORD PTR [bp-14],eax	;e
	*** 000410	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 000414	66 31 4e f2 		xor	DWORD PTR [bp-14],ecx	;e
	*** 000418	09 46 ee 		or	WORD PTR [bp-18],ax	;d
	*** 00041b	09 56 f0 		or	WORD PTR [bp-16],dx
	*** 00041e	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 000422	66 21 46 ee 		and	DWORD PTR [bp-18],eax	;d
	*** 000426	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 00042a	66 33 4e f2 		xor	ecx,DWORD PTR [bp-14]	;e
	*** 00042e	66 31 4e ea 		xor	DWORD PTR [bp-22],ecx	;a
	*** 000432	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 000436	66 23 4e f2 		and	ecx,DWORD PTR [bp-14]	;e
	*** 00043a	66 89 4e ee 		mov	DWORD PTR [bp-18],ecx	;d
	*** 00043e	66 8b 4e ea 		mov	ecx,DWORD PTR [bp-22]	;a
	*** 000442	8b 5e ec 		mov	bx,WORD PTR [bp-20]
	*** 000445	66 31 4e fa 		xor	DWORD PTR [bp-6],ecx	;c
	*** 000449	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 00044d	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 000451	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;b
	*** 000454	8b 56 f8 		mov	dx,WORD PTR [bp-8]
	*** 000457	f7 d0 			not	ax
	*** 000459	f7 d2 			not	dx
	*** 00045b	89 46 f6 		mov	WORD PTR [bp-10],ax	;b
	*** 00045e	89 56 f8 		mov	WORD PTR [bp-8],dx
	*** 000461	23 46 fa 		and	ax,WORD PTR [bp-6]	;c
	*** 000464	23 56 fc 		and	dx,WORD PTR [bp-4]
	*** 000467	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 00046a	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 00046d	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000471	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 000475	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 000479	8b 56 f8 		mov	dx,WORD PTR [bp-8]
	*** 00047c	66 33 46 ee 		xor	eax,DWORD PTR [bp-18]	;d
	*** 000480	33 56 f0 		xor	dx,WORD PTR [bp-16]
	*** 000483	66 89 46 f6 		mov	DWORD PTR [bp-10],eax	;b
	*** 000487	66 21 46 f2 		and	DWORD PTR [bp-14],eax	;e
	*** 00048b	31 4e f2 		xor	WORD PTR [bp-14],cx	;e
	*** 00048e	31 5e f4 		xor	WORD PTR [bp-12],bx
	*** 000491	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 000495	66 8b 4e fa 		mov	ecx,DWORD PTR [bp-6]	;c
	*** 000499	8b 5e fc 		mov	bx,WORD PTR [bp-4]
	*** 00049c	66 09 4e f2 		or	DWORD PTR [bp-14],ecx	;e
	*** 0004a0	33 c8 			xor	cx,ax
	*** 0004a2	33 da 			xor	bx,dx
	*** 0004a4	89 4e fa 		mov	WORD PTR [bp-6],cx	;c
	*** 0004a7	89 5e fc 		mov	WORD PTR [bp-4],bx
	*** 0004aa	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 0004ae	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 0004b2	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;a
	*** 0004b5	50 			push	ax
	*** 0004b6	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 0004b9	51 			push	cx
	*** 0004ba	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;c
	*** 0004bd	52 			push	dx
	*** 0004be	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 0004c1	53 			push	bx
	*** 0004c2	6a 10 			push	16	;0010H
	*** 0004c4	56 			push	si
	*** 0004c5	e8 00 00 		call	KXf
	*** 0004c8	83 c4 0c 		add	sp,12	;000cH
;|*** 		ILTf (&b, &c, &e, &a); afterI4(I3); KXf (k, 12, &a, &b, &e, &c);
; Line 930
	*** 0004cb	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;a
	*** 0004ce	50 			push	ax
	*** 0004cf	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 0004d2	51 			push	cx
	*** 0004d3	8d 56 fa 		lea	dx,WORD PTR [bp-6]	;c
	*** 0004d6	52 			push	dx
	*** 0004d7	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 0004da	53 			push	bx
	*** 0004db	e8 00 00 		call	ILTf
	*** 0004de	83 c4 08 		add	sp,8
	*** 0004e1	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0004e5	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
	*** 0004e9	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 0004ed	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 0004f1	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0004f5	8b 56 f4 		mov	dx,WORD PTR [bp-12]
	*** 0004f8	66 21 46 fa 		and	DWORD PTR [bp-6],eax	;c
	*** 0004fc	66 8b 4e f6 		mov	ecx,DWORD PTR [bp-10]	;b
	*** 000500	66 31 4e fa 		xor	DWORD PTR [bp-6],ecx	;c
	*** 000504	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 000508	66 21 4e f6 		and	DWORD PTR [bp-10],ecx	;b
	*** 00050c	66 8b 4e ea 		mov	ecx,DWORD PTR [bp-22]	;a
	*** 000510	66 31 4e ee 		xor	DWORD PTR [bp-18],ecx	;d
	*** 000514	66 8b 4e fa 		mov	ecx,DWORD PTR [bp-6]	;c
	*** 000518	8b 5e fc 		mov	bx,WORD PTR [bp-4]
	*** 00051b	66 09 4e ea 		or	DWORD PTR [bp-22],ecx	;a
	*** 00051f	31 46 ea 		xor	WORD PTR [bp-22],ax	;a
	*** 000522	31 56 ec 		xor	WORD PTR [bp-20],dx
	*** 000525	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 000529	66 31 46 f6 		xor	DWORD PTR [bp-10],eax	;b
	*** 00052d	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000531	66 33 46 f6 		xor	eax,DWORD PTR [bp-10]	;b
	*** 000535	66 89 46 f2 		mov	DWORD PTR [bp-14],eax	;e
	*** 000539	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 00053d	66 0b 46 ea 		or	eax,DWORD PTR [bp-22]	;a
	*** 000541	66 89 46 f6 		mov	DWORD PTR [bp-10],eax	;b
	*** 000545	31 4e f6 		xor	WORD PTR [bp-10],cx	;b
	*** 000548	31 5e f8 		xor	WORD PTR [bp-8],bx
	*** 00054b	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 00054f	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 000553	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000557	66 09 46 fa 		or	DWORD PTR [bp-6],eax	;c
	*** 00055b	66 21 46 f2 		and	DWORD PTR [bp-14],eax	;e
	*** 00055f	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000563	8b 56 f4 		mov	dx,WORD PTR [bp-12]
	*** 000566	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 00056a	66 8b 4e f6 		mov	ecx,DWORD PTR [bp-10]	;b
	*** 00056e	66 31 4e ee 		xor	DWORD PTR [bp-18],ecx	;d
	*** 000572	33 46 ee 		xor	ax,WORD PTR [bp-18]	;d
	*** 000575	33 56 f0 		xor	dx,WORD PTR [bp-16]
	*** 000578	89 46 f2 		mov	WORD PTR [bp-14],ax	;e
	*** 00057b	89 56 f4 		mov	WORD PTR [bp-12],dx
	*** 00057e	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;c
	*** 000581	50 			push	ax
	*** 000582	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 000585	51 			push	cx
	*** 000586	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 000589	52 			push	dx
	*** 00058a	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;a
	*** 00058d	53 			push	bx
	*** 00058e	6a 0c 			push	12	;000cH
	*** 000590	56 			push	si
	*** 000591	e8 00 00 		call	KXf
	*** 000594	83 c4 0c 		add	sp,12	;000cH
;|*** 		ILTf (&a, &b, &e, &c); afterI3(I2); KXf (k, 8,  &b, &d, &e, &c);
; Line 931
	*** 000597	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;c
	*** 00059a	50 			push	ax
	*** 00059b	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 00059e	51 			push	cx
	*** 00059f	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 0005a2	52 			push	dx
	*** 0005a3	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;a
	*** 0005a6	53 			push	bx
	*** 0005a7	e8 00 00 		call	ILTf
	*** 0005aa	83 c4 08 		add	sp,8
	*** 0005ad	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 0005b1	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 0005b5	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 0005b9	8b 56 ec 		mov	dx,WORD PTR [bp-20]
	*** 0005bc	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 0005c0	66 8b 4e fa 		mov	ecx,DWORD PTR [bp-6]	;c
	*** 0005c4	66 89 4e ee 		mov	DWORD PTR [bp-18],ecx	;d
	*** 0005c8	66 23 4e f2 		and	ecx,DWORD PTR [bp-14]	;e
	*** 0005cc	66 89 4e fa 		mov	DWORD PTR [bp-6],ecx	;c
	*** 0005d0	66 8b 4e f6 		mov	ecx,DWORD PTR [bp-10]	;b
	*** 0005d4	66 31 4e fa 		xor	DWORD PTR [bp-6],ecx	;c
	*** 0005d8	66 8b 4e f2 		mov	ecx,DWORD PTR [bp-14]	;e
	*** 0005dc	66 09 4e f6 		or	DWORD PTR [bp-10],ecx	;b
	*** 0005e0	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 0005e4	66 31 4e f6 		xor	DWORD PTR [bp-10],ecx	;b
	*** 0005e8	23 46 fa 		and	ax,WORD PTR [bp-6]	;c
	*** 0005eb	23 56 fc 		and	dx,WORD PTR [bp-4]
	*** 0005ee	21 46 ee 		and	WORD PTR [bp-18],ax	;d
	*** 0005f1	21 56 f0 		and	WORD PTR [bp-16],dx
	*** 0005f4	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 0005f8	8b 56 fc 		mov	dx,WORD PTR [bp-4]
	*** 0005fb	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 0005ff	66 8b 4e f2 		mov	ecx,DWORD PTR [bp-14]	;e
	*** 000603	66 31 4e ee 		xor	DWORD PTR [bp-18],ecx	;d
	*** 000607	66 23 4e f6 		and	ecx,DWORD PTR [bp-10]	;b
	*** 00060b	66 89 4e f2 		mov	DWORD PTR [bp-14],ecx	;e
	*** 00060f	66 8b 4e ea 		mov	ecx,DWORD PTR [bp-22]	;a
	*** 000613	66 09 4e f2 		or	DWORD PTR [bp-14],ecx	;e
	*** 000617	f7 d0 			not	ax
	*** 000619	f7 d2 			not	dx
	*** 00061b	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 00061e	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 000621	31 46 f2 		xor	WORD PTR [bp-14],ax	;e
	*** 000624	31 56 f4 		xor	WORD PTR [bp-12],dx
	*** 000627	31 46 ea 		xor	WORD PTR [bp-22],ax	;a
	*** 00062a	31 56 ec 		xor	WORD PTR [bp-20],dx
	*** 00062d	33 46 ee 		xor	ax,WORD PTR [bp-18]	;d
	*** 000630	33 56 f0 		xor	dx,WORD PTR [bp-16]
	*** 000633	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 000636	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 000639	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 00063d	66 21 46 ea 		and	DWORD PTR [bp-22],eax	;a
	*** 000641	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000645	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 000649	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;c
	*** 00064c	50 			push	ax
	*** 00064d	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 000650	51 			push	cx
	*** 000651	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;d
	*** 000654	52 			push	dx
	*** 000655	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 000658	53 			push	bx
	*** 000659	6a 08 			push	8
	*** 00065b	56 			push	si
	*** 00065c	e8 00 00 		call	KXf
	*** 00065f	83 c4 0c 		add	sp,12	;000cH
;|*** 		ILTf (&b, &d, &e, &c); afterI2(I1); KXf (k, 4,  &a, &b, &c, &e);
; Line 932
	*** 000662	8d 46 fa 		lea	ax,WORD PTR [bp-6]	;c
	*** 000665	50 			push	ax
	*** 000666	8d 4e f2 		lea	cx,WORD PTR [bp-14]	;e
	*** 000669	51 			push	cx
	*** 00066a	8d 56 ee 		lea	dx,WORD PTR [bp-18]	;d
	*** 00066d	52 			push	dx
	*** 00066e	8d 5e f6 		lea	bx,WORD PTR [bp-10]	;b
	*** 000671	53 			push	bx
	*** 000672	e8 00 00 		call	ILTf
	*** 000675	83 c4 08 		add	sp,8
	*** 000678	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 00067c	66 89 46 ea 		mov	DWORD PTR [bp-22],eax	;a
	*** 000680	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 000684	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 000688	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 00068c	8b 56 f0 		mov	dx,WORD PTR [bp-16]
	*** 00068f	66 21 46 fa 		and	DWORD PTR [bp-6],eax	;c
	*** 000693	66 8b 4e f2 		mov	ecx,DWORD PTR [bp-14]	;e
	*** 000697	66 31 4e ea 		xor	DWORD PTR [bp-22],ecx	;a
	*** 00069b	66 8b 4e f6 		mov	ecx,DWORD PTR [bp-10]	;b
	*** 00069f	66 31 4e fa 		xor	DWORD PTR [bp-6],ecx	;c
	*** 0006a3	09 46 f6 		or	WORD PTR [bp-10],ax	;b
	*** 0006a6	09 56 f8 		or	WORD PTR [bp-8],dx
	*** 0006a9	66 8b 4e ea 		mov	ecx,DWORD PTR [bp-22]	;a
	*** 0006ad	8b 5e ec 		mov	bx,WORD PTR [bp-20]
	*** 0006b0	66 31 4e f6 		xor	DWORD PTR [bp-10],ecx	;b
	*** 0006b4	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 0006b8	66 31 46 f2 		xor	DWORD PTR [bp-14],eax	;e
	*** 0006bc	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0006c0	66 09 46 f6 		or	DWORD PTR [bp-10],eax	;b
	*** 0006c4	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 0006c8	66 33 46 fa 		xor	eax,DWORD PTR [bp-6]	;c
	*** 0006cc	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
	*** 0006d0	66 31 46 f6 		xor	DWORD PTR [bp-10],eax	;b
	*** 0006d4	66 0b 46 fa 		or	eax,DWORD PTR [bp-6]	;c
	*** 0006d8	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
	*** 0006dc	f7 d1 			not	cx
	*** 0006de	f7 d3 			not	bx
	*** 0006e0	89 4e ea 		mov	WORD PTR [bp-22],cx	;a
	*** 0006e3	89 5e ec 		mov	WORD PTR [bp-20],bx
	*** 0006e6	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 0006ea	8b 56 f8 		mov	dx,WORD PTR [bp-8]
	*** 0006ed	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 0006f1	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 0006f5	8b 5e f0 		mov	bx,WORD PTR [bp-16]
	*** 0006f8	66 31 4e ea 		xor	DWORD PTR [bp-22],ecx	;a
	*** 0006fc	0b c8 			or	cx,ax
	*** 0006fe	0b da 			or	bx,dx
	*** 000700	89 4e ee 		mov	WORD PTR [bp-18],cx	;d
	*** 000703	89 5e f0 		mov	WORD PTR [bp-16],bx
	*** 000706	31 46 ee 		xor	WORD PTR [bp-18],ax	;d
	*** 000709	31 56 f0 		xor	WORD PTR [bp-16],dx
	*** 00070c	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000710	66 09 46 ee 		or	DWORD PTR [bp-18],eax	;d
	*** 000714	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 000718	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 00071c	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 00071f	50 			push	ax
	*** 000720	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;c
	*** 000723	51 			push	cx
	*** 000724	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 000727	52 			push	dx
	*** 000728	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;a
	*** 00072b	53 			push	bx
	*** 00072c	6a 04 			push	4
	*** 00072e	56 			push	si
	*** 00072f	e8 00 00 		call	KXf
	*** 000732	83 c4 0c 		add	sp,12	;000cH
;|*** 		ILTf (&a, &b, &c, &e); afterI1(I0); KXf (k, 0,  &a, &d, &b, &e);
; Line 933
	*** 000735	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 000738	50 			push	ax
	*** 000739	8d 4e fa 		lea	cx,WORD PTR [bp-6]	;c
	*** 00073c	51 			push	cx
	*** 00073d	8d 56 f6 		lea	dx,WORD PTR [bp-10]	;b
	*** 000740	52 			push	dx
	*** 000741	8d 5e ea 		lea	bx,WORD PTR [bp-22]	;a
	*** 000744	53 			push	bx
	*** 000745	e8 00 00 		call	ILTf
	*** 000748	83 c4 08 		add	sp,8
	*** 00074b	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 00074f	66 89 46 ee 		mov	DWORD PTR [bp-18],eax	;d
	*** 000753	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000757	66 09 46 f6 		or	DWORD PTR [bp-10],eax	;b
	*** 00075b	8b 46 fa 		mov	ax,WORD PTR [bp-6]	;c
	*** 00075e	8b 56 fc 		mov	dx,WORD PTR [bp-4]
	*** 000761	f7 d0 			not	ax
	*** 000763	f7 d2 			not	dx
	*** 000765	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 000768	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 00076b	31 46 f6 		xor	WORD PTR [bp-10],ax	;b
	*** 00076e	31 56 f8 		xor	WORD PTR [bp-8],dx
	*** 000771	8b 4e ee 		mov	cx,WORD PTR [bp-18]	;d
	*** 000774	8b 5e f0 		mov	bx,WORD PTR [bp-16]
	*** 000777	f7 d1 			not	cx
	*** 000779	f7 d3 			not	bx
	*** 00077b	89 4e ee 		mov	WORD PTR [bp-18],cx	;d
	*** 00077e	89 5e f0 		mov	WORD PTR [bp-16],bx
	*** 000781	0b c1 			or	ax,cx
	*** 000783	0b d3 			or	dx,bx
	*** 000785	89 46 fa 		mov	WORD PTR [bp-6],ax	;c
	*** 000788	89 56 fc 		mov	WORD PTR [bp-4],dx
	*** 00078b	31 4e ea 		xor	WORD PTR [bp-22],cx	;a
	*** 00078e	31 5e ec 		xor	WORD PTR [bp-20],bx
	*** 000791	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 000795	8b 56 ec 		mov	dx,WORD PTR [bp-20]
	*** 000798	66 31 46 fa 		xor	DWORD PTR [bp-6],eax	;c
	*** 00079c	66 23 46 f2 		and	eax,DWORD PTR [bp-14]	;e
	*** 0007a0	23 56 f4 		and	dx,WORD PTR [bp-12]
	*** 0007a3	66 89 46 ea 		mov	DWORD PTR [bp-22],eax	;a
	*** 0007a7	33 c8 			xor	cx,ax
	*** 0007a9	33 da 			xor	bx,dx
	*** 0007ab	89 4e ee 		mov	WORD PTR [bp-18],cx	;d
	*** 0007ae	89 5e f0 		mov	WORD PTR [bp-16],bx
	*** 0007b1	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0007b5	66 31 46 f6 		xor	DWORD PTR [bp-10],eax	;b
	*** 0007b9	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 0007bd	8b 56 f8 		mov	dx,WORD PTR [bp-8]
	*** 0007c0	66 09 46 ea 		or	DWORD PTR [bp-22],eax	;a
	*** 0007c4	66 8b 4e fa 		mov	ecx,DWORD PTR [bp-6]	;c
	*** 0007c8	66 31 4e ea 		xor	DWORD PTR [bp-22],ecx	;a
	*** 0007cc	66 8b 4e ee 		mov	ecx,DWORD PTR [bp-18]	;d
	*** 0007d0	66 31 4e f2 		xor	DWORD PTR [bp-14],ecx	;e
	*** 0007d4	31 46 fa 		xor	WORD PTR [bp-6],ax	;c
	*** 0007d7	31 56 fc 		xor	WORD PTR [bp-4],dx
	*** 0007da	66 8b 4e ea 		mov	ecx,DWORD PTR [bp-22]	;a
	*** 0007de	66 31 4e f2 		xor	DWORD PTR [bp-14],ecx	;e
	*** 0007e2	31 46 f2 		xor	WORD PTR [bp-14],ax	;e
	*** 0007e5	31 56 f4 		xor	WORD PTR [bp-12],dx
	*** 0007e8	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 0007ec	66 21 46 fa 		and	DWORD PTR [bp-6],eax	;c
	*** 0007f0	66 8b 46 fa 		mov	eax,DWORD PTR [bp-6]	;c
	*** 0007f4	66 31 46 ee 		xor	DWORD PTR [bp-18],eax	;d
	*** 0007f8	8d 46 f2 		lea	ax,WORD PTR [bp-14]	;e
	*** 0007fb	50 			push	ax
	*** 0007fc	8d 46 f6 		lea	ax,WORD PTR [bp-10]	;b
	*** 0007ff	50 			push	ax
	*** 000800	8d 46 ee 		lea	ax,WORD PTR [bp-18]	;d
	*** 000803	50 			push	ax
	*** 000804	8d 46 ea 		lea	ax,WORD PTR [bp-22]	;a
	*** 000807	50 			push	ax
	*** 000808	6a 00 			push	0
	*** 00080a	56 			push	si
	*** 00080b	e8 00 00 		call	KXf
	*** 00080e	83 c4 0c 		add	sp,12	;000cH
;|*** 	}
;|*** 	while (--i != 0);
; Line 935
	*** 000811	4f 			dec	di
	*** 000812	0f 85 40 f8 		jne	$start424
	*** 000816	8b 5e fe 		mov	bx,WORD PTR [bp-2]	;out
;|*** 	
;|***     out[0] = LE32(a);
; Line 937
	*** 000819	66 8b 46 ea 		mov	eax,DWORD PTR [bp-22]	;a
	*** 00081d	66 89 07 		mov	DWORD PTR [bx],eax
;|*** 	out[1] = LE32(d);
; Line 938
	*** 000820	66 8b 46 ee 		mov	eax,DWORD PTR [bp-18]	;d
	*** 000824	66 89 47 04 		mov	DWORD PTR [bx+4],eax
;|*** 	out[2] = LE32(b);
; Line 939
	*** 000828	66 8b 46 f6 		mov	eax,DWORD PTR [bp-10]	;b
	*** 00082c	66 89 47 08 		mov	DWORD PTR [bx+8],eax
;|*** 	out[3] = LE32(e);
; Line 940
	*** 000830	66 8b 46 f2 		mov	eax,DWORD PTR [bp-14]	;e
	*** 000834	66 89 47 0c 		mov	DWORD PTR [bx+12],eax
;|*** }
; Line 941
	*** 000838	5e 			pop	si
	*** 000839	5f 			pop	di
	*** 00083a	c9 			leave	
	*** 00083b	c3 			ret	

_serpent_decrypt	ENDP
_TEXT	ENDS
END
;|*** 
;|*** #endif // TC_MINIMIZE_CODE_SIZE && !TC_WINDOWS_BOOT_SERPENT
