; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

include listing.inc

INCLUDELIB OLDNAMES

PADDING	DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
; Function compile flags: /Odtp
; File c:\users\public\desktop\projects\ciphershed\src\crypto\rmd160.c
;	COMDAT rotlFixed
_TEXT	SEGMENT
x$ = 8
y$ = 16
rotlFixed PROC						; COMDAT

; 165  : {

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx

; 166  : 	return (word32)((x<<y) | (x>>(sizeof(word32)*8-y)));

  00008	8b 44 24 10	 mov	 eax, DWORD PTR y$[rsp]
  0000c	0f b6 c8	 movzx	 ecx, al
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR x$[rsp]
  00013	d3 e2		 shl	 edx, cl
  00015	8b 4c 24 10	 mov	 ecx, DWORD PTR y$[rsp]
  00019	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  0001e	48 2b c1	 sub	 rax, rcx
  00021	0f b6 c8	 movzx	 ecx, al
  00024	8b 44 24 08	 mov	 eax, DWORD PTR x$[rsp]
  00028	d3 e8		 shr	 eax, cl
  0002a	8b c8		 mov	 ecx, eax
  0002c	8b c2		 mov	 eax, edx
  0002e	0b c1		 or	 eax, ecx

; 167  : }

  00030	c3		 ret	 0
rotlFixed ENDP
_TEXT	ENDS
PUBLIC	RMD160Init
; Function compile flags: /Odtp
;	COMDAT RMD160Init
_TEXT	SEGMENT
ctx$ = 8
RMD160Init PROC						; COMDAT

; 54   : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 55   : 	ctx->count = 0;

  00005	48 8b 44 24 08	 mov	 rax, QWORD PTR ctx$[rsp]
  0000a	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 56   : 	ctx->state[0] = 0x67452301;

  00012	48 8b 44 24 08	 mov	 rax, QWORD PTR ctx$[rsp]
  00017	c7 00 01 23 45
	67		 mov	 DWORD PTR [rax], 1732584193 ; 67452301H

; 57   : 	ctx->state[1] = 0xefcdab89;

  0001d	48 8b 44 24 08	 mov	 rax, QWORD PTR ctx$[rsp]
  00022	c7 40 04 89 ab
	cd ef		 mov	 DWORD PTR [rax+4], -271733879 ; efcdab89H

; 58   : 	ctx->state[2] = 0x98badcfe;

  00029	48 8b 44 24 08	 mov	 rax, QWORD PTR ctx$[rsp]
  0002e	c7 40 08 fe dc
	ba 98		 mov	 DWORD PTR [rax+8], -1732584194 ; 98badcfeH

; 59   : 	ctx->state[3] = 0x10325476;

  00035	48 8b 44 24 08	 mov	 rax, QWORD PTR ctx$[rsp]
  0003a	c7 40 0c 76 54
	32 10		 mov	 DWORD PTR [rax+12], 271733878 ; 10325476H

; 60   : 	ctx->state[4] = 0xc3d2e1f0;

  00041	48 8b 44 24 08	 mov	 rax, QWORD PTR ctx$[rsp]
  00046	c7 40 10 f0 e1
	d2 c3		 mov	 DWORD PTR [rax+16], -1009589776 ; c3d2e1f0H

; 61   : 	PADDING[0] = 0x80;

  0004d	c6 05 00 00 00
	00 80		 mov	 BYTE PTR PADDING, 128	; 00000080H

; 62   : }

  00054	c3		 ret	 0
RMD160Init ENDP
PUBLIC	RMD160Transform
;	COMDAT pdata
pdata	SEGMENT
$pdata$RMD160Transform DD imagerel $LN3
	DD	imagerel $LN3+13332
	DD	imagerel $unwind$RMD160Transform
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$RMD160Transform DD 010e01H
	DD	0c20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT RMD160Transform
_TEXT	SEGMENT
e2$ = 32
a1$ = 36
b2$ = 40
c1$ = 44
d2$ = 48
c2$ = 52
e1$ = 56
X$ = 64
a2$ = 72
d1$ = 76
b1$ = 80
digest$ = 112
data$ = 120
RMD160Transform PROC					; COMDAT

; 175  : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 176  : #if BYTE_ORDER == LITTLE_ENDIAN
; 177  : 	const word32 *X = data;

  0000e	48 8b 44 24 78	 mov	 rax, QWORD PTR data$[rsp]
  00013	48 89 44 24 40	 mov	 QWORD PTR X$[rsp], rax

; 178  : #else
; 179  : 	word32 X[16];
; 180  : 	int i;
; 181  : #endif
; 182  : 
; 183  : 	word32 a1, b1, c1, d1, e1, a2, b2, c2, d2, e2;
; 184  : 	a1 = a2 = digest[0];

  00018	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  0001d	8b 00		 mov	 eax, DWORD PTR [rax]
  0001f	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  00023	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  00027	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 185  : 	b1 = b2 = digest[1];

  0002b	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  00030	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  00033	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  00037	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  0003b	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 186  : 	c1 = c2 = digest[2];

  0003f	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  00044	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00047	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  0004b	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0004f	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 187  : 	d1 = d2 = digest[3];

  00053	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  00058	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  0005b	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  0005f	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  00063	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 188  : 	e1 = e2 = digest[4];

  00067	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  0006c	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0006f	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  00073	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  00077	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 189  : 
; 190  : #if BYTE_ORDER == BIG_ENDIAN
; 191  : 	for (i = 0; i < 16; i++)
; 192  : 	{
; 193  : 		X[i] = LE32 (data[i]);
; 194  : 	}
; 195  : #endif
; 196  : 
; 197  : 	Subround(F, a1, b1, c1, d1, e1, X[ 0], 11, k0);

  0007b	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0007f	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00083	33 c8		 xor	 ecx, eax
  00085	33 4c 24 4c	 xor	 ecx, DWORD PTR d1$[rsp]
  00089	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0008e	03 08		 add	 ecx, DWORD PTR [rax]
  00090	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00094	03 c1		 add	 eax, ecx
  00096	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  0009a	ba 0b 00 00 00	 mov	 edx, 11
  0009f	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  000a3	e8 00 00 00 00	 call	 rotlFixed
  000a8	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  000ac	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  000b0	ba 0a 00 00 00	 mov	 edx, 10
  000b5	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  000b9	e8 00 00 00 00	 call	 rotlFixed
  000be	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 198  : 	Subround(F, e1, a1, b1, c1, d1, X[ 1], 14, k0);

  000c2	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  000c6	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  000ca	33 c8		 xor	 ecx, eax
  000cc	33 4c 24 2c	 xor	 ecx, DWORD PTR c1$[rsp]
  000d0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  000d5	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  000d8	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  000dc	03 c1		 add	 eax, ecx
  000de	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  000e2	ba 0e 00 00 00	 mov	 edx, 14
  000e7	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  000eb	e8 00 00 00 00	 call	 rotlFixed
  000f0	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  000f4	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  000f8	ba 0a 00 00 00	 mov	 edx, 10
  000fd	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00101	e8 00 00 00 00	 call	 rotlFixed
  00106	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 199  : 	Subround(F, d1, e1, a1, b1, c1, X[ 2], 15, k0);

  0010a	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  0010e	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00112	33 c8		 xor	 ecx, eax
  00114	33 4c 24 50	 xor	 ecx, DWORD PTR b1$[rsp]
  00118	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0011d	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  00120	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00124	03 c1		 add	 eax, ecx
  00126	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  0012a	ba 0f 00 00 00	 mov	 edx, 15
  0012f	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00133	e8 00 00 00 00	 call	 rotlFixed
  00138	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  0013c	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00140	ba 0a 00 00 00	 mov	 edx, 10
  00145	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00149	e8 00 00 00 00	 call	 rotlFixed
  0014e	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 200  : 	Subround(F, c1, d1, e1, a1, b1, X[ 3], 12, k0);

  00152	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00156	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0015a	33 c8		 xor	 ecx, eax
  0015c	33 4c 24 24	 xor	 ecx, DWORD PTR a1$[rsp]
  00160	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00165	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  00168	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0016c	03 c1		 add	 eax, ecx
  0016e	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00172	ba 0c 00 00 00	 mov	 edx, 12
  00177	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0017b	e8 00 00 00 00	 call	 rotlFixed
  00180	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  00184	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00188	ba 0a 00 00 00	 mov	 edx, 10
  0018d	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00191	e8 00 00 00 00	 call	 rotlFixed
  00196	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 201  : 	Subround(F, b1, c1, d1, e1, a1, X[ 4],  5, k0);

  0019a	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0019e	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  001a2	33 c8		 xor	 ecx, eax
  001a4	33 4c 24 38	 xor	 ecx, DWORD PTR e1$[rsp]
  001a8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  001ad	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  001b0	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  001b4	03 c1		 add	 eax, ecx
  001b6	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  001ba	ba 05 00 00 00	 mov	 edx, 5
  001bf	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  001c3	e8 00 00 00 00	 call	 rotlFixed
  001c8	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  001cc	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  001d0	ba 0a 00 00 00	 mov	 edx, 10
  001d5	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  001d9	e8 00 00 00 00	 call	 rotlFixed
  001de	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 202  : 	Subround(F, a1, b1, c1, d1, e1, X[ 5],  8, k0);

  001e2	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  001e6	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  001ea	33 c8		 xor	 ecx, eax
  001ec	33 4c 24 4c	 xor	 ecx, DWORD PTR d1$[rsp]
  001f0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  001f5	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  001f8	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  001fc	03 c1		 add	 eax, ecx
  001fe	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00202	ba 08 00 00 00	 mov	 edx, 8
  00207	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  0020b	e8 00 00 00 00	 call	 rotlFixed
  00210	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  00214	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00218	ba 0a 00 00 00	 mov	 edx, 10
  0021d	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00221	e8 00 00 00 00	 call	 rotlFixed
  00226	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 203  : 	Subround(F, e1, a1, b1, c1, d1, X[ 6],  7, k0);

  0022a	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0022e	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00232	33 c8		 xor	 ecx, eax
  00234	33 4c 24 2c	 xor	 ecx, DWORD PTR c1$[rsp]
  00238	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0023d	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  00240	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00244	03 c1		 add	 eax, ecx
  00246	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  0024a	ba 07 00 00 00	 mov	 edx, 7
  0024f	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00253	e8 00 00 00 00	 call	 rotlFixed
  00258	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  0025c	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00260	ba 0a 00 00 00	 mov	 edx, 10
  00265	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00269	e8 00 00 00 00	 call	 rotlFixed
  0026e	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 204  : 	Subround(F, d1, e1, a1, b1, c1, X[ 7],  9, k0);

  00272	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00276	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  0027a	33 c8		 xor	 ecx, eax
  0027c	33 4c 24 50	 xor	 ecx, DWORD PTR b1$[rsp]
  00280	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00285	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  00288	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0028c	03 c1		 add	 eax, ecx
  0028e	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00292	ba 09 00 00 00	 mov	 edx, 9
  00297	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0029b	e8 00 00 00 00	 call	 rotlFixed
  002a0	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  002a4	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  002a8	ba 0a 00 00 00	 mov	 edx, 10
  002ad	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  002b1	e8 00 00 00 00	 call	 rotlFixed
  002b6	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 205  : 	Subround(F, c1, d1, e1, a1, b1, X[ 8], 11, k0);

  002ba	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  002be	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  002c2	33 c8		 xor	 ecx, eax
  002c4	33 4c 24 24	 xor	 ecx, DWORD PTR a1$[rsp]
  002c8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  002cd	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  002d0	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  002d4	03 c1		 add	 eax, ecx
  002d6	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  002da	ba 0b 00 00 00	 mov	 edx, 11
  002df	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  002e3	e8 00 00 00 00	 call	 rotlFixed
  002e8	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  002ec	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  002f0	ba 0a 00 00 00	 mov	 edx, 10
  002f5	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  002f9	e8 00 00 00 00	 call	 rotlFixed
  002fe	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 206  : 	Subround(F, b1, c1, d1, e1, a1, X[ 9], 13, k0);

  00302	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00306	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0030a	33 c8		 xor	 ecx, eax
  0030c	33 4c 24 38	 xor	 ecx, DWORD PTR e1$[rsp]
  00310	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00315	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  00318	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0031c	03 c1		 add	 eax, ecx
  0031e	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00322	ba 0d 00 00 00	 mov	 edx, 13
  00327	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  0032b	e8 00 00 00 00	 call	 rotlFixed
  00330	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  00334	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00338	ba 0a 00 00 00	 mov	 edx, 10
  0033d	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00341	e8 00 00 00 00	 call	 rotlFixed
  00346	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 207  : 	Subround(F, a1, b1, c1, d1, e1, X[10], 14, k0);

  0034a	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0034e	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00352	33 c8		 xor	 ecx, eax
  00354	33 4c 24 4c	 xor	 ecx, DWORD PTR d1$[rsp]
  00358	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0035d	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  00360	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00364	03 c1		 add	 eax, ecx
  00366	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  0036a	ba 0e 00 00 00	 mov	 edx, 14
  0036f	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00373	e8 00 00 00 00	 call	 rotlFixed
  00378	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  0037c	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00380	ba 0a 00 00 00	 mov	 edx, 10
  00385	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00389	e8 00 00 00 00	 call	 rotlFixed
  0038e	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 208  : 	Subround(F, e1, a1, b1, c1, d1, X[11], 15, k0);

  00392	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00396	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  0039a	33 c8		 xor	 ecx, eax
  0039c	33 4c 24 2c	 xor	 ecx, DWORD PTR c1$[rsp]
  003a0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  003a5	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  003a8	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  003ac	03 c1		 add	 eax, ecx
  003ae	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  003b2	ba 0f 00 00 00	 mov	 edx, 15
  003b7	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  003bb	e8 00 00 00 00	 call	 rotlFixed
  003c0	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  003c4	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  003c8	ba 0a 00 00 00	 mov	 edx, 10
  003cd	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  003d1	e8 00 00 00 00	 call	 rotlFixed
  003d6	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 209  : 	Subround(F, d1, e1, a1, b1, c1, X[12],  6, k0);

  003da	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  003de	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  003e2	33 c8		 xor	 ecx, eax
  003e4	33 4c 24 50	 xor	 ecx, DWORD PTR b1$[rsp]
  003e8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  003ed	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  003f0	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  003f4	03 c1		 add	 eax, ecx
  003f6	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  003fa	ba 06 00 00 00	 mov	 edx, 6
  003ff	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00403	e8 00 00 00 00	 call	 rotlFixed
  00408	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  0040c	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00410	ba 0a 00 00 00	 mov	 edx, 10
  00415	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00419	e8 00 00 00 00	 call	 rotlFixed
  0041e	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 210  : 	Subround(F, c1, d1, e1, a1, b1, X[13],  7, k0);

  00422	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00426	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0042a	33 c8		 xor	 ecx, eax
  0042c	33 4c 24 24	 xor	 ecx, DWORD PTR a1$[rsp]
  00430	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00435	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  00438	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0043c	03 c1		 add	 eax, ecx
  0043e	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00442	ba 07 00 00 00	 mov	 edx, 7
  00447	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0044b	e8 00 00 00 00	 call	 rotlFixed
  00450	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  00454	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00458	ba 0a 00 00 00	 mov	 edx, 10
  0045d	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00461	e8 00 00 00 00	 call	 rotlFixed
  00466	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 211  : 	Subround(F, b1, c1, d1, e1, a1, X[14],  9, k0);

  0046a	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0046e	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00472	33 c8		 xor	 ecx, eax
  00474	33 4c 24 38	 xor	 ecx, DWORD PTR e1$[rsp]
  00478	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0047d	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  00480	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00484	03 c1		 add	 eax, ecx
  00486	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  0048a	ba 09 00 00 00	 mov	 edx, 9
  0048f	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00493	e8 00 00 00 00	 call	 rotlFixed
  00498	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  0049c	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  004a0	ba 0a 00 00 00	 mov	 edx, 10
  004a5	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  004a9	e8 00 00 00 00	 call	 rotlFixed
  004ae	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 212  : 	Subround(F, a1, b1, c1, d1, e1, X[15],  8, k0);

  004b2	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  004b6	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  004ba	33 c8		 xor	 ecx, eax
  004bc	33 4c 24 4c	 xor	 ecx, DWORD PTR d1$[rsp]
  004c0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  004c5	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  004c8	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  004cc	03 c1		 add	 eax, ecx
  004ce	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  004d2	ba 08 00 00 00	 mov	 edx, 8
  004d7	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  004db	e8 00 00 00 00	 call	 rotlFixed
  004e0	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  004e4	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  004e8	ba 0a 00 00 00	 mov	 edx, 10
  004ed	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  004f1	e8 00 00 00 00	 call	 rotlFixed
  004f6	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 213  : 
; 214  : 	Subround(G, e1, a1, b1, c1, d1, X[ 7],  7, k1);

  004fa	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  004fe	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00502	33 c8		 xor	 ecx, eax
  00504	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00508	23 c1		 and	 eax, ecx
  0050a	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0050e	33 c8		 xor	 ecx, eax
  00510	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00515	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  00518	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  0051c	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00523	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00527	ba 07 00 00 00	 mov	 edx, 7
  0052c	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00530	e8 00 00 00 00	 call	 rotlFixed
  00535	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  00539	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  0053d	ba 0a 00 00 00	 mov	 edx, 10
  00542	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00546	e8 00 00 00 00	 call	 rotlFixed
  0054b	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 215  : 	Subround(G, d1, e1, a1, b1, c1, X[ 4],  6, k1);

  0054f	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00553	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00557	33 c8		 xor	 ecx, eax
  00559	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  0055d	23 c1		 and	 eax, ecx
  0055f	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00563	33 c8		 xor	 ecx, eax
  00565	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0056a	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  0056d	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00571	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00578	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  0057c	ba 06 00 00 00	 mov	 edx, 6
  00581	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00585	e8 00 00 00 00	 call	 rotlFixed
  0058a	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  0058e	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00592	ba 0a 00 00 00	 mov	 edx, 10
  00597	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  0059b	e8 00 00 00 00	 call	 rotlFixed
  005a0	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 216  : 	Subround(G, c1, d1, e1, a1, b1, X[13],  8, k1);

  005a4	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  005a8	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  005ac	33 c8		 xor	 ecx, eax
  005ae	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  005b2	23 c1		 and	 eax, ecx
  005b4	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  005b8	33 c8		 xor	 ecx, eax
  005ba	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  005bf	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  005c2	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  005c6	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  005cd	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  005d1	ba 08 00 00 00	 mov	 edx, 8
  005d6	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  005da	e8 00 00 00 00	 call	 rotlFixed
  005df	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  005e3	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  005e7	ba 0a 00 00 00	 mov	 edx, 10
  005ec	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  005f0	e8 00 00 00 00	 call	 rotlFixed
  005f5	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 217  : 	Subround(G, b1, c1, d1, e1, a1, X[ 1], 13, k1);

  005f9	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  005fd	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00601	33 c8		 xor	 ecx, eax
  00603	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00607	23 c1		 and	 eax, ecx
  00609	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  0060d	33 c8		 xor	 ecx, eax
  0060f	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00614	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  00617	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0061b	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00622	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00626	ba 0d 00 00 00	 mov	 edx, 13
  0062b	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  0062f	e8 00 00 00 00	 call	 rotlFixed
  00634	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  00638	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  0063c	ba 0a 00 00 00	 mov	 edx, 10
  00641	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00645	e8 00 00 00 00	 call	 rotlFixed
  0064a	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 218  : 	Subround(G, a1, b1, c1, d1, e1, X[10], 11, k1);

  0064e	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00652	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00656	33 c8		 xor	 ecx, eax
  00658	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0065c	23 c1		 and	 eax, ecx
  0065e	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00662	33 c8		 xor	 ecx, eax
  00664	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00669	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  0066c	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00670	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00677	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  0067b	ba 0b 00 00 00	 mov	 edx, 11
  00680	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00684	e8 00 00 00 00	 call	 rotlFixed
  00689	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  0068d	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00691	ba 0a 00 00 00	 mov	 edx, 10
  00696	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0069a	e8 00 00 00 00	 call	 rotlFixed
  0069f	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 219  : 	Subround(G, e1, a1, b1, c1, d1, X[ 6],  9, k1);

  006a3	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  006a7	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  006ab	33 c8		 xor	 ecx, eax
  006ad	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  006b1	23 c1		 and	 eax, ecx
  006b3	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  006b7	33 c8		 xor	 ecx, eax
  006b9	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  006be	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  006c1	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  006c5	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  006cc	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  006d0	ba 09 00 00 00	 mov	 edx, 9
  006d5	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  006d9	e8 00 00 00 00	 call	 rotlFixed
  006de	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  006e2	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  006e6	ba 0a 00 00 00	 mov	 edx, 10
  006eb	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  006ef	e8 00 00 00 00	 call	 rotlFixed
  006f4	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 220  : 	Subround(G, d1, e1, a1, b1, c1, X[15],  7, k1);

  006f8	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  006fc	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00700	33 c8		 xor	 ecx, eax
  00702	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00706	23 c1		 and	 eax, ecx
  00708	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  0070c	33 c8		 xor	 ecx, eax
  0070e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00713	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  00716	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0071a	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00721	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00725	ba 07 00 00 00	 mov	 edx, 7
  0072a	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0072e	e8 00 00 00 00	 call	 rotlFixed
  00733	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  00737	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  0073b	ba 0a 00 00 00	 mov	 edx, 10
  00740	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00744	e8 00 00 00 00	 call	 rotlFixed
  00749	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 221  : 	Subround(G, c1, d1, e1, a1, b1, X[ 3], 15, k1);

  0074d	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00751	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00755	33 c8		 xor	 ecx, eax
  00757	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0075b	23 c1		 and	 eax, ecx
  0075d	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00761	33 c8		 xor	 ecx, eax
  00763	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00768	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  0076b	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0076f	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00776	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  0077a	ba 0f 00 00 00	 mov	 edx, 15
  0077f	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00783	e8 00 00 00 00	 call	 rotlFixed
  00788	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  0078c	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00790	ba 0a 00 00 00	 mov	 edx, 10
  00795	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00799	e8 00 00 00 00	 call	 rotlFixed
  0079e	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 222  : 	Subround(G, b1, c1, d1, e1, a1, X[12],  7, k1);

  007a2	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  007a6	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  007aa	33 c8		 xor	 ecx, eax
  007ac	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  007b0	23 c1		 and	 eax, ecx
  007b2	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  007b6	33 c8		 xor	 ecx, eax
  007b8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  007bd	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  007c0	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  007c4	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  007cb	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  007cf	ba 07 00 00 00	 mov	 edx, 7
  007d4	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  007d8	e8 00 00 00 00	 call	 rotlFixed
  007dd	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  007e1	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  007e5	ba 0a 00 00 00	 mov	 edx, 10
  007ea	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  007ee	e8 00 00 00 00	 call	 rotlFixed
  007f3	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 223  : 	Subround(G, a1, b1, c1, d1, e1, X[ 0], 12, k1);

  007f7	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  007fb	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  007ff	33 c8		 xor	 ecx, eax
  00801	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00805	23 c1		 and	 eax, ecx
  00807	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0080b	33 c8		 xor	 ecx, eax
  0080d	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00812	03 08		 add	 ecx, DWORD PTR [rax]
  00814	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00818	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  0081f	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00823	ba 0c 00 00 00	 mov	 edx, 12
  00828	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  0082c	e8 00 00 00 00	 call	 rotlFixed
  00831	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  00835	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00839	ba 0a 00 00 00	 mov	 edx, 10
  0083e	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00842	e8 00 00 00 00	 call	 rotlFixed
  00847	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 224  : 	Subround(G, e1, a1, b1, c1, d1, X[ 9], 15, k1);

  0084b	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0084f	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00853	33 c8		 xor	 ecx, eax
  00855	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00859	23 c1		 and	 eax, ecx
  0085b	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0085f	33 c8		 xor	 ecx, eax
  00861	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00866	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  00869	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  0086d	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00874	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00878	ba 0f 00 00 00	 mov	 edx, 15
  0087d	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00881	e8 00 00 00 00	 call	 rotlFixed
  00886	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  0088a	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  0088e	ba 0a 00 00 00	 mov	 edx, 10
  00893	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00897	e8 00 00 00 00	 call	 rotlFixed
  0089c	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 225  : 	Subround(G, d1, e1, a1, b1, c1, X[ 5],  9, k1);

  008a0	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  008a4	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  008a8	33 c8		 xor	 ecx, eax
  008aa	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  008ae	23 c1		 and	 eax, ecx
  008b0	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  008b4	33 c8		 xor	 ecx, eax
  008b6	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  008bb	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  008be	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  008c2	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  008c9	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  008cd	ba 09 00 00 00	 mov	 edx, 9
  008d2	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  008d6	e8 00 00 00 00	 call	 rotlFixed
  008db	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  008df	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  008e3	ba 0a 00 00 00	 mov	 edx, 10
  008e8	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  008ec	e8 00 00 00 00	 call	 rotlFixed
  008f1	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 226  : 	Subround(G, c1, d1, e1, a1, b1, X[ 2], 11, k1);

  008f5	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  008f9	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  008fd	33 c8		 xor	 ecx, eax
  008ff	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00903	23 c1		 and	 eax, ecx
  00905	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00909	33 c8		 xor	 ecx, eax
  0090b	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00910	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  00913	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00917	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  0091e	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00922	ba 0b 00 00 00	 mov	 edx, 11
  00927	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0092b	e8 00 00 00 00	 call	 rotlFixed
  00930	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  00934	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00938	ba 0a 00 00 00	 mov	 edx, 10
  0093d	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00941	e8 00 00 00 00	 call	 rotlFixed
  00946	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 227  : 	Subround(G, b1, c1, d1, e1, a1, X[14],  7, k1);

  0094a	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  0094e	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00952	33 c8		 xor	 ecx, eax
  00954	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00958	23 c1		 and	 eax, ecx
  0095a	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  0095e	33 c8		 xor	 ecx, eax
  00960	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00965	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  00968	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0096c	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00973	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00977	ba 07 00 00 00	 mov	 edx, 7
  0097c	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00980	e8 00 00 00 00	 call	 rotlFixed
  00985	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  00989	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  0098d	ba 0a 00 00 00	 mov	 edx, 10
  00992	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00996	e8 00 00 00 00	 call	 rotlFixed
  0099b	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 228  : 	Subround(G, a1, b1, c1, d1, e1, X[11], 13, k1);

  0099f	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  009a3	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  009a7	33 c8		 xor	 ecx, eax
  009a9	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  009ad	23 c1		 and	 eax, ecx
  009af	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  009b3	33 c8		 xor	 ecx, eax
  009b5	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  009ba	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  009bd	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  009c1	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  009c8	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  009cc	ba 0d 00 00 00	 mov	 edx, 13
  009d1	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  009d5	e8 00 00 00 00	 call	 rotlFixed
  009da	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  009de	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  009e2	ba 0a 00 00 00	 mov	 edx, 10
  009e7	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  009eb	e8 00 00 00 00	 call	 rotlFixed
  009f0	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 229  : 	Subround(G, e1, a1, b1, c1, d1, X[ 8], 12, k1);

  009f4	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  009f8	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  009fc	33 c8		 xor	 ecx, eax
  009fe	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00a02	23 c1		 and	 eax, ecx
  00a04	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00a08	33 c8		 xor	 ecx, eax
  00a0a	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00a0f	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  00a12	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00a16	8d 84 08 99 79
	82 5a		 lea	 eax, DWORD PTR [rax+rcx+1518500249]
  00a1d	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00a21	ba 0c 00 00 00	 mov	 edx, 12
  00a26	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00a2a	e8 00 00 00 00	 call	 rotlFixed
  00a2f	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  00a33	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00a37	ba 0a 00 00 00	 mov	 edx, 10
  00a3c	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00a40	e8 00 00 00 00	 call	 rotlFixed
  00a45	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 230  : 
; 231  : 	Subround(H, d1, e1, a1, b1, c1, X[ 3], 11, k2);

  00a49	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00a4d	f7 d1		 not	 ecx
  00a4f	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00a53	0b c1		 or	 eax, ecx
  00a55	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00a59	33 c8		 xor	 ecx, eax
  00a5b	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00a60	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  00a63	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00a67	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00a6e	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00a72	ba 0b 00 00 00	 mov	 edx, 11
  00a77	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00a7b	e8 00 00 00 00	 call	 rotlFixed
  00a80	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  00a84	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00a88	ba 0a 00 00 00	 mov	 edx, 10
  00a8d	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00a91	e8 00 00 00 00	 call	 rotlFixed
  00a96	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 232  : 	Subround(H, c1, d1, e1, a1, b1, X[10], 13, k2);

  00a9a	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00a9e	f7 d1		 not	 ecx
  00aa0	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00aa4	0b c1		 or	 eax, ecx
  00aa6	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00aaa	33 c8		 xor	 ecx, eax
  00aac	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00ab1	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  00ab4	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00ab8	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00abf	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00ac3	ba 0d 00 00 00	 mov	 edx, 13
  00ac8	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00acc	e8 00 00 00 00	 call	 rotlFixed
  00ad1	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  00ad5	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00ad9	ba 0a 00 00 00	 mov	 edx, 10
  00ade	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00ae2	e8 00 00 00 00	 call	 rotlFixed
  00ae7	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 233  : 	Subround(H, b1, c1, d1, e1, a1, X[14],  6, k2);

  00aeb	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00aef	f7 d1		 not	 ecx
  00af1	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00af5	0b c1		 or	 eax, ecx
  00af7	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00afb	33 c8		 xor	 ecx, eax
  00afd	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00b02	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  00b05	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00b09	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00b10	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00b14	ba 06 00 00 00	 mov	 edx, 6
  00b19	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00b1d	e8 00 00 00 00	 call	 rotlFixed
  00b22	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  00b26	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00b2a	ba 0a 00 00 00	 mov	 edx, 10
  00b2f	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00b33	e8 00 00 00 00	 call	 rotlFixed
  00b38	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 234  : 	Subround(H, a1, b1, c1, d1, e1, X[ 4],  7, k2);

  00b3c	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00b40	f7 d1		 not	 ecx
  00b42	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00b46	0b c1		 or	 eax, ecx
  00b48	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00b4c	33 c8		 xor	 ecx, eax
  00b4e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00b53	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  00b56	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00b5a	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00b61	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00b65	ba 07 00 00 00	 mov	 edx, 7
  00b6a	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00b6e	e8 00 00 00 00	 call	 rotlFixed
  00b73	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  00b77	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00b7b	ba 0a 00 00 00	 mov	 edx, 10
  00b80	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00b84	e8 00 00 00 00	 call	 rotlFixed
  00b89	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 235  : 	Subround(H, e1, a1, b1, c1, d1, X[ 9], 14, k2);

  00b8d	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00b91	f7 d1		 not	 ecx
  00b93	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00b97	0b c1		 or	 eax, ecx
  00b99	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00b9d	33 c8		 xor	 ecx, eax
  00b9f	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00ba4	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  00ba7	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00bab	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00bb2	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00bb6	ba 0e 00 00 00	 mov	 edx, 14
  00bbb	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00bbf	e8 00 00 00 00	 call	 rotlFixed
  00bc4	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  00bc8	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00bcc	ba 0a 00 00 00	 mov	 edx, 10
  00bd1	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00bd5	e8 00 00 00 00	 call	 rotlFixed
  00bda	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 236  : 	Subround(H, d1, e1, a1, b1, c1, X[15],  9, k2);

  00bde	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00be2	f7 d1		 not	 ecx
  00be4	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00be8	0b c1		 or	 eax, ecx
  00bea	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00bee	33 c8		 xor	 ecx, eax
  00bf0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00bf5	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  00bf8	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00bfc	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00c03	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00c07	ba 09 00 00 00	 mov	 edx, 9
  00c0c	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00c10	e8 00 00 00 00	 call	 rotlFixed
  00c15	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  00c19	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00c1d	ba 0a 00 00 00	 mov	 edx, 10
  00c22	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00c26	e8 00 00 00 00	 call	 rotlFixed
  00c2b	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 237  : 	Subround(H, c1, d1, e1, a1, b1, X[ 8], 13, k2);

  00c2f	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00c33	f7 d1		 not	 ecx
  00c35	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00c39	0b c1		 or	 eax, ecx
  00c3b	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00c3f	33 c8		 xor	 ecx, eax
  00c41	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00c46	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  00c49	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00c4d	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00c54	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00c58	ba 0d 00 00 00	 mov	 edx, 13
  00c5d	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00c61	e8 00 00 00 00	 call	 rotlFixed
  00c66	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  00c6a	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00c6e	ba 0a 00 00 00	 mov	 edx, 10
  00c73	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00c77	e8 00 00 00 00	 call	 rotlFixed
  00c7c	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 238  : 	Subround(H, b1, c1, d1, e1, a1, X[ 1], 15, k2);

  00c80	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00c84	f7 d1		 not	 ecx
  00c86	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00c8a	0b c1		 or	 eax, ecx
  00c8c	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00c90	33 c8		 xor	 ecx, eax
  00c92	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00c97	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  00c9a	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00c9e	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00ca5	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00ca9	ba 0f 00 00 00	 mov	 edx, 15
  00cae	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00cb2	e8 00 00 00 00	 call	 rotlFixed
  00cb7	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  00cbb	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00cbf	ba 0a 00 00 00	 mov	 edx, 10
  00cc4	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00cc8	e8 00 00 00 00	 call	 rotlFixed
  00ccd	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 239  : 	Subround(H, a1, b1, c1, d1, e1, X[ 2], 14, k2);

  00cd1	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00cd5	f7 d1		 not	 ecx
  00cd7	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00cdb	0b c1		 or	 eax, ecx
  00cdd	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00ce1	33 c8		 xor	 ecx, eax
  00ce3	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00ce8	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  00ceb	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00cef	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00cf6	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00cfa	ba 0e 00 00 00	 mov	 edx, 14
  00cff	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00d03	e8 00 00 00 00	 call	 rotlFixed
  00d08	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  00d0c	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00d10	ba 0a 00 00 00	 mov	 edx, 10
  00d15	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00d19	e8 00 00 00 00	 call	 rotlFixed
  00d1e	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 240  : 	Subround(H, e1, a1, b1, c1, d1, X[ 7],  8, k2);

  00d22	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00d26	f7 d1		 not	 ecx
  00d28	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00d2c	0b c1		 or	 eax, ecx
  00d2e	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00d32	33 c8		 xor	 ecx, eax
  00d34	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00d39	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  00d3c	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00d40	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00d47	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00d4b	ba 08 00 00 00	 mov	 edx, 8
  00d50	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00d54	e8 00 00 00 00	 call	 rotlFixed
  00d59	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  00d5d	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00d61	ba 0a 00 00 00	 mov	 edx, 10
  00d66	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00d6a	e8 00 00 00 00	 call	 rotlFixed
  00d6f	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 241  : 	Subround(H, d1, e1, a1, b1, c1, X[ 0], 13, k2);

  00d73	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00d77	f7 d1		 not	 ecx
  00d79	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00d7d	0b c1		 or	 eax, ecx
  00d7f	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00d83	33 c8		 xor	 ecx, eax
  00d85	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00d8a	03 08		 add	 ecx, DWORD PTR [rax]
  00d8c	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00d90	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00d97	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00d9b	ba 0d 00 00 00	 mov	 edx, 13
  00da0	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00da4	e8 00 00 00 00	 call	 rotlFixed
  00da9	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  00dad	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00db1	ba 0a 00 00 00	 mov	 edx, 10
  00db6	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00dba	e8 00 00 00 00	 call	 rotlFixed
  00dbf	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 242  : 	Subround(H, c1, d1, e1, a1, b1, X[ 6],  6, k2);

  00dc3	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00dc7	f7 d1		 not	 ecx
  00dc9	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00dcd	0b c1		 or	 eax, ecx
  00dcf	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00dd3	33 c8		 xor	 ecx, eax
  00dd5	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00dda	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  00ddd	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00de1	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00de8	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00dec	ba 06 00 00 00	 mov	 edx, 6
  00df1	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00df5	e8 00 00 00 00	 call	 rotlFixed
  00dfa	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  00dfe	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00e02	ba 0a 00 00 00	 mov	 edx, 10
  00e07	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00e0b	e8 00 00 00 00	 call	 rotlFixed
  00e10	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 243  : 	Subround(H, b1, c1, d1, e1, a1, X[13],  5, k2);

  00e14	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00e18	f7 d1		 not	 ecx
  00e1a	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00e1e	0b c1		 or	 eax, ecx
  00e20	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00e24	33 c8		 xor	 ecx, eax
  00e26	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00e2b	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  00e2e	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00e32	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00e39	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00e3d	ba 05 00 00 00	 mov	 edx, 5
  00e42	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00e46	e8 00 00 00 00	 call	 rotlFixed
  00e4b	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  00e4f	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00e53	ba 0a 00 00 00	 mov	 edx, 10
  00e58	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00e5c	e8 00 00 00 00	 call	 rotlFixed
  00e61	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 244  : 	Subround(H, a1, b1, c1, d1, e1, X[11], 12, k2);

  00e65	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00e69	f7 d1		 not	 ecx
  00e6b	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00e6f	0b c1		 or	 eax, ecx
  00e71	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00e75	33 c8		 xor	 ecx, eax
  00e77	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00e7c	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  00e7f	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00e83	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00e8a	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00e8e	ba 0c 00 00 00	 mov	 edx, 12
  00e93	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00e97	e8 00 00 00 00	 call	 rotlFixed
  00e9c	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  00ea0	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  00ea4	ba 0a 00 00 00	 mov	 edx, 10
  00ea9	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00ead	e8 00 00 00 00	 call	 rotlFixed
  00eb2	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 245  : 	Subround(H, e1, a1, b1, c1, d1, X[ 5],  7, k2);

  00eb6	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00eba	f7 d1		 not	 ecx
  00ebc	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00ec0	0b c1		 or	 eax, ecx
  00ec2	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00ec6	33 c8		 xor	 ecx, eax
  00ec8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00ecd	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  00ed0	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00ed4	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00edb	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00edf	ba 07 00 00 00	 mov	 edx, 7
  00ee4	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00ee8	e8 00 00 00 00	 call	 rotlFixed
  00eed	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  00ef1	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  00ef5	ba 0a 00 00 00	 mov	 edx, 10
  00efa	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00efe	e8 00 00 00 00	 call	 rotlFixed
  00f03	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 246  : 	Subround(H, d1, e1, a1, b1, c1, X[12],  5, k2);

  00f07	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00f0b	f7 d1		 not	 ecx
  00f0d	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00f11	0b c1		 or	 eax, ecx
  00f13	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00f17	33 c8		 xor	 ecx, eax
  00f19	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00f1e	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  00f21	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00f25	8d 84 08 a1 eb
	d9 6e		 lea	 eax, DWORD PTR [rax+rcx+1859775393]
  00f2c	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00f30	ba 05 00 00 00	 mov	 edx, 5
  00f35	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00f39	e8 00 00 00 00	 call	 rotlFixed
  00f3e	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  00f42	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  00f46	ba 0a 00 00 00	 mov	 edx, 10
  00f4b	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  00f4f	e8 00 00 00 00	 call	 rotlFixed
  00f54	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 247  : 
; 248  : 	Subround(I, c1, d1, e1, a1, b1, X[ 1], 11, k3);

  00f58	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00f5c	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  00f60	33 c8		 xor	 ecx, eax
  00f62	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  00f66	23 c1		 and	 eax, ecx
  00f68	8b 54 24 38	 mov	 edx, DWORD PTR e1$[rsp]
  00f6c	33 d0		 xor	 edx, eax
  00f6e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00f73	03 50 04	 add	 edx, DWORD PTR [rax+4]
  00f76	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  00f7b	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  00f7f	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  00f83	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  00f86	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00f8a	ba 0b 00 00 00	 mov	 edx, 11
  00f8f	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00f93	e8 00 00 00 00	 call	 rotlFixed
  00f98	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  00f9c	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  00fa0	ba 0a 00 00 00	 mov	 edx, 10
  00fa5	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  00fa9	e8 00 00 00 00	 call	 rotlFixed
  00fae	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 249  : 	Subround(I, b1, c1, d1, e1, a1, X[ 9], 12, k3);

  00fb2	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  00fb6	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  00fba	33 c8		 xor	 ecx, eax
  00fbc	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  00fc0	23 c1		 and	 eax, ecx
  00fc2	8b 54 24 4c	 mov	 edx, DWORD PTR d1$[rsp]
  00fc6	33 d0		 xor	 edx, eax
  00fc8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  00fcd	03 50 24	 add	 edx, DWORD PTR [rax+36]
  00fd0	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  00fd5	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  00fd9	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  00fdd	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  00fe0	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00fe4	ba 0c 00 00 00	 mov	 edx, 12
  00fe9	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  00fed	e8 00 00 00 00	 call	 rotlFixed
  00ff2	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  00ff6	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  00ffa	ba 0a 00 00 00	 mov	 edx, 10
  00fff	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  01003	e8 00 00 00 00	 call	 rotlFixed
  01008	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 250  : 	Subround(I, a1, b1, c1, d1, e1, X[11], 14, k3);

  0100c	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01010	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  01014	33 c8		 xor	 ecx, eax
  01016	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0101a	23 c1		 and	 eax, ecx
  0101c	8b 54 24 2c	 mov	 edx, DWORD PTR c1$[rsp]
  01020	33 d0		 xor	 edx, eax
  01022	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01027	03 50 2c	 add	 edx, DWORD PTR [rax+44]
  0102a	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  0102f	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  01033	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01037	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  0103a	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  0103e	ba 0e 00 00 00	 mov	 edx, 14
  01043	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01047	e8 00 00 00 00	 call	 rotlFixed
  0104c	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  01050	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  01054	ba 0a 00 00 00	 mov	 edx, 10
  01059	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0105d	e8 00 00 00 00	 call	 rotlFixed
  01062	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 251  : 	Subround(I, e1, a1, b1, c1, d1, X[10], 15, k3);

  01066	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0106a	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  0106e	33 c8		 xor	 ecx, eax
  01070	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01074	23 c1		 and	 eax, ecx
  01076	8b 54 24 50	 mov	 edx, DWORD PTR b1$[rsp]
  0107a	33 d0		 xor	 edx, eax
  0107c	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01081	03 50 28	 add	 edx, DWORD PTR [rax+40]
  01084	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  01089	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  0108d	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01091	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01094	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  01098	ba 0f 00 00 00	 mov	 edx, 15
  0109d	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  010a1	e8 00 00 00 00	 call	 rotlFixed
  010a6	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  010aa	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  010ae	ba 0a 00 00 00	 mov	 edx, 10
  010b3	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  010b7	e8 00 00 00 00	 call	 rotlFixed
  010bc	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 252  : 	Subround(I, d1, e1, a1, b1, c1, X[ 0], 14, k3);

  010c0	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  010c4	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  010c8	33 c8		 xor	 ecx, eax
  010ca	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  010ce	23 c1		 and	 eax, ecx
  010d0	8b 54 24 24	 mov	 edx, DWORD PTR a1$[rsp]
  010d4	33 d0		 xor	 edx, eax
  010d6	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  010db	03 10		 add	 edx, DWORD PTR [rax]
  010dd	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  010e2	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  010e6	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  010ea	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  010ed	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  010f1	ba 0e 00 00 00	 mov	 edx, 14
  010f6	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  010fa	e8 00 00 00 00	 call	 rotlFixed
  010ff	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  01103	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  01107	ba 0a 00 00 00	 mov	 edx, 10
  0110c	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01110	e8 00 00 00 00	 call	 rotlFixed
  01115	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 253  : 	Subround(I, c1, d1, e1, a1, b1, X[ 8], 15, k3);

  01119	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  0111d	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  01121	33 c8		 xor	 ecx, eax
  01123	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  01127	23 c1		 and	 eax, ecx
  01129	8b 54 24 38	 mov	 edx, DWORD PTR e1$[rsp]
  0112d	33 d0		 xor	 edx, eax
  0112f	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01134	03 50 20	 add	 edx, DWORD PTR [rax+32]
  01137	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  0113c	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01140	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01144	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01147	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  0114b	ba 0f 00 00 00	 mov	 edx, 15
  01150	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01154	e8 00 00 00 00	 call	 rotlFixed
  01159	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  0115d	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  01161	ba 0a 00 00 00	 mov	 edx, 10
  01166	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  0116a	e8 00 00 00 00	 call	 rotlFixed
  0116f	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 254  : 	Subround(I, b1, c1, d1, e1, a1, X[12],  9, k3);

  01173	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  01177	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0117b	33 c8		 xor	 ecx, eax
  0117d	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  01181	23 c1		 and	 eax, ecx
  01183	8b 54 24 4c	 mov	 edx, DWORD PTR d1$[rsp]
  01187	33 d0		 xor	 edx, eax
  01189	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0118e	03 50 30	 add	 edx, DWORD PTR [rax+48]
  01191	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  01196	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0119a	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  0119e	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  011a1	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  011a5	ba 09 00 00 00	 mov	 edx, 9
  011aa	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  011ae	e8 00 00 00 00	 call	 rotlFixed
  011b3	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  011b7	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  011bb	ba 0a 00 00 00	 mov	 edx, 10
  011c0	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  011c4	e8 00 00 00 00	 call	 rotlFixed
  011c9	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 255  : 	Subround(I, a1, b1, c1, d1, e1, X[ 4],  8, k3);

  011cd	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  011d1	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  011d5	33 c8		 xor	 ecx, eax
  011d7	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  011db	23 c1		 and	 eax, ecx
  011dd	8b 54 24 2c	 mov	 edx, DWORD PTR c1$[rsp]
  011e1	33 d0		 xor	 edx, eax
  011e3	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  011e8	03 50 10	 add	 edx, DWORD PTR [rax+16]
  011eb	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  011f0	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  011f4	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  011f8	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  011fb	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  011ff	ba 08 00 00 00	 mov	 edx, 8
  01204	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01208	e8 00 00 00 00	 call	 rotlFixed
  0120d	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  01211	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  01215	ba 0a 00 00 00	 mov	 edx, 10
  0121a	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0121e	e8 00 00 00 00	 call	 rotlFixed
  01223	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 256  : 	Subround(I, e1, a1, b1, c1, d1, X[13],  9, k3);

  01227	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0122b	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  0122f	33 c8		 xor	 ecx, eax
  01231	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01235	23 c1		 and	 eax, ecx
  01237	8b 54 24 50	 mov	 edx, DWORD PTR b1$[rsp]
  0123b	33 d0		 xor	 edx, eax
  0123d	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01242	03 50 34	 add	 edx, DWORD PTR [rax+52]
  01245	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  0124a	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  0124e	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01252	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01255	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  01259	ba 09 00 00 00	 mov	 edx, 9
  0125e	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01262	e8 00 00 00 00	 call	 rotlFixed
  01267	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  0126b	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  0126f	ba 0a 00 00 00	 mov	 edx, 10
  01274	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  01278	e8 00 00 00 00	 call	 rotlFixed
  0127d	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 257  : 	Subround(I, d1, e1, a1, b1, c1, X[ 3], 14, k3);

  01281	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  01285	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01289	33 c8		 xor	 ecx, eax
  0128b	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0128f	23 c1		 and	 eax, ecx
  01291	8b 54 24 24	 mov	 edx, DWORD PTR a1$[rsp]
  01295	33 d0		 xor	 edx, eax
  01297	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0129c	03 50 0c	 add	 edx, DWORD PTR [rax+12]
  0129f	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  012a4	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  012a8	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  012ac	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  012af	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  012b3	ba 0e 00 00 00	 mov	 edx, 14
  012b8	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  012bc	e8 00 00 00 00	 call	 rotlFixed
  012c1	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  012c5	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  012c9	ba 0a 00 00 00	 mov	 edx, 10
  012ce	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  012d2	e8 00 00 00 00	 call	 rotlFixed
  012d7	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 258  : 	Subround(I, c1, d1, e1, a1, b1, X[ 7],  5, k3);

  012db	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  012df	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  012e3	33 c8		 xor	 ecx, eax
  012e5	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  012e9	23 c1		 and	 eax, ecx
  012eb	8b 54 24 38	 mov	 edx, DWORD PTR e1$[rsp]
  012ef	33 d0		 xor	 edx, eax
  012f1	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  012f6	03 50 1c	 add	 edx, DWORD PTR [rax+28]
  012f9	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  012fe	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01302	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01306	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01309	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  0130d	ba 05 00 00 00	 mov	 edx, 5
  01312	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01316	e8 00 00 00 00	 call	 rotlFixed
  0131b	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  0131f	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  01323	ba 0a 00 00 00	 mov	 edx, 10
  01328	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  0132c	e8 00 00 00 00	 call	 rotlFixed
  01331	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 259  : 	Subround(I, b1, c1, d1, e1, a1, X[15],  6, k3);

  01335	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  01339	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  0133d	33 c8		 xor	 ecx, eax
  0133f	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  01343	23 c1		 and	 eax, ecx
  01345	8b 54 24 4c	 mov	 edx, DWORD PTR d1$[rsp]
  01349	33 d0		 xor	 edx, eax
  0134b	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01350	03 50 3c	 add	 edx, DWORD PTR [rax+60]
  01353	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  01358	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0135c	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01360	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01363	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  01367	ba 06 00 00 00	 mov	 edx, 6
  0136c	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  01370	e8 00 00 00 00	 call	 rotlFixed
  01375	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  01379	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  0137d	ba 0a 00 00 00	 mov	 edx, 10
  01382	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  01386	e8 00 00 00 00	 call	 rotlFixed
  0138b	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 260  : 	Subround(I, a1, b1, c1, d1, e1, X[14],  8, k3);

  0138f	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01393	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  01397	33 c8		 xor	 ecx, eax
  01399	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0139d	23 c1		 and	 eax, ecx
  0139f	8b 54 24 2c	 mov	 edx, DWORD PTR c1$[rsp]
  013a3	33 d0		 xor	 edx, eax
  013a5	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  013aa	03 50 38	 add	 edx, DWORD PTR [rax+56]
  013ad	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  013b2	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  013b6	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  013ba	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  013bd	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  013c1	ba 08 00 00 00	 mov	 edx, 8
  013c6	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  013ca	e8 00 00 00 00	 call	 rotlFixed
  013cf	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  013d3	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  013d7	ba 0a 00 00 00	 mov	 edx, 10
  013dc	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  013e0	e8 00 00 00 00	 call	 rotlFixed
  013e5	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 261  : 	Subround(I, e1, a1, b1, c1, d1, X[ 5],  6, k3);

  013e9	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  013ed	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  013f1	33 c8		 xor	 ecx, eax
  013f3	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  013f7	23 c1		 and	 eax, ecx
  013f9	8b 54 24 50	 mov	 edx, DWORD PTR b1$[rsp]
  013fd	33 d0		 xor	 edx, eax
  013ff	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01404	03 50 14	 add	 edx, DWORD PTR [rax+20]
  01407	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  0140c	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  01410	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01414	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01417	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  0141b	ba 06 00 00 00	 mov	 edx, 6
  01420	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01424	e8 00 00 00 00	 call	 rotlFixed
  01429	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  0142d	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  01431	ba 0a 00 00 00	 mov	 edx, 10
  01436	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  0143a	e8 00 00 00 00	 call	 rotlFixed
  0143f	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 262  : 	Subround(I, d1, e1, a1, b1, c1, X[ 6],  5, k3);

  01443	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  01447	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  0144b	33 c8		 xor	 ecx, eax
  0144d	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  01451	23 c1		 and	 eax, ecx
  01453	8b 54 24 24	 mov	 edx, DWORD PTR a1$[rsp]
  01457	33 d0		 xor	 edx, eax
  01459	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0145e	03 50 18	 add	 edx, DWORD PTR [rax+24]
  01461	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  01466	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0146a	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  0146e	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01471	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  01475	ba 05 00 00 00	 mov	 edx, 5
  0147a	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0147e	e8 00 00 00 00	 call	 rotlFixed
  01483	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  01487	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  0148b	ba 0a 00 00 00	 mov	 edx, 10
  01490	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01494	e8 00 00 00 00	 call	 rotlFixed
  01499	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 263  : 	Subround(I, c1, d1, e1, a1, b1, X[ 2], 12, k3);

  0149d	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  014a1	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  014a5	33 c8		 xor	 ecx, eax
  014a7	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  014ab	23 c1		 and	 eax, ecx
  014ad	8b 54 24 38	 mov	 edx, DWORD PTR e1$[rsp]
  014b1	33 d0		 xor	 edx, eax
  014b3	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  014b8	03 50 08	 add	 edx, DWORD PTR [rax+8]
  014bb	b9 dc bc 1b 8f	 mov	 ecx, -1894007588	; ffffffff8f1bbcdcH
  014c0	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  014c4	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  014c8	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  014cb	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  014cf	ba 0c 00 00 00	 mov	 edx, 12
  014d4	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  014d8	e8 00 00 00 00	 call	 rotlFixed
  014dd	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  014e1	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  014e5	ba 0a 00 00 00	 mov	 edx, 10
  014ea	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  014ee	e8 00 00 00 00	 call	 rotlFixed
  014f3	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 264  : 
; 265  : 	Subround(J, b1, c1, d1, e1, a1, X[ 4],  9, k4);

  014f7	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  014fb	f7 d1		 not	 ecx
  014fd	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  01501	0b c1		 or	 eax, ecx
  01503	8b 54 24 2c	 mov	 edx, DWORD PTR c1$[rsp]
  01507	33 d0		 xor	 edx, eax
  01509	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0150e	03 50 10	 add	 edx, DWORD PTR [rax+16]
  01511	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  01516	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0151a	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  0151e	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01521	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  01525	ba 09 00 00 00	 mov	 edx, 9
  0152a	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  0152e	e8 00 00 00 00	 call	 rotlFixed
  01533	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  01537	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  0153b	ba 0a 00 00 00	 mov	 edx, 10
  01540	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  01544	e8 00 00 00 00	 call	 rotlFixed
  01549	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 266  : 	Subround(J, a1, b1, c1, d1, e1, X[ 0], 15, k4);

  0154d	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  01551	f7 d1		 not	 ecx
  01553	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01557	0b c1		 or	 eax, ecx
  01559	8b 54 24 50	 mov	 edx, DWORD PTR b1$[rsp]
  0155d	33 d0		 xor	 edx, eax
  0155f	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01564	03 10		 add	 edx, DWORD PTR [rax]
  01566	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  0156b	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  0156f	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01573	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01576	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  0157a	ba 0f 00 00 00	 mov	 edx, 15
  0157f	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01583	e8 00 00 00 00	 call	 rotlFixed
  01588	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  0158c	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  01590	ba 0a 00 00 00	 mov	 edx, 10
  01595	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01599	e8 00 00 00 00	 call	 rotlFixed
  0159e	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 267  : 	Subround(J, e1, a1, b1, c1, d1, X[ 5],  5, k4);

  015a2	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  015a6	f7 d1		 not	 ecx
  015a8	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  015ac	0b c1		 or	 eax, ecx
  015ae	8b 54 24 24	 mov	 edx, DWORD PTR a1$[rsp]
  015b2	33 d0		 xor	 edx, eax
  015b4	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  015b9	03 50 14	 add	 edx, DWORD PTR [rax+20]
  015bc	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  015c1	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  015c5	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  015c9	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  015cc	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  015d0	ba 05 00 00 00	 mov	 edx, 5
  015d5	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  015d9	e8 00 00 00 00	 call	 rotlFixed
  015de	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  015e2	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  015e6	ba 0a 00 00 00	 mov	 edx, 10
  015eb	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  015ef	e8 00 00 00 00	 call	 rotlFixed
  015f4	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 268  : 	Subround(J, d1, e1, a1, b1, c1, X[ 9], 11, k4);

  015f8	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  015fc	f7 d1		 not	 ecx
  015fe	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  01602	0b c1		 or	 eax, ecx
  01604	8b 54 24 38	 mov	 edx, DWORD PTR e1$[rsp]
  01608	33 d0		 xor	 edx, eax
  0160a	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0160f	03 50 24	 add	 edx, DWORD PTR [rax+36]
  01612	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  01617	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0161b	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  0161f	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01622	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  01626	ba 0b 00 00 00	 mov	 edx, 11
  0162b	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0162f	e8 00 00 00 00	 call	 rotlFixed
  01634	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  01638	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  0163c	ba 0a 00 00 00	 mov	 edx, 10
  01641	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01645	e8 00 00 00 00	 call	 rotlFixed
  0164a	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 269  : 	Subround(J, c1, d1, e1, a1, b1, X[ 7],  6, k4);

  0164e	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01652	f7 d1		 not	 ecx
  01654	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  01658	0b c1		 or	 eax, ecx
  0165a	8b 54 24 4c	 mov	 edx, DWORD PTR d1$[rsp]
  0165e	33 d0		 xor	 edx, eax
  01660	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01665	03 50 1c	 add	 edx, DWORD PTR [rax+28]
  01668	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  0166d	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01671	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01675	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01678	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  0167c	ba 06 00 00 00	 mov	 edx, 6
  01681	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01685	e8 00 00 00 00	 call	 rotlFixed
  0168a	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  0168e	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  01692	ba 0a 00 00 00	 mov	 edx, 10
  01697	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  0169b	e8 00 00 00 00	 call	 rotlFixed
  016a0	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 270  : 	Subround(J, b1, c1, d1, e1, a1, X[12],  8, k4);

  016a4	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  016a8	f7 d1		 not	 ecx
  016aa	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  016ae	0b c1		 or	 eax, ecx
  016b0	8b 54 24 2c	 mov	 edx, DWORD PTR c1$[rsp]
  016b4	33 d0		 xor	 edx, eax
  016b6	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  016bb	03 50 30	 add	 edx, DWORD PTR [rax+48]
  016be	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  016c3	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  016c7	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  016cb	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  016ce	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  016d2	ba 08 00 00 00	 mov	 edx, 8
  016d7	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  016db	e8 00 00 00 00	 call	 rotlFixed
  016e0	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  016e4	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  016e8	ba 0a 00 00 00	 mov	 edx, 10
  016ed	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  016f1	e8 00 00 00 00	 call	 rotlFixed
  016f6	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 271  : 	Subround(J, a1, b1, c1, d1, e1, X[ 2], 13, k4);

  016fa	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  016fe	f7 d1		 not	 ecx
  01700	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  01704	0b c1		 or	 eax, ecx
  01706	8b 54 24 50	 mov	 edx, DWORD PTR b1$[rsp]
  0170a	33 d0		 xor	 edx, eax
  0170c	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01711	03 50 08	 add	 edx, DWORD PTR [rax+8]
  01714	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  01719	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  0171d	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01721	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01724	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  01728	ba 0d 00 00 00	 mov	 edx, 13
  0172d	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01731	e8 00 00 00 00	 call	 rotlFixed
  01736	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  0173a	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  0173e	ba 0a 00 00 00	 mov	 edx, 10
  01743	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01747	e8 00 00 00 00	 call	 rotlFixed
  0174c	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 272  : 	Subround(J, e1, a1, b1, c1, d1, X[10], 12, k4);

  01750	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01754	f7 d1		 not	 ecx
  01756	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  0175a	0b c1		 or	 eax, ecx
  0175c	8b 54 24 24	 mov	 edx, DWORD PTR a1$[rsp]
  01760	33 d0		 xor	 edx, eax
  01762	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01767	03 50 28	 add	 edx, DWORD PTR [rax+40]
  0176a	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  0176f	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  01773	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01777	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  0177a	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  0177e	ba 0c 00 00 00	 mov	 edx, 12
  01783	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01787	e8 00 00 00 00	 call	 rotlFixed
  0178c	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  01790	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  01794	ba 0a 00 00 00	 mov	 edx, 10
  01799	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  0179d	e8 00 00 00 00	 call	 rotlFixed
  017a2	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 273  : 	Subround(J, d1, e1, a1, b1, c1, X[14],  5, k4);

  017a6	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  017aa	f7 d1		 not	 ecx
  017ac	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  017b0	0b c1		 or	 eax, ecx
  017b2	8b 54 24 38	 mov	 edx, DWORD PTR e1$[rsp]
  017b6	33 d0		 xor	 edx, eax
  017b8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  017bd	03 50 38	 add	 edx, DWORD PTR [rax+56]
  017c0	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  017c5	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  017c9	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  017cd	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  017d0	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  017d4	ba 05 00 00 00	 mov	 edx, 5
  017d9	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  017dd	e8 00 00 00 00	 call	 rotlFixed
  017e2	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  017e6	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  017ea	ba 0a 00 00 00	 mov	 edx, 10
  017ef	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  017f3	e8 00 00 00 00	 call	 rotlFixed
  017f8	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 274  : 	Subround(J, c1, d1, e1, a1, b1, X[ 1], 12, k4);

  017fc	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  01800	f7 d1		 not	 ecx
  01802	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  01806	0b c1		 or	 eax, ecx
  01808	8b 54 24 4c	 mov	 edx, DWORD PTR d1$[rsp]
  0180c	33 d0		 xor	 edx, eax
  0180e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01813	03 50 04	 add	 edx, DWORD PTR [rax+4]
  01816	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  0181b	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0181f	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01823	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01826	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  0182a	ba 0c 00 00 00	 mov	 edx, 12
  0182f	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01833	e8 00 00 00 00	 call	 rotlFixed
  01838	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  0183c	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  01840	ba 0a 00 00 00	 mov	 edx, 10
  01845	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01849	e8 00 00 00 00	 call	 rotlFixed
  0184e	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 275  : 	Subround(J, b1, c1, d1, e1, a1, X[ 3], 13, k4);

  01852	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01856	f7 d1		 not	 ecx
  01858	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  0185c	0b c1		 or	 eax, ecx
  0185e	8b 54 24 2c	 mov	 edx, DWORD PTR c1$[rsp]
  01862	33 d0		 xor	 edx, eax
  01864	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01869	03 50 0c	 add	 edx, DWORD PTR [rax+12]
  0186c	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  01871	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  01875	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01879	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  0187c	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  01880	ba 0d 00 00 00	 mov	 edx, 13
  01885	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  01889	e8 00 00 00 00	 call	 rotlFixed
  0188e	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  01892	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  01896	ba 0a 00 00 00	 mov	 edx, 10
  0189b	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0189f	e8 00 00 00 00	 call	 rotlFixed
  018a4	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 276  : 	Subround(J, a1, b1, c1, d1, e1, X[ 8], 14, k4);

  018a8	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  018ac	f7 d1		 not	 ecx
  018ae	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  018b2	0b c1		 or	 eax, ecx
  018b4	8b 54 24 50	 mov	 edx, DWORD PTR b1$[rsp]
  018b8	33 d0		 xor	 edx, eax
  018ba	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  018bf	03 50 20	 add	 edx, DWORD PTR [rax+32]
  018c2	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  018c7	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  018cb	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  018cf	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  018d2	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  018d6	ba 0e 00 00 00	 mov	 edx, 14
  018db	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  018df	e8 00 00 00 00	 call	 rotlFixed
  018e4	03 44 24 38	 add	 eax, DWORD PTR e1$[rsp]
  018e8	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax
  018ec	ba 0a 00 00 00	 mov	 edx, 10
  018f1	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  018f5	e8 00 00 00 00	 call	 rotlFixed
  018fa	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 277  : 	Subround(J, e1, a1, b1, c1, d1, X[11], 11, k4);

  018fe	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  01902	f7 d1		 not	 ecx
  01904	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  01908	0b c1		 or	 eax, ecx
  0190a	8b 54 24 24	 mov	 edx, DWORD PTR a1$[rsp]
  0190e	33 d0		 xor	 edx, eax
  01910	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01915	03 50 2c	 add	 edx, DWORD PTR [rax+44]
  01918	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  0191d	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  01921	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01925	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01928	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  0192c	ba 0b 00 00 00	 mov	 edx, 11
  01931	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01935	e8 00 00 00 00	 call	 rotlFixed
  0193a	03 44 24 4c	 add	 eax, DWORD PTR d1$[rsp]
  0193e	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax
  01942	ba 0a 00 00 00	 mov	 edx, 10
  01947	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  0194b	e8 00 00 00 00	 call	 rotlFixed
  01950	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax

; 278  : 	Subround(J, d1, e1, a1, b1, c1, X[ 6],  8, k4);

  01954	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  01958	f7 d1		 not	 ecx
  0195a	8b 44 24 24	 mov	 eax, DWORD PTR a1$[rsp]
  0195e	0b c1		 or	 eax, ecx
  01960	8b 54 24 38	 mov	 edx, DWORD PTR e1$[rsp]
  01964	33 d0		 xor	 edx, eax
  01966	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0196b	03 50 18	 add	 edx, DWORD PTR [rax+24]
  0196e	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  01973	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  01977	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  0197b	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  0197e	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  01982	ba 08 00 00 00	 mov	 edx, 8
  01987	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  0198b	e8 00 00 00 00	 call	 rotlFixed
  01990	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  01994	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax
  01998	ba 0a 00 00 00	 mov	 edx, 10
  0199d	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  019a1	e8 00 00 00 00	 call	 rotlFixed
  019a6	89 44 24 24	 mov	 DWORD PTR a1$[rsp], eax

; 279  : 	Subround(J, c1, d1, e1, a1, b1, X[15],  5, k4);

  019aa	8b 4c 24 24	 mov	 ecx, DWORD PTR a1$[rsp]
  019ae	f7 d1		 not	 ecx
  019b0	8b 44 24 38	 mov	 eax, DWORD PTR e1$[rsp]
  019b4	0b c1		 or	 eax, ecx
  019b6	8b 54 24 4c	 mov	 edx, DWORD PTR d1$[rsp]
  019ba	33 d0		 xor	 edx, eax
  019bc	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  019c1	03 50 3c	 add	 edx, DWORD PTR [rax+60]
  019c4	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  019c9	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  019cd	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  019d1	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  019d4	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  019d8	ba 05 00 00 00	 mov	 edx, 5
  019dd	8b 4c 24 2c	 mov	 ecx, DWORD PTR c1$[rsp]
  019e1	e8 00 00 00 00	 call	 rotlFixed
  019e6	03 44 24 50	 add	 eax, DWORD PTR b1$[rsp]
  019ea	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax
  019ee	ba 0a 00 00 00	 mov	 edx, 10
  019f3	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  019f7	e8 00 00 00 00	 call	 rotlFixed
  019fc	89 44 24 38	 mov	 DWORD PTR e1$[rsp], eax

; 280  : 	Subround(J, b1, c1, d1, e1, a1, X[13],  6, k4);

  01a00	8b 4c 24 38	 mov	 ecx, DWORD PTR e1$[rsp]
  01a04	f7 d1		 not	 ecx
  01a06	8b 44 24 4c	 mov	 eax, DWORD PTR d1$[rsp]
  01a0a	0b c1		 or	 eax, ecx
  01a0c	8b 54 24 2c	 mov	 edx, DWORD PTR c1$[rsp]
  01a10	33 d0		 xor	 edx, eax
  01a12	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01a17	03 50 34	 add	 edx, DWORD PTR [rax+52]
  01a1a	b9 4e fd 53 a9	 mov	 ecx, -1454113458	; ffffffffa953fd4eH
  01a1f	8b 44 24 50	 mov	 eax, DWORD PTR b1$[rsp]
  01a23	48 8d 04 08	 lea	 rax, QWORD PTR [rax+rcx]
  01a27	8d 04 10	 lea	 eax, DWORD PTR [rax+rdx]
  01a2a	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  01a2e	ba 06 00 00 00	 mov	 edx, 6
  01a33	8b 4c 24 50	 mov	 ecx, DWORD PTR b1$[rsp]
  01a37	e8 00 00 00 00	 call	 rotlFixed
  01a3c	03 44 24 24	 add	 eax, DWORD PTR a1$[rsp]
  01a40	89 44 24 50	 mov	 DWORD PTR b1$[rsp], eax
  01a44	ba 0a 00 00 00	 mov	 edx, 10
  01a49	8b 4c 24 4c	 mov	 ecx, DWORD PTR d1$[rsp]
  01a4d	e8 00 00 00 00	 call	 rotlFixed
  01a52	89 44 24 4c	 mov	 DWORD PTR d1$[rsp], eax

; 281  : 
; 282  : 	Subround(J, a2, b2, c2, d2, e2, X[ 5],  8, k5);

  01a56	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01a5a	f7 d1		 not	 ecx
  01a5c	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01a60	0b c1		 or	 eax, ecx
  01a62	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01a66	33 c8		 xor	 ecx, eax
  01a68	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01a6d	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  01a70	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01a74	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01a7b	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01a7f	ba 08 00 00 00	 mov	 edx, 8
  01a84	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01a88	e8 00 00 00 00	 call	 rotlFixed
  01a8d	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  01a91	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01a95	ba 0a 00 00 00	 mov	 edx, 10
  01a9a	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01a9e	e8 00 00 00 00	 call	 rotlFixed
  01aa3	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 283  : 	Subround(J, e2, a2, b2, c2, d2, X[14],  9, k5);

  01aa7	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01aab	f7 d1		 not	 ecx
  01aad	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01ab1	0b c1		 or	 eax, ecx
  01ab3	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01ab7	33 c8		 xor	 ecx, eax
  01ab9	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01abe	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  01ac1	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  01ac5	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01acc	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01ad0	ba 09 00 00 00	 mov	 edx, 9
  01ad5	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01ad9	e8 00 00 00 00	 call	 rotlFixed
  01ade	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  01ae2	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01ae6	ba 0a 00 00 00	 mov	 edx, 10
  01aeb	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01aef	e8 00 00 00 00	 call	 rotlFixed
  01af4	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 284  : 	Subround(J, d2, e2, a2, b2, c2, X[ 7],  9, k5);

  01af8	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01afc	f7 d1		 not	 ecx
  01afe	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01b02	0b c1		 or	 eax, ecx
  01b04	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01b08	33 c8		 xor	 ecx, eax
  01b0a	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01b0f	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  01b12	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  01b16	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01b1d	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01b21	ba 09 00 00 00	 mov	 edx, 9
  01b26	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01b2a	e8 00 00 00 00	 call	 rotlFixed
  01b2f	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  01b33	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01b37	ba 0a 00 00 00	 mov	 edx, 10
  01b3c	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01b40	e8 00 00 00 00	 call	 rotlFixed
  01b45	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 285  : 	Subround(J, c2, d2, e2, a2, b2, X[ 0], 11, k5);

  01b49	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01b4d	f7 d1		 not	 ecx
  01b4f	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  01b53	0b c1		 or	 eax, ecx
  01b55	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01b59	33 c8		 xor	 ecx, eax
  01b5b	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01b60	03 08		 add	 ecx, DWORD PTR [rax]
  01b62	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01b66	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01b6d	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  01b71	ba 0b 00 00 00	 mov	 edx, 11
  01b76	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01b7a	e8 00 00 00 00	 call	 rotlFixed
  01b7f	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  01b83	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  01b87	ba 0a 00 00 00	 mov	 edx, 10
  01b8c	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01b90	e8 00 00 00 00	 call	 rotlFixed
  01b95	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 286  : 	Subround(J, b2, c2, d2, e2, a2, X[ 9], 13, k5);

  01b99	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01b9d	f7 d1		 not	 ecx
  01b9f	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  01ba3	0b c1		 or	 eax, ecx
  01ba5	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01ba9	33 c8		 xor	 ecx, eax
  01bab	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01bb0	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  01bb3	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01bb7	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01bbe	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  01bc2	ba 0d 00 00 00	 mov	 edx, 13
  01bc7	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01bcb	e8 00 00 00 00	 call	 rotlFixed
  01bd0	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  01bd4	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  01bd8	ba 0a 00 00 00	 mov	 edx, 10
  01bdd	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01be1	e8 00 00 00 00	 call	 rotlFixed
  01be6	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 287  : 	Subround(J, a2, b2, c2, d2, e2, X[ 2], 15, k5);

  01bea	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01bee	f7 d1		 not	 ecx
  01bf0	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01bf4	0b c1		 or	 eax, ecx
  01bf6	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01bfa	33 c8		 xor	 ecx, eax
  01bfc	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01c01	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  01c04	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01c08	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01c0f	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01c13	ba 0f 00 00 00	 mov	 edx, 15
  01c18	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01c1c	e8 00 00 00 00	 call	 rotlFixed
  01c21	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  01c25	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01c29	ba 0a 00 00 00	 mov	 edx, 10
  01c2e	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01c32	e8 00 00 00 00	 call	 rotlFixed
  01c37	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 288  : 	Subround(J, e2, a2, b2, c2, d2, X[11], 15, k5);

  01c3b	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01c3f	f7 d1		 not	 ecx
  01c41	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01c45	0b c1		 or	 eax, ecx
  01c47	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01c4b	33 c8		 xor	 ecx, eax
  01c4d	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01c52	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  01c55	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  01c59	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01c60	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01c64	ba 0f 00 00 00	 mov	 edx, 15
  01c69	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01c6d	e8 00 00 00 00	 call	 rotlFixed
  01c72	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  01c76	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01c7a	ba 0a 00 00 00	 mov	 edx, 10
  01c7f	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01c83	e8 00 00 00 00	 call	 rotlFixed
  01c88	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 289  : 	Subround(J, d2, e2, a2, b2, c2, X[ 4],  5, k5);

  01c8c	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01c90	f7 d1		 not	 ecx
  01c92	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01c96	0b c1		 or	 eax, ecx
  01c98	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01c9c	33 c8		 xor	 ecx, eax
  01c9e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01ca3	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  01ca6	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  01caa	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01cb1	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01cb5	ba 05 00 00 00	 mov	 edx, 5
  01cba	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01cbe	e8 00 00 00 00	 call	 rotlFixed
  01cc3	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  01cc7	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01ccb	ba 0a 00 00 00	 mov	 edx, 10
  01cd0	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01cd4	e8 00 00 00 00	 call	 rotlFixed
  01cd9	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 290  : 	Subround(J, c2, d2, e2, a2, b2, X[13],  7, k5);

  01cdd	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01ce1	f7 d1		 not	 ecx
  01ce3	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  01ce7	0b c1		 or	 eax, ecx
  01ce9	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01ced	33 c8		 xor	 ecx, eax
  01cef	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01cf4	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  01cf7	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01cfb	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01d02	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  01d06	ba 07 00 00 00	 mov	 edx, 7
  01d0b	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01d0f	e8 00 00 00 00	 call	 rotlFixed
  01d14	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  01d18	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  01d1c	ba 0a 00 00 00	 mov	 edx, 10
  01d21	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01d25	e8 00 00 00 00	 call	 rotlFixed
  01d2a	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 291  : 	Subround(J, b2, c2, d2, e2, a2, X[ 6],  7, k5);

  01d2e	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01d32	f7 d1		 not	 ecx
  01d34	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  01d38	0b c1		 or	 eax, ecx
  01d3a	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01d3e	33 c8		 xor	 ecx, eax
  01d40	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01d45	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  01d48	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01d4c	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01d53	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  01d57	ba 07 00 00 00	 mov	 edx, 7
  01d5c	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01d60	e8 00 00 00 00	 call	 rotlFixed
  01d65	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  01d69	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  01d6d	ba 0a 00 00 00	 mov	 edx, 10
  01d72	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01d76	e8 00 00 00 00	 call	 rotlFixed
  01d7b	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 292  : 	Subround(J, a2, b2, c2, d2, e2, X[15],  8, k5);

  01d7f	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01d83	f7 d1		 not	 ecx
  01d85	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01d89	0b c1		 or	 eax, ecx
  01d8b	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01d8f	33 c8		 xor	 ecx, eax
  01d91	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01d96	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  01d99	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01d9d	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01da4	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01da8	ba 08 00 00 00	 mov	 edx, 8
  01dad	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01db1	e8 00 00 00 00	 call	 rotlFixed
  01db6	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  01dba	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01dbe	ba 0a 00 00 00	 mov	 edx, 10
  01dc3	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01dc7	e8 00 00 00 00	 call	 rotlFixed
  01dcc	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 293  : 	Subround(J, e2, a2, b2, c2, d2, X[ 8], 11, k5);

  01dd0	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01dd4	f7 d1		 not	 ecx
  01dd6	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01dda	0b c1		 or	 eax, ecx
  01ddc	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01de0	33 c8		 xor	 ecx, eax
  01de2	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01de7	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  01dea	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  01dee	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01df5	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01df9	ba 0b 00 00 00	 mov	 edx, 11
  01dfe	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01e02	e8 00 00 00 00	 call	 rotlFixed
  01e07	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  01e0b	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01e0f	ba 0a 00 00 00	 mov	 edx, 10
  01e14	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01e18	e8 00 00 00 00	 call	 rotlFixed
  01e1d	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 294  : 	Subround(J, d2, e2, a2, b2, c2, X[ 1], 14, k5);

  01e21	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01e25	f7 d1		 not	 ecx
  01e27	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01e2b	0b c1		 or	 eax, ecx
  01e2d	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01e31	33 c8		 xor	 ecx, eax
  01e33	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01e38	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  01e3b	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  01e3f	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01e46	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01e4a	ba 0e 00 00 00	 mov	 edx, 14
  01e4f	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01e53	e8 00 00 00 00	 call	 rotlFixed
  01e58	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  01e5c	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01e60	ba 0a 00 00 00	 mov	 edx, 10
  01e65	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01e69	e8 00 00 00 00	 call	 rotlFixed
  01e6e	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 295  : 	Subround(J, c2, d2, e2, a2, b2, X[10], 14, k5);

  01e72	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01e76	f7 d1		 not	 ecx
  01e78	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  01e7c	0b c1		 or	 eax, ecx
  01e7e	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01e82	33 c8		 xor	 ecx, eax
  01e84	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01e89	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  01e8c	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01e90	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01e97	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  01e9b	ba 0e 00 00 00	 mov	 edx, 14
  01ea0	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01ea4	e8 00 00 00 00	 call	 rotlFixed
  01ea9	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  01ead	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  01eb1	ba 0a 00 00 00	 mov	 edx, 10
  01eb6	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01eba	e8 00 00 00 00	 call	 rotlFixed
  01ebf	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 296  : 	Subround(J, b2, c2, d2, e2, a2, X[ 3], 12, k5);

  01ec3	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01ec7	f7 d1		 not	 ecx
  01ec9	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  01ecd	0b c1		 or	 eax, ecx
  01ecf	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01ed3	33 c8		 xor	 ecx, eax
  01ed5	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01eda	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  01edd	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01ee1	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01ee8	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  01eec	ba 0c 00 00 00	 mov	 edx, 12
  01ef1	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01ef5	e8 00 00 00 00	 call	 rotlFixed
  01efa	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  01efe	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  01f02	ba 0a 00 00 00	 mov	 edx, 10
  01f07	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01f0b	e8 00 00 00 00	 call	 rotlFixed
  01f10	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 297  : 	Subround(J, a2, b2, c2, d2, e2, X[12],  6, k5);

  01f14	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01f18	f7 d1		 not	 ecx
  01f1a	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01f1e	0b c1		 or	 eax, ecx
  01f20	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01f24	33 c8		 xor	 ecx, eax
  01f26	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01f2b	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  01f2e	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01f32	8d 84 08 e6 8b
	a2 50		 lea	 eax, DWORD PTR [rax+rcx+1352829926]
  01f39	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01f3d	ba 06 00 00 00	 mov	 edx, 6
  01f42	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01f46	e8 00 00 00 00	 call	 rotlFixed
  01f4b	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  01f4f	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  01f53	ba 0a 00 00 00	 mov	 edx, 10
  01f58	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  01f5c	e8 00 00 00 00	 call	 rotlFixed
  01f61	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 298  : 
; 299  : 	Subround(I, e2, a2, b2, c2, d2, X[ 6],  9, k6); 

  01f65	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01f69	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01f6d	33 c8		 xor	 ecx, eax
  01f6f	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  01f73	23 c1		 and	 eax, ecx
  01f75	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01f79	33 c8		 xor	 ecx, eax
  01f7b	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01f80	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  01f83	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  01f87	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  01f8e	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01f92	ba 09 00 00 00	 mov	 edx, 9
  01f97	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01f9b	e8 00 00 00 00	 call	 rotlFixed
  01fa0	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  01fa4	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  01fa8	ba 0a 00 00 00	 mov	 edx, 10
  01fad	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  01fb1	e8 00 00 00 00	 call	 rotlFixed
  01fb6	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 300  : 	Subround(I, d2, e2, a2, b2, c2, X[11], 13, k6);

  01fba	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  01fbe	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  01fc2	33 c8		 xor	 ecx, eax
  01fc4	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  01fc8	23 c1		 and	 eax, ecx
  01fca	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  01fce	33 c8		 xor	 ecx, eax
  01fd0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  01fd5	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  01fd8	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  01fdc	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  01fe3	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01fe7	ba 0d 00 00 00	 mov	 edx, 13
  01fec	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  01ff0	e8 00 00 00 00	 call	 rotlFixed
  01ff5	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  01ff9	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  01ffd	ba 0a 00 00 00	 mov	 edx, 10
  02002	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02006	e8 00 00 00 00	 call	 rotlFixed
  0200b	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 301  : 	Subround(I, c2, d2, e2, a2, b2, X[ 3], 15, k6);

  0200f	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02013	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02017	33 c8		 xor	 ecx, eax
  02019	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  0201d	23 c1		 and	 eax, ecx
  0201f	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02023	33 c8		 xor	 ecx, eax
  02025	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0202a	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  0202d	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02031	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  02038	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  0203c	ba 0f 00 00 00	 mov	 edx, 15
  02041	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02045	e8 00 00 00 00	 call	 rotlFixed
  0204a	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  0204e	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02052	ba 0a 00 00 00	 mov	 edx, 10
  02057	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  0205b	e8 00 00 00 00	 call	 rotlFixed
  02060	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 302  : 	Subround(I, b2, c2, d2, e2, a2, X[ 7],  7, k6);

  02064	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02068	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  0206c	33 c8		 xor	 ecx, eax
  0206e	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02072	23 c1		 and	 eax, ecx
  02074	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02078	33 c8		 xor	 ecx, eax
  0207a	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0207f	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  02082	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02086	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  0208d	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02091	ba 07 00 00 00	 mov	 edx, 7
  02096	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  0209a	e8 00 00 00 00	 call	 rotlFixed
  0209f	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  020a3	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  020a7	ba 0a 00 00 00	 mov	 edx, 10
  020ac	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  020b0	e8 00 00 00 00	 call	 rotlFixed
  020b5	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 303  : 	Subround(I, a2, b2, c2, d2, e2, X[ 0], 12, k6);

  020b9	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  020bd	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  020c1	33 c8		 xor	 ecx, eax
  020c3	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  020c7	23 c1		 and	 eax, ecx
  020c9	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  020cd	33 c8		 xor	 ecx, eax
  020cf	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  020d4	03 08		 add	 ecx, DWORD PTR [rax]
  020d6	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  020da	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  020e1	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  020e5	ba 0c 00 00 00	 mov	 edx, 12
  020ea	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  020ee	e8 00 00 00 00	 call	 rotlFixed
  020f3	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  020f7	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  020fb	ba 0a 00 00 00	 mov	 edx, 10
  02100	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02104	e8 00 00 00 00	 call	 rotlFixed
  02109	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 304  : 	Subround(I, e2, a2, b2, c2, d2, X[13],  8, k6);

  0210d	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02111	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02115	33 c8		 xor	 ecx, eax
  02117	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0211b	23 c1		 and	 eax, ecx
  0211d	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02121	33 c8		 xor	 ecx, eax
  02123	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02128	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  0212b	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  0212f	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  02136	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  0213a	ba 08 00 00 00	 mov	 edx, 8
  0213f	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02143	e8 00 00 00 00	 call	 rotlFixed
  02148	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  0214c	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02150	ba 0a 00 00 00	 mov	 edx, 10
  02155	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02159	e8 00 00 00 00	 call	 rotlFixed
  0215e	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 305  : 	Subround(I, d2, e2, a2, b2, c2, X[ 5],  9, k6);

  02162	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02166	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  0216a	33 c8		 xor	 ecx, eax
  0216c	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02170	23 c1		 and	 eax, ecx
  02172	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02176	33 c8		 xor	 ecx, eax
  02178	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0217d	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  02180	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02184	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  0218b	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  0218f	ba 09 00 00 00	 mov	 edx, 9
  02194	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02198	e8 00 00 00 00	 call	 rotlFixed
  0219d	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  021a1	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  021a5	ba 0a 00 00 00	 mov	 edx, 10
  021aa	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  021ae	e8 00 00 00 00	 call	 rotlFixed
  021b3	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 306  : 	Subround(I, c2, d2, e2, a2, b2, X[10], 11, k6);

  021b7	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  021bb	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  021bf	33 c8		 xor	 ecx, eax
  021c1	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  021c5	23 c1		 and	 eax, ecx
  021c7	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  021cb	33 c8		 xor	 ecx, eax
  021cd	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  021d2	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  021d5	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  021d9	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  021e0	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  021e4	ba 0b 00 00 00	 mov	 edx, 11
  021e9	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  021ed	e8 00 00 00 00	 call	 rotlFixed
  021f2	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  021f6	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  021fa	ba 0a 00 00 00	 mov	 edx, 10
  021ff	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02203	e8 00 00 00 00	 call	 rotlFixed
  02208	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 307  : 	Subround(I, b2, c2, d2, e2, a2, X[14],  7, k6);

  0220c	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02210	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02214	33 c8		 xor	 ecx, eax
  02216	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  0221a	23 c1		 and	 eax, ecx
  0221c	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02220	33 c8		 xor	 ecx, eax
  02222	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02227	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  0222a	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  0222e	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  02235	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02239	ba 07 00 00 00	 mov	 edx, 7
  0223e	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02242	e8 00 00 00 00	 call	 rotlFixed
  02247	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  0224b	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  0224f	ba 0a 00 00 00	 mov	 edx, 10
  02254	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02258	e8 00 00 00 00	 call	 rotlFixed
  0225d	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 308  : 	Subround(I, a2, b2, c2, d2, e2, X[15],  7, k6);

  02261	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02265	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02269	33 c8		 xor	 ecx, eax
  0226b	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  0226f	23 c1		 and	 eax, ecx
  02271	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02275	33 c8		 xor	 ecx, eax
  02277	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0227c	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  0227f	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02283	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  0228a	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  0228e	ba 07 00 00 00	 mov	 edx, 7
  02293	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02297	e8 00 00 00 00	 call	 rotlFixed
  0229c	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  022a0	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  022a4	ba 0a 00 00 00	 mov	 edx, 10
  022a9	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  022ad	e8 00 00 00 00	 call	 rotlFixed
  022b2	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 309  : 	Subround(I, e2, a2, b2, c2, d2, X[ 8], 12, k6);

  022b6	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  022ba	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  022be	33 c8		 xor	 ecx, eax
  022c0	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  022c4	23 c1		 and	 eax, ecx
  022c6	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  022ca	33 c8		 xor	 ecx, eax
  022cc	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  022d1	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  022d4	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  022d8	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  022df	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  022e3	ba 0c 00 00 00	 mov	 edx, 12
  022e8	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  022ec	e8 00 00 00 00	 call	 rotlFixed
  022f1	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  022f5	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  022f9	ba 0a 00 00 00	 mov	 edx, 10
  022fe	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02302	e8 00 00 00 00	 call	 rotlFixed
  02307	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 310  : 	Subround(I, d2, e2, a2, b2, c2, X[12],  7, k6);

  0230b	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  0230f	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02313	33 c8		 xor	 ecx, eax
  02315	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02319	23 c1		 and	 eax, ecx
  0231b	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  0231f	33 c8		 xor	 ecx, eax
  02321	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02326	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  02329	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  0232d	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  02334	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02338	ba 07 00 00 00	 mov	 edx, 7
  0233d	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02341	e8 00 00 00 00	 call	 rotlFixed
  02346	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  0234a	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  0234e	ba 0a 00 00 00	 mov	 edx, 10
  02353	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02357	e8 00 00 00 00	 call	 rotlFixed
  0235c	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 311  : 	Subround(I, c2, d2, e2, a2, b2, X[ 4],  6, k6);

  02360	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02364	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02368	33 c8		 xor	 ecx, eax
  0236a	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  0236e	23 c1		 and	 eax, ecx
  02370	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02374	33 c8		 xor	 ecx, eax
  02376	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0237b	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  0237e	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02382	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  02389	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  0238d	ba 06 00 00 00	 mov	 edx, 6
  02392	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02396	e8 00 00 00 00	 call	 rotlFixed
  0239b	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  0239f	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  023a3	ba 0a 00 00 00	 mov	 edx, 10
  023a8	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  023ac	e8 00 00 00 00	 call	 rotlFixed
  023b1	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 312  : 	Subround(I, b2, c2, d2, e2, a2, X[ 9], 15, k6);

  023b5	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  023b9	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  023bd	33 c8		 xor	 ecx, eax
  023bf	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  023c3	23 c1		 and	 eax, ecx
  023c5	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  023c9	33 c8		 xor	 ecx, eax
  023cb	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  023d0	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  023d3	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  023d7	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  023de	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  023e2	ba 0f 00 00 00	 mov	 edx, 15
  023e7	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  023eb	e8 00 00 00 00	 call	 rotlFixed
  023f0	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  023f4	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  023f8	ba 0a 00 00 00	 mov	 edx, 10
  023fd	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02401	e8 00 00 00 00	 call	 rotlFixed
  02406	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 313  : 	Subround(I, a2, b2, c2, d2, e2, X[ 1], 13, k6);

  0240a	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0240e	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02412	33 c8		 xor	 ecx, eax
  02414	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02418	23 c1		 and	 eax, ecx
  0241a	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  0241e	33 c8		 xor	 ecx, eax
  02420	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02425	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  02428	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  0242c	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  02433	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02437	ba 0d 00 00 00	 mov	 edx, 13
  0243c	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02440	e8 00 00 00 00	 call	 rotlFixed
  02445	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  02449	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  0244d	ba 0a 00 00 00	 mov	 edx, 10
  02452	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02456	e8 00 00 00 00	 call	 rotlFixed
  0245b	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 314  : 	Subround(I, e2, a2, b2, c2, d2, X[ 2], 11, k6);

  0245f	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02463	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02467	33 c8		 xor	 ecx, eax
  02469	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0246d	23 c1		 and	 eax, ecx
  0246f	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02473	33 c8		 xor	 ecx, eax
  02475	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0247a	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  0247d	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02481	8d 84 08 24 d1
	4d 5c		 lea	 eax, DWORD PTR [rax+rcx+1548603684]
  02488	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  0248c	ba 0b 00 00 00	 mov	 edx, 11
  02491	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02495	e8 00 00 00 00	 call	 rotlFixed
  0249a	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  0249e	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  024a2	ba 0a 00 00 00	 mov	 edx, 10
  024a7	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  024ab	e8 00 00 00 00	 call	 rotlFixed
  024b0	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 315  : 
; 316  : 	Subround(H, d2, e2, a2, b2, c2, X[15],  9, k7);

  024b4	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  024b8	f7 d1		 not	 ecx
  024ba	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  024be	0b c1		 or	 eax, ecx
  024c0	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  024c4	33 c8		 xor	 ecx, eax
  024c6	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  024cb	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  024ce	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  024d2	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  024d9	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  024dd	ba 09 00 00 00	 mov	 edx, 9
  024e2	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  024e6	e8 00 00 00 00	 call	 rotlFixed
  024eb	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  024ef	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  024f3	ba 0a 00 00 00	 mov	 edx, 10
  024f8	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  024fc	e8 00 00 00 00	 call	 rotlFixed
  02501	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 317  : 	Subround(H, c2, d2, e2, a2, b2, X[ 5],  7, k7);

  02505	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02509	f7 d1		 not	 ecx
  0250b	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  0250f	0b c1		 or	 eax, ecx
  02511	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02515	33 c8		 xor	 ecx, eax
  02517	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0251c	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  0251f	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02523	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  0252a	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  0252e	ba 07 00 00 00	 mov	 edx, 7
  02533	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02537	e8 00 00 00 00	 call	 rotlFixed
  0253c	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  02540	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02544	ba 0a 00 00 00	 mov	 edx, 10
  02549	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  0254d	e8 00 00 00 00	 call	 rotlFixed
  02552	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 318  : 	Subround(H, b2, c2, d2, e2, a2, X[ 1], 15, k7);

  02556	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  0255a	f7 d1		 not	 ecx
  0255c	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02560	0b c1		 or	 eax, ecx
  02562	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02566	33 c8		 xor	 ecx, eax
  02568	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0256d	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  02570	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02574	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  0257b	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  0257f	ba 0f 00 00 00	 mov	 edx, 15
  02584	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02588	e8 00 00 00 00	 call	 rotlFixed
  0258d	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  02591	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02595	ba 0a 00 00 00	 mov	 edx, 10
  0259a	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  0259e	e8 00 00 00 00	 call	 rotlFixed
  025a3	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 319  : 	Subround(H, a2, b2, c2, d2, e2, X[ 3], 11, k7);

  025a7	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  025ab	f7 d1		 not	 ecx
  025ad	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  025b1	0b c1		 or	 eax, ecx
  025b3	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  025b7	33 c8		 xor	 ecx, eax
  025b9	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  025be	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  025c1	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  025c5	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  025cc	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  025d0	ba 0b 00 00 00	 mov	 edx, 11
  025d5	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  025d9	e8 00 00 00 00	 call	 rotlFixed
  025de	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  025e2	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  025e6	ba 0a 00 00 00	 mov	 edx, 10
  025eb	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  025ef	e8 00 00 00 00	 call	 rotlFixed
  025f4	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 320  : 	Subround(H, e2, a2, b2, c2, d2, X[ 7],  8, k7);

  025f8	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  025fc	f7 d1		 not	 ecx
  025fe	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02602	0b c1		 or	 eax, ecx
  02604	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02608	33 c8		 xor	 ecx, eax
  0260a	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0260f	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  02612	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02616	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  0261d	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02621	ba 08 00 00 00	 mov	 edx, 8
  02626	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  0262a	e8 00 00 00 00	 call	 rotlFixed
  0262f	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  02633	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02637	ba 0a 00 00 00	 mov	 edx, 10
  0263c	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02640	e8 00 00 00 00	 call	 rotlFixed
  02645	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 321  : 	Subround(H, d2, e2, a2, b2, c2, X[14],  6, k7);

  02649	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  0264d	f7 d1		 not	 ecx
  0264f	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02653	0b c1		 or	 eax, ecx
  02655	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02659	33 c8		 xor	 ecx, eax
  0265b	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02660	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  02663	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02667	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  0266e	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02672	ba 06 00 00 00	 mov	 edx, 6
  02677	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  0267b	e8 00 00 00 00	 call	 rotlFixed
  02680	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  02684	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02688	ba 0a 00 00 00	 mov	 edx, 10
  0268d	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02691	e8 00 00 00 00	 call	 rotlFixed
  02696	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 322  : 	Subround(H, c2, d2, e2, a2, b2, X[ 6],  6, k7);

  0269a	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  0269e	f7 d1		 not	 ecx
  026a0	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  026a4	0b c1		 or	 eax, ecx
  026a6	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  026aa	33 c8		 xor	 ecx, eax
  026ac	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  026b1	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  026b4	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  026b8	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  026bf	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  026c3	ba 06 00 00 00	 mov	 edx, 6
  026c8	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  026cc	e8 00 00 00 00	 call	 rotlFixed
  026d1	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  026d5	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  026d9	ba 0a 00 00 00	 mov	 edx, 10
  026de	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  026e2	e8 00 00 00 00	 call	 rotlFixed
  026e7	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 323  : 	Subround(H, b2, c2, d2, e2, a2, X[ 9], 14, k7);

  026eb	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  026ef	f7 d1		 not	 ecx
  026f1	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  026f5	0b c1		 or	 eax, ecx
  026f7	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  026fb	33 c8		 xor	 ecx, eax
  026fd	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02702	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  02705	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02709	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  02710	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02714	ba 0e 00 00 00	 mov	 edx, 14
  02719	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  0271d	e8 00 00 00 00	 call	 rotlFixed
  02722	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  02726	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  0272a	ba 0a 00 00 00	 mov	 edx, 10
  0272f	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02733	e8 00 00 00 00	 call	 rotlFixed
  02738	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 324  : 	Subround(H, a2, b2, c2, d2, e2, X[11], 12, k7);

  0273c	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02740	f7 d1		 not	 ecx
  02742	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02746	0b c1		 or	 eax, ecx
  02748	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  0274c	33 c8		 xor	 ecx, eax
  0274e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02753	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  02756	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  0275a	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  02761	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02765	ba 0c 00 00 00	 mov	 edx, 12
  0276a	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  0276e	e8 00 00 00 00	 call	 rotlFixed
  02773	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  02777	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  0277b	ba 0a 00 00 00	 mov	 edx, 10
  02780	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02784	e8 00 00 00 00	 call	 rotlFixed
  02789	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 325  : 	Subround(H, e2, a2, b2, c2, d2, X[ 8], 13, k7);

  0278d	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02791	f7 d1		 not	 ecx
  02793	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02797	0b c1		 or	 eax, ecx
  02799	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  0279d	33 c8		 xor	 ecx, eax
  0279f	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  027a4	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  027a7	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  027ab	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  027b2	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  027b6	ba 0d 00 00 00	 mov	 edx, 13
  027bb	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  027bf	e8 00 00 00 00	 call	 rotlFixed
  027c4	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  027c8	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  027cc	ba 0a 00 00 00	 mov	 edx, 10
  027d1	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  027d5	e8 00 00 00 00	 call	 rotlFixed
  027da	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 326  : 	Subround(H, d2, e2, a2, b2, c2, X[12],  5, k7);

  027de	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  027e2	f7 d1		 not	 ecx
  027e4	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  027e8	0b c1		 or	 eax, ecx
  027ea	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  027ee	33 c8		 xor	 ecx, eax
  027f0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  027f5	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  027f8	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  027fc	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  02803	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02807	ba 05 00 00 00	 mov	 edx, 5
  0280c	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02810	e8 00 00 00 00	 call	 rotlFixed
  02815	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  02819	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  0281d	ba 0a 00 00 00	 mov	 edx, 10
  02822	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02826	e8 00 00 00 00	 call	 rotlFixed
  0282b	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 327  : 	Subround(H, c2, d2, e2, a2, b2, X[ 2], 14, k7);

  0282f	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02833	f7 d1		 not	 ecx
  02835	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02839	0b c1		 or	 eax, ecx
  0283b	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  0283f	33 c8		 xor	 ecx, eax
  02841	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02846	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  02849	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0284d	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  02854	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02858	ba 0e 00 00 00	 mov	 edx, 14
  0285d	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02861	e8 00 00 00 00	 call	 rotlFixed
  02866	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  0286a	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  0286e	ba 0a 00 00 00	 mov	 edx, 10
  02873	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02877	e8 00 00 00 00	 call	 rotlFixed
  0287c	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 328  : 	Subround(H, b2, c2, d2, e2, a2, X[10], 13, k7);

  02880	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02884	f7 d1		 not	 ecx
  02886	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0288a	0b c1		 or	 eax, ecx
  0288c	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02890	33 c8		 xor	 ecx, eax
  02892	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02897	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  0289a	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  0289e	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  028a5	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  028a9	ba 0d 00 00 00	 mov	 edx, 13
  028ae	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  028b2	e8 00 00 00 00	 call	 rotlFixed
  028b7	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  028bb	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  028bf	ba 0a 00 00 00	 mov	 edx, 10
  028c4	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  028c8	e8 00 00 00 00	 call	 rotlFixed
  028cd	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 329  : 	Subround(H, a2, b2, c2, d2, e2, X[ 0], 13, k7);

  028d1	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  028d5	f7 d1		 not	 ecx
  028d7	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  028db	0b c1		 or	 eax, ecx
  028dd	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  028e1	33 c8		 xor	 ecx, eax
  028e3	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  028e8	03 08		 add	 ecx, DWORD PTR [rax]
  028ea	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  028ee	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  028f5	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  028f9	ba 0d 00 00 00	 mov	 edx, 13
  028fe	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02902	e8 00 00 00 00	 call	 rotlFixed
  02907	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  0290b	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  0290f	ba 0a 00 00 00	 mov	 edx, 10
  02914	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02918	e8 00 00 00 00	 call	 rotlFixed
  0291d	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 330  : 	Subround(H, e2, a2, b2, c2, d2, X[ 4],  7, k7);

  02921	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02925	f7 d1		 not	 ecx
  02927	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  0292b	0b c1		 or	 eax, ecx
  0292d	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02931	33 c8		 xor	 ecx, eax
  02933	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02938	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  0293b	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  0293f	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  02946	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  0294a	ba 07 00 00 00	 mov	 edx, 7
  0294f	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02953	e8 00 00 00 00	 call	 rotlFixed
  02958	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  0295c	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02960	ba 0a 00 00 00	 mov	 edx, 10
  02965	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02969	e8 00 00 00 00	 call	 rotlFixed
  0296e	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 331  : 	Subround(H, d2, e2, a2, b2, c2, X[13],  5, k7);

  02972	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02976	f7 d1		 not	 ecx
  02978	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  0297c	0b c1		 or	 eax, ecx
  0297e	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02982	33 c8		 xor	 ecx, eax
  02984	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02989	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  0298c	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02990	8d 84 08 f3 3e
	70 6d		 lea	 eax, DWORD PTR [rax+rcx+1836072691]
  02997	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  0299b	ba 05 00 00 00	 mov	 edx, 5
  029a0	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  029a4	e8 00 00 00 00	 call	 rotlFixed
  029a9	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  029ad	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  029b1	ba 0a 00 00 00	 mov	 edx, 10
  029b6	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  029ba	e8 00 00 00 00	 call	 rotlFixed
  029bf	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 332  : 
; 333  : 	Subround(G, c2, d2, e2, a2, b2, X[ 8], 15, k8);

  029c3	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  029c7	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  029cb	33 c8		 xor	 ecx, eax
  029cd	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  029d1	23 c1		 and	 eax, ecx
  029d3	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  029d7	33 c8		 xor	 ecx, eax
  029d9	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  029de	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  029e1	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  029e5	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  029ec	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  029f0	ba 0f 00 00 00	 mov	 edx, 15
  029f5	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  029f9	e8 00 00 00 00	 call	 rotlFixed
  029fe	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  02a02	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02a06	ba 0a 00 00 00	 mov	 edx, 10
  02a0b	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02a0f	e8 00 00 00 00	 call	 rotlFixed
  02a14	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 334  : 	Subround(G, b2, c2, d2, e2, a2, X[ 6],  5, k8);

  02a18	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02a1c	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02a20	33 c8		 xor	 ecx, eax
  02a22	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02a26	23 c1		 and	 eax, ecx
  02a28	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02a2c	33 c8		 xor	 ecx, eax
  02a2e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02a33	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  02a36	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02a3a	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02a41	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02a45	ba 05 00 00 00	 mov	 edx, 5
  02a4a	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02a4e	e8 00 00 00 00	 call	 rotlFixed
  02a53	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  02a57	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02a5b	ba 0a 00 00 00	 mov	 edx, 10
  02a60	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02a64	e8 00 00 00 00	 call	 rotlFixed
  02a69	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 335  : 	Subround(G, a2, b2, c2, d2, e2, X[ 4],  8, k8);

  02a6d	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02a71	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02a75	33 c8		 xor	 ecx, eax
  02a77	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02a7b	23 c1		 and	 eax, ecx
  02a7d	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02a81	33 c8		 xor	 ecx, eax
  02a83	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02a88	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  02a8b	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02a8f	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02a96	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02a9a	ba 08 00 00 00	 mov	 edx, 8
  02a9f	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02aa3	e8 00 00 00 00	 call	 rotlFixed
  02aa8	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  02aac	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02ab0	ba 0a 00 00 00	 mov	 edx, 10
  02ab5	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02ab9	e8 00 00 00 00	 call	 rotlFixed
  02abe	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 336  : 	Subround(G, e2, a2, b2, c2, d2, X[ 1], 11, k8);

  02ac2	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02ac6	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02aca	33 c8		 xor	 ecx, eax
  02acc	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02ad0	23 c1		 and	 eax, ecx
  02ad2	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02ad6	33 c8		 xor	 ecx, eax
  02ad8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02add	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  02ae0	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02ae4	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02aeb	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02aef	ba 0b 00 00 00	 mov	 edx, 11
  02af4	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02af8	e8 00 00 00 00	 call	 rotlFixed
  02afd	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  02b01	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02b05	ba 0a 00 00 00	 mov	 edx, 10
  02b0a	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02b0e	e8 00 00 00 00	 call	 rotlFixed
  02b13	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 337  : 	Subround(G, d2, e2, a2, b2, c2, X[ 3], 14, k8);

  02b17	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02b1b	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02b1f	33 c8		 xor	 ecx, eax
  02b21	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02b25	23 c1		 and	 eax, ecx
  02b27	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02b2b	33 c8		 xor	 ecx, eax
  02b2d	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02b32	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  02b35	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02b39	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02b40	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02b44	ba 0e 00 00 00	 mov	 edx, 14
  02b49	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02b4d	e8 00 00 00 00	 call	 rotlFixed
  02b52	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  02b56	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02b5a	ba 0a 00 00 00	 mov	 edx, 10
  02b5f	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02b63	e8 00 00 00 00	 call	 rotlFixed
  02b68	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 338  : 	Subround(G, c2, d2, e2, a2, b2, X[11], 14, k8);

  02b6c	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02b70	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02b74	33 c8		 xor	 ecx, eax
  02b76	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02b7a	23 c1		 and	 eax, ecx
  02b7c	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02b80	33 c8		 xor	 ecx, eax
  02b82	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02b87	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  02b8a	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02b8e	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02b95	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02b99	ba 0e 00 00 00	 mov	 edx, 14
  02b9e	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02ba2	e8 00 00 00 00	 call	 rotlFixed
  02ba7	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  02bab	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02baf	ba 0a 00 00 00	 mov	 edx, 10
  02bb4	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02bb8	e8 00 00 00 00	 call	 rotlFixed
  02bbd	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 339  : 	Subround(G, b2, c2, d2, e2, a2, X[15],  6, k8);

  02bc1	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02bc5	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02bc9	33 c8		 xor	 ecx, eax
  02bcb	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02bcf	23 c1		 and	 eax, ecx
  02bd1	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02bd5	33 c8		 xor	 ecx, eax
  02bd7	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02bdc	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  02bdf	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02be3	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02bea	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02bee	ba 06 00 00 00	 mov	 edx, 6
  02bf3	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02bf7	e8 00 00 00 00	 call	 rotlFixed
  02bfc	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  02c00	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02c04	ba 0a 00 00 00	 mov	 edx, 10
  02c09	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02c0d	e8 00 00 00 00	 call	 rotlFixed
  02c12	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 340  : 	Subround(G, a2, b2, c2, d2, e2, X[ 0], 14, k8);

  02c16	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02c1a	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02c1e	33 c8		 xor	 ecx, eax
  02c20	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02c24	23 c1		 and	 eax, ecx
  02c26	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02c2a	33 c8		 xor	 ecx, eax
  02c2c	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02c31	03 08		 add	 ecx, DWORD PTR [rax]
  02c33	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02c37	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02c3e	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02c42	ba 0e 00 00 00	 mov	 edx, 14
  02c47	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02c4b	e8 00 00 00 00	 call	 rotlFixed
  02c50	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  02c54	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02c58	ba 0a 00 00 00	 mov	 edx, 10
  02c5d	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02c61	e8 00 00 00 00	 call	 rotlFixed
  02c66	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 341  : 	Subround(G, e2, a2, b2, c2, d2, X[ 5],  6, k8);

  02c6a	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02c6e	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02c72	33 c8		 xor	 ecx, eax
  02c74	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02c78	23 c1		 and	 eax, ecx
  02c7a	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02c7e	33 c8		 xor	 ecx, eax
  02c80	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02c85	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  02c88	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02c8c	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02c93	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02c97	ba 06 00 00 00	 mov	 edx, 6
  02c9c	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02ca0	e8 00 00 00 00	 call	 rotlFixed
  02ca5	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  02ca9	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02cad	ba 0a 00 00 00	 mov	 edx, 10
  02cb2	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02cb6	e8 00 00 00 00	 call	 rotlFixed
  02cbb	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 342  : 	Subround(G, d2, e2, a2, b2, c2, X[12],  9, k8);

  02cbf	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02cc3	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02cc7	33 c8		 xor	 ecx, eax
  02cc9	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02ccd	23 c1		 and	 eax, ecx
  02ccf	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02cd3	33 c8		 xor	 ecx, eax
  02cd5	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02cda	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  02cdd	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02ce1	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02ce8	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02cec	ba 09 00 00 00	 mov	 edx, 9
  02cf1	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02cf5	e8 00 00 00 00	 call	 rotlFixed
  02cfa	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  02cfe	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02d02	ba 0a 00 00 00	 mov	 edx, 10
  02d07	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02d0b	e8 00 00 00 00	 call	 rotlFixed
  02d10	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 343  : 	Subround(G, c2, d2, e2, a2, b2, X[ 2], 12, k8);

  02d14	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02d18	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02d1c	33 c8		 xor	 ecx, eax
  02d1e	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02d22	23 c1		 and	 eax, ecx
  02d24	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02d28	33 c8		 xor	 ecx, eax
  02d2a	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02d2f	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  02d32	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02d36	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02d3d	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02d41	ba 0c 00 00 00	 mov	 edx, 12
  02d46	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02d4a	e8 00 00 00 00	 call	 rotlFixed
  02d4f	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  02d53	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02d57	ba 0a 00 00 00	 mov	 edx, 10
  02d5c	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02d60	e8 00 00 00 00	 call	 rotlFixed
  02d65	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 344  : 	Subround(G, b2, c2, d2, e2, a2, X[13],  9, k8);

  02d69	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02d6d	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02d71	33 c8		 xor	 ecx, eax
  02d73	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02d77	23 c1		 and	 eax, ecx
  02d79	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02d7d	33 c8		 xor	 ecx, eax
  02d7f	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02d84	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  02d87	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02d8b	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02d92	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02d96	ba 09 00 00 00	 mov	 edx, 9
  02d9b	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02d9f	e8 00 00 00 00	 call	 rotlFixed
  02da4	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  02da8	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02dac	ba 0a 00 00 00	 mov	 edx, 10
  02db1	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02db5	e8 00 00 00 00	 call	 rotlFixed
  02dba	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 345  : 	Subround(G, a2, b2, c2, d2, e2, X[ 9], 12, k8);

  02dbe	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02dc2	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02dc6	33 c8		 xor	 ecx, eax
  02dc8	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02dcc	23 c1		 and	 eax, ecx
  02dce	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02dd2	33 c8		 xor	 ecx, eax
  02dd4	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02dd9	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  02ddc	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02de0	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02de7	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02deb	ba 0c 00 00 00	 mov	 edx, 12
  02df0	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02df4	e8 00 00 00 00	 call	 rotlFixed
  02df9	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  02dfd	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02e01	ba 0a 00 00 00	 mov	 edx, 10
  02e06	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02e0a	e8 00 00 00 00	 call	 rotlFixed
  02e0f	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 346  : 	Subround(G, e2, a2, b2, c2, d2, X[ 7],  5, k8);

  02e13	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02e17	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02e1b	33 c8		 xor	 ecx, eax
  02e1d	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02e21	23 c1		 and	 eax, ecx
  02e23	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02e27	33 c8		 xor	 ecx, eax
  02e29	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02e2e	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  02e31	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02e35	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02e3c	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02e40	ba 05 00 00 00	 mov	 edx, 5
  02e45	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02e49	e8 00 00 00 00	 call	 rotlFixed
  02e4e	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  02e52	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02e56	ba 0a 00 00 00	 mov	 edx, 10
  02e5b	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02e5f	e8 00 00 00 00	 call	 rotlFixed
  02e64	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 347  : 	Subround(G, d2, e2, a2, b2, c2, X[10], 15, k8);

  02e68	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02e6c	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02e70	33 c8		 xor	 ecx, eax
  02e72	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02e76	23 c1		 and	 eax, ecx
  02e78	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02e7c	33 c8		 xor	 ecx, eax
  02e7e	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02e83	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  02e86	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02e8a	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02e91	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02e95	ba 0f 00 00 00	 mov	 edx, 15
  02e9a	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02e9e	e8 00 00 00 00	 call	 rotlFixed
  02ea3	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  02ea7	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  02eab	ba 0a 00 00 00	 mov	 edx, 10
  02eb0	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02eb4	e8 00 00 00 00	 call	 rotlFixed
  02eb9	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 348  : 	Subround(G, c2, d2, e2, a2, b2, X[14],  8, k8);

  02ebd	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02ec1	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02ec5	33 c8		 xor	 ecx, eax
  02ec7	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02ecb	23 c1		 and	 eax, ecx
  02ecd	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02ed1	33 c8		 xor	 ecx, eax
  02ed3	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02ed8	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  02edb	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02edf	8d 84 08 e9 76
	6d 7a		 lea	 eax, DWORD PTR [rax+rcx+2053994217]
  02ee6	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02eea	ba 08 00 00 00	 mov	 edx, 8
  02eef	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02ef3	e8 00 00 00 00	 call	 rotlFixed
  02ef8	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  02efc	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  02f00	ba 0a 00 00 00	 mov	 edx, 10
  02f05	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02f09	e8 00 00 00 00	 call	 rotlFixed
  02f0e	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 349  : 
; 350  : 	Subround(F, b2, c2, d2, e2, a2, X[12],  8, k9);

  02f12	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  02f16	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02f1a	33 c8		 xor	 ecx, eax
  02f1c	33 4c 24 20	 xor	 ecx, DWORD PTR e2$[rsp]
  02f20	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02f25	03 48 30	 add	 ecx, DWORD PTR [rax+48]
  02f28	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02f2c	03 c1		 add	 eax, ecx
  02f2e	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02f32	ba 08 00 00 00	 mov	 edx, 8
  02f37	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02f3b	e8 00 00 00 00	 call	 rotlFixed
  02f40	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  02f44	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  02f48	ba 0a 00 00 00	 mov	 edx, 10
  02f4d	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  02f51	e8 00 00 00 00	 call	 rotlFixed
  02f56	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 351  : 	Subround(F, a2, b2, c2, d2, e2, X[15],  5, k9);

  02f5a	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  02f5e	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02f62	33 c8		 xor	 ecx, eax
  02f64	33 4c 24 30	 xor	 ecx, DWORD PTR d2$[rsp]
  02f68	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02f6d	03 48 3c	 add	 ecx, DWORD PTR [rax+60]
  02f70	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02f74	03 c1		 add	 eax, ecx
  02f76	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02f7a	ba 05 00 00 00	 mov	 edx, 5
  02f7f	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02f83	e8 00 00 00 00	 call	 rotlFixed
  02f88	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  02f8c	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  02f90	ba 0a 00 00 00	 mov	 edx, 10
  02f95	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  02f99	e8 00 00 00 00	 call	 rotlFixed
  02f9e	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 352  : 	Subround(F, e2, a2, b2, c2, d2, X[10], 12, k9);

  02fa2	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  02fa6	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  02faa	33 c8		 xor	 ecx, eax
  02fac	33 4c 24 34	 xor	 ecx, DWORD PTR c2$[rsp]
  02fb0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02fb5	03 48 28	 add	 ecx, DWORD PTR [rax+40]
  02fb8	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  02fbc	03 c1		 add	 eax, ecx
  02fbe	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02fc2	ba 0c 00 00 00	 mov	 edx, 12
  02fc7	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02fcb	e8 00 00 00 00	 call	 rotlFixed
  02fd0	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  02fd4	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  02fd8	ba 0a 00 00 00	 mov	 edx, 10
  02fdd	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  02fe1	e8 00 00 00 00	 call	 rotlFixed
  02fe6	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 353  : 	Subround(F, d2, e2, a2, b2, c2, X[ 4],  9, k9);

  02fea	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  02fee	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  02ff2	33 c8		 xor	 ecx, eax
  02ff4	33 4c 24 28	 xor	 ecx, DWORD PTR b2$[rsp]
  02ff8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  02ffd	03 48 10	 add	 ecx, DWORD PTR [rax+16]
  03000	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  03004	03 c1		 add	 eax, ecx
  03006	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  0300a	ba 09 00 00 00	 mov	 edx, 9
  0300f	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  03013	e8 00 00 00 00	 call	 rotlFixed
  03018	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  0301c	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  03020	ba 0a 00 00 00	 mov	 edx, 10
  03025	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  03029	e8 00 00 00 00	 call	 rotlFixed
  0302e	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 354  : 	Subround(F, c2, d2, e2, a2, b2, X[ 1], 12, k9);

  03032	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  03036	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  0303a	33 c8		 xor	 ecx, eax
  0303c	33 4c 24 48	 xor	 ecx, DWORD PTR a2$[rsp]
  03040	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  03045	03 48 04	 add	 ecx, DWORD PTR [rax+4]
  03048	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0304c	03 c1		 add	 eax, ecx
  0304e	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  03052	ba 0c 00 00 00	 mov	 edx, 12
  03057	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  0305b	e8 00 00 00 00	 call	 rotlFixed
  03060	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  03064	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  03068	ba 0a 00 00 00	 mov	 edx, 10
  0306d	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  03071	e8 00 00 00 00	 call	 rotlFixed
  03076	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 355  : 	Subround(F, b2, c2, d2, e2, a2, X[ 5],  5, k9);

  0307a	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  0307e	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  03082	33 c8		 xor	 ecx, eax
  03084	33 4c 24 20	 xor	 ecx, DWORD PTR e2$[rsp]
  03088	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0308d	03 48 14	 add	 ecx, DWORD PTR [rax+20]
  03090	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  03094	03 c1		 add	 eax, ecx
  03096	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  0309a	ba 05 00 00 00	 mov	 edx, 5
  0309f	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  030a3	e8 00 00 00 00	 call	 rotlFixed
  030a8	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  030ac	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  030b0	ba 0a 00 00 00	 mov	 edx, 10
  030b5	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  030b9	e8 00 00 00 00	 call	 rotlFixed
  030be	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 356  : 	Subround(F, a2, b2, c2, d2, e2, X[ 8], 14, k9);

  030c2	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  030c6	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  030ca	33 c8		 xor	 ecx, eax
  030cc	33 4c 24 30	 xor	 ecx, DWORD PTR d2$[rsp]
  030d0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  030d5	03 48 20	 add	 ecx, DWORD PTR [rax+32]
  030d8	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  030dc	03 c1		 add	 eax, ecx
  030de	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  030e2	ba 0e 00 00 00	 mov	 edx, 14
  030e7	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  030eb	e8 00 00 00 00	 call	 rotlFixed
  030f0	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  030f4	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  030f8	ba 0a 00 00 00	 mov	 edx, 10
  030fd	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  03101	e8 00 00 00 00	 call	 rotlFixed
  03106	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 357  : 	Subround(F, e2, a2, b2, c2, d2, X[ 7],  6, k9);

  0310a	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  0310e	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  03112	33 c8		 xor	 ecx, eax
  03114	33 4c 24 34	 xor	 ecx, DWORD PTR c2$[rsp]
  03118	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0311d	03 48 1c	 add	 ecx, DWORD PTR [rax+28]
  03120	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  03124	03 c1		 add	 eax, ecx
  03126	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  0312a	ba 06 00 00 00	 mov	 edx, 6
  0312f	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  03133	e8 00 00 00 00	 call	 rotlFixed
  03138	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  0313c	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  03140	ba 0a 00 00 00	 mov	 edx, 10
  03145	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  03149	e8 00 00 00 00	 call	 rotlFixed
  0314e	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 358  : 	Subround(F, d2, e2, a2, b2, c2, X[ 6],  8, k9);

  03152	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  03156	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  0315a	33 c8		 xor	 ecx, eax
  0315c	33 4c 24 28	 xor	 ecx, DWORD PTR b2$[rsp]
  03160	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  03165	03 48 18	 add	 ecx, DWORD PTR [rax+24]
  03168	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  0316c	03 c1		 add	 eax, ecx
  0316e	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  03172	ba 08 00 00 00	 mov	 edx, 8
  03177	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  0317b	e8 00 00 00 00	 call	 rotlFixed
  03180	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  03184	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  03188	ba 0a 00 00 00	 mov	 edx, 10
  0318d	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  03191	e8 00 00 00 00	 call	 rotlFixed
  03196	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 359  : 	Subround(F, c2, d2, e2, a2, b2, X[ 2], 13, k9);

  0319a	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  0319e	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  031a2	33 c8		 xor	 ecx, eax
  031a4	33 4c 24 48	 xor	 ecx, DWORD PTR a2$[rsp]
  031a8	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  031ad	03 48 08	 add	 ecx, DWORD PTR [rax+8]
  031b0	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  031b4	03 c1		 add	 eax, ecx
  031b6	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  031ba	ba 0d 00 00 00	 mov	 edx, 13
  031bf	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  031c3	e8 00 00 00 00	 call	 rotlFixed
  031c8	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  031cc	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  031d0	ba 0a 00 00 00	 mov	 edx, 10
  031d5	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  031d9	e8 00 00 00 00	 call	 rotlFixed
  031de	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 360  : 	Subround(F, b2, c2, d2, e2, a2, X[13],  6, k9);

  031e2	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  031e6	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  031ea	33 c8		 xor	 ecx, eax
  031ec	33 4c 24 20	 xor	 ecx, DWORD PTR e2$[rsp]
  031f0	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  031f5	03 48 34	 add	 ecx, DWORD PTR [rax+52]
  031f8	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  031fc	03 c1		 add	 eax, ecx
  031fe	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  03202	ba 06 00 00 00	 mov	 edx, 6
  03207	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  0320b	e8 00 00 00 00	 call	 rotlFixed
  03210	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  03214	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  03218	ba 0a 00 00 00	 mov	 edx, 10
  0321d	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  03221	e8 00 00 00 00	 call	 rotlFixed
  03226	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 361  : 	Subround(F, a2, b2, c2, d2, e2, X[14],  5, k9);

  0322a	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0322e	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  03232	33 c8		 xor	 ecx, eax
  03234	33 4c 24 30	 xor	 ecx, DWORD PTR d2$[rsp]
  03238	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0323d	03 48 38	 add	 ecx, DWORD PTR [rax+56]
  03240	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  03244	03 c1		 add	 eax, ecx
  03246	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  0324a	ba 05 00 00 00	 mov	 edx, 5
  0324f	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  03253	e8 00 00 00 00	 call	 rotlFixed
  03258	03 44 24 20	 add	 eax, DWORD PTR e2$[rsp]
  0325c	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax
  03260	ba 0a 00 00 00	 mov	 edx, 10
  03265	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  03269	e8 00 00 00 00	 call	 rotlFixed
  0326e	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax

; 362  : 	Subround(F, e2, a2, b2, c2, d2, X[ 0], 15, k9);

  03272	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  03276	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  0327a	33 c8		 xor	 ecx, eax
  0327c	33 4c 24 34	 xor	 ecx, DWORD PTR c2$[rsp]
  03280	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  03285	03 08		 add	 ecx, DWORD PTR [rax]
  03287	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  0328b	03 c1		 add	 eax, ecx
  0328d	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  03291	ba 0f 00 00 00	 mov	 edx, 15
  03296	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  0329a	e8 00 00 00 00	 call	 rotlFixed
  0329f	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  032a3	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax
  032a7	ba 0a 00 00 00	 mov	 edx, 10
  032ac	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  032b0	e8 00 00 00 00	 call	 rotlFixed
  032b5	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax

; 363  : 	Subround(F, d2, e2, a2, b2, c2, X[ 3], 13, k9);

  032b9	8b 44 24 48	 mov	 eax, DWORD PTR a2$[rsp]
  032bd	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  032c1	33 c8		 xor	 ecx, eax
  032c3	33 4c 24 28	 xor	 ecx, DWORD PTR b2$[rsp]
  032c7	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  032cc	03 48 0c	 add	 ecx, DWORD PTR [rax+12]
  032cf	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  032d3	03 c1		 add	 eax, ecx
  032d5	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  032d9	ba 0d 00 00 00	 mov	 edx, 13
  032de	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  032e2	e8 00 00 00 00	 call	 rotlFixed
  032e7	03 44 24 34	 add	 eax, DWORD PTR c2$[rsp]
  032eb	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax
  032ef	ba 0a 00 00 00	 mov	 edx, 10
  032f4	8b 4c 24 48	 mov	 ecx, DWORD PTR a2$[rsp]
  032f8	e8 00 00 00 00	 call	 rotlFixed
  032fd	89 44 24 48	 mov	 DWORD PTR a2$[rsp], eax

; 364  : 	Subround(F, c2, d2, e2, a2, b2, X[ 9], 11, k9);

  03301	8b 44 24 20	 mov	 eax, DWORD PTR e2$[rsp]
  03305	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  03309	33 c8		 xor	 ecx, eax
  0330b	33 4c 24 48	 xor	 ecx, DWORD PTR a2$[rsp]
  0330f	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  03314	03 48 24	 add	 ecx, DWORD PTR [rax+36]
  03317	8b 44 24 34	 mov	 eax, DWORD PTR c2$[rsp]
  0331b	03 c1		 add	 eax, ecx
  0331d	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  03321	ba 0b 00 00 00	 mov	 edx, 11
  03326	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  0332a	e8 00 00 00 00	 call	 rotlFixed
  0332f	03 44 24 28	 add	 eax, DWORD PTR b2$[rsp]
  03333	89 44 24 34	 mov	 DWORD PTR c2$[rsp], eax
  03337	ba 0a 00 00 00	 mov	 edx, 10
  0333c	8b 4c 24 20	 mov	 ecx, DWORD PTR e2$[rsp]
  03340	e8 00 00 00 00	 call	 rotlFixed
  03345	89 44 24 20	 mov	 DWORD PTR e2$[rsp], eax

; 365  : 	Subround(F, b2, c2, d2, e2, a2, X[11], 11, k9);

  03349	8b 44 24 30	 mov	 eax, DWORD PTR d2$[rsp]
  0334d	8b 4c 24 34	 mov	 ecx, DWORD PTR c2$[rsp]
  03351	33 c8		 xor	 ecx, eax
  03353	33 4c 24 20	 xor	 ecx, DWORD PTR e2$[rsp]
  03357	48 8b 44 24 40	 mov	 rax, QWORD PTR X$[rsp]
  0335c	03 48 2c	 add	 ecx, DWORD PTR [rax+44]
  0335f	8b 44 24 28	 mov	 eax, DWORD PTR b2$[rsp]
  03363	03 c1		 add	 eax, ecx
  03365	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  03369	ba 0b 00 00 00	 mov	 edx, 11
  0336e	8b 4c 24 28	 mov	 ecx, DWORD PTR b2$[rsp]
  03372	e8 00 00 00 00	 call	 rotlFixed
  03377	03 44 24 48	 add	 eax, DWORD PTR a2$[rsp]
  0337b	89 44 24 28	 mov	 DWORD PTR b2$[rsp], eax
  0337f	ba 0a 00 00 00	 mov	 edx, 10
  03384	8b 4c 24 30	 mov	 ecx, DWORD PTR d2$[rsp]
  03388	e8 00 00 00 00	 call	 rotlFixed
  0338d	89 44 24 30	 mov	 DWORD PTR d2$[rsp], eax

; 366  : 
; 367  : 	c1        = digest[1] + c1 + d2;

  03391	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  03396	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  03399	03 44 24 2c	 add	 eax, DWORD PTR c1$[rsp]
  0339d	03 44 24 30	 add	 eax, DWORD PTR d2$[rsp]
  033a1	89 44 24 2c	 mov	 DWORD PTR c1$[rsp], eax

; 368  : 	digest[1] = digest[2] + d1 + e2;

  033a5	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  033aa	8b 48 08	 mov	 ecx, DWORD PTR [rax+8]
  033ad	03 4c 24 4c	 add	 ecx, DWORD PTR d1$[rsp]
  033b1	03 4c 24 20	 add	 ecx, DWORD PTR e2$[rsp]
  033b5	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  033ba	89 48 04	 mov	 DWORD PTR [rax+4], ecx

; 369  : 	digest[2] = digest[3] + e1 + a2;

  033bd	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  033c2	8b 48 0c	 mov	 ecx, DWORD PTR [rax+12]
  033c5	03 4c 24 38	 add	 ecx, DWORD PTR e1$[rsp]
  033c9	03 4c 24 48	 add	 ecx, DWORD PTR a2$[rsp]
  033cd	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  033d2	89 48 08	 mov	 DWORD PTR [rax+8], ecx

; 370  : 	digest[3] = digest[4] + a1 + b2;

  033d5	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  033da	8b 48 10	 mov	 ecx, DWORD PTR [rax+16]
  033dd	03 4c 24 24	 add	 ecx, DWORD PTR a1$[rsp]
  033e1	03 4c 24 28	 add	 ecx, DWORD PTR b2$[rsp]
  033e5	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  033ea	89 48 0c	 mov	 DWORD PTR [rax+12], ecx

; 371  : 	digest[4] = digest[0] + b1 + c2;

  033ed	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  033f2	8b 08		 mov	 ecx, DWORD PTR [rax]
  033f4	03 4c 24 50	 add	 ecx, DWORD PTR b1$[rsp]
  033f8	03 4c 24 34	 add	 ecx, DWORD PTR c2$[rsp]
  033fc	48 8b 44 24 70	 mov	 rax, QWORD PTR digest$[rsp]
  03401	89 48 10	 mov	 DWORD PTR [rax+16], ecx

; 372  : 	digest[0] = c1;

  03404	48 8b 4c 24 70	 mov	 rcx, QWORD PTR digest$[rsp]
  03409	8b 44 24 2c	 mov	 eax, DWORD PTR c1$[rsp]
  0340d	89 01		 mov	 DWORD PTR [rcx], eax

; 373  : }

  0340f	48 83 c4 68	 add	 rsp, 104		; 00000068H
  03413	c3		 ret	 0
RMD160Transform ENDP
_TEXT	ENDS
PUBLIC	RMD160Update
;	COMDAT pdata
pdata	SEGMENT
$pdata$RMD160Update DD imagerel $LN8
	DD	imagerel $LN8+304
	DD	imagerel $unwind$RMD160Update
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$RMD160Update DD 031501H
	DD	070118215H
	DD	06010H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT RMD160Update
_TEXT	SEGMENT
have$ = 32
len$ = 40
need$ = 48
ctx$ = 96
input$ = 104
lenArg$ = 112
RMD160Update PROC					; COMDAT

; 69   : {

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 70   : #ifndef TC_WINDOWS_BOOT
; 71   : 	uint64 len = lenArg, have, need;

  00015	8b 44 24 70	 mov	 eax, DWORD PTR lenArg$[rsp]
  00019	48 89 44 24 28	 mov	 QWORD PTR len$[rsp], rax

; 72   : #else
; 73   : 	uint16 len = (uint16) lenArg, have, need;
; 74   : #endif
; 75   : 
; 76   : 	/* Check how many bytes we already have and how many more we need. */
; 77   : 	have = ((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  0001e	48 8b 44 24 60	 mov	 rax, QWORD PTR ctx$[rsp]
  00023	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00027	48 c1 e8 03	 shr	 rax, 3
  0002b	48 83 e0 3f	 and	 rax, 63			; 0000003fH
  0002f	48 89 44 24 20	 mov	 QWORD PTR have$[rsp], rax

; 78   : 	need = RIPEMD160_BLOCK_LENGTH - have;

  00034	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00039	48 2b 44 24 20	 sub	 rax, QWORD PTR have$[rsp]
  0003e	48 89 44 24 30	 mov	 QWORD PTR need$[rsp], rax

; 79   : 
; 80   : 	/* Update bitcount */
; 81   : 	ctx->count += len << 3;

  00043	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ctx$[rsp]
  00048	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  0004c	48 8b 44 24 28	 mov	 rax, QWORD PTR len$[rsp]
  00051	48 8d 0c c1	 lea	 rcx, QWORD PTR [rcx+rax*8]
  00055	48 8b 44 24 60	 mov	 rax, QWORD PTR ctx$[rsp]
  0005a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 82   : 
; 83   : 	if (len >= need) {

  0005e	48 8b 44 24 30	 mov	 rax, QWORD PTR need$[rsp]
  00063	48 39 44 24 28	 cmp	 QWORD PTR len$[rsp], rax
  00068	0f 82 98 00 00
	00		 jb	 $LN5@RMD160Upda

; 84   : 		if (have != 0) {

  0006e	48 83 7c 24 20
	00		 cmp	 QWORD PTR have$[rsp], 0
  00074	74 5b		 je	 SHORT $LN4@RMD160Upda

; 85   : 			memcpy (ctx->buffer + have, input, (size_t) need);

  00076	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ctx$[rsp]
  0007b	48 8b 44 24 20	 mov	 rax, QWORD PTR have$[rsp]
  00080	48 8d 7c 01 20	 lea	 rdi, QWORD PTR [rcx+rax+32]
  00085	48 8b 74 24 68	 mov	 rsi, QWORD PTR input$[rsp]
  0008a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR need$[rsp]
  0008f	f3 a4		 rep movsb

; 86   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) ctx->buffer);

  00091	48 8b 54 24 60	 mov	 rdx, QWORD PTR ctx$[rsp]
  00096	48 83 c2 20	 add	 rdx, 32			; 00000020H
  0009a	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ctx$[rsp]
  0009f	e8 00 00 00 00	 call	 RMD160Transform

; 87   : 			input += need;

  000a4	48 8b 54 24 30	 mov	 rdx, QWORD PTR need$[rsp]
  000a9	48 8b 44 24 68	 mov	 rax, QWORD PTR input$[rsp]
  000ae	48 03 c2	 add	 rax, rdx
  000b1	48 89 44 24 68	 mov	 QWORD PTR input$[rsp], rax

; 88   : 			len -= need;

  000b6	48 8b 4c 24 30	 mov	 rcx, QWORD PTR need$[rsp]
  000bb	48 8b 44 24 28	 mov	 rax, QWORD PTR len$[rsp]
  000c0	48 2b c1	 sub	 rax, rcx
  000c3	48 89 44 24 28	 mov	 QWORD PTR len$[rsp], rax

; 89   : 			have = 0;

  000c8	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR have$[rsp], 0
$LN4@RMD160Upda:
$LN3@RMD160Upda:

; 90   : 		}
; 91   : 
; 92   : 		/* Process data in RIPEMD160_BLOCK_LENGTH-byte chunks. */
; 93   : 		while (len >= RIPEMD160_BLOCK_LENGTH) {

  000d1	48 83 7c 24 28
	40		 cmp	 QWORD PTR len$[rsp], 64	; 00000040H
  000d7	72 2d		 jb	 SHORT $LN2@RMD160Upda

; 94   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) input);

  000d9	48 8b 54 24 68	 mov	 rdx, QWORD PTR input$[rsp]
  000de	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ctx$[rsp]
  000e3	e8 00 00 00 00	 call	 RMD160Transform

; 95   : 			input += RIPEMD160_BLOCK_LENGTH;

  000e8	48 8b 44 24 68	 mov	 rax, QWORD PTR input$[rsp]
  000ed	48 83 c0 40	 add	 rax, 64			; 00000040H
  000f1	48 89 44 24 68	 mov	 QWORD PTR input$[rsp], rax

; 96   : 			len -= RIPEMD160_BLOCK_LENGTH;

  000f6	48 8b 44 24 28	 mov	 rax, QWORD PTR len$[rsp]
  000fb	48 83 e8 40	 sub	 rax, 64			; 00000040H
  000ff	48 89 44 24 28	 mov	 QWORD PTR len$[rsp], rax

; 97   : 		}

  00104	eb cb		 jmp	 SHORT $LN3@RMD160Upda
$LN2@RMD160Upda:
$LN5@RMD160Upda:

; 98   : 	}
; 99   : 
; 100  : 	/* Handle any remaining bytes of data. */
; 101  : 	if (len != 0)

  00106	48 83 7c 24 28
	00		 cmp	 QWORD PTR len$[rsp], 0
  0010c	74 1b		 je	 SHORT $LN1@RMD160Upda

; 102  : 		memcpy (ctx->buffer + have, input, (size_t) len);

  0010e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR ctx$[rsp]
  00113	48 8b 44 24 20	 mov	 rax, QWORD PTR have$[rsp]
  00118	48 8d 7c 01 20	 lea	 rdi, QWORD PTR [rcx+rax+32]
  0011d	48 8b 74 24 68	 mov	 rsi, QWORD PTR input$[rsp]
  00122	48 8b 4c 24 28	 mov	 rcx, QWORD PTR len$[rsp]
  00127	f3 a4		 rep movsb
$LN1@RMD160Upda:

; 103  : }

  00129	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0012d	5f		 pop	 rdi
  0012e	5e		 pop	 rsi
  0012f	c3		 ret	 0
RMD160Update ENDP
PUBLIC	__$ArrayPad$
;	COMDAT pdata
pdata	SEGMENT
$pdata$RMD160Pad DD imagerel RMD160Pad
	DD	imagerel RMD160Pad+277
	DD	imagerel $unwind$RMD160Pad
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$RMD160Pad DD 011819H
	DD	08209H
	DD	imagerel __GSHandlerCheck
	DD	038H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT RMD160Pad
_TEXT	SEGMENT
padlen$ = 32
count$ = 48
__$ArrayPad$ = 56
ctx$ = 80
RMD160Pad PROC						; COMDAT

; 110  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00009	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00010	48 33 c4	 xor	 rax, rsp
  00013	48 89 44 24 38	 mov	 QWORD PTR __$ArrayPad$[rsp], rax
$LN4@RMD160Pad:

; 111  : 	byte count[8];
; 112  : 	uint32 padlen;
; 113  : 
; 114  : 	/* Convert count to 8 bytes in little endian order. */
; 115  : 
; 116  : #ifndef TC_WINDOWS_BOOT
; 117  : 	PUT_64BIT_LE(count, ctx->count);

  00018	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  0001d	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00021	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  00025	88 44 24 37	 mov	 BYTE PTR count$[rsp+7], al
  00029	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  0002e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00032	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  00036	88 44 24 36	 mov	 BYTE PTR count$[rsp+6], al
  0003a	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  0003f	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00043	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  00047	88 44 24 35	 mov	 BYTE PTR count$[rsp+5], al
  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  00050	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00054	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00058	88 44 24 34	 mov	 BYTE PTR count$[rsp+4], al
  0005c	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  00061	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00065	48 c1 e8 18	 shr	 rax, 24
  00069	88 44 24 33	 mov	 BYTE PTR count$[rsp+3], al
  0006d	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  00072	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00076	48 c1 e8 10	 shr	 rax, 16
  0007a	88 44 24 32	 mov	 BYTE PTR count$[rsp+2], al
  0007e	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  00083	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00087	48 c1 e8 08	 shr	 rax, 8
  0008b	88 44 24 31	 mov	 BYTE PTR count$[rsp+1], al
  0008f	48 8b 44 24 50	 mov	 rax, QWORD PTR ctx$[rsp]
  00094	0f b6 40 18	 movzx	 eax, BYTE PTR [rax+24]
  00098	88 44 24 30	 mov	 BYTE PTR count$[rsp], al
  0009c	33 c0		 xor	 eax, eax
  0009e	85 c0		 test	 eax, eax
  000a0	0f 85 72 ff ff
	ff		 jne	 $LN4@RMD160Pad

; 118  : #else
; 119  : 	*(uint32 *) (count + 4) = 0;
; 120  : 	*(uint16 *) (count + 2) = 0;
; 121  : 	*(uint16 *) (count + 0) = ctx->count;
; 122  : #endif
; 123  : 
; 124  : 	/* Pad out to 56 mod 64. */
; 125  : 	padlen = RIPEMD160_BLOCK_LENGTH -
; 126  : 		(uint32)((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  000a6	48 8b 4c 24 50	 mov	 rcx, QWORD PTR ctx$[rsp]
  000ab	48 8b 49 18	 mov	 rcx, QWORD PTR [rcx+24]
  000af	48 c1 e9 03	 shr	 rcx, 3
  000b3	48 83 e1 3f	 and	 rcx, 63			; 0000003fH
  000b7	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  000bc	2b c1		 sub	 eax, ecx
  000be	89 44 24 20	 mov	 DWORD PTR padlen$[rsp], eax

; 127  : 	if (padlen < 1 + 8)

  000c2	83 7c 24 20 09	 cmp	 DWORD PTR padlen$[rsp], 9
  000c7	73 0b		 jae	 SHORT $LN1@RMD160Pad

; 128  : 		padlen += RIPEMD160_BLOCK_LENGTH;

  000c9	8b 44 24 20	 mov	 eax, DWORD PTR padlen$[rsp]
  000cd	83 c0 40	 add	 eax, 64			; 00000040H
  000d0	89 44 24 20	 mov	 DWORD PTR padlen$[rsp], eax
$LN1@RMD160Pad:

; 129  : 	RMD160Update(ctx, PADDING, padlen - 8);            /* padlen - 8 <= 64 */

  000d4	44 8b 44 24 20	 mov	 r8d, DWORD PTR padlen$[rsp]
  000d9	41 83 e8 08	 sub	 r8d, 8
  000dd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:PADDING
  000e4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR ctx$[rsp]
  000e9	e8 00 00 00 00	 call	 RMD160Update

; 130  : 	RMD160Update(ctx, count, 8);

  000ee	41 b8 08 00 00
	00		 mov	 r8d, 8
  000f4	48 8d 54 24 30	 lea	 rdx, QWORD PTR count$[rsp]
  000f9	48 8b 4c 24 50	 mov	 rcx, QWORD PTR ctx$[rsp]
  000fe	e8 00 00 00 00	 call	 RMD160Update

; 131  : }

  00103	48 8b 4c 24 38	 mov	 rcx, QWORD PTR __$ArrayPad$[rsp]
  00108	48 33 cc	 xor	 rcx, rsp
  0010b	e8 00 00 00 00	 call	 __security_check_cookie
  00110	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00114	c3		 ret	 0
RMD160Pad ENDP
PUBLIC	RMD160Final
;	COMDAT pdata
pdata	SEGMENT
$pdata$RMD160Final DD imagerel $LN10
	DD	imagerel $LN10+241
	DD	imagerel $unwind$RMD160Final
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$RMD160Final DD 020f01H
	DD	0700b520fH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT RMD160Final
_TEXT	SEGMENT
i$ = 32
digest$ = 64
ctx$ = 72
RMD160Final PROC					; COMDAT

; 137  : {

$LN10:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 138  : 	int i;
; 139  : 
; 140  : 	RMD160Pad(ctx);

  0000f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR ctx$[rsp]
  00014	e8 00 00 00 00	 call	 RMD160Pad

; 141  : 	if (digest) {

  00019	48 83 7c 24 40
	00		 cmp	 QWORD PTR digest$[rsp], 0
  0001f	0f 84 c6 00 00
	00		 je	 $LN7@RMD160Fina

; 142  : 		for (i = 0; i < 5; i++)

  00025	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$[rsp], 0
  0002d	eb 0b		 jmp	 SHORT $LN6@RMD160Fina
$LN5@RMD160Fina:
  0002f	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  00033	83 c0 01	 add	 eax, 1
  00036	89 44 24 20	 mov	 DWORD PTR i$[rsp], eax
$LN6@RMD160Fina:
  0003a	83 7c 24 20 05	 cmp	 DWORD PTR i$[rsp], 5
  0003f	0f 8d 98 00 00
	00		 jge	 $LN4@RMD160Fina
$LN3@RMD160Fina:

; 143  : 			PUT_32BIT_LE(digest + i * 4, ctx->state[i]);

  00045	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR i$[rsp]
  0004a	48 8b 44 24 48	 mov	 rax, QWORD PTR ctx$[rsp]
  0004f	8b 14 88	 mov	 edx, DWORD PTR [rax+rcx*4]
  00052	c1 ea 18	 shr	 edx, 24
  00055	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  00059	c1 e0 02	 shl	 eax, 2
  0005c	48 63 c8	 movsxd	 rcx, eax
  0005f	48 8b 44 24 40	 mov	 rax, QWORD PTR digest$[rsp]
  00064	88 54 08 03	 mov	 BYTE PTR [rax+rcx+3], dl
  00068	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR i$[rsp]
  0006d	48 8b 44 24 48	 mov	 rax, QWORD PTR ctx$[rsp]
  00072	8b 14 88	 mov	 edx, DWORD PTR [rax+rcx*4]
  00075	c1 ea 10	 shr	 edx, 16
  00078	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  0007c	c1 e0 02	 shl	 eax, 2
  0007f	48 63 c8	 movsxd	 rcx, eax
  00082	48 8b 44 24 40	 mov	 rax, QWORD PTR digest$[rsp]
  00087	88 54 08 02	 mov	 BYTE PTR [rax+rcx+2], dl
  0008b	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR i$[rsp]
  00090	48 8b 44 24 48	 mov	 rax, QWORD PTR ctx$[rsp]
  00095	8b 14 88	 mov	 edx, DWORD PTR [rax+rcx*4]
  00098	c1 ea 08	 shr	 edx, 8
  0009b	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  0009f	c1 e0 02	 shl	 eax, 2
  000a2	48 63 c8	 movsxd	 rcx, eax
  000a5	48 8b 44 24 40	 mov	 rax, QWORD PTR digest$[rsp]
  000aa	88 54 08 01	 mov	 BYTE PTR [rax+rcx+1], dl
  000ae	48 63 7c 24 20	 movsxd	 rdi, DWORD PTR i$[rsp]
  000b3	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  000b7	c1 e0 02	 shl	 eax, 2
  000ba	48 63 d0	 movsxd	 rdx, eax
  000bd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  000c2	48 8b 44 24 48	 mov	 rax, QWORD PTR ctx$[rsp]
  000c7	0f b6 04 b8	 movzx	 eax, BYTE PTR [rax+rdi*4]
  000cb	88 04 11	 mov	 BYTE PTR [rcx+rdx], al
  000ce	33 c0		 xor	 eax, eax
  000d0	85 c0		 test	 eax, eax
  000d2	0f 85 6d ff ff
	ff		 jne	 $LN3@RMD160Fina
  000d8	e9 52 ff ff ff	 jmp	 $LN5@RMD160Fina
$LN4@RMD160Fina:

; 144  : 		memset (ctx, 0, sizeof(*ctx));

  000dd	48 8b 7c 24 48	 mov	 rdi, QWORD PTR ctx$[rsp]
  000e2	33 c0		 xor	 eax, eax
  000e4	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  000e9	f3 aa		 rep stosb
$LN7@RMD160Fina:

; 145  : 	}
; 146  : }

  000eb	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ef	5f		 pop	 rdi
  000f0	c3		 ret	 0
RMD160Final ENDP
END
