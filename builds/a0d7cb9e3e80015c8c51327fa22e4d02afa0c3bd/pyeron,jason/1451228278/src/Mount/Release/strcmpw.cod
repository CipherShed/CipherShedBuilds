; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\Users\Public\Desktop\projects\ciphershed\src\Common\util\unicode\strcmpw.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_strcmpw
; Function compile flags: /Ogtpy
; File c:\users\public\desktop\projects\ciphershed\src\common\util\unicode\strcmpw.c
;	COMDAT _strcmpw
_TEXT	SEGMENT
_a$ = 8							; size = 4
_b$ = 12						; size = 4
_strcmpw PROC						; COMDAT

; 11   : 	if (a==b)

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR _a$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR _b$[esp-4]
  00008	3b ca		 cmp	 ecx, edx
  0000a	75 03		 jne	 SHORT $LN11@strcmpw
$LN15@strcmpw:

; 12   : 	{
; 13   : 		return 0;

  0000c	33 c0		 xor	 eax, eax

; 38   : 		{
; 39   : 			return 1;
; 40   : 		}
; 41   : 		else
; 42   : 		{
; 43   : 			return -1;
; 44   : 		}
; 45   : 	}
; 46   : }

  0000e	c3		 ret	 0
$LN11@strcmpw:

; 14   : 	}
; 15   : 	if (a==NULL)

  0000f	85 c9		 test	 ecx, ecx
  00011	75 04		 jne	 SHORT $LN10@strcmpw

; 16   : 	{
; 17   : 		return -1;

  00013	83 c8 ff	 or	 eax, -1

; 38   : 		{
; 39   : 			return 1;
; 40   : 		}
; 41   : 		else
; 42   : 		{
; 43   : 			return -1;
; 44   : 		}
; 45   : 	}
; 46   : }

  00016	c3		 ret	 0
$LN10@strcmpw:

; 18   : 	}
; 19   : 	if (b==NULL)

  00017	85 d2		 test	 edx, edx
  00019	75 06		 jne	 SHORT $LN14@strcmpw

; 20   : 	{
; 21   : 		return 1;

  0001b	b8 01 00 00 00	 mov	 eax, 1

; 38   : 		{
; 39   : 			return 1;
; 40   : 		}
; 41   : 		else
; 42   : 		{
; 43   : 			return -1;
; 44   : 		}
; 45   : 	}
; 46   : }

  00020	c3		 ret	 0
$LN14@strcmpw:

; 22   : 	}
; 23   : 	while(1)
; 24   : 	{
; 25   : 		if (*a==*b)

  00021	0f b7 01	 movzx	 eax, WORD PTR [ecx]
  00024	66 3b 02	 cmp	 ax, WORD PTR [edx]
  00027	75 1b		 jne	 SHORT $LN6@strcmpw
  00029	8d a4 24 00 00
	00 00		 npad	 7
$LL8@strcmpw:

; 26   : 		{
; 27   : 			if (*a==0)

  00030	66 85 c0	 test	 ax, ax
  00033	74 d7		 je	 SHORT $LN15@strcmpw
  00035	0f b7 41 02	 movzx	 eax, WORD PTR [ecx+2]

; 28   : 			{
; 29   : 				return 0;
; 30   : 			}
; 31   : 			else
; 32   : 			{
; 33   : 				++a;

  00039	83 c1 02	 add	 ecx, 2

; 34   : 				++b;

  0003c	83 c2 02	 add	 edx, 2
  0003f	66 3b 02	 cmp	 ax, WORD PTR [edx]
  00042	74 ec		 je	 SHORT $LL8@strcmpw
$LN6@strcmpw:

; 35   : 			}
; 36   : 		}
; 37   : 		else if (*a>*b)

  00044	0f b7 01	 movzx	 eax, WORD PTR [ecx]
  00047	66 39 02	 cmp	 WORD PTR [edx], ax
  0004a	1b c0		 sbb	 eax, eax
  0004c	83 e0 02	 and	 eax, 2
  0004f	48		 dec	 eax

; 38   : 		{
; 39   : 			return 1;
; 40   : 		}
; 41   : 		else
; 42   : 		{
; 43   : 			return -1;
; 44   : 		}
; 45   : 	}
; 46   : }

  00050	c3		 ret	 0
_strcmpw ENDP
_TEXT	ENDS
END
