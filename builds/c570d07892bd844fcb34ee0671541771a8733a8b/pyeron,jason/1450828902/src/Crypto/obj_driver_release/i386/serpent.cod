; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\users\public\desktop\projects\ciphershed\src\crypto\serpent.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_serpent_set_key@12
; Function compile flags: /Ogsp
; File c:\users\public\desktop\projects\ciphershed\src\crypto\serpent.c
;	COMDAT _serpent_set_key@12
_TEXT	SEGMENT
_e$ = -4						; size = 4
tv195 = 8						; size = 4
_userKey$ = 8						; size = 4
tv568 = 12						; size = 4
_c$ = 12						; size = 4
_d$ = 12						; size = 4
_a$ = 12						; size = 4
_keylen$ = 12						; size = 4
_b$ = 16						; size = 4
_ks$ = 16						; size = 4
_serpent_set_key@12 PROC				; COMDAT

; 634  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx

; 635  : 	unsigned __int32 a,b,c,d,e;
; 636  : 	unsigned __int32 *k = (unsigned __int32 *)ks;
; 637  : 	unsigned __int32 t;
; 638  : 	int i;
; 639  : 
; 640  : 	for (i = 0; i < keylen / (int)sizeof(__int32); i++)

  00006	8b 45 0c	 mov	 eax, DWORD PTR _keylen$[ebp]
  00009	99		 cdq
  0000a	83 e2 03	 and	 edx, 3
  0000d	03 c2		 add	 eax, edx
  0000f	8b 55 10	 mov	 edx, DWORD PTR _ks$[ebp]
  00012	53		 push	 ebx
  00013	c1 f8 02	 sar	 eax, 2
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	85 c0		 test	 eax, eax
  0001a	7e 14		 jle	 SHORT $LN8@serpent_se
  0001c	8b 75 08	 mov	 esi, DWORD PTR _userKey$[ebp]
  0001f	8b ca		 mov	 ecx, edx
  00021	2b f2		 sub	 esi, edx
  00023	8b f8		 mov	 edi, eax
$LL10@serpent_se:

; 641  : 		k[i] = LE32(((unsigned __int32*)userKey)[i]);

  00025	8b 1c 0e	 mov	 ebx, DWORD PTR [esi+ecx]
  00028	89 19		 mov	 DWORD PTR [ecx], ebx
  0002a	83 c1 04	 add	 ecx, 4
  0002d	4f		 dec	 edi
  0002e	75 f5		 jne	 SHORT $LL10@serpent_se
$LN8@serpent_se:

; 642  : 
; 643  : 	if (keylen < 32)

  00030	8b 4d 0c	 mov	 ecx, DWORD PTR _keylen$[ebp]
  00033	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00036	7d 1a		 jge	 SHORT $LN7@serpent_se

; 644  : 		k[keylen/4] |= (unsigned __int32)1 << ((keylen%4)*8);

  00038	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003e	8d 04 82	 lea	 eax, DWORD PTR [edx+eax*4]
  00041	79 05		 jns	 SHORT $LN19@serpent_se
  00043	49		 dec	 ecx
  00044	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00047	41		 inc	 ecx
$LN19@serpent_se:
  00048	33 f6		 xor	 esi, esi
  0004a	c1 e1 03	 shl	 ecx, 3
  0004d	46		 inc	 esi
  0004e	d3 e6		 shl	 esi, cl
  00050	09 30		 or	 DWORD PTR [eax], esi
$LN7@serpent_se:

; 645  : 
; 646  : 	k += 8;

  00052	8d 42 20	 lea	 eax, DWORD PTR [edx+32]

; 647  : 	t = k[-1];

  00055	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]

; 648  : 	for (i = 0; i < 132; ++i)

  00058	33 f6		 xor	 esi, esi
  0005a	8d 48 ec	 lea	 ecx, DWORD PTR [eax-20]
$LL6@serpent_se:

; 649  : 		k[i] = t = rotlFixed(k[i-8] ^ k[i-5] ^ k[i-3] ^ t ^ 0x9e3779b9 ^ i, 11);

  0005d	8b 79 f4	 mov	 edi, DWORD PTR [ecx-12]
  00060	33 79 08	 xor	 edi, DWORD PTR [ecx+8]
  00063	33 39		 xor	 edi, DWORD PTR [ecx]
  00065	83 c1 04	 add	 ecx, 4
  00068	33 fa		 xor	 edi, edx
  0006a	33 fe		 xor	 edi, esi
  0006c	81 f7 b9 79 37
	9e		 xor	 edi, -1640531527	; 9e3779b9H
  00072	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  00075	8b d7		 mov	 edx, edi
  00077	89 51 10	 mov	 DWORD PTR [ecx+16], edx
  0007a	46		 inc	 esi
  0007b	81 fe 84 00 00
	00		 cmp	 esi, 132		; 00000084H
  00081	7c da		 jl	 SHORT $LL6@serpent_se

; 650  : 	k -= 20;

  00083	83 e8 50	 sub	 eax, 80			; 00000050H
  00086	c7 45 08 04 00
	00 00		 mov	 DWORD PTR tv195[ebp], 4
$LL3@serpent_se:

; 651  : 
; 652  : #define LK(r, a, b, c, d, e)	{\
; 653  : 	a = k[(8-r)*4 + 0];		\
; 654  : 	b = k[(8-r)*4 + 1];		\
; 655  : 	c = k[(8-r)*4 + 2];		\
; 656  : 	d = k[(8-r)*4 + 3];}
; 657  : 
; 658  : #define SK(r, a, b, c, d, e)	{\
; 659  : 	k[(8-r)*4 + 4] = a;		\
; 660  : 	k[(8-r)*4 + 5] = b;		\
; 661  : 	k[(8-r)*4 + 6] = c;		\
; 662  : 	k[(8-r)*4 + 7] = d;}	\
; 663  : 
; 664  : 	for (i=0; i<4; i++)
; 665  : 	{
; 666  : 		afterS2(LK); afterS2(S3); afterS3(SK);

  0008d	8b 78 50	 mov	 edi, DWORD PTR [eax+80]
  00090	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00093	8b 58 54	 mov	 ebx, DWORD PTR [eax+84]
  00096	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  00099	8b cf		 mov	 ecx, edi
  0009b	0b fa		 or	 edi, edx
  0009d	33 d3		 xor	 edx, ebx
  0009f	23 d9		 and	 ebx, ecx
  000a1	33 ce		 xor	 ecx, esi
  000a3	33 f2		 xor	 esi, edx
  000a5	23 d7		 and	 edx, edi
  000a7	0b cb		 or	 ecx, ebx
  000a9	33 d1		 xor	 edx, ecx
  000ab	89 75 10	 mov	 DWORD PTR _b$[ebp], esi
  000ae	8b f2		 mov	 esi, edx
  000b0	33 fb		 xor	 edi, ebx
  000b2	33 f3		 xor	 esi, ebx
  000b4	0b f7		 or	 esi, edi
  000b6	33 75 10	 xor	 esi, DWORD PTR _b$[ebp]

; 667  : 		afterS1(LK); afterS1(S2); afterS2(SK);

  000b9	8b 58 68	 mov	 ebx, DWORD PTR [eax+104]
  000bc	89 55 0c	 mov	 DWORD PTR _d$[ebp], edx
  000bf	0b d6		 or	 edx, esi
  000c1	33 55 0c	 xor	 edx, DWORD PTR _d$[ebp]
  000c4	23 cf		 and	 ecx, edi
  000c6	33 4d 10	 xor	 ecx, DWORD PTR _b$[ebp]
  000c9	33 d7		 xor	 edx, edi
  000cb	8b 78 6c	 mov	 edi, DWORD PTR [eax+108]
  000ce	89 50 50	 mov	 DWORD PTR [eax+80], edx
  000d1	8b 55 0c	 mov	 edx, DWORD PTR _d$[ebp]
  000d4	89 50 58	 mov	 DWORD PTR [eax+88], edx
  000d7	8b 50 60	 mov	 edx, DWORD PTR [eax+96]
  000da	89 48 5c	 mov	 DWORD PTR [eax+92], ecx
  000dd	8b ca		 mov	 ecx, edx
  000df	23 d3		 and	 edx, ebx
  000e1	33 d7		 xor	 edx, edi
  000e3	89 70 54	 mov	 DWORD PTR [eax+84], esi
  000e6	8b 70 64	 mov	 esi, DWORD PTR [eax+100]
  000e9	8b fa		 mov	 edi, edx
  000eb	33 fe		 xor	 edi, esi
  000ed	33 df		 xor	 ebx, edi
  000ef	8b f9		 mov	 edi, ecx
  000f1	0b 78 6c	 or	 edi, DWORD PTR [eax+108]
  000f4	33 cb		 xor	 ecx, ebx
  000f6	33 fe		 xor	 edi, esi
  000f8	8b f1		 mov	 esi, ecx
  000fa	0b f7		 or	 esi, edi
  000fc	33 f2		 xor	 esi, edx
  000fe	23 d7		 and	 edx, edi
  00100	33 ca		 xor	 ecx, edx
  00102	8b d1		 mov	 edx, ecx
  00104	33 d7		 xor	 edx, edi
  00106	33 d6		 xor	 edx, esi
  00108	f7 d1		 not	 ecx
  0010a	89 48 6c	 mov	 DWORD PTR [eax+108], ecx

; 668  : 		afterS0(LK); afterS0(S1); afterS1(SK);

  0010d	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  00110	89 50 68	 mov	 DWORD PTR [eax+104], edx
  00113	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  00116	f7 d1		 not	 ecx
  00118	89 70 64	 mov	 DWORD PTR [eax+100], esi
  0011b	89 7d 10	 mov	 DWORD PTR _b$[ebp], edi
  0011e	8b 78 74	 mov	 edi, DWORD PTR [eax+116]
  00121	8b f1		 mov	 esi, ecx
  00123	23 cf		 and	 ecx, edi
  00125	f7 d2		 not	 edx
  00127	33 d1		 xor	 edx, ecx
  00129	89 58 60	 mov	 DWORD PTR [eax+96], ebx
  0012c	8b 58 7c	 mov	 ebx, DWORD PTR [eax+124]
  0012f	0b cb		 or	 ecx, ebx
  00131	33 f9		 xor	 edi, ecx
  00133	33 ce		 xor	 ecx, esi
  00135	0b f7		 or	 esi, edi
  00137	33 da		 xor	 ebx, edx
  00139	0b d1		 or	 edx, ecx
  0013b	23 d6		 and	 edx, esi
  0013d	89 75 0c	 mov	 DWORD PTR _d$[ebp], esi
  00140	33 fb		 xor	 edi, ebx
  00142	8b f2		 mov	 esi, edx
  00144	33 cf		 xor	 ecx, edi
  00146	23 f7		 and	 esi, edi
  00148	33 f1		 xor	 esi, ecx
  0014a	89 50 70	 mov	 DWORD PTR [eax+112], edx
  0014d	23 d1		 and	 edx, ecx
  0014f	33 55 0c	 xor	 edx, DWORD PTR _d$[ebp]
  00152	89 70 7c	 mov	 DWORD PTR [eax+124], esi

; 669  : 		beforeS0(LK); beforeS0(S0); afterS0(SK);

  00155	8b b0 88 00 00
	00		 mov	 esi, DWORD PTR [eax+136]
  0015b	89 50 74	 mov	 DWORD PTR [eax+116], edx
  0015e	89 58 78	 mov	 DWORD PTR [eax+120], ebx
  00161	8b 98 84 00 00
	00		 mov	 ebx, DWORD PTR [eax+132]
  00167	8d 88 80 00 00
	00		 lea	 ecx, DWORD PTR [eax+128]
  0016d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016f	89 4d 0c	 mov	 DWORD PTR tv568[ebp], ecx
  00172	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [eax+140]
  00178	33 ca		 xor	 ecx, edx
  0017a	8b f9		 mov	 edi, ecx
  0017c	23 fb		 and	 edi, ebx
  0017e	8b d6		 mov	 edx, esi
  00180	33 d3		 xor	 edx, ebx
  00182	8b 5d 0c	 mov	 ebx, DWORD PTR tv568[ebp]
  00185	8b 1b		 mov	 ebx, DWORD PTR [ebx]
  00187	33 fb		 xor	 edi, ebx
  00189	89 7d 10	 mov	 DWORD PTR _b$[ebp], edi
  0018c	8b f9		 mov	 edi, ecx
  0018e	0b fb		 or	 edi, ebx
  00190	33 fa		 xor	 edi, edx
  00192	33 d1		 xor	 edx, ecx
  00194	33 ce		 xor	 ecx, esi
  00196	0b 75 10	 or	 esi, DWORD PTR _b$[ebp]
  00199	8b d9		 mov	 ebx, ecx
  0019b	33 5d 10	 xor	 ebx, DWORD PTR _b$[ebp]
  0019e	33 f2		 xor	 esi, edx
  001a0	0b cf		 or	 ecx, edi
  001a2	f7 d2		 not	 edx
  001a4	0b 55 10	 or	 edx, DWORD PTR _b$[ebp]
  001a7	89 b0 88 00 00
	00		 mov	 DWORD PTR [eax+136], esi
  001ad	33 da		 xor	 ebx, edx
  001af	89 55 fc	 mov	 DWORD PTR _e$[ebp], edx
  001b2	89 b8 8c 00 00
	00		 mov	 DWORD PTR [eax+140], edi
  001b8	8b d1		 mov	 edx, ecx
  001ba	33 4d fc	 xor	 ecx, DWORD PTR _e$[ebp]
  001bd	33 d3		 xor	 edx, ebx
  001bf	8b 5d 0c	 mov	 ebx, DWORD PTR tv568[ebp]
  001c2	89 88 84 00 00
	00		 mov	 DWORD PTR [eax+132], ecx
  001c8	89 13		 mov	 DWORD PTR [ebx], edx

; 670  : 		k += 8*4;

  001ca	8b c3		 mov	 eax, ebx

; 671  : 		afterS6(LK); afterS6(S7); afterS7(SK);

  001cc	8b 78 14	 mov	 edi, DWORD PTR [eax+20]
  001cf	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  001d2	8b 70 1c	 mov	 esi, DWORD PTR [eax+28]
  001d5	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
  001d8	8b cf		 mov	 ecx, edi
  001da	23 ca		 and	 ecx, edx
  001dc	33 ce		 xor	 ecx, esi
  001de	89 55 0c	 mov	 DWORD PTR _d$[ebp], edx
  001e1	33 d1		 xor	 edx, ecx
  001e3	33 cf		 xor	 ecx, edi
  001e5	23 f7		 and	 esi, edi
  001e7	33 fb		 xor	 edi, ebx
  001e9	89 7d 0c	 mov	 DWORD PTR _c$[ebp], edi
  001ec	33 75 0c	 xor	 esi, DWORD PTR _c$[ebp]
  001ef	8b fa		 mov	 edi, edx
  001f1	0b fb		 or	 edi, ebx
  001f3	33 f9		 xor	 edi, ecx
  001f5	33 ce		 xor	 ecx, esi
  001f7	23 f7		 and	 esi, edi
  001f9	33 f2		 xor	 esi, edx
  001fb	33 d1		 xor	 edx, ecx
  001fd	f7 d2		 not	 edx
  001ff	23 cf		 and	 ecx, edi
  00201	33 ca		 xor	 ecx, edx
  00203	23 d7		 and	 edx, edi
  00205	33 55 0c	 xor	 edx, DWORD PTR _c$[ebp]
  00208	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 672  : 		afterS5(LK); afterS5(S6); afterS6(SK);

  0020b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0020e	33 d6		 xor	 edx, esi
  00210	89 50 14	 mov	 DWORD PTR [eax+20], edx
  00213	8b 50 20	 mov	 edx, DWORD PTR [eax+32]
  00216	89 78 1c	 mov	 DWORD PTR [eax+28], edi
  00219	8b 78 28	 mov	 edi, DWORD PTR [eax+40]
  0021c	89 70 18	 mov	 DWORD PTR [eax+24], esi
  0021f	8b f1		 mov	 esi, ecx
  00221	23 ca		 and	 ecx, edx
  00223	f7 d7		 not	 edi
  00225	33 d6		 xor	 edx, esi
  00227	33 cf		 xor	 ecx, edi
  00229	89 55 0c	 mov	 DWORD PTR _a$[ebp], edx
  0022c	8b 50 24	 mov	 edx, DWORD PTR [eax+36]
  0022f	33 d1		 xor	 edx, ecx
  00231	8b de		 mov	 ebx, esi
  00233	0b df		 or	 ebx, edi
  00235	33 5d 0c	 xor	 ebx, DWORD PTR _a$[ebp]
  00238	09 55 0c	 or	 DWORD PTR _a$[ebp], edx
  0023b	33 75 0c	 xor	 esi, DWORD PTR _a$[ebp]
  0023e	33 da		 xor	 ebx, edx
  00240	33 f1		 xor	 esi, ecx
  00242	8b f9		 mov	 edi, ecx
  00244	0b 7d 0c	 or	 edi, DWORD PTR _a$[ebp]
  00247	f7 d1		 not	 ecx
  00249	33 fb		 xor	 edi, ebx
  0024b	33 f7		 xor	 esi, edi
  0024d	89 70 28	 mov	 DWORD PTR [eax+40], esi
  00250	23 f3		 and	 esi, ebx
  00252	33 f1		 xor	 esi, ecx

; 673  : 		afterS4(LK); afterS4(S5); afterS5(SK);

  00254	8b 48 38	 mov	 ecx, DWORD PTR [eax+56]
  00257	89 5d 10	 mov	 DWORD PTR _b$[ebp], ebx
  0025a	8b 58 34	 mov	 ebx, DWORD PTR [eax+52]
  0025d	89 50 24	 mov	 DWORD PTR [eax+36], edx
  00260	8b 50 3c	 mov	 edx, DWORD PTR [eax+60]
  00263	89 70 2c	 mov	 DWORD PTR [eax+44], esi
  00266	8b 70 30	 mov	 esi, DWORD PTR [eax+48]
  00269	33 f3		 xor	 esi, ebx
  0026b	33 da		 xor	 ebx, edx
  0026d	f7 d2		 not	 edx
  0026f	33 ca		 xor	 ecx, edx
  00271	89 78 20	 mov	 DWORD PTR [eax+32], edi
  00274	89 5d 0c	 mov	 DWORD PTR _a$[ebp], ebx
  00277	8b fe		 mov	 edi, esi
  00279	23 fb		 and	 edi, ebx
  0027b	33 f9		 xor	 edi, ecx
  0027d	0b cb		 or	 ecx, ebx
  0027f	33 da		 xor	 ebx, edx
  00281	33 d9		 xor	 ebx, ecx
  00283	23 d7		 and	 edx, edi
  00285	33 d6		 xor	 edx, esi
  00287	33 df		 xor	 ebx, edi
  00289	33 ce		 xor	 ecx, esi
  0028b	89 5d 0c	 mov	 DWORD PTR _d$[ebp], ebx
  0028e	8b da		 mov	 ebx, edx
  00290	89 50 34	 mov	 DWORD PTR [eax+52], edx
  00293	0b 55 0c	 or	 edx, DWORD PTR _d$[ebp]
  00296	f7 d1		 not	 ecx
  00298	33 d1		 xor	 edx, ecx

; 674  : 		afterS3(LK); afterS3(S4); afterS4(SK);

  0029a	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0029d	23 de		 and	 ebx, esi
  0029f	33 5d 0c	 xor	 ebx, DWORD PTR _d$[ebp]
  002a2	8b 70 4c	 mov	 esi, DWORD PTR [eax+76]
  002a5	89 50 3c	 mov	 DWORD PTR [eax+60], edx
  002a8	8b 50 44	 mov	 edx, DWORD PTR [eax+68]
  002ab	33 d6		 xor	 edx, esi
  002ad	89 58 38	 mov	 DWORD PTR [eax+56], ebx
  002b0	8b 58 40	 mov	 ebx, DWORD PTR [eax+64]
  002b3	f7 d6		 not	 esi
  002b5	33 ce		 xor	 ecx, esi
  002b7	33 f3		 xor	 esi, ebx
  002b9	89 78 30	 mov	 DWORD PTR [eax+48], edi
  002bc	89 55 0c	 mov	 DWORD PTR _a$[ebp], edx
  002bf	8b fe		 mov	 edi, esi
  002c1	23 fa		 and	 edi, edx
  002c3	33 f9		 xor	 edi, ecx
  002c5	33 d6		 xor	 edx, esi
  002c7	23 ca		 and	 ecx, edx
  002c9	33 da		 xor	 ebx, edx
  002cb	33 cb		 xor	 ecx, ebx
  002cd	89 4d 0c	 mov	 DWORD PTR _d$[ebp], ecx
  002d0	23 df		 and	 ebx, edi
  002d2	8b cf		 mov	 ecx, edi
  002d4	0b ca		 or	 ecx, edx
  002d6	33 f3		 xor	 esi, ebx
  002d8	8b d6		 mov	 edx, esi
  002da	0b d3		 or	 edx, ebx
  002dc	33 55 0c	 xor	 edx, DWORD PTR _d$[ebp]
  002df	89 78 40	 mov	 DWORD PTR [eax+64], edi
  002e2	8b fe		 mov	 edi, esi
  002e4	33 cb		 xor	 ecx, ebx
  002e6	23 7d 0c	 and	 edi, DWORD PTR _d$[ebp]
  002e9	33 f9		 xor	 edi, ecx
  002eb	ff 4d 08	 dec	 DWORD PTR tv195[ebp]
  002ee	f7 d2		 not	 edx
  002f0	89 78 44	 mov	 DWORD PTR [eax+68], edi
  002f3	89 50 48	 mov	 DWORD PTR [eax+72], edx
  002f6	89 70 4c	 mov	 DWORD PTR [eax+76], esi
  002f9	0f 85 8e fd ff
	ff		 jne	 $LL3@serpent_se

; 675  : 	}
; 676  : 	afterS2(LK); afterS2(S3); afterS3(SK);

  002ff	8b 78 50	 mov	 edi, DWORD PTR [eax+80]
  00302	8b 50 5c	 mov	 edx, DWORD PTR [eax+92]
  00305	8b 58 54	 mov	 ebx, DWORD PTR [eax+84]
  00308	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  0030b	8b cf		 mov	 ecx, edi
  0030d	0b fa		 or	 edi, edx
  0030f	33 d3		 xor	 edx, ebx
  00311	23 d9		 and	 ebx, ecx
  00313	33 ce		 xor	 ecx, esi
  00315	33 f2		 xor	 esi, edx
  00317	23 d7		 and	 edx, edi
  00319	0b cb		 or	 ecx, ebx
  0031b	33 d1		 xor	 edx, ecx
  0031d	89 75 10	 mov	 DWORD PTR _b$[ebp], esi
  00320	8b f2		 mov	 esi, edx
  00322	33 fb		 xor	 edi, ebx
  00324	33 f3		 xor	 esi, ebx
  00326	0b f7		 or	 esi, edi
  00328	33 75 10	 xor	 esi, DWORD PTR _b$[ebp]
  0032b	89 55 0c	 mov	 DWORD PTR _d$[ebp], edx
  0032e	0b d6		 or	 edx, esi
  00330	33 55 0c	 xor	 edx, DWORD PTR _d$[ebp]
  00333	23 cf		 and	 ecx, edi
  00335	33 d7		 xor	 edx, edi
  00337	33 4d 10	 xor	 ecx, DWORD PTR _b$[ebp]
  0033a	5f		 pop	 edi
  0033b	89 50 50	 mov	 DWORD PTR [eax+80], edx
  0033e	8b 55 0c	 mov	 edx, DWORD PTR _d$[ebp]
  00341	89 70 54	 mov	 DWORD PTR [eax+84], esi
  00344	5e		 pop	 esi
  00345	89 50 58	 mov	 DWORD PTR [eax+88], edx
  00348	89 48 5c	 mov	 DWORD PTR [eax+92], ecx
  0034b	5b		 pop	 ebx

; 677  : }

  0034c	c9		 leave
  0034d	c2 0c 00	 ret	 12			; 0000000cH
_serpent_set_key@12 ENDP
_TEXT	ENDS
PUBLIC	_serpent_encrypt@12
; Function compile flags: /Ogsp
;	COMDAT _serpent_encrypt@12
_TEXT	SEGMENT
tv938 = -12						; size = 4
_e$ = -8						; size = 4
_c$ = -4						; size = 4
_b$ = 8							; size = 4
_inBlock$ = 8						; size = 4
_outBlock$ = 12						; size = 4
_d$ = 16						; size = 4
_a$ = 16						; size = 4
_ks$ = 16						; size = 4
_serpent_encrypt@12 PROC				; COMDAT

; 737  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 738  : 	unsigned __int32 a, b, c, d, e;
; 739  : 	unsigned int i=1;
; 740  : 	const unsigned __int32 *k = (unsigned __int32 *)ks + 8;

  00008	8b 45 10	 mov	 eax, DWORD PTR _ks$[ebp]

; 741  : 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
; 742  : 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
; 743  : 
; 744  :     a = LE32(in[0]);
; 745  : 	b = LE32(in[1]);
; 746  : 	c = LE32(in[2]);
; 747  : 	d = LE32(in[3]);
; 748  : 
; 749  : 	do
; 750  : 	{
; 751  : 		beforeS0(KX); beforeS0(S0); afterS0(LT);

  0000b	8b 48 2c	 mov	 ecx, DWORD PTR [eax+44]
  0000e	8b 50 28	 mov	 edx, DWORD PTR [eax+40]
  00011	83 c0 20	 add	 eax, 32			; 00000020H
  00014	53		 push	 ebx
  00015	8b 18		 mov	 ebx, DWORD PTR [eax]
  00017	56		 push	 esi
  00018	8b 75 08	 mov	 esi, DWORD PTR _inBlock$[ebp]
  0001b	33 56 08	 xor	 edx, DWORD PTR [esi+8]
  0001e	33 1e		 xor	 ebx, DWORD PTR [esi]
  00020	33 4e 0c	 xor	 ecx, DWORD PTR [esi+12]
  00023	57		 push	 edi
  00024	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00027	33 7e 04	 xor	 edi, DWORD PTR [esi+4]
  0002a	33 cb		 xor	 ecx, ebx
  0002c	8b f2		 mov	 esi, edx
  0002e	33 f7		 xor	 esi, edi
  00030	89 5d 10	 mov	 DWORD PTR _a$[ebp], ebx
  00033	8b d9		 mov	 ebx, ecx
  00035	23 df		 and	 ebx, edi
  00037	33 5d 10	 xor	 ebx, DWORD PTR _a$[ebp]
  0003a	8b f9		 mov	 edi, ecx
  0003c	0b 7d 10	 or	 edi, DWORD PTR _a$[ebp]
  0003f	33 fe		 xor	 edi, esi
  00041	33 f1		 xor	 esi, ecx
  00043	33 ca		 xor	 ecx, edx
  00045	0b d3		 or	 edx, ebx
  00047	33 d6		 xor	 edx, esi
  00049	f7 d6		 not	 esi
  0004b	0b f3		 or	 esi, ebx
  0004d	89 55 fc	 mov	 DWORD PTR _c$[ebp], edx
  00050	8b d6		 mov	 edx, esi
  00052	33 d1		 xor	 edx, ecx
  00054	0b cf		 or	 ecx, edi
  00056	33 da		 xor	 ebx, edx
  00058	33 f1		 xor	 esi, ecx
  0005a	89 7d 10	 mov	 DWORD PTR _a$[ebp], edi
  0005d	8b f9		 mov	 edi, ecx
  0005f	33 fb		 xor	 edi, ebx
  00061	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00064	c1 45 fc 03	 rol	 DWORD PTR _c$[ebp], 3
  00068	33 75 fc	 xor	 esi, DWORD PTR _c$[ebp]
  0006b	8b d7		 mov	 edx, edi
  0006d	33 f7		 xor	 esi, edi
  0006f	c1 e2 03	 shl	 edx, 3
  00072	33 55 fc	 xor	 edx, DWORD PTR _c$[ebp]
  00075	33 55 10	 xor	 edx, DWORD PTR _a$[ebp]
  00078	c1 c2 07	 rol	 edx, 7
  0007b	d1 c6		 rol	 esi, 1
  0007d	8b ce		 mov	 ecx, esi
  0007f	c1 e6 07	 shl	 esi, 7
  00082	33 75 fc	 xor	 esi, DWORD PTR _c$[ebp]
  00085	33 f2		 xor	 esi, edx
  00087	c1 c6 16	 rol	 esi, 22			; 00000016H
  0008a	89 75 fc	 mov	 DWORD PTR _c$[ebp], esi
  0008d	8b f1		 mov	 esi, ecx

; 752  : 		afterS0(KX); afterS0(S1); afterS1(LT);

  0008f	33 48 14	 xor	 ecx, DWORD PTR [eax+20]
  00092	33 f7		 xor	 esi, edi
  00094	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  00097	33 7d fc	 xor	 edi, DWORD PTR _c$[ebp]
  0009a	33 f2		 xor	 esi, edx
  0009c	33 50 1c	 xor	 edx, DWORD PTR [eax+28]
  0009f	c1 c6 05	 rol	 esi, 5
  000a2	33 70 10	 xor	 esi, DWORD PTR [eax+16]
  000a5	f7 d7		 not	 edi
  000a7	f7 d6		 not	 esi
  000a9	8b de		 mov	 ebx, esi
  000ab	23 f1		 and	 esi, ecx
  000ad	33 fe		 xor	 edi, esi
  000af	0b f2		 or	 esi, edx
  000b1	33 ce		 xor	 ecx, esi
  000b3	33 f3		 xor	 esi, ebx
  000b5	33 d7		 xor	 edx, edi
  000b7	0b d9		 or	 ebx, ecx
  000b9	0b fe		 or	 edi, esi
  000bb	33 ca		 xor	 ecx, edx
  000bd	23 fb		 and	 edi, ebx
  000bf	33 f1		 xor	 esi, ecx
  000c1	23 cf		 and	 ecx, edi
  000c3	33 ce		 xor	 ecx, esi
  000c5	89 4d f8	 mov	 DWORD PTR _e$[ebp], ecx
  000c8	8b cf		 mov	 ecx, edi
  000ca	23 ce		 and	 ecx, esi
  000cc	33 cb		 xor	 ecx, ebx
  000ce	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  000d1	89 4d 08	 mov	 DWORD PTR _b$[ebp], ecx
  000d4	c1 c2 03	 rol	 edx, 3
  000d7	8b cf		 mov	 ecx, edi
  000d9	c1 e1 03	 shl	 ecx, 3
  000dc	33 4d f8	 xor	 ecx, DWORD PTR _e$[ebp]
  000df	8b df		 mov	 ebx, edi
  000e1	33 5d 08	 xor	 ebx, DWORD PTR _b$[ebp]
  000e4	33 ca		 xor	 ecx, edx
  000e6	33 da		 xor	 ebx, edx
  000e8	c1 c1 07	 rol	 ecx, 7
  000eb	d1 c3		 rol	 ebx, 1
  000ed	8b f3		 mov	 esi, ebx
  000ef	c1 e6 07	 shl	 esi, 7
  000f2	33 f1		 xor	 esi, ecx
  000f4	33 f2		 xor	 esi, edx
  000f6	8b d1		 mov	 edx, ecx

; 753  : 		afterS1(KX); afterS1(S2); afterS2(LT);

  000f8	33 48 2c	 xor	 ecx, DWORD PTR [eax+44]
  000fb	33 d7		 xor	 edx, edi
  000fd	33 d3		 xor	 edx, ebx
  000ff	33 58 24	 xor	 ebx, DWORD PTR [eax+36]
  00102	c1 c6 16	 rol	 esi, 22			; 00000016H
  00105	33 70 28	 xor	 esi, DWORD PTR [eax+40]
  00108	c1 c2 05	 rol	 edx, 5
  0010b	33 50 20	 xor	 edx, DWORD PTR [eax+32]
  0010e	8b fa		 mov	 edi, edx
  00110	23 d6		 and	 edx, esi
  00112	33 d1		 xor	 edx, ecx
  00114	0b cf		 or	 ecx, edi
  00116	33 cb		 xor	 ecx, ebx
  00118	89 55 fc	 mov	 DWORD PTR _c$[ebp], edx
  0011b	33 d3		 xor	 edx, ebx
  0011d	8b 5d fc	 mov	 ebx, DWORD PTR _c$[ebp]
  00120	33 f2		 xor	 esi, edx
  00122	33 fe		 xor	 edi, esi
  00124	89 4d 08	 mov	 DWORD PTR _b$[ebp], ecx
  00127	0b cf		 or	 ecx, edi
  00129	33 cb		 xor	 ecx, ebx
  0012b	23 5d 08	 and	 ebx, DWORD PTR _b$[ebp]
  0012e	8b d1		 mov	 edx, ecx
  00130	33 fb		 xor	 edi, ebx
  00132	33 cf		 xor	 ecx, edi
  00134	31 4d 08	 xor	 DWORD PTR _b$[ebp], ecx
  00137	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  0013a	c1 45 08 03	 rol	 DWORD PTR _b$[ebp], 3
  0013e	33 55 08	 xor	 edx, DWORD PTR _b$[ebp]
  00141	f7 d7		 not	 edi
  00143	8b ce		 mov	 ecx, esi
  00145	c1 e1 03	 shl	 ecx, 3
  00148	33 cf		 xor	 ecx, edi
  0014a	33 4d 08	 xor	 ecx, DWORD PTR _b$[ebp]
  0014d	33 d6		 xor	 edx, esi
  0014f	c1 c1 07	 rol	 ecx, 7
  00152	d1 c2		 rol	 edx, 1
  00154	8b fa		 mov	 edi, edx
  00156	c1 e7 07	 shl	 edi, 7
  00159	33 f9		 xor	 edi, ecx
  0015b	33 7d 08	 xor	 edi, DWORD PTR _b$[ebp]
  0015e	8b da		 mov	 ebx, edx

; 754  : 		afterS2(KX); afterS2(S3); afterS3(LT);

  00160	33 50 34	 xor	 edx, DWORD PTR [eax+52]
  00163	33 d9		 xor	 ebx, ecx
  00165	33 48 3c	 xor	 ecx, DWORD PTR [eax+60]
  00168	33 de		 xor	 ebx, esi
  0016a	c1 c7 16	 rol	 edi, 22			; 00000016H
  0016d	33 78 38	 xor	 edi, DWORD PTR [eax+56]
  00170	c1 c3 05	 rol	 ebx, 5
  00173	33 58 30	 xor	 ebx, DWORD PTR [eax+48]
  00176	8b f3		 mov	 esi, ebx
  00178	0b d9		 or	 ebx, ecx
  0017a	33 ca		 xor	 ecx, edx
  0017c	23 d6		 and	 edx, esi
  0017e	33 f7		 xor	 esi, edi
  00180	33 f9		 xor	 edi, ecx
  00182	23 cb		 and	 ecx, ebx
  00184	0b f2		 or	 esi, edx
  00186	33 da		 xor	 ebx, edx
  00188	33 ce		 xor	 ecx, esi
  0018a	23 f3		 and	 esi, ebx
  0018c	33 d1		 xor	 edx, ecx
  0018e	0b d3		 or	 edx, ebx
  00190	33 f7		 xor	 esi, edi
  00192	33 d7		 xor	 edx, edi
  00194	8b fa		 mov	 edi, edx
  00196	0b d1		 or	 edx, ecx
  00198	33 d1		 xor	 edx, ecx
  0019a	33 d3		 xor	 edx, ebx
  0019c	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  0019f	89 75 fc	 mov	 DWORD PTR _c$[ebp], esi
  001a2	c1 c1 03	 rol	 ecx, 3
  001a5	8b f2		 mov	 esi, edx
  001a7	c1 e2 03	 shl	 edx, 3
  001aa	33 d1		 xor	 edx, ecx
  001ac	33 55 fc	 xor	 edx, DWORD PTR _c$[ebp]
  001af	89 4d 10	 mov	 DWORD PTR _d$[ebp], ecx
  001b2	8b ce		 mov	 ecx, esi
  001b4	33 4d 10	 xor	 ecx, DWORD PTR _d$[ebp]
  001b7	c1 c2 07	 rol	 edx, 7
  001ba	33 f2		 xor	 esi, edx
  001bc	33 cf		 xor	 ecx, edi
  001be	d1 c1		 rol	 ecx, 1

; 755  : 		afterS3(KX); afterS3(S4); afterS4(LT);

  001c0	33 f1		 xor	 esi, ecx
  001c2	c1 c6 05	 rol	 esi, 5
  001c5	33 70 40	 xor	 esi, DWORD PTR [eax+64]
  001c8	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
  001cb	8b de		 mov	 ebx, esi
  001cd	8b f1		 mov	 esi, ecx
  001cf	c1 e6 07	 shl	 esi, 7
  001d2	33 75 10	 xor	 esi, DWORD PTR _d$[ebp]
  001d5	33 f2		 xor	 esi, edx
  001d7	33 50 4c	 xor	 edx, DWORD PTR [eax+76]
  001da	c1 c6 16	 rol	 esi, 22			; 00000016H
  001dd	33 70 48	 xor	 esi, DWORD PTR [eax+72]
  001e0	33 fa		 xor	 edi, edx
  001e2	33 cf		 xor	 ecx, edi
  001e4	f7 d2		 not	 edx
  001e6	33 f2		 xor	 esi, edx
  001e8	33 d3		 xor	 edx, ebx
  001ea	8b fa		 mov	 edi, edx
  001ec	23 f9		 and	 edi, ecx
  001ee	33 ca		 xor	 ecx, edx
  001f0	33 d9		 xor	 ebx, ecx
  001f2	33 fe		 xor	 edi, esi
  001f4	23 f1		 and	 esi, ecx
  001f6	33 f3		 xor	 esi, ebx
  001f8	23 df		 and	 ebx, edi
  001fa	33 d3		 xor	 edx, ebx
  001fc	89 75 10	 mov	 DWORD PTR _d$[ebp], esi
  001ff	8b f7		 mov	 esi, edi
  00201	0b f1		 or	 esi, ecx
  00203	33 f3		 xor	 esi, ebx
  00205	0b da		 or	 ebx, edx
  00207	33 5d 10	 xor	 ebx, DWORD PTR _d$[ebp]
  0020a	21 55 10	 and	 DWORD PTR _d$[ebp], edx
  0020d	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00210	f7 d3		 not	 ebx
  00212	c1 c3 03	 rol	 ebx, 3
  00215	8b cf		 mov	 ecx, edi
  00217	c1 e1 03	 shl	 ecx, 3
  0021a	33 cb		 xor	 ecx, ebx
  0021c	33 ca		 xor	 ecx, edx
  0021e	8b d3		 mov	 edx, ebx
  00220	33 55 10	 xor	 edx, DWORD PTR _d$[ebp]
  00223	c1 c1 07	 rol	 ecx, 7
  00226	33 d7		 xor	 edx, edi
  00228	33 d6		 xor	 edx, esi
  0022a	d1 c2		 rol	 edx, 1
  0022c	8b f2		 mov	 esi, edx
  0022e	c1 e6 07	 shl	 esi, 7
  00231	33 f3		 xor	 esi, ebx
  00233	8b d9		 mov	 ebx, ecx
  00235	33 df		 xor	 ebx, edi
  00237	33 f1		 xor	 esi, ecx

; 756  : 		afterS4(KX); afterS4(S5); afterS5(LT);

  00239	33 da		 xor	 ebx, edx
  0023b	33 50 54	 xor	 edx, DWORD PTR [eax+84]
  0023e	c1 c6 16	 rol	 esi, 22			; 00000016H
  00241	c1 c3 05	 rol	 ebx, 5
  00244	33 58 50	 xor	 ebx, DWORD PTR [eax+80]
  00247	33 48 5c	 xor	 ecx, DWORD PTR [eax+92]
  0024a	89 75 f8	 mov	 DWORD PTR _e$[ebp], esi
  0024d	33 da		 xor	 ebx, edx
  0024f	33 d1		 xor	 edx, ecx
  00251	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  00254	33 75 f8	 xor	 esi, DWORD PTR _e$[ebp]
  00257	f7 d1		 not	 ecx
  00259	33 f1		 xor	 esi, ecx
  0025b	8b fb		 mov	 edi, ebx
  0025d	23 fa		 and	 edi, edx
  0025f	33 fe		 xor	 edi, esi
  00261	0b f2		 or	 esi, edx
  00263	89 55 10	 mov	 DWORD PTR _d$[ebp], edx
  00266	31 4d 10	 xor	 DWORD PTR _d$[ebp], ecx
  00269	23 cf		 and	 ecx, edi
  0026b	33 cb		 xor	 ecx, ebx
  0026d	8b d6		 mov	 edx, esi
  0026f	33 55 10	 xor	 edx, DWORD PTR _d$[ebp]
  00272	33 f3		 xor	 esi, ebx
  00274	33 d7		 xor	 edx, edi
  00276	f7 d6		 not	 esi
  00278	89 75 f8	 mov	 DWORD PTR _e$[ebp], esi
  0027b	8b f1		 mov	 esi, ecx
  0027d	23 cb		 and	 ecx, ebx
  0027f	33 ca		 xor	 ecx, edx
  00281	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00284	0b d6		 or	 edx, esi
  00286	c1 c1 03	 rol	 ecx, 3
  00289	33 f1		 xor	 esi, ecx
  0028b	8b df		 mov	 ebx, edi
  0028d	c1 e3 03	 shl	 ebx, 3
  00290	33 d3		 xor	 edx, ebx
  00292	33 55 f8	 xor	 edx, DWORD PTR _e$[ebp]
  00295	33 f7		 xor	 esi, edi
  00297	33 d1		 xor	 edx, ecx
  00299	c1 c2 07	 rol	 edx, 7
  0029c	d1 c6		 rol	 esi, 1
  0029e	8b de		 mov	 ebx, esi
  002a0	c1 e3 07	 shl	 ebx, 7
  002a3	33 da		 xor	 ebx, edx
  002a5	33 d9		 xor	 ebx, ecx
  002a7	c1 c3 16	 rol	 ebx, 22			; 00000016H
  002aa	8b ca		 mov	 ecx, edx

; 757  : 		afterS5(KX); afterS5(S6); afterS6(LT);

  002ac	33 50 6c	 xor	 edx, DWORD PTR [eax+108]
  002af	33 ce		 xor	 ecx, esi
  002b1	33 cf		 xor	 ecx, edi
  002b3	8b 78 68	 mov	 edi, DWORD PTR [eax+104]
  002b6	33 fb		 xor	 edi, ebx
  002b8	8b 58 64	 mov	 ebx, DWORD PTR [eax+100]
  002bb	c1 c1 05	 rol	 ecx, 5
  002be	33 48 60	 xor	 ecx, DWORD PTR [eax+96]
  002c1	89 55 10	 mov	 DWORD PTR _d$[ebp], edx
  002c4	23 d1		 and	 edx, ecx
  002c6	33 4d 10	 xor	 ecx, DWORD PTR _d$[ebp]
  002c9	f7 d7		 not	 edi
  002cb	33 d7		 xor	 edx, edi
  002cd	33 da		 xor	 ebx, edx
  002cf	33 f3		 xor	 esi, ebx
  002d1	8b 5d 10	 mov	 ebx, DWORD PTR _d$[ebp]
  002d4	0b df		 or	 ebx, edi
  002d6	33 d9		 xor	 ebx, ecx
  002d8	0b ce		 or	 ecx, esi
  002da	31 4d 10	 xor	 DWORD PTR _d$[ebp], ecx
  002dd	33 de		 xor	 ebx, esi
  002df	8b fa		 mov	 edi, edx
  002e1	0b f9		 or	 edi, ecx
  002e3	33 fb		 xor	 edi, ebx
  002e5	89 5d 08	 mov	 DWORD PTR _b$[ebp], ebx
  002e8	8b da		 mov	 ebx, edx
  002ea	33 5d 10	 xor	 ebx, DWORD PTR _d$[ebp]
  002ed	89 75 fc	 mov	 DWORD PTR _c$[ebp], esi
  002f0	33 df		 xor	 ebx, edi
  002f2	8b f3		 mov	 esi, ebx
  002f4	23 75 08	 and	 esi, DWORD PTR _b$[ebp]
  002f7	f7 d2		 not	 edx
  002f9	33 f2		 xor	 esi, edx
  002fb	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  002fe	8b cf		 mov	 ecx, edi
  00300	c1 e1 03	 shl	 ecx, 3
  00303	c1 c3 03	 rol	 ebx, 3
  00306	33 cb		 xor	 ecx, ebx
  00308	33 ce		 xor	 ecx, esi
  0030a	c1 c1 07	 rol	 ecx, 7
  0030d	8b f3		 mov	 esi, ebx
  0030f	33 75 fc	 xor	 esi, DWORD PTR _c$[ebp]
  00312	c7 45 f4 03 00
	00 00		 mov	 DWORD PTR tv938[ebp], 3
  00319	33 f7		 xor	 esi, edi
  0031b	d1 c6		 rol	 esi, 1
  0031d	8b d6		 mov	 edx, esi
  0031f	c1 e2 07	 shl	 edx, 7
  00322	33 d3		 xor	 edx, ebx
  00324	33 d1		 xor	 edx, ecx
  00326	c1 c2 16	 rol	 edx, 22			; 00000016H

; 758  : 		afterS6(KX); afterS6(S7);

  00329	33 50 78	 xor	 edx, DWORD PTR [eax+120]
  0032c	8b de		 mov	 ebx, esi
  0032e	33 70 74	 xor	 esi, DWORD PTR [eax+116]
  00331	33 d9		 xor	 ebx, ecx
  00333	33 48 7c	 xor	 ecx, DWORD PTR [eax+124]
  00336	33 df		 xor	 ebx, edi
  00338	c1 c3 05	 rol	 ebx, 5
  0033b	33 58 70	 xor	 ebx, DWORD PTR [eax+112]
  0033e	89 5d 10	 mov	 DWORD PTR _a$[ebp], ebx
  00341	8b da		 mov	 ebx, edx
  00343	23 d6		 and	 edx, esi
  00345	33 d1		 xor	 edx, ecx
  00347	33 da		 xor	 ebx, edx
  00349	33 d6		 xor	 edx, esi
  0034b	23 ce		 and	 ecx, esi
  0034d	33 75 10	 xor	 esi, DWORD PTR _a$[ebp]
  00350	8b fb		 mov	 edi, ebx
  00352	0b 7d 10	 or	 edi, DWORD PTR _a$[ebp]
  00355	33 ce		 xor	 ecx, esi
  00357	33 fa		 xor	 edi, edx
  00359	33 d1		 xor	 edx, ecx
  0035b	23 cf		 and	 ecx, edi
  0035d	33 cb		 xor	 ecx, ebx
  0035f	33 da		 xor	 ebx, edx
  00361	f7 d3		 not	 ebx
  00363	23 d7		 and	 edx, edi
  00365	33 d3		 xor	 edx, ebx
  00367	23 df		 and	 ebx, edi
  00369	33 de		 xor	 ebx, esi
  0036b	33 d9		 xor	 ebx, ecx
  0036d	8b f3		 mov	 esi, ebx
$LL4@serpent_en:

; 759  : 
; 760  : 		if (i == 4)
; 761  : 			break;
; 762  : 
; 763  : 		++i;
; 764  : 		c = b;

  0036f	8b d9		 mov	 ebx, ecx

; 765  : 		b = e;
; 766  : 		e = d;
; 767  : 		d = a;
; 768  : 		a = e;
; 769  : 		k += 32;

  00371	83 e8 80	 sub	 eax, -128		; ffffff80H
  00374	8b ca		 mov	 ecx, edx

; 770  : 		beforeS0(LT);

  00376	c1 c1 0d	 rol	 ecx, 13			; 0000000dH
  00379	c1 c3 03	 rol	 ebx, 3
  0037c	89 75 08	 mov	 DWORD PTR _b$[ebp], esi
  0037f	8b d7		 mov	 edx, edi
  00381	8b f9		 mov	 edi, ecx
  00383	8b f7		 mov	 esi, edi
  00385	c1 e6 03	 shl	 esi, 3
  00388	33 f2		 xor	 esi, edx
  0038a	33 f3		 xor	 esi, ebx
  0038c	c1 c6 07	 rol	 esi, 7
  0038f	8b d3		 mov	 edx, ebx
  00391	33 55 08	 xor	 edx, DWORD PTR _b$[ebp]
  00394	33 d7		 xor	 edx, edi
  00396	d1 c2		 rol	 edx, 1
  00398	8b ca		 mov	 ecx, edx
  0039a	c1 e1 07	 shl	 ecx, 7
  0039d	33 ce		 xor	 ecx, esi
  0039f	33 cb		 xor	 ecx, ebx
  003a1	c1 c1 16	 rol	 ecx, 22			; 00000016H
  003a4	33 48 08	 xor	 ecx, DWORD PTR [eax+8]
  003a7	8b de		 mov	 ebx, esi
  003a9	33 da		 xor	 ebx, edx
  003ab	33 50 04	 xor	 edx, DWORD PTR [eax+4]
  003ae	33 df		 xor	 ebx, edi
  003b0	8b 78 0c	 mov	 edi, DWORD PTR [eax+12]
  003b3	33 fe		 xor	 edi, esi
  003b5	c1 c3 05	 rol	 ebx, 5
  003b8	33 18		 xor	 ebx, DWORD PTR [eax]
  003ba	8b f1		 mov	 esi, ecx
  003bc	33 fb		 xor	 edi, ebx
  003be	89 5d 10	 mov	 DWORD PTR _a$[ebp], ebx
  003c1	33 f2		 xor	 esi, edx
  003c3	8b df		 mov	 ebx, edi
  003c5	23 da		 and	 ebx, edx
  003c7	33 5d 10	 xor	 ebx, DWORD PTR _a$[ebp]
  003ca	89 5d 08	 mov	 DWORD PTR _b$[ebp], ebx
  003cd	8b 55 08	 mov	 edx, DWORD PTR _b$[ebp]
  003d0	8b df		 mov	 ebx, edi
  003d2	0b 5d 10	 or	 ebx, DWORD PTR _a$[ebp]
  003d5	33 de		 xor	 ebx, esi
  003d7	33 f7		 xor	 esi, edi
  003d9	33 f9		 xor	 edi, ecx
  003db	0b ca		 or	 ecx, edx
  003dd	33 ce		 xor	 ecx, esi
  003df	89 4d fc	 mov	 DWORD PTR _c$[ebp], ecx
  003e2	f7 d6		 not	 esi
  003e4	0b f2		 or	 esi, edx
  003e6	8b ce		 mov	 ecx, esi
  003e8	33 cf		 xor	 ecx, edi
  003ea	33 d1		 xor	 edx, ecx
  003ec	8b 4d fc	 mov	 ecx, DWORD PTR _c$[ebp]
  003ef	0b fb		 or	 edi, ebx
  003f1	89 5d 10	 mov	 DWORD PTR _a$[ebp], ebx
  003f4	8b df		 mov	 ebx, edi
  003f6	33 da		 xor	 ebx, edx
  003f8	c1 c3 0d	 rol	 ebx, 13			; 0000000dH
  003fb	c1 c1 03	 rol	 ecx, 3
  003fe	33 f7		 xor	 esi, edi
  00400	33 f1		 xor	 esi, ecx
  00402	8b d3		 mov	 edx, ebx
  00404	c1 e2 03	 shl	 edx, 3
  00407	33 d1		 xor	 edx, ecx
  00409	33 55 10	 xor	 edx, DWORD PTR _a$[ebp]
  0040c	33 f3		 xor	 esi, ebx
  0040e	c1 c2 07	 rol	 edx, 7
  00411	d1 c6		 rol	 esi, 1
  00413	8b fe		 mov	 edi, esi
  00415	c1 e7 07	 shl	 edi, 7
  00418	33 f9		 xor	 edi, ecx
  0041a	8b ce		 mov	 ecx, esi
  0041c	33 cb		 xor	 ecx, ebx
  0041e	33 fa		 xor	 edi, edx
  00420	33 ca		 xor	 ecx, edx
  00422	c1 c7 16	 rol	 edi, 22			; 00000016H
  00425	c1 c1 05	 rol	 ecx, 5
  00428	33 48 10	 xor	 ecx, DWORD PTR [eax+16]
  0042b	33 70 14	 xor	 esi, DWORD PTR [eax+20]
  0042e	89 7d fc	 mov	 DWORD PTR _c$[ebp], edi
  00431	33 50 1c	 xor	 edx, DWORD PTR [eax+28]
  00434	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  00437	33 7d fc	 xor	 edi, DWORD PTR _c$[ebp]
  0043a	f7 d1		 not	 ecx
  0043c	89 4d 10	 mov	 DWORD PTR _d$[ebp], ecx
  0043f	23 ce		 and	 ecx, esi
  00441	8b 5d 10	 mov	 ebx, DWORD PTR _d$[ebp]
  00444	f7 d7		 not	 edi
  00446	33 f9		 xor	 edi, ecx
  00448	0b ca		 or	 ecx, edx
  0044a	33 f1		 xor	 esi, ecx
  0044c	33 cb		 xor	 ecx, ebx
  0044e	33 d7		 xor	 edx, edi
  00450	0b f9		 or	 edi, ecx
  00452	0b de		 or	 ebx, esi
  00454	33 f2		 xor	 esi, edx
  00456	33 ce		 xor	 ecx, esi
  00458	23 fb		 and	 edi, ebx
  0045a	23 f7		 and	 esi, edi
  0045c	33 f1		 xor	 esi, ecx
  0045e	89 75 f8	 mov	 DWORD PTR _e$[ebp], esi
  00461	8b f7		 mov	 esi, edi
  00463	23 f1		 and	 esi, ecx
  00465	33 f3		 xor	 esi, ebx
  00467	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  0046a	c1 c2 03	 rol	 edx, 3
  0046d	8b cf		 mov	 ecx, edi
  0046f	c1 e1 03	 shl	 ecx, 3
  00472	33 4d f8	 xor	 ecx, DWORD PTR _e$[ebp]
  00475	8b df		 mov	 ebx, edi
  00477	33 ca		 xor	 ecx, edx
  00479	33 de		 xor	 ebx, esi
  0047b	33 da		 xor	 ebx, edx
  0047d	c1 c1 07	 rol	 ecx, 7
  00480	d1 c3		 rol	 ebx, 1
  00482	8b f3		 mov	 esi, ebx
  00484	c1 e6 07	 shl	 esi, 7
  00487	33 f1		 xor	 esi, ecx
  00489	33 f2		 xor	 esi, edx
  0048b	8b d1		 mov	 edx, ecx
  0048d	33 48 2c	 xor	 ecx, DWORD PTR [eax+44]
  00490	33 d7		 xor	 edx, edi
  00492	33 d3		 xor	 edx, ebx
  00494	33 58 24	 xor	 ebx, DWORD PTR [eax+36]
  00497	c1 c6 16	 rol	 esi, 22			; 00000016H
  0049a	33 70 28	 xor	 esi, DWORD PTR [eax+40]
  0049d	c1 c2 05	 rol	 edx, 5
  004a0	33 50 20	 xor	 edx, DWORD PTR [eax+32]
  004a3	8b fa		 mov	 edi, edx
  004a5	23 d6		 and	 edx, esi
  004a7	33 d1		 xor	 edx, ecx
  004a9	0b cf		 or	 ecx, edi
  004ab	33 cb		 xor	 ecx, ebx
  004ad	89 55 fc	 mov	 DWORD PTR _c$[ebp], edx
  004b0	33 d3		 xor	 edx, ebx
  004b2	8b 5d fc	 mov	 ebx, DWORD PTR _c$[ebp]
  004b5	33 f2		 xor	 esi, edx
  004b7	33 fe		 xor	 edi, esi
  004b9	89 4d 08	 mov	 DWORD PTR _b$[ebp], ecx
  004bc	0b cf		 or	 ecx, edi
  004be	33 cb		 xor	 ecx, ebx
  004c0	23 5d 08	 and	 ebx, DWORD PTR _b$[ebp]
  004c3	8b d1		 mov	 edx, ecx
  004c5	33 fb		 xor	 edi, ebx
  004c7	33 cf		 xor	 ecx, edi
  004c9	31 4d 08	 xor	 DWORD PTR _b$[ebp], ecx
  004cc	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  004cf	c1 45 08 03	 rol	 DWORD PTR _b$[ebp], 3
  004d3	33 55 08	 xor	 edx, DWORD PTR _b$[ebp]
  004d6	f7 d7		 not	 edi
  004d8	8b ce		 mov	 ecx, esi
  004da	c1 e1 03	 shl	 ecx, 3
  004dd	33 cf		 xor	 ecx, edi
  004df	33 4d 08	 xor	 ecx, DWORD PTR _b$[ebp]
  004e2	33 d6		 xor	 edx, esi
  004e4	c1 c1 07	 rol	 ecx, 7
  004e7	d1 c2		 rol	 edx, 1
  004e9	8b fa		 mov	 edi, edx
  004eb	c1 e7 07	 shl	 edi, 7
  004ee	33 f9		 xor	 edi, ecx
  004f0	33 7d 08	 xor	 edi, DWORD PTR _b$[ebp]
  004f3	8b da		 mov	 ebx, edx
  004f5	33 50 34	 xor	 edx, DWORD PTR [eax+52]
  004f8	33 d9		 xor	 ebx, ecx
  004fa	33 48 3c	 xor	 ecx, DWORD PTR [eax+60]
  004fd	33 de		 xor	 ebx, esi
  004ff	c1 c7 16	 rol	 edi, 22			; 00000016H
  00502	33 78 38	 xor	 edi, DWORD PTR [eax+56]
  00505	c1 c3 05	 rol	 ebx, 5
  00508	33 58 30	 xor	 ebx, DWORD PTR [eax+48]
  0050b	8b f3		 mov	 esi, ebx
  0050d	0b d9		 or	 ebx, ecx
  0050f	33 ca		 xor	 ecx, edx
  00511	23 d6		 and	 edx, esi
  00513	33 f7		 xor	 esi, edi
  00515	0b f2		 or	 esi, edx
  00517	33 f9		 xor	 edi, ecx
  00519	23 cb		 and	 ecx, ebx
  0051b	33 ce		 xor	 ecx, esi
  0051d	33 da		 xor	 ebx, edx
  0051f	23 f3		 and	 esi, ebx
  00521	33 d1		 xor	 edx, ecx
  00523	33 f7		 xor	 esi, edi
  00525	0b d3		 or	 edx, ebx
  00527	33 d7		 xor	 edx, edi
  00529	8b fa		 mov	 edi, edx
  0052b	0b d1		 or	 edx, ecx
  0052d	33 d1		 xor	 edx, ecx
  0052f	33 d3		 xor	 edx, ebx
  00531	89 75 fc	 mov	 DWORD PTR _c$[ebp], esi
  00534	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  00537	c1 c1 03	 rol	 ecx, 3
  0053a	8b f2		 mov	 esi, edx
  0053c	c1 e2 03	 shl	 edx, 3
  0053f	33 d1		 xor	 edx, ecx
  00541	33 55 fc	 xor	 edx, DWORD PTR _c$[ebp]
  00544	89 4d 10	 mov	 DWORD PTR _d$[ebp], ecx
  00547	8b ce		 mov	 ecx, esi
  00549	33 4d 10	 xor	 ecx, DWORD PTR _d$[ebp]
  0054c	c1 c2 07	 rol	 edx, 7
  0054f	33 f2		 xor	 esi, edx
  00551	33 cf		 xor	 ecx, edi
  00553	8b 78 44	 mov	 edi, DWORD PTR [eax+68]
  00556	d1 c1		 rol	 ecx, 1
  00558	33 f1		 xor	 esi, ecx
  0055a	c1 c6 05	 rol	 esi, 5
  0055d	33 70 40	 xor	 esi, DWORD PTR [eax+64]
  00560	8b de		 mov	 ebx, esi
  00562	8b f1		 mov	 esi, ecx
  00564	c1 e6 07	 shl	 esi, 7
  00567	33 75 10	 xor	 esi, DWORD PTR _d$[ebp]
  0056a	33 f2		 xor	 esi, edx
  0056c	33 50 4c	 xor	 edx, DWORD PTR [eax+76]
  0056f	c1 c6 16	 rol	 esi, 22			; 00000016H
  00572	33 70 48	 xor	 esi, DWORD PTR [eax+72]
  00575	33 fa		 xor	 edi, edx
  00577	33 cf		 xor	 ecx, edi
  00579	f7 d2		 not	 edx
  0057b	33 f2		 xor	 esi, edx
  0057d	33 d3		 xor	 edx, ebx
  0057f	89 4d 10	 mov	 DWORD PTR _a$[ebp], ecx
  00582	8b fa		 mov	 edi, edx
  00584	23 f9		 and	 edi, ecx
  00586	33 fe		 xor	 edi, esi
  00588	33 ca		 xor	 ecx, edx
  0058a	33 d9		 xor	 ebx, ecx
  0058c	23 f1		 and	 esi, ecx
  0058e	33 f3		 xor	 esi, ebx
  00590	23 df		 and	 ebx, edi
  00592	89 75 10	 mov	 DWORD PTR _d$[ebp], esi
  00595	33 d3		 xor	 edx, ebx
  00597	8b f7		 mov	 esi, edi
  00599	0b f1		 or	 esi, ecx
  0059b	33 f3		 xor	 esi, ebx
  0059d	0b da		 or	 ebx, edx
  0059f	33 5d 10	 xor	 ebx, DWORD PTR _d$[ebp]
  005a2	21 55 10	 and	 DWORD PTR _d$[ebp], edx
  005a5	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  005a8	f7 d3		 not	 ebx
  005aa	8b cf		 mov	 ecx, edi
  005ac	c1 c3 03	 rol	 ebx, 3
  005af	c1 e1 03	 shl	 ecx, 3
  005b2	33 cb		 xor	 ecx, ebx
  005b4	33 ca		 xor	 ecx, edx
  005b6	8b d3		 mov	 edx, ebx
  005b8	33 55 10	 xor	 edx, DWORD PTR _d$[ebp]
  005bb	c1 c1 07	 rol	 ecx, 7
  005be	33 d7		 xor	 edx, edi
  005c0	33 d6		 xor	 edx, esi
  005c2	d1 c2		 rol	 edx, 1
  005c4	8b f2		 mov	 esi, edx
  005c6	c1 e6 07	 shl	 esi, 7
  005c9	33 f3		 xor	 esi, ebx
  005cb	33 f1		 xor	 esi, ecx
  005cd	c1 c6 16	 rol	 esi, 22			; 00000016H
  005d0	8b d9		 mov	 ebx, ecx
  005d2	33 48 5c	 xor	 ecx, DWORD PTR [eax+92]
  005d5	33 df		 xor	 ebx, edi
  005d7	33 da		 xor	 ebx, edx
  005d9	33 50 54	 xor	 edx, DWORD PTR [eax+84]
  005dc	c1 c3 05	 rol	 ebx, 5
  005df	33 58 50	 xor	 ebx, DWORD PTR [eax+80]
  005e2	89 75 f8	 mov	 DWORD PTR _e$[ebp], esi
  005e5	8b 70 58	 mov	 esi, DWORD PTR [eax+88]
  005e8	33 75 f8	 xor	 esi, DWORD PTR _e$[ebp]
  005eb	33 da		 xor	 ebx, edx
  005ed	33 d1		 xor	 edx, ecx
  005ef	f7 d1		 not	 ecx
  005f1	33 f1		 xor	 esi, ecx
  005f3	8b fb		 mov	 edi, ebx
  005f5	23 fa		 and	 edi, edx
  005f7	33 fe		 xor	 edi, esi
  005f9	0b f2		 or	 esi, edx
  005fb	89 55 10	 mov	 DWORD PTR _d$[ebp], edx
  005fe	31 4d 10	 xor	 DWORD PTR _d$[ebp], ecx
  00601	23 cf		 and	 ecx, edi
  00603	33 cb		 xor	 ecx, ebx
  00605	8b d6		 mov	 edx, esi
  00607	33 55 10	 xor	 edx, DWORD PTR _d$[ebp]
  0060a	33 f3		 xor	 esi, ebx
  0060c	33 d7		 xor	 edx, edi
  0060e	89 4d fc	 mov	 DWORD PTR _c$[ebp], ecx
  00611	f7 d6		 not	 esi
  00613	89 75 f8	 mov	 DWORD PTR _e$[ebp], esi
  00616	8b f1		 mov	 esi, ecx
  00618	23 cb		 and	 ecx, ebx
  0061a	33 ca		 xor	 ecx, edx
  0061c	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  0061f	0b d6		 or	 edx, esi
  00621	c1 c1 03	 rol	 ecx, 3
  00624	8b df		 mov	 ebx, edi
  00626	c1 e3 03	 shl	 ebx, 3
  00629	33 d3		 xor	 edx, ebx
  0062b	33 55 f8	 xor	 edx, DWORD PTR _e$[ebp]
  0062e	33 f1		 xor	 esi, ecx
  00630	33 d1		 xor	 edx, ecx
  00632	c1 c2 07	 rol	 edx, 7
  00635	33 f7		 xor	 esi, edi
  00637	d1 c6		 rol	 esi, 1
  00639	8b de		 mov	 ebx, esi
  0063b	c1 e3 07	 shl	 ebx, 7
  0063e	33 da		 xor	 ebx, edx
  00640	33 d9		 xor	 ebx, ecx
  00642	8b ca		 mov	 ecx, edx
  00644	33 50 6c	 xor	 edx, DWORD PTR [eax+108]
  00647	33 ce		 xor	 ecx, esi
  00649	33 cf		 xor	 ecx, edi
  0064b	8b 78 68	 mov	 edi, DWORD PTR [eax+104]
  0064e	c1 c3 16	 rol	 ebx, 22			; 00000016H
  00651	c1 c1 05	 rol	 ecx, 5
  00654	33 48 60	 xor	 ecx, DWORD PTR [eax+96]
  00657	33 fb		 xor	 edi, ebx
  00659	8b 58 64	 mov	 ebx, DWORD PTR [eax+100]
  0065c	89 55 10	 mov	 DWORD PTR _d$[ebp], edx
  0065f	23 d1		 and	 edx, ecx
  00661	33 4d 10	 xor	 ecx, DWORD PTR _d$[ebp]
  00664	f7 d7		 not	 edi
  00666	33 d7		 xor	 edx, edi
  00668	33 da		 xor	 ebx, edx
  0066a	33 f3		 xor	 esi, ebx
  0066c	8b 5d 10	 mov	 ebx, DWORD PTR _d$[ebp]
  0066f	89 75 fc	 mov	 DWORD PTR _c$[ebp], esi
  00672	0b df		 or	 ebx, edi
  00674	33 d9		 xor	 ebx, ecx
  00676	0b ce		 or	 ecx, esi
  00678	31 4d 10	 xor	 DWORD PTR _d$[ebp], ecx
  0067b	33 de		 xor	 ebx, esi
  0067d	8b fa		 mov	 edi, edx
  0067f	0b f9		 or	 edi, ecx
  00681	33 fb		 xor	 edi, ebx
  00683	89 5d 08	 mov	 DWORD PTR _b$[ebp], ebx
  00686	8b da		 mov	 ebx, edx
  00688	33 5d 10	 xor	 ebx, DWORD PTR _d$[ebp]
  0068b	f7 d2		 not	 edx
  0068d	33 df		 xor	 ebx, edi
  0068f	8b f3		 mov	 esi, ebx
  00691	23 75 08	 and	 esi, DWORD PTR _b$[ebp]
  00694	33 f2		 xor	 esi, edx
  00696	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00699	c1 c3 03	 rol	 ebx, 3
  0069c	8b cf		 mov	 ecx, edi
  0069e	c1 e1 03	 shl	 ecx, 3
  006a1	33 cb		 xor	 ecx, ebx
  006a3	33 ce		 xor	 ecx, esi
  006a5	8b f3		 mov	 esi, ebx
  006a7	33 75 fc	 xor	 esi, DWORD PTR _c$[ebp]
  006aa	c1 c1 07	 rol	 ecx, 7
  006ad	33 f7		 xor	 esi, edi
  006af	d1 c6		 rol	 esi, 1
  006b1	8b d6		 mov	 edx, esi
  006b3	c1 e2 07	 shl	 edx, 7
  006b6	33 d3		 xor	 edx, ebx
  006b8	33 d1		 xor	 edx, ecx
  006ba	89 7d 10	 mov	 DWORD PTR _a$[ebp], edi
  006bd	c1 c2 16	 rol	 edx, 22			; 00000016H
  006c0	33 50 78	 xor	 edx, DWORD PTR [eax+120]
  006c3	8b fe		 mov	 edi, esi
  006c5	33 70 74	 xor	 esi, DWORD PTR [eax+116]
  006c8	33 f9		 xor	 edi, ecx
  006ca	33 7d 10	 xor	 edi, DWORD PTR _a$[ebp]
  006cd	33 48 7c	 xor	 ecx, DWORD PTR [eax+124]
  006d0	8b da		 mov	 ebx, edx
  006d2	23 d6		 and	 edx, esi
  006d4	33 d1		 xor	 edx, ecx
  006d6	33 da		 xor	 ebx, edx
  006d8	c1 c7 05	 rol	 edi, 5
  006db	33 78 70	 xor	 edi, DWORD PTR [eax+112]
  006de	33 d6		 xor	 edx, esi
  006e0	23 ce		 and	 ecx, esi
  006e2	33 f7		 xor	 esi, edi
  006e4	89 7d 10	 mov	 DWORD PTR _a$[ebp], edi
  006e7	8b fb		 mov	 edi, ebx
  006e9	0b 7d 10	 or	 edi, DWORD PTR _a$[ebp]
  006ec	33 ce		 xor	 ecx, esi
  006ee	33 fa		 xor	 edi, edx
  006f0	33 d1		 xor	 edx, ecx
  006f2	23 cf		 and	 ecx, edi
  006f4	33 cb		 xor	 ecx, ebx
  006f6	33 da		 xor	 ebx, edx
  006f8	f7 d3		 not	 ebx
  006fa	23 d7		 and	 edx, edi
  006fc	33 d3		 xor	 edx, ebx
  006fe	23 df		 and	 ebx, edi
  00700	33 de		 xor	 ebx, esi
  00702	33 d9		 xor	 ebx, ecx
  00704	ff 4d f4	 dec	 DWORD PTR tv938[ebp]
  00707	8b f3		 mov	 esi, ebx
  00709	0f 85 60 fc ff
	ff		 jne	 $LL4@serpent_en

; 771  : 	}
; 772  : 	while (1);
; 773  : 
; 774  : 	afterS7(KX);

  0070f	33 b0 84 00 00
	00		 xor	 esi, DWORD PTR [eax+132]
  00715	33 b8 8c 00 00
	00		 xor	 edi, DWORD PTR [eax+140]
  0071b	33 88 88 00 00
	00		 xor	 ecx, DWORD PTR [eax+136]
  00721	8b 98 80 00 00
	00		 mov	 ebx, DWORD PTR [eax+128]

; 775  : 	
; 776  :     out[0] = LE32(d);

  00727	8b 45 0c	 mov	 eax, DWORD PTR _outBlock$[ebp]

; 777  : 	out[1] = LE32(e);
; 778  : 	out[2] = LE32(b);
; 779  : 	out[3] = LE32(a);

  0072a	89 78 0c	 mov	 DWORD PTR [eax+12], edi
  0072d	5f		 pop	 edi
  0072e	33 da		 xor	 ebx, edx
  00730	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00733	5e		 pop	 esi
  00734	89 18		 mov	 DWORD PTR [eax], ebx
  00736	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00739	5b		 pop	 ebx

; 780  : }

  0073a	c9		 leave
  0073b	c2 0c 00	 ret	 12			; 0000000cH
_serpent_encrypt@12 ENDP
_TEXT	ENDS
PUBLIC	_serpent_decrypt@12
; Function compile flags: /Ogsp
;	COMDAT _serpent_decrypt@12
_TEXT	SEGMENT
_i$ = -8						; size = 4
_d$ = -4						; size = 4
_b$ = 8							; size = 4
_a$ = 8							; size = 4
_inBlock$ = 8						; size = 4
_outBlock$ = 12						; size = 4
_e$ = 16						; size = 4
_c$ = 16						; size = 4
_ks$ = 16						; size = 4
_serpent_decrypt@12 PROC				; COMDAT

; 847  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	51		 push	 ecx
  00006	51		 push	 ecx

; 848  : 	unsigned __int32 a, b, c, d, e;
; 849  : 	const unsigned __int32 *k = (unsigned __int32 *)ks + 104;

  00007	8b 45 10	 mov	 eax, DWORD PTR _ks$[ebp]

; 850  : 	unsigned int i=4;
; 851  : 	unsigned __int32 *in = (unsigned __int32 *) inBlock;
; 852  : 	unsigned __int32 *out = (unsigned __int32 *) outBlock;
; 853  : 
; 854  :     a = LE32(in[0]);
; 855  : 	b = LE32(in[1]);
; 856  : 	c = LE32(in[2]);
; 857  : 	d = LE32(in[3]);
; 858  : 
; 859  : 	beforeI7(KX);

  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _inBlock$[ebp]
  0000d	8b 90 20 02 00
	00		 mov	 edx, DWORD PTR [eax+544]
  00013	33 11		 xor	 edx, DWORD PTR [ecx]
  00015	05 a0 01 00 00	 add	 eax, 416		; 000001a0H
  0001a	53		 push	 ebx
  0001b	8b 98 84 00 00
	00		 mov	 ebx, DWORD PTR [eax+132]
  00021	33 59 04	 xor	 ebx, DWORD PTR [ecx+4]
  00024	56		 push	 esi
  00025	8b b0 88 00 00
	00		 mov	 esi, DWORD PTR [eax+136]
  0002b	33 71 08	 xor	 esi, DWORD PTR [ecx+8]
  0002e	57		 push	 edi
  0002f	8b b8 8c 00 00
	00		 mov	 edi, DWORD PTR [eax+140]
  00035	33 79 0c	 xor	 edi, DWORD PTR [ecx+12]

; 860  : 	goto start;
; 861  : 
; 862  : 	do
; 863  : 	{
; 864  : 		c = b;
; 865  : 		b = d;
; 866  : 		d = e;
; 867  : 		k -= 32;
; 868  : 		beforeI7(ILT);
; 869  : start:
; 870  : 		beforeI7(I7); afterI7(KX); 

  00038	8b ce		 mov	 ecx, esi
  0003a	33 f2		 xor	 esi, edx
  0003c	23 d7		 and	 edx, edi
  0003e	0b cf		 or	 ecx, edi
  00040	33 fb		 xor	 edi, ebx
  00042	0b da		 or	 ebx, edx
  00044	23 f9		 and	 edi, ecx
  00046	f7 d6		 not	 esi
  00048	33 d6		 xor	 edx, esi
  0004a	23 f1		 and	 esi, ecx
  0004c	33 de		 xor	 ebx, esi
  0004e	33 f2		 xor	 esi, edx
  00050	89 4d 10	 mov	 DWORD PTR _e$[ebp], ecx
  00053	8b ce		 mov	 ecx, esi
  00055	0b ca		 or	 ecx, edx
  00057	8b 55 10	 mov	 edx, DWORD PTR _e$[ebp]
  0005a	33 d3		 xor	 edx, ebx
  0005c	33 cf		 xor	 ecx, edi
  0005e	33 fa		 xor	 edi, edx
  00060	0b d1		 or	 edx, ecx
  00062	33 48 74	 xor	 ecx, DWORD PTR [eax+116]
  00065	33 d6		 xor	 edx, esi
  00067	89 7d fc	 mov	 DWORD PTR _d$[ebp], edi
  0006a	8b fa		 mov	 edi, edx
  0006c	33 78 7c	 xor	 edi, DWORD PTR [eax+124]
  0006f	8b 50 78	 mov	 edx, DWORD PTR [eax+120]
  00072	33 d3		 xor	 edx, ebx

; 871  : 		afterI7(ILT); afterI7(I6); afterI6(KX); 

  00074	c1 ca 16	 ror	 edx, 22			; 00000016H
  00077	8b d9		 mov	 ebx, ecx
  00079	c1 e3 07	 shl	 ebx, 7
  0007c	33 d3		 xor	 edx, ebx
  0007e	33 d7		 xor	 edx, edi
  00080	89 55 08	 mov	 DWORD PTR _b$[ebp], edx
  00083	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00086	33 55 fc	 xor	 edx, DWORD PTR _d$[ebp]
  00089	8b 5d 08	 mov	 ebx, DWORD PTR _b$[ebp]
  0008c	33 d6		 xor	 edx, esi
  0008e	c1 ca 05	 ror	 edx, 5
  00091	33 d7		 xor	 edx, edi
  00093	33 d1		 xor	 edx, ecx
  00095	c1 cf 07	 ror	 edi, 7
  00098	8b f2		 mov	 esi, edx
  0009a	c1 e6 03	 shl	 esi, 3
  0009d	33 fe		 xor	 edi, esi
  0009f	33 fb		 xor	 edi, ebx
  000a1	d1 c9		 ror	 ecx, 1
  000a3	33 ca		 xor	 ecx, edx
  000a5	33 cb		 xor	 ecx, ebx
  000a7	c1 cb 03	 ror	 ebx, 3
  000aa	8b f7		 mov	 esi, edi
  000ac	89 4d 08	 mov	 DWORD PTR _a$[ebp], ecx
  000af	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  000b2	33 d3		 xor	 edx, ebx
  000b4	33 f1		 xor	 esi, ecx
  000b6	8b ca		 mov	 ecx, edx
  000b8	23 cb		 and	 ecx, ebx
  000ba	33 fb		 xor	 edi, ebx
  000bc	0b fa		 or	 edi, edx
  000be	f7 d1		 not	 ecx
  000c0	33 ce		 xor	 ecx, esi
  000c2	33 f7		 xor	 esi, edi
  000c4	33 7d 08	 xor	 edi, DWORD PTR _a$[ebp]
  000c7	33 d1		 xor	 edx, ecx
  000c9	8b de		 mov	 ebx, esi
  000cb	23 5d 08	 and	 ebx, DWORD PTR _a$[ebp]
  000ce	89 55 fc	 mov	 DWORD PTR _d$[ebp], edx
  000d1	89 75 10	 mov	 DWORD PTR _e$[ebp], esi
  000d4	33 da		 xor	 ebx, edx
  000d6	8b d6		 mov	 edx, esi
  000d8	33 55 fc	 xor	 edx, DWORD PTR _d$[ebp]
  000db	8b 70 6c	 mov	 esi, DWORD PTR [eax+108]
  000de	33 75 10	 xor	 esi, DWORD PTR _e$[ebp]
  000e1	0b d1		 or	 edx, ecx
  000e3	33 48 64	 xor	 ecx, DWORD PTR [eax+100]
  000e6	33 f3		 xor	 esi, ebx
  000e8	89 55 fc	 mov	 DWORD PTR _d$[ebp], edx

; 872  : 		afterI6(ILT); afterI6(I5); afterI5(KX); 

  000eb	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  000ee	33 55 fc	 xor	 edx, DWORD PTR _d$[ebp]
  000f1	33 d7		 xor	 edx, edi
  000f3	c1 ca 16	 ror	 edx, 22			; 00000016H
  000f6	8b f9		 mov	 edi, ecx
  000f8	c1 e7 07	 shl	 edi, 7
  000fb	33 d7		 xor	 edx, edi
  000fd	8b 78 60	 mov	 edi, DWORD PTR [eax+96]
  00100	33 d6		 xor	 edx, esi
  00102	33 fb		 xor	 edi, ebx
  00104	c1 cf 05	 ror	 edi, 5
  00107	33 fe		 xor	 edi, esi
  00109	33 f9		 xor	 edi, ecx
  0010b	c1 ce 07	 ror	 esi, 7
  0010e	8b df		 mov	 ebx, edi
  00110	c1 e3 03	 shl	 ebx, 3
  00113	33 f3		 xor	 esi, ebx
  00115	33 f2		 xor	 esi, edx
  00117	d1 c9		 ror	 ecx, 1
  00119	33 ca		 xor	 ecx, edx
  0011b	33 cf		 xor	 ecx, edi
  0011d	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  00120	8b de		 mov	 ebx, esi
  00122	0b f7		 or	 esi, edi
  00124	c1 ca 03	 ror	 edx, 3
  00127	f7 d1		 not	 ecx
  00129	33 d1		 xor	 edx, ecx
  0012b	33 f2		 xor	 esi, edx
  0012d	89 4d 08	 mov	 DWORD PTR _b$[ebp], ecx
  00130	0b 55 08	 or	 edx, DWORD PTR _b$[ebp]
  00133	8b ce		 mov	 ecx, esi
  00135	33 d9		 xor	 ebx, ecx
  00137	23 d7		 and	 edx, edi
  00139	33 d3		 xor	 edx, ebx
  0013b	0b df		 or	 ebx, edi
  0013d	33 5d 08	 xor	 ebx, DWORD PTR _b$[ebp]
  00140	8b f3		 mov	 esi, ebx
  00142	33 f2		 xor	 esi, edx
  00144	8b da		 mov	 ebx, edx
  00146	23 5d 08	 and	 ebx, DWORD PTR _b$[ebp]
  00149	33 50 5c	 xor	 edx, DWORD PTR [eax+92]
  0014c	33 d9		 xor	 ebx, ecx
  0014e	23 ce		 and	 ecx, esi
  00150	33 f3		 xor	 esi, ebx
  00152	33 ce		 xor	 ecx, esi
  00154	33 cf		 xor	 ecx, edi
  00156	89 4d 10	 mov	 DWORD PTR _e$[ebp], ecx
  00159	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  0015c	33 4d 10	 xor	 ecx, DWORD PTR _e$[ebp]
  0015f	f7 d6		 not	 esi
  00161	33 70 54	 xor	 esi, DWORD PTR [eax+84]

; 873  : 		afterI5(ILT); afterI5(I4); afterI4(KX); 

  00164	c1 c9 16	 ror	 ecx, 22			; 00000016H
  00167	8b fe		 mov	 edi, esi
  00169	c1 e6 07	 shl	 esi, 7
  0016c	33 ce		 xor	 ecx, esi
  0016e	8b 70 50	 mov	 esi, DWORD PTR [eax+80]
  00171	33 f3		 xor	 esi, ebx
  00173	33 ca		 xor	 ecx, edx
  00175	c1 ce 05	 ror	 esi, 5
  00178	33 f7		 xor	 esi, edi
  0017a	33 f2		 xor	 esi, edx
  0017c	c1 ca 07	 ror	 edx, 7
  0017f	8b de		 mov	 ebx, esi
  00181	c1 e3 03	 shl	 ebx, 3
  00184	33 d3		 xor	 edx, ebx
  00186	33 d1		 xor	 edx, ecx
  00188	d1 cf		 ror	 edi, 1
  0018a	33 f9		 xor	 edi, ecx
  0018c	33 fe		 xor	 edi, esi
  0018e	89 55 10	 mov	 DWORD PTR _c$[ebp], edx
  00191	8b d7		 mov	 edx, edi
  00193	c1 c9 03	 ror	 ecx, 3
  00196	8b f9		 mov	 edi, ecx
  00198	23 4d 10	 and	 ecx, DWORD PTR _c$[ebp]
  0019b	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  0019e	33 ca		 xor	 ecx, edx
  001a0	0b 55 10	 or	 edx, DWORD PTR _c$[ebp]
  001a3	8b d9		 mov	 ebx, ecx
  001a5	23 d6		 and	 edx, esi
  001a7	33 da		 xor	 ebx, edx
  001a9	33 fb		 xor	 edi, ebx
  001ab	31 7d 10	 xor	 DWORD PTR _c$[ebp], edi
  001ae	8b d9		 mov	 ebx, ecx
  001b0	23 da		 and	 ebx, edx
  001b2	8b 55 10	 mov	 edx, DWORD PTR _c$[ebp]
  001b5	33 da		 xor	 ebx, edx
  001b7	f7 d6		 not	 esi
  001b9	23 d6		 and	 edx, esi
  001bb	33 d1		 xor	 edx, ecx
  001bd	33 f3		 xor	 esi, ebx
  001bf	23 ce		 and	 ecx, esi
  001c1	33 d6		 xor	 edx, esi
  001c3	33 cf		 xor	 ecx, edi
  001c5	33 78 4c	 xor	 edi, DWORD PTR [eax+76]
  001c8	0b ca		 or	 ecx, edx
  001ca	33 cb		 xor	 ecx, ebx
  001cc	8b 58 44	 mov	 ebx, DWORD PTR [eax+68]
  001cf	33 da		 xor	 ebx, edx
  001d1	33 de		 xor	 ebx, esi
  001d3	89 4d 10	 mov	 DWORD PTR _e$[ebp], ecx
  001d6	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  001d9	33 4d 10	 xor	 ecx, DWORD PTR _e$[ebp]

; 874  : 		afterI4(ILT); afterI4(I3); afterI3(KX); 

  001dc	8b d3		 mov	 edx, ebx
  001de	c1 e2 07	 shl	 edx, 7
  001e1	c1 c9 16	 ror	 ecx, 22			; 00000016H
  001e4	33 ca		 xor	 ecx, edx
  001e6	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  001e9	33 d6		 xor	 edx, esi
  001eb	33 cf		 xor	 ecx, edi
  001ed	c1 ca 05	 ror	 edx, 5
  001f0	33 d3		 xor	 edx, ebx
  001f2	33 d7		 xor	 edx, edi
  001f4	c1 cf 07	 ror	 edi, 7
  001f7	8b f2		 mov	 esi, edx
  001f9	c1 e6 03	 shl	 esi, 3
  001fc	33 fe		 xor	 edi, esi
  001fe	33 f9		 xor	 edi, ecx
  00200	d1 cb		 ror	 ebx, 1
  00202	33 d9		 xor	 ebx, ecx
  00204	33 da		 xor	 ebx, edx
  00206	c1 c9 03	 ror	 ecx, 3
  00209	89 7d 08	 mov	 DWORD PTR _a$[ebp], edi
  0020c	8b f9		 mov	 edi, ecx
  0020e	33 cb		 xor	 ecx, ebx
  00210	8b f1		 mov	 esi, ecx
  00212	23 f3		 and	 esi, ebx
  00214	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  00217	33 f2		 xor	 esi, edx
  00219	23 d7		 and	 edx, edi
  0021b	33 7d 08	 xor	 edi, DWORD PTR _a$[ebp]
  0021e	8b de		 mov	 ebx, esi
  00220	0b 5d 08	 or	 ebx, DWORD PTR _a$[ebp]
  00223	33 d7		 xor	 edx, edi
  00225	33 d9		 xor	 ebx, ecx
  00227	33 ca		 xor	 ecx, edx
  00229	33 f9		 xor	 edi, ecx
  0022b	0b d3		 or	 edx, ebx
  0022d	33 d6		 xor	 edx, esi
  0022f	23 cb		 and	 ecx, ebx
  00231	0b f3		 or	 esi, ebx
  00233	33 f1		 xor	 esi, ecx
  00235	89 7d fc	 mov	 DWORD PTR _d$[ebp], edi
  00238	33 4d fc	 xor	 ecx, DWORD PTR _d$[ebp]
  0023b	8b fe		 mov	 edi, esi
  0023d	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  00240	33 78 3c	 xor	 edi, DWORD PTR [eax+60]
  00243	33 ca		 xor	 ecx, edx
  00245	33 50 34	 xor	 edx, DWORD PTR [eax+52]
  00248	33 f1		 xor	 esi, ecx

; 875  : 		afterI3(ILT); afterI3(I2); afterI2(KX); 

  0024a	8b ca		 mov	 ecx, edx
  0024c	c1 ce 16	 ror	 esi, 22			; 00000016H
  0024f	c1 e1 07	 shl	 ecx, 7
  00252	33 f1		 xor	 esi, ecx
  00254	33 f7		 xor	 esi, edi
  00256	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  00259	33 cb		 xor	 ecx, ebx
  0025b	c1 c9 05	 ror	 ecx, 5
  0025e	33 cf		 xor	 ecx, edi
  00260	33 ca		 xor	 ecx, edx
  00262	c1 cf 07	 ror	 edi, 7
  00265	8b d9		 mov	 ebx, ecx
  00267	c1 e3 03	 shl	 ebx, 3
  0026a	33 fb		 xor	 edi, ebx
  0026c	33 fe		 xor	 edi, esi
  0026e	d1 ca		 ror	 edx, 1
  00270	33 d6		 xor	 edx, esi
  00272	33 d1		 xor	 edx, ecx
  00274	c1 c9 0d	 ror	 ecx, 13			; 0000000dH
  00277	c1 ce 03	 ror	 esi, 3
  0027a	33 f7		 xor	 esi, edi
  0027c	33 f9		 xor	 edi, ecx
  0027e	8b de		 mov	 ebx, esi
  00280	23 df		 and	 ebx, edi
  00282	33 da		 xor	 ebx, edx
  00284	89 55 08	 mov	 DWORD PTR _b$[ebp], edx
  00287	8b d6		 mov	 edx, esi
  00289	0b 55 08	 or	 edx, DWORD PTR _b$[ebp]
  0028c	33 f3		 xor	 esi, ebx
  0028e	33 d7		 xor	 edx, edi
  00290	23 fb		 and	 edi, ebx
  00292	23 f9		 and	 edi, ecx
  00294	33 fe		 xor	 edi, esi
  00296	23 f2		 and	 esi, edx
  00298	0b f1		 or	 esi, ecx
  0029a	f7 d3		 not	 ebx
  0029c	33 f3		 xor	 esi, ebx
  0029e	89 75 10	 mov	 DWORD PTR _e$[ebp], esi
  002a1	89 55 08	 mov	 DWORD PTR _b$[ebp], edx
  002a4	8b f3		 mov	 esi, ebx
  002a6	33 f1		 xor	 esi, ecx
  002a8	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  002ab	33 4d 10	 xor	 ecx, DWORD PTR _e$[ebp]
  002ae	23 f2		 and	 esi, edx
  002b0	8b d7		 mov	 edx, edi
  002b2	33 78 24	 xor	 edi, DWORD PTR [eax+36]
  002b5	33 d3		 xor	 edx, ebx
  002b7	33 d6		 xor	 edx, esi
  002b9	33 50 2c	 xor	 edx, DWORD PTR [eax+44]

; 876  : 		afterI2(ILT); afterI2(I1); afterI1(KX); 

  002bc	8b f7		 mov	 esi, edi
  002be	c1 e6 07	 shl	 esi, 7
  002c1	c1 c9 16	 ror	 ecx, 22			; 00000016H
  002c4	33 ce		 xor	 ecx, esi
  002c6	8b 70 20	 mov	 esi, DWORD PTR [eax+32]
  002c9	33 75 08	 xor	 esi, DWORD PTR _b$[ebp]
  002cc	33 ca		 xor	 ecx, edx
  002ce	c1 ce 05	 ror	 esi, 5
  002d1	33 f7		 xor	 esi, edi
  002d3	33 f2		 xor	 esi, edx
  002d5	c1 ca 07	 ror	 edx, 7
  002d8	8b de		 mov	 ebx, esi
  002da	c1 e3 03	 shl	 ebx, 3
  002dd	33 d3		 xor	 edx, ebx
  002df	33 d1		 xor	 edx, ecx
  002e1	d1 cf		 ror	 edi, 1
  002e3	33 f9		 xor	 edi, ecx
  002e5	33 fe		 xor	 edi, esi
  002e7	89 7d 08	 mov	 DWORD PTR _a$[ebp], edi
  002ea	33 fa		 xor	 edi, edx
  002ec	8b df		 mov	 ebx, edi
  002ee	23 da		 and	 ebx, edx
  002f0	c1 c9 03	 ror	 ecx, 3
  002f3	31 4d 08	 xor	 DWORD PTR _a$[ebp], ecx
  002f6	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  002f9	8b d7		 mov	 edx, edi
  002fb	33 de		 xor	 ebx, esi
  002fd	0b d6		 or	 edx, esi
  002ff	8b 75 08	 mov	 esi, DWORD PTR _a$[ebp]
  00302	33 d6		 xor	 edx, esi
  00304	33 cb		 xor	 ecx, ebx
  00306	33 fb		 xor	 edi, ebx
  00308	0b d1		 or	 edx, ecx
  0030a	33 d7		 xor	 edx, edi
  0030c	0b fb		 or	 edi, ebx
  0030e	33 fa		 xor	 edi, edx
  00310	33 48 1c	 xor	 ecx, DWORD PTR [eax+28]
  00313	f7 d6		 not	 esi
  00315	33 f7		 xor	 esi, edi
  00317	0b fa		 or	 edi, edx
  00319	33 fa		 xor	 edi, edx
  0031b	33 50 14	 xor	 edx, DWORD PTR [eax+20]
  0031e	0b fe		 or	 edi, esi
  00320	89 75 08	 mov	 DWORD PTR _a$[ebp], esi
  00323	8b f7		 mov	 esi, edi

; 877  : 		afterI1(ILT); afterI1(I0); afterI0(KX);

  00325	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  00328	33 fe		 xor	 edi, esi
  0032a	33 fb		 xor	 edi, ebx
  0032c	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
  0032f	33 5d 08	 xor	 ebx, DWORD PTR _a$[ebp]
  00332	c1 cf 16	 ror	 edi, 22			; 00000016H
  00335	8b f2		 mov	 esi, edx
  00337	c1 e6 07	 shl	 esi, 7
  0033a	33 fe		 xor	 edi, esi
  0033c	33 f9		 xor	 edi, ecx
  0033e	c1 cb 05	 ror	 ebx, 5
  00341	33 d9		 xor	 ebx, ecx
  00343	33 da		 xor	 ebx, edx
  00345	8b f3		 mov	 esi, ebx
  00347	c1 c9 07	 ror	 ecx, 7
  0034a	c1 e6 03	 shl	 esi, 3
  0034d	33 ce		 xor	 ecx, esi
  0034f	33 cf		 xor	 ecx, edi
  00351	d1 ca		 ror	 edx, 1
  00353	33 d7		 xor	 edx, edi
  00355	33 d3		 xor	 edx, ebx
  00357	c1 cb 0d	 ror	 ebx, 13			; 0000000dH
  0035a	8b f2		 mov	 esi, edx
  0035c	c1 cf 03	 ror	 edi, 3
  0035f	89 4d 10	 mov	 DWORD PTR _e$[ebp], ecx
  00362	f7 d7		 not	 edi
  00364	8b d7		 mov	 edx, edi
  00366	8b ce		 mov	 ecx, esi
  00368	0b f3		 or	 esi, ebx
  0036a	f7 d1		 not	 ecx
  0036c	33 d9		 xor	 ebx, ecx
  0036e	33 f2		 xor	 esi, edx
  00370	33 75 10	 xor	 esi, DWORD PTR _e$[ebp]
  00373	8b f9		 mov	 edi, ecx
  00375	0b fa		 or	 edi, edx
  00377	33 fb		 xor	 edi, ebx
  00379	23 5d 10	 and	 ebx, DWORD PTR _e$[ebp]
  0037c	8b d6		 mov	 edx, esi
  0037e	0b d3		 or	 edx, ebx
  00380	33 cb		 xor	 ecx, ebx
  00382	8b 5d 10	 mov	 ebx, DWORD PTR _e$[ebp]
  00385	33 d7		 xor	 edx, edi
  00387	33 d9		 xor	 ebx, ecx
  00389	33 de		 xor	 ebx, esi
  0038b	33 fe		 xor	 edi, esi
  0038d	33 70 08	 xor	 esi, DWORD PTR [eax+8]
  00390	33 da		 xor	 ebx, edx
  00392	33 10		 xor	 edx, DWORD PTR [eax]
  00394	23 fb		 and	 edi, ebx
  00396	33 78 04	 xor	 edi, DWORD PTR [eax+4]

; 878  : 	}
; 879  : 	while (--i != 0);

  00399	c7 45 f8 03 00
	00 00		 mov	 DWORD PTR _i$[ebp], 3
  003a0	33 cf		 xor	 ecx, edi
  003a2	33 58 0c	 xor	 ebx, DWORD PTR [eax+12]
$start$26075:
  003a5	8b f9		 mov	 edi, ecx
  003a7	c1 e7 07	 shl	 edi, 7
  003aa	83 c0 80	 add	 eax, -128		; ffffff80H
  003ad	c1 ce 16	 ror	 esi, 22			; 00000016H
  003b0	33 f7		 xor	 esi, edi
  003b2	33 f3		 xor	 esi, ebx
  003b4	c1 ca 05	 ror	 edx, 5
  003b7	33 d3		 xor	 edx, ebx
  003b9	33 d1		 xor	 edx, ecx
  003bb	89 4d 08	 mov	 DWORD PTR _b$[ebp], ecx
  003be	c1 cb 07	 ror	 ebx, 7
  003c1	8b ca		 mov	 ecx, edx
  003c3	c1 e1 03	 shl	 ecx, 3
  003c6	33 d9		 xor	 ebx, ecx
  003c8	8b 4d 08	 mov	 ecx, DWORD PTR _b$[ebp]
  003cb	8b fe		 mov	 edi, esi
  003cd	33 df		 xor	 ebx, edi
  003cf	d1 c9		 ror	 ecx, 1
  003d1	33 cf		 xor	 ecx, edi
  003d3	33 ca		 xor	 ecx, edx
  003d5	c1 cf 03	 ror	 edi, 3
  003d8	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  003db	8b f7		 mov	 esi, edi
  003dd	33 fa		 xor	 edi, edx
  003df	23 d3		 and	 edx, ebx
  003e1	0b f3		 or	 esi, ebx
  003e3	33 d9		 xor	 ebx, ecx
  003e5	0b ca		 or	 ecx, edx
  003e7	23 de		 and	 ebx, esi
  003e9	f7 d7		 not	 edi
  003eb	33 d7		 xor	 edx, edi
  003ed	23 fe		 and	 edi, esi
  003ef	33 cf		 xor	 ecx, edi
  003f1	33 fa		 xor	 edi, edx
  003f3	89 4d 08	 mov	 DWORD PTR _b$[ebp], ecx
  003f6	33 75 08	 xor	 esi, DWORD PTR _b$[ebp]
  003f9	8b cf		 mov	 ecx, edi
  003fb	0b ca		 or	 ecx, edx
  003fd	33 cb		 xor	 ecx, ebx
  003ff	33 de		 xor	 ebx, esi
  00401	0b f1		 or	 esi, ecx
  00403	33 48 74	 xor	 ecx, DWORD PTR [eax+116]
  00406	33 f7		 xor	 esi, edi
  00408	33 70 7c	 xor	 esi, DWORD PTR [eax+124]
  0040b	89 5d fc	 mov	 DWORD PTR _d$[ebp], ebx
  0040e	8b 58 78	 mov	 ebx, DWORD PTR [eax+120]
  00411	33 5d 08	 xor	 ebx, DWORD PTR _b$[ebp]
  00414	8b d1		 mov	 edx, ecx
  00416	c1 e2 07	 shl	 edx, 7
  00419	c1 cb 16	 ror	 ebx, 22			; 00000016H
  0041c	33 da		 xor	 ebx, edx
  0041e	8b 50 70	 mov	 edx, DWORD PTR [eax+112]
  00421	33 55 fc	 xor	 edx, DWORD PTR _d$[ebp]
  00424	33 de		 xor	 ebx, esi
  00426	33 d7		 xor	 edx, edi
  00428	c1 ca 05	 ror	 edx, 5
  0042b	33 d6		 xor	 edx, esi
  0042d	33 d1		 xor	 edx, ecx
  0042f	c1 ce 07	 ror	 esi, 7
  00432	8b fa		 mov	 edi, edx
  00434	c1 e7 03	 shl	 edi, 3
  00437	33 f7		 xor	 esi, edi
  00439	33 f3		 xor	 esi, ebx
  0043b	d1 c9		 ror	 ecx, 1
  0043d	33 ca		 xor	 ecx, edx
  0043f	33 cb		 xor	 ecx, ebx
  00441	c1 cb 03	 ror	 ebx, 3
  00444	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  00447	33 d3		 xor	 edx, ebx
  00449	89 4d 08	 mov	 DWORD PTR _a$[ebp], ecx
  0044c	8b fe		 mov	 edi, esi
  0044e	33 f1		 xor	 esi, ecx
  00450	8b ca		 mov	 ecx, edx
  00452	23 cb		 and	 ecx, ebx
  00454	33 fb		 xor	 edi, ebx
  00456	f7 d1		 not	 ecx
  00458	33 ce		 xor	 ecx, esi
  0045a	0b fa		 or	 edi, edx
  0045c	33 d1		 xor	 edx, ecx
  0045e	33 f7		 xor	 esi, edi
  00460	89 75 10	 mov	 DWORD PTR _e$[ebp], esi
  00463	33 7d 08	 xor	 edi, DWORD PTR _a$[ebp]
  00466	8b de		 mov	 ebx, esi
  00468	23 5d 08	 and	 ebx, DWORD PTR _a$[ebp]
  0046b	33 f2		 xor	 esi, edx
  0046d	0b f1		 or	 esi, ecx
  0046f	33 48 64	 xor	 ecx, DWORD PTR [eax+100]
  00472	33 da		 xor	 ebx, edx
  00474	8b 50 68	 mov	 edx, DWORD PTR [eax+104]
  00477	89 75 fc	 mov	 DWORD PTR _d$[ebp], esi
  0047a	33 55 fc	 xor	 edx, DWORD PTR _d$[ebp]
  0047d	8b 70 6c	 mov	 esi, DWORD PTR [eax+108]
  00480	33 75 10	 xor	 esi, DWORD PTR _e$[ebp]
  00483	33 d7		 xor	 edx, edi
  00485	33 f3		 xor	 esi, ebx
  00487	c1 ca 16	 ror	 edx, 22			; 00000016H
  0048a	8b f9		 mov	 edi, ecx
  0048c	c1 e7 07	 shl	 edi, 7
  0048f	33 d7		 xor	 edx, edi
  00491	8b 78 60	 mov	 edi, DWORD PTR [eax+96]
  00494	33 d6		 xor	 edx, esi
  00496	33 fb		 xor	 edi, ebx
  00498	c1 cf 05	 ror	 edi, 5
  0049b	33 fe		 xor	 edi, esi
  0049d	33 f9		 xor	 edi, ecx
  0049f	c1 ce 07	 ror	 esi, 7
  004a2	8b df		 mov	 ebx, edi
  004a4	c1 e3 03	 shl	 ebx, 3
  004a7	33 f3		 xor	 esi, ebx
  004a9	33 f2		 xor	 esi, edx
  004ab	d1 c9		 ror	 ecx, 1
  004ad	33 ca		 xor	 ecx, edx
  004af	33 cf		 xor	 ecx, edi
  004b1	c1 cf 0d	 ror	 edi, 13			; 0000000dH
  004b4	8b de		 mov	 ebx, esi
  004b6	0b f7		 or	 esi, edi
  004b8	c1 ca 03	 ror	 edx, 3
  004bb	f7 d1		 not	 ecx
  004bd	33 d1		 xor	 edx, ecx
  004bf	33 f2		 xor	 esi, edx
  004c1	89 4d 08	 mov	 DWORD PTR _b$[ebp], ecx
  004c4	0b 55 08	 or	 edx, DWORD PTR _b$[ebp]
  004c7	8b ce		 mov	 ecx, esi
  004c9	33 d9		 xor	 ebx, ecx
  004cb	23 d7		 and	 edx, edi
  004cd	33 d3		 xor	 edx, ebx
  004cf	0b df		 or	 ebx, edi
  004d1	33 5d 08	 xor	 ebx, DWORD PTR _b$[ebp]
  004d4	8b f3		 mov	 esi, ebx
  004d6	33 f2		 xor	 esi, edx
  004d8	8b da		 mov	 ebx, edx
  004da	23 5d 08	 and	 ebx, DWORD PTR _b$[ebp]
  004dd	33 50 5c	 xor	 edx, DWORD PTR [eax+92]
  004e0	33 d9		 xor	 ebx, ecx
  004e2	23 ce		 and	 ecx, esi
  004e4	33 f3		 xor	 esi, ebx
  004e6	33 ce		 xor	 ecx, esi
  004e8	33 cf		 xor	 ecx, edi
  004ea	f7 d6		 not	 esi
  004ec	33 70 54	 xor	 esi, DWORD PTR [eax+84]
  004ef	89 4d 10	 mov	 DWORD PTR _e$[ebp], ecx
  004f2	8b 48 58	 mov	 ecx, DWORD PTR [eax+88]
  004f5	33 4d 10	 xor	 ecx, DWORD PTR _e$[ebp]
  004f8	8b fe		 mov	 edi, esi
  004fa	c1 e6 07	 shl	 esi, 7
  004fd	c1 c9 16	 ror	 ecx, 22			; 00000016H
  00500	33 ce		 xor	 ecx, esi
  00502	8b 70 50	 mov	 esi, DWORD PTR [eax+80]
  00505	33 f3		 xor	 esi, ebx
  00507	33 ca		 xor	 ecx, edx
  00509	c1 ce 05	 ror	 esi, 5
  0050c	33 f7		 xor	 esi, edi
  0050e	33 f2		 xor	 esi, edx
  00510	c1 ca 07	 ror	 edx, 7
  00513	8b de		 mov	 ebx, esi
  00515	c1 e3 03	 shl	 ebx, 3
  00518	33 d3		 xor	 edx, ebx
  0051a	33 d1		 xor	 edx, ecx
  0051c	d1 cf		 ror	 edi, 1
  0051e	33 f9		 xor	 edi, ecx
  00520	89 55 10	 mov	 DWORD PTR _c$[ebp], edx
  00523	33 fe		 xor	 edi, esi
  00525	c1 c9 03	 ror	 ecx, 3
  00528	8b d7		 mov	 edx, edi
  0052a	8b f9		 mov	 edi, ecx
  0052c	23 4d 10	 and	 ecx, DWORD PTR _c$[ebp]
  0052f	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  00532	33 ca		 xor	 ecx, edx
  00534	0b 55 10	 or	 edx, DWORD PTR _c$[ebp]
  00537	8b d9		 mov	 ebx, ecx
  00539	23 d6		 and	 edx, esi
  0053b	33 da		 xor	 ebx, edx
  0053d	33 fb		 xor	 edi, ebx
  0053f	31 7d 10	 xor	 DWORD PTR _c$[ebp], edi
  00542	8b d9		 mov	 ebx, ecx
  00544	23 da		 and	 ebx, edx
  00546	8b 55 10	 mov	 edx, DWORD PTR _c$[ebp]
  00549	33 da		 xor	 ebx, edx
  0054b	f7 d6		 not	 esi
  0054d	23 d6		 and	 edx, esi
  0054f	33 d1		 xor	 edx, ecx
  00551	33 f3		 xor	 esi, ebx
  00553	23 ce		 and	 ecx, esi
  00555	33 d6		 xor	 edx, esi
  00557	33 cf		 xor	 ecx, edi
  00559	33 78 4c	 xor	 edi, DWORD PTR [eax+76]
  0055c	0b ca		 or	 ecx, edx
  0055e	33 cb		 xor	 ecx, ebx
  00560	8b 58 44	 mov	 ebx, DWORD PTR [eax+68]
  00563	33 da		 xor	 ebx, edx
  00565	33 de		 xor	 ebx, esi
  00567	89 4d 10	 mov	 DWORD PTR _e$[ebp], ecx
  0056a	8b 48 48	 mov	 ecx, DWORD PTR [eax+72]
  0056d	33 4d 10	 xor	 ecx, DWORD PTR _e$[ebp]
  00570	8b d3		 mov	 edx, ebx
  00572	c1 e2 07	 shl	 edx, 7
  00575	c1 c9 16	 ror	 ecx, 22			; 00000016H
  00578	33 ca		 xor	 ecx, edx
  0057a	8b 50 40	 mov	 edx, DWORD PTR [eax+64]
  0057d	33 d6		 xor	 edx, esi
  0057f	33 cf		 xor	 ecx, edi
  00581	c1 ca 05	 ror	 edx, 5
  00584	33 d3		 xor	 edx, ebx
  00586	33 d7		 xor	 edx, edi
  00588	c1 cf 07	 ror	 edi, 7
  0058b	8b f2		 mov	 esi, edx
  0058d	c1 e6 03	 shl	 esi, 3
  00590	33 fe		 xor	 edi, esi
  00592	33 f9		 xor	 edi, ecx
  00594	d1 cb		 ror	 ebx, 1
  00596	33 d9		 xor	 ebx, ecx
  00598	33 da		 xor	 ebx, edx
  0059a	c1 c9 03	 ror	 ecx, 3
  0059d	89 7d 08	 mov	 DWORD PTR _a$[ebp], edi
  005a0	8b f9		 mov	 edi, ecx
  005a2	33 cb		 xor	 ecx, ebx
  005a4	8b f1		 mov	 esi, ecx
  005a6	23 f3		 and	 esi, ebx
  005a8	c1 ca 0d	 ror	 edx, 13			; 0000000dH
  005ab	33 f2		 xor	 esi, edx
  005ad	23 d7		 and	 edx, edi
  005af	33 7d 08	 xor	 edi, DWORD PTR _a$[ebp]
  005b2	8b de		 mov	 ebx, esi
  005b4	0b 5d 08	 or	 ebx, DWORD PTR _a$[ebp]
  005b7	33 d7		 xor	 edx, edi
  005b9	33 d9		 xor	 ebx, ecx
  005bb	33 ca		 xor	 ecx, edx
  005bd	33 f9		 xor	 edi, ecx
  005bf	0b d3		 or	 edx, ebx
  005c1	33 d6		 xor	 edx, esi
  005c3	23 cb		 and	 ecx, ebx
  005c5	0b f3		 or	 esi, ebx
  005c7	33 f1		 xor	 esi, ecx
  005c9	89 7d fc	 mov	 DWORD PTR _d$[ebp], edi
  005cc	33 4d fc	 xor	 ecx, DWORD PTR _d$[ebp]
  005cf	8b fe		 mov	 edi, esi
  005d1	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  005d4	33 78 3c	 xor	 edi, DWORD PTR [eax+60]
  005d7	33 ca		 xor	 ecx, edx
  005d9	33 50 34	 xor	 edx, DWORD PTR [eax+52]
  005dc	33 f1		 xor	 esi, ecx
  005de	c1 ce 16	 ror	 esi, 22			; 00000016H
  005e1	8b ca		 mov	 ecx, edx
  005e3	c1 e1 07	 shl	 ecx, 7
  005e6	33 f1		 xor	 esi, ecx
  005e8	33 f7		 xor	 esi, edi
  005ea	8b 48 30	 mov	 ecx, DWORD PTR [eax+48]
  005ed	33 cb		 xor	 ecx, ebx
  005ef	c1 c9 05	 ror	 ecx, 5
  005f2	33 cf		 xor	 ecx, edi
  005f4	33 ca		 xor	 ecx, edx
  005f6	c1 cf 07	 ror	 edi, 7
  005f9	8b d9		 mov	 ebx, ecx
  005fb	c1 e3 03	 shl	 ebx, 3
  005fe	33 fb		 xor	 edi, ebx
  00600	33 fe		 xor	 edi, esi
  00602	d1 ca		 ror	 edx, 1
  00604	33 d6		 xor	 edx, esi
  00606	33 d1		 xor	 edx, ecx
  00608	c1 c9 0d	 ror	 ecx, 13			; 0000000dH
  0060b	c1 ce 03	 ror	 esi, 3
  0060e	33 f7		 xor	 esi, edi
  00610	33 f9		 xor	 edi, ecx
  00612	8b de		 mov	 ebx, esi
  00614	23 df		 and	 ebx, edi
  00616	33 da		 xor	 ebx, edx
  00618	89 55 08	 mov	 DWORD PTR _b$[ebp], edx
  0061b	8b d6		 mov	 edx, esi
  0061d	0b 55 08	 or	 edx, DWORD PTR _b$[ebp]
  00620	33 f3		 xor	 esi, ebx
  00622	33 d7		 xor	 edx, edi
  00624	23 fb		 and	 edi, ebx
  00626	23 f9		 and	 edi, ecx
  00628	33 fe		 xor	 edi, esi
  0062a	23 f2		 and	 esi, edx
  0062c	0b f1		 or	 esi, ecx
  0062e	f7 d3		 not	 ebx
  00630	33 f3		 xor	 esi, ebx
  00632	89 75 10	 mov	 DWORD PTR _e$[ebp], esi
  00635	89 55 08	 mov	 DWORD PTR _b$[ebp], edx
  00638	8b f3		 mov	 esi, ebx
  0063a	33 f1		 xor	 esi, ecx
  0063c	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  0063f	33 4d 10	 xor	 ecx, DWORD PTR _e$[ebp]
  00642	23 f2		 and	 esi, edx
  00644	8b d7		 mov	 edx, edi
  00646	33 78 24	 xor	 edi, DWORD PTR [eax+36]
  00649	33 d3		 xor	 edx, ebx
  0064b	33 d6		 xor	 edx, esi
  0064d	33 50 2c	 xor	 edx, DWORD PTR [eax+44]
  00650	c1 c9 16	 ror	 ecx, 22			; 00000016H
  00653	8b f7		 mov	 esi, edi
  00655	c1 e6 07	 shl	 esi, 7
  00658	33 ce		 xor	 ecx, esi
  0065a	8b 70 20	 mov	 esi, DWORD PTR [eax+32]
  0065d	33 75 08	 xor	 esi, DWORD PTR _b$[ebp]
  00660	33 ca		 xor	 ecx, edx
  00662	c1 ce 05	 ror	 esi, 5
  00665	33 f7		 xor	 esi, edi
  00667	33 f2		 xor	 esi, edx
  00669	c1 ca 07	 ror	 edx, 7
  0066c	8b de		 mov	 ebx, esi
  0066e	c1 e3 03	 shl	 ebx, 3
  00671	33 d3		 xor	 edx, ebx
  00673	33 d1		 xor	 edx, ecx
  00675	d1 cf		 ror	 edi, 1
  00677	33 f9		 xor	 edi, ecx
  00679	33 fe		 xor	 edi, esi
  0067b	89 7d 08	 mov	 DWORD PTR _a$[ebp], edi
  0067e	33 fa		 xor	 edi, edx
  00680	89 55 10	 mov	 DWORD PTR _c$[ebp], edx
  00683	c1 c9 03	 ror	 ecx, 3
  00686	31 4d 08	 xor	 DWORD PTR _a$[ebp], ecx
  00689	8b df		 mov	 ebx, edi
  0068b	23 da		 and	 ebx, edx
  0068d	c1 ce 0d	 ror	 esi, 13			; 0000000dH
  00690	8b d7		 mov	 edx, edi
  00692	0b d6		 or	 edx, esi
  00694	33 de		 xor	 ebx, esi
  00696	8b 75 08	 mov	 esi, DWORD PTR _a$[ebp]
  00699	33 cb		 xor	 ecx, ebx
  0069b	33 d6		 xor	 edx, esi
  0069d	0b d1		 or	 edx, ecx
  0069f	33 fb		 xor	 edi, ebx
  006a1	33 d7		 xor	 edx, edi
  006a3	0b fb		 or	 edi, ebx
  006a5	33 48 1c	 xor	 ecx, DWORD PTR [eax+28]
  006a8	33 fa		 xor	 edi, edx
  006aa	f7 d6		 not	 esi
  006ac	33 f7		 xor	 esi, edi
  006ae	0b fa		 or	 edi, edx
  006b0	33 fa		 xor	 edi, edx
  006b2	33 50 14	 xor	 edx, DWORD PTR [eax+20]
  006b5	0b fe		 or	 edi, esi
  006b7	89 75 08	 mov	 DWORD PTR _a$[ebp], esi
  006ba	8b f7		 mov	 esi, edi
  006bc	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  006bf	33 fe		 xor	 edi, esi
  006c1	33 fb		 xor	 edi, ebx
  006c3	8b 58 10	 mov	 ebx, DWORD PTR [eax+16]
  006c6	33 5d 08	 xor	 ebx, DWORD PTR _a$[ebp]
  006c9	c1 cf 16	 ror	 edi, 22			; 00000016H
  006cc	8b f2		 mov	 esi, edx
  006ce	c1 e6 07	 shl	 esi, 7
  006d1	33 fe		 xor	 edi, esi
  006d3	33 f9		 xor	 edi, ecx
  006d5	c1 cb 05	 ror	 ebx, 5
  006d8	33 d9		 xor	 ebx, ecx
  006da	33 da		 xor	 ebx, edx
  006dc	8b f3		 mov	 esi, ebx
  006de	c1 e6 03	 shl	 esi, 3
  006e1	c1 c9 07	 ror	 ecx, 7
  006e4	33 ce		 xor	 ecx, esi
  006e6	33 cf		 xor	 ecx, edi
  006e8	d1 ca		 ror	 edx, 1
  006ea	33 d7		 xor	 edx, edi
  006ec	33 d3		 xor	 edx, ebx
  006ee	c1 cb 0d	 ror	 ebx, 13			; 0000000dH
  006f1	8b f2		 mov	 esi, edx
  006f3	89 4d 10	 mov	 DWORD PTR _e$[ebp], ecx
  006f6	c1 cf 03	 ror	 edi, 3
  006f9	f7 d7		 not	 edi
  006fb	8b d7		 mov	 edx, edi
  006fd	8b ce		 mov	 ecx, esi
  006ff	0b f3		 or	 esi, ebx
  00701	f7 d1		 not	 ecx
  00703	33 d9		 xor	 ebx, ecx
  00705	33 f2		 xor	 esi, edx
  00707	33 75 10	 xor	 esi, DWORD PTR _e$[ebp]
  0070a	8b f9		 mov	 edi, ecx
  0070c	0b fa		 or	 edi, edx
  0070e	33 fb		 xor	 edi, ebx
  00710	23 5d 10	 and	 ebx, DWORD PTR _e$[ebp]
  00713	8b d6		 mov	 edx, esi
  00715	0b d3		 or	 edx, ebx
  00717	33 cb		 xor	 ecx, ebx
  00719	8b 5d 10	 mov	 ebx, DWORD PTR _e$[ebp]
  0071c	33 d9		 xor	 ebx, ecx
  0071e	33 d7		 xor	 edx, edi
  00720	33 de		 xor	 ebx, esi
  00722	33 da		 xor	 ebx, edx
  00724	33 10		 xor	 edx, DWORD PTR [eax]
  00726	33 fe		 xor	 edi, esi
  00728	33 70 08	 xor	 esi, DWORD PTR [eax+8]
  0072b	23 fb		 and	 edi, ebx
  0072d	33 78 04	 xor	 edi, DWORD PTR [eax+4]
  00730	33 58 0c	 xor	 ebx, DWORD PTR [eax+12]
  00733	33 cf		 xor	 ecx, edi
  00735	ff 4d f8	 dec	 DWORD PTR _i$[ebp]
  00738	0f 85 67 fc ff
	ff		 jne	 $start$26075

; 880  : 	
; 881  :     out[0] = LE32(a);

  0073e	8b 45 0c	 mov	 eax, DWORD PTR _outBlock$[ebp]
  00741	5f		 pop	 edi

; 882  : 	out[1] = LE32(d);
; 883  : 	out[2] = LE32(b);

  00742	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00745	5e		 pop	 esi

; 884  : 	out[3] = LE32(e);

  00746	89 58 0c	 mov	 DWORD PTR [eax+12], ebx
  00749	89 10		 mov	 DWORD PTR [eax], edx
  0074b	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  0074e	5b		 pop	 ebx

; 885  : }

  0074f	c9		 leave
  00750	c2 0c 00	 ret	 12			; 0000000cH
_serpent_decrypt@12 ENDP
_TEXT	ENDS
END
