; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\home\public\Desktop\projects\cipherShed\src\Common\Combo.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

EXTRN	__time64:PROC
; Function compile flags: /Ogtpy
; File c:\program files (x86)\microsoft visual studio 9.0\vc\include\time.inl
;	COMDAT _time
_TEXT	SEGMENT
_time	PROC						; COMDAT
; __Time$ = eax

; 135  :     return _time64(_Time);

  00000	50		 push	 eax
  00001	e8 00 00 00 00	 call	 __time64
  00006	83 c4 04	 add	 esp, 4

; 136  : }

  00009	c3		 ret	 0
_time	ENDP
_TEXT	ENDS
PUBLIC	_AddComboItem
EXTRN	__imp__SetWindowTextA@8:PROC
EXTRN	__imp__SendMessageA@16:PROC
; Function compile flags: /Ogtpy
; File c:\home\public\desktop\projects\ciphershed\src\common\combo.c
;	COMDAT _AddComboItem
_TEXT	SEGMENT
_lTime$80345 = -8					; size = 8
_hComboBox$ = 8						; size = 4
_lpszFileName$ = 12					; size = 4
_saveHistory$ = 16					; size = 4
_AddComboItem PROC					; COMDAT

; 22   : {

  00000	83 ec 08	 sub	 esp, 8

; 23   : 	LPARAM nIndex;
; 24   : 
; 25   : 	if (!saveHistory)

  00003	83 7c 24 14 00	 cmp	 DWORD PTR _saveHistory$[esp+4], 0
  00008	56		 push	 esi
  00009	75 25		 jne	 SHORT $LN5@AddComboIt

; 26   : 	{
; 27   : 		SendMessage (hComboBox, CB_RESETCONTENT, 0, 0);

  0000b	8b 74 24 10	 mov	 esi, DWORD PTR _hComboBox$[esp+8]
  0000f	6a 00		 push	 0
  00011	6a 00		 push	 0
  00013	68 4b 01 00 00	 push	 331			; 0000014bH
  00018	56		 push	 esi
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 28   : 		SetWindowText (hComboBox, lpszFileName);

  0001f	8b 44 24 14	 mov	 eax, DWORD PTR _lpszFileName$[esp+8]
  00023	50		 push	 eax
  00024	56		 push	 esi
  00025	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8
  0002b	5e		 pop	 esi

; 48   : 	}
; 49   : }

  0002c	83 c4 08	 add	 esp, 8
  0002f	c3		 ret	 0
$LN5@AddComboIt:
  00030	53		 push	 ebx

; 29   : 		return;
; 30   : 	}
; 31   : 
; 32   : 	nIndex = SendMessage (hComboBox, CB_FINDSTRINGEXACT, (WPARAM) - 1, (LPARAM) & lpszFileName[0]);

  00031	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SendMessageA@16
  00037	55		 push	 ebp
  00038	8b 6c 24 1c	 mov	 ebp, DWORD PTR _lpszFileName$[esp+16]
  0003c	57		 push	 edi
  0003d	8b 7c 24 1c	 mov	 edi, DWORD PTR _hComboBox$[esp+20]
  00041	55		 push	 ebp
  00042	6a ff		 push	 -1
  00044	68 58 01 00 00	 push	 344			; 00000158H
  00049	57		 push	 edi
  0004a	ff d3		 call	 ebx
  0004c	8b f0		 mov	 esi, eax

; 33   : 
; 34   : 	if (nIndex == CB_ERR && *lpszFileName)

  0004e	83 fe ff	 cmp	 esi, -1
  00051	75 38		 jne	 SHORT $LN3@AddComboIt
  00053	80 7d 00 00	 cmp	 BYTE PTR [ebp], 0
  00057	74 49		 je	 SHORT $LN13@AddComboIt

; 35   : 	{
; 36   : 		time_t lTime = time (NULL);

  00059	6a 00		 push	 0
  0005b	e8 00 00 00 00	 call	 __time64
  00060	83 c4 04	 add	 esp, 4

; 37   : 		nIndex = SendMessage (hComboBox, CB_ADDSTRING, 0, (LPARAM) & lpszFileName[0]);

  00063	55		 push	 ebp
  00064	6a 00		 push	 0
  00066	68 43 01 00 00	 push	 323			; 00000143H
  0006b	57		 push	 edi
  0006c	89 44 24 20	 mov	 DWORD PTR _lTime$80345[esp+40], eax
  00070	89 54 24 24	 mov	 DWORD PTR _lTime$80345[esp+44], edx
  00074	ff d3		 call	 ebx
  00076	8b f0		 mov	 esi, eax

; 38   : 		if (nIndex != CB_ERR)

  00078	83 fe ff	 cmp	 esi, -1
  0007b	74 1f		 je	 SHORT $LN12@AddComboIt

; 39   : 			SendMessage (hComboBox, CB_SETITEMDATA, nIndex, (LPARAM) lTime);

  0007d	8b 4c 24 10	 mov	 ecx, DWORD PTR _lTime$80345[esp+24]
  00081	51		 push	 ecx
  00082	56		 push	 esi
  00083	68 51 01 00 00	 push	 337			; 00000151H
  00088	57		 push	 edi
  00089	ff d3		 call	 ebx
$LN3@AddComboIt:

; 40   : 	}
; 41   : 
; 42   : 	if (nIndex != CB_ERR && *lpszFileName)

  0008b	80 7d 00 00	 cmp	 BYTE PTR [ebp], 0
  0008f	74 11		 je	 SHORT $LN13@AddComboIt

; 43   : 		nIndex = SendMessage (hComboBox, CB_SETCURSEL, nIndex, 0);

  00091	6a 00		 push	 0
  00093	56		 push	 esi
  00094	68 4e 01 00 00	 push	 334			; 0000014eH
  00099	57		 push	 edi
  0009a	ff d3		 call	 ebx
$LN12@AddComboIt:

; 44   : 
; 45   : 	if (*lpszFileName == 0)

  0009c	80 7d 00 00	 cmp	 BYTE PTR [ebp], 0
  000a0	75 0c		 jne	 SHORT $LN15@AddComboIt
$LN13@AddComboIt:

; 46   : 	{
; 47   : 		SendMessage (hComboBox, CB_SETCURSEL, (WPARAM) - 1, 0);

  000a2	6a 00		 push	 0
  000a4	6a ff		 push	 -1
  000a6	68 4e 01 00 00	 push	 334			; 0000014eH
  000ab	57		 push	 edi
  000ac	ff d3		 call	 ebx
$LN15@AddComboIt:
  000ae	5f		 pop	 edi
  000af	5d		 pop	 ebp
  000b0	5b		 pop	 ebx
  000b1	5e		 pop	 esi

; 48   : 	}
; 49   : }

  000b2	83 c4 08	 add	 esp, 8
  000b5	c3		 ret	 0
_AddComboItem ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_MoveEditToCombo
EXTRN	__imp__GetWindowTextA@12:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
;	COMDAT _MoveEditToCombo
_TEXT	SEGMENT
tv82 = -272						; size = 4
_lTime$80365 = -272					; size = 8
_szTmp$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_hComboBox$ = 8						; size = 4
_saveHistory$ = 12					; size = 4
_MoveEditToCombo PROC					; COMDAT

; 53   : {

  00000	81 ec 10 01 00
	00		 sub	 esp, 272		; 00000110H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c4		 xor	 eax, esp
  0000d	89 84 24 0c 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+272], eax
  00014	57		 push	 edi
  00015	8b bc 24 18 01
	00 00		 mov	 edi, DWORD PTR _hComboBox$[esp+272]

; 54   : 	char szTmp[TC_MAX_PATH] = {0};

  0001c	68 03 01 00 00	 push	 259			; 00000103H
  00021	8d 44 24 11	 lea	 eax, DWORD PTR _szTmp$[esp+281]
  00025	6a 00		 push	 0
  00027	50		 push	 eax
  00028	c6 44 24 18 00	 mov	 BYTE PTR _szTmp$[esp+288], 0
  0002d	e8 00 00 00 00	 call	 _memset
  00032	83 c4 0c	 add	 esp, 12			; 0000000cH

; 55   : 
; 56   : 	if (!saveHistory)

  00035	83 bc 24 1c 01
	00 00 00	 cmp	 DWORD PTR _saveHistory$[esp+272], 0

; 57   : 	{
; 58   : 		GetWindowText (hComboBox, szTmp, sizeof (szTmp));

  0003d	68 04 01 00 00	 push	 260			; 00000104H
  00042	75 40		 jne	 SHORT $LN5@MoveEditTo
  00044	8d 4c 24 10	 lea	 ecx, DWORD PTR _szTmp$[esp+280]
  00048	51		 push	 ecx
  00049	57		 push	 edi
  0004a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowTextA@12

; 59   : 		SendMessage (hComboBox, CB_RESETCONTENT, 0, 0);

  00050	6a 00		 push	 0
  00052	6a 00		 push	 0
  00054	68 4b 01 00 00	 push	 331			; 0000014bH
  00059	57		 push	 edi
  0005a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 60   : 		SetWindowText (hComboBox, szTmp);

  00060	8d 54 24 0c	 lea	 edx, DWORD PTR _szTmp$[esp+276]
  00064	52		 push	 edx
  00065	57		 push	 edi
  00066	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 61   : 		return 0;

  0006c	33 c0		 xor	 eax, eax
  0006e	5f		 pop	 edi

; 87   : }

  0006f	8b 8c 24 0c 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+272]
  00076	33 cc		 xor	 ecx, esp
  00078	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007d	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00083	c3		 ret	 0
$LN5@MoveEditTo:

; 62   : 	}
; 63   : 
; 64   : 	GetWindowText (hComboBox, szTmp, sizeof (szTmp));

  00084	8d 44 24 10	 lea	 eax, DWORD PTR _szTmp$[esp+280]
  00088	50		 push	 eax
  00089	57		 push	 edi
  0008a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetWindowTextA@12

; 65   : 
; 66   : 	if (strlen (szTmp) > 0)

  00090	8d 44 24 0c	 lea	 eax, DWORD PTR _szTmp$[esp+276]
  00094	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL12@MoveEditTo:
  00097	8a 08		 mov	 cl, BYTE PTR [eax]
  00099	40		 inc	 eax
  0009a	84 c9		 test	 cl, cl
  0009c	75 f9		 jne	 SHORT $LL12@MoveEditTo
  0009e	2b c2		 sub	 eax, edx
  000a0	0f 84 8f 00 00
	00		 je	 $LN4@MoveEditTo
  000a6	53		 push	 ebx

; 67   : 	{
; 68   : 		LPARAM nIndex = SendMessage (hComboBox, CB_FINDSTRINGEXACT, (WPARAM) - 1,
; 69   : 					     (LPARAM) & szTmp[0]);

  000a7	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SendMessageA@16
  000ad	55		 push	 ebp
  000ae	56		 push	 esi
  000af	8d 4c 24 18	 lea	 ecx, DWORD PTR _szTmp$[esp+288]
  000b3	51		 push	 ecx
  000b4	6a ff		 push	 -1
  000b6	68 58 01 00 00	 push	 344			; 00000158H
  000bb	57		 push	 edi
  000bc	ff d3		 call	 ebx

; 70   : 		if (nIndex == CB_ERR)
; 71   : 		{
; 72   : 			time_t lTime = time (NULL);

  000be	6a 00		 push	 0
  000c0	8b f0		 mov	 esi, eax
  000c2	e8 00 00 00 00	 call	 __time64
  000c7	83 c4 04	 add	 esp, 4
  000ca	89 54 24 14	 mov	 DWORD PTR _lTime$80365[esp+292], edx
  000ce	83 fe ff	 cmp	 esi, -1
  000d1	75 3d		 jne	 SHORT $LN3@MoveEditTo

; 73   : 			nIndex = SendMessage (hComboBox, CB_ADDSTRING, 0, (LPARAM) & szTmp[0]);

  000d3	8d 54 24 18	 lea	 edx, DWORD PTR _szTmp$[esp+288]
  000d7	52		 push	 edx
  000d8	6a 00		 push	 0
  000da	68 43 01 00 00	 push	 323			; 00000143H
  000df	57		 push	 edi
  000e0	8b e8		 mov	 ebp, eax
  000e2	ff d3		 call	 ebx
  000e4	8b f0		 mov	 esi, eax

; 74   : 			if (nIndex != CB_ERR)

  000e6	83 fe ff	 cmp	 esi, -1
  000e9	74 2f		 je	 SHORT $LN1@MoveEditTo

; 75   : 				SendMessage (hComboBox, CB_SETITEMDATA, nIndex, (DWORD) lTime);

  000eb	55		 push	 ebp

; 76   : 		}
; 77   : 		else
; 78   : 		{
; 79   : 			time_t lTime = time (NULL);
; 80   : 			SendMessage (hComboBox, CB_SETITEMDATA, nIndex, (DWORD) lTime);

  000ec	56		 push	 esi
  000ed	68 51 01 00 00	 push	 337			; 00000151H
  000f2	57		 push	 edi
  000f3	ff d3		 call	 ebx

; 81   : 		}
; 82   : 
; 83   : 		return nIndex;

  000f5	8b c6		 mov	 eax, esi
  000f7	5e		 pop	 esi
  000f8	5d		 pop	 ebp
  000f9	5b		 pop	 ebx
  000fa	5f		 pop	 edi

; 87   : }

  000fb	8b 8c 24 0c 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+272]
  00102	33 cc		 xor	 ecx, esp
  00104	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00109	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  0010f	c3		 ret	 0
$LN3@MoveEditTo:

; 76   : 		}
; 77   : 		else
; 78   : 		{
; 79   : 			time_t lTime = time (NULL);
; 80   : 			SendMessage (hComboBox, CB_SETITEMDATA, nIndex, (DWORD) lTime);

  00110	50		 push	 eax
  00111	56		 push	 esi
  00112	68 51 01 00 00	 push	 337			; 00000151H
  00117	57		 push	 edi
  00118	ff d3		 call	 ebx
$LN1@MoveEditTo:

; 81   : 		}
; 82   : 
; 83   : 		return nIndex;

  0011a	8b c6		 mov	 eax, esi
  0011c	5e		 pop	 esi
  0011d	5d		 pop	 ebp
  0011e	5b		 pop	 ebx
  0011f	5f		 pop	 edi

; 87   : }

  00120	8b 8c 24 0c 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+272]
  00127	33 cc		 xor	 ecx, esp
  00129	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0012e	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  00134	c3		 ret	 0
$LN4@MoveEditTo:

; 84   : 	}
; 85   : 
; 86   : 	return SendMessage (hComboBox, CB_GETCURSEL, 0, 0);

  00135	6a 00		 push	 0
  00137	6a 00		 push	 0
  00139	68 47 01 00 00	 push	 327			; 00000147H
  0013e	57		 push	 edi
  0013f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 87   : }

  00145	8b 8c 24 10 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+276]
  0014c	5f		 pop	 edi
  0014d	33 cc		 xor	 ecx, esp
  0014f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00154	81 c4 10 01 00
	00		 add	 esp, 272		; 00000110H
  0015a	c3		 ret	 0
_MoveEditToCombo ENDP
_TEXT	ENDS
PUBLIC	_GetOrderComboIdx
; Function compile flags: /Ogtpy
;	COMDAT _GetOrderComboIdx
_TEXT	SEGMENT
_nHighIdx$80385 = -16					; size = 4
_x$ = -12						; size = 4
_lHighTime$80386 = -8					; size = 8
_hComboBox$ = 8						; size = 4
_nIdxList$ = 12						; size = 4
_nElems$ = 16						; size = 4
_GetOrderComboIdx PROC					; COMDAT

; 90   : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H

; 91   : 	int x = (int) SendMessage (hComboBox, CB_GETCOUNT, 0, 0);

  00003	8b 44 24 14	 mov	 eax, DWORD PTR _hComboBox$[esp+12]
  00007	57		 push	 edi
  00008	6a 00		 push	 0
  0000a	6a 00		 push	 0
  0000c	68 46 01 00 00	 push	 326			; 00000146H
  00011	50		 push	 eax
  00012	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 92   : 	if (x != CB_ERR)

  00018	83 cf ff	 or	 edi, -1
  0001b	89 44 24 08	 mov	 DWORD PTR _x$[esp+20], eax
  0001f	3b c7		 cmp	 eax, edi
  00021	74 6f		 je	 SHORT $LN10@GetOrderCo
  00023	56		 push	 esi

; 93   : 	{
; 94   : 		int i, nHighIdx = CB_ERR;
; 95   : 		time_t lHighTime = -1;
; 96   : 
; 97   : 		for (i = 0; i < x; i++)

  00024	33 f6		 xor	 esi, esi
  00026	89 7c 24 08	 mov	 DWORD PTR _nHighIdx$80385[esp+24], edi
  0002a	89 7c 24 10	 mov	 DWORD PTR _lHighTime$80386[esp+24], edi
  0002e	85 c0		 test	 eax, eax
  00030	7e 56		 jle	 SHORT $LN7@GetOrderCo
  00032	53		 push	 ebx
  00033	8b 5c 24 28	 mov	 ebx, DWORD PTR _nElems$[esp+24]
  00037	55		 push	 ebp
  00038	8b 6c 24 28	 mov	 ebp, DWORD PTR _nIdxList$[esp+28]
  0003c	8d 64 24 00	 npad	 4
$LL9@GetOrderCo:

; 98   : 		{
; 99   : 			time_t lTime = SendMessage (hComboBox, CB_GETITEMDATA, (WPARAM) i, 0);

  00040	8b 4c 24 24	 mov	 ecx, DWORD PTR _hComboBox$[esp+28]
  00044	6a 00		 push	 0
  00046	56		 push	 esi
  00047	68 50 01 00 00	 push	 336			; 00000150H
  0004c	51		 push	 ecx
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00053	99		 cdq

; 100  : 			if (lTime > lHighTime)

  00054	3b d7		 cmp	 edx, edi
  00056	7c 27		 jl	 SHORT $LN8@GetOrderCo
  00058	7f 06		 jg	 SHORT $LN18@GetOrderCo
  0005a	3b 44 24 18	 cmp	 eax, DWORD PTR _lHighTime$80386[esp+32]
  0005e	76 1f		 jbe	 SHORT $LN8@GetOrderCo
$LN18@GetOrderCo:

; 101  : 			{
; 102  : 				int n;
; 103  : 				for (n = 0; n < nElems; n++)

  00060	33 c9		 xor	 ecx, ecx
  00062	85 db		 test	 ebx, ebx
  00064	7e 0b		 jle	 SHORT $LN19@GetOrderCo
$LL5@GetOrderCo:

; 104  : 					if (nIdxList[n] == i)

  00066	39 74 8d 00	 cmp	 DWORD PTR [ebp+ecx*4], esi
  0006a	74 05		 je	 SHORT $LN19@GetOrderCo
  0006c	41		 inc	 ecx
  0006d	3b cb		 cmp	 ecx, ebx
  0006f	7c f5		 jl	 SHORT $LL5@GetOrderCo
$LN19@GetOrderCo:

; 105  : 						break;
; 106  : 				if (n == nElems)

  00071	3b cb		 cmp	 ecx, ebx
  00073	75 0a		 jne	 SHORT $LN8@GetOrderCo

; 107  : 				{
; 108  : 					lHighTime = lTime;

  00075	89 44 24 18	 mov	 DWORD PTR _lHighTime$80386[esp+32], eax
  00079	8b fa		 mov	 edi, edx

; 109  : 					nHighIdx = i;

  0007b	89 74 24 10	 mov	 DWORD PTR _nHighIdx$80385[esp+32], esi
$LN8@GetOrderCo:
  0007f	46		 inc	 esi
  00080	3b 74 24 14	 cmp	 esi, DWORD PTR _x$[esp+32]
  00084	7c ba		 jl	 SHORT $LL9@GetOrderCo
  00086	5d		 pop	 ebp
  00087	5b		 pop	 ebx
$LN7@GetOrderCo:

; 110  : 				}
; 111  : 			}
; 112  : 		}
; 113  : 
; 114  : 		return nHighIdx;

  00088	8b 44 24 08	 mov	 eax, DWORD PTR _nHighIdx$80385[esp+24]
  0008c	5e		 pop	 esi
  0008d	5f		 pop	 edi

; 118  : }

  0008e	83 c4 10	 add	 esp, 16			; 00000010H
  00091	c3		 ret	 0
$LN10@GetOrderCo:

; 115  : 	}
; 116  : 
; 117  : 	return CB_ERR;

  00092	8b c7		 mov	 eax, edi
  00094	5f		 pop	 edi

; 118  : }

  00095	83 c4 10	 add	 esp, 16			; 00000010H
  00098	c3		 ret	 0
_GetOrderComboIdx ENDP
_TEXT	ENDS
PUBLIC	_UpdateComboOrder
; Function compile flags: /Ogtpy
;	COMDAT _UpdateComboOrder
_TEXT	SEGMENT
_lTime$80404 = -8					; size = 8
_hComboBox$ = 8						; size = 4
_UpdateComboOrder PROC					; COMDAT

; 121  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx

; 122  : 	LPARAM nIndex;
; 123  : 
; 124  : 	nIndex = SendMessage (hComboBox, CB_GETCURSEL, 0, 0);

  00004	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SendMessageA@16
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b 7c 24 18	 mov	 edi, DWORD PTR _hComboBox$[esp+16]
  00010	6a 00		 push	 0
  00012	6a 00		 push	 0
  00014	68 47 01 00 00	 push	 327			; 00000147H
  00019	57		 push	 edi
  0001a	ff d3		 call	 ebx
  0001c	8b f0		 mov	 esi, eax

; 125  : 
; 126  : 	if (nIndex != CB_ERR)

  0001e	83 fe ff	 cmp	 esi, -1
  00021	74 18		 je	 SHORT $LN1@UpdateComb

; 127  : 	{
; 128  : 		time_t lTime = time (NULL);

  00023	6a 00		 push	 0
  00025	e8 00 00 00 00	 call	 __time64
  0002a	83 c4 04	 add	 esp, 4

; 129  : 		nIndex = SendMessage (hComboBox, CB_SETITEMDATA, (WPARAM) nIndex,
; 130  : 				      (LPARAM) lTime);

  0002d	50		 push	 eax
  0002e	56		 push	 esi
  0002f	68 51 01 00 00	 push	 337			; 00000151H
  00034	57		 push	 edi
  00035	89 54 24 20	 mov	 DWORD PTR _lTime$80404[esp+40], edx
  00039	ff d3		 call	 ebx
$LN1@UpdateComb:
  0003b	5f		 pop	 edi
  0003c	5e		 pop	 esi
  0003d	5b		 pop	 ebx

; 131  : 	}
; 132  : 
; 133  : 	return nIndex;
; 134  : }

  0003e	83 c4 08	 add	 esp, 8
  00041	c3		 ret	 0
_UpdateComboOrder ENDP
_TEXT	ENDS
PUBLIC	??_C@_06EMCPHFGM@volume?$AA@			; `string'
PUBLIC	??_C@_0M@COMBLGLD@History?4xml?$AA@		; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_LoadCombo
EXTRN	_free:PROC
EXTRN	_XmlGetNodeText:PROC
EXTRN	_XmlFindElement:PROC
EXTRN	_LoadFile:PROC
EXTRN	_GetConfigPath:PROC
;	COMDAT ??_C@_06EMCPHFGM@volume?$AA@
CONST	SEGMENT
??_C@_06EMCPHFGM@volume?$AA@ DB 'volume', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@COMBLGLD@History?4xml?$AA@
CONST	SEGMENT
??_C@_0M@COMBLGLD@History?4xml?$AA@ DB 'History.xml', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _LoadCombo
_TEXT	SEGMENT
_size$ = -268						; size = 4
_volume$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_hComboBox$ = 8						; size = 4
_LoadCombo PROC						; COMDAT

; 137  : {

  00000	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c4		 xor	 eax, esp
  0000d	89 84 24 08 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+268], eax
  00014	53		 push	 ebx
  00015	57		 push	 edi
  00016	8b bc 24 18 01
	00 00		 mov	 edi, DWORD PTR _hComboBox$[esp+272]

; 138  : 	DWORD size;
; 139  : 	char *history = LoadFile (GetConfigPath (TC_APPD_FILENAME_HISTORY), &size);

  0001d	8d 44 24 08	 lea	 eax, DWORD PTR _size$[esp+276]
  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0M@COMBLGLD@History?4xml?$AA@
  00027	e8 00 00 00 00	 call	 _GetConfigPath
  0002c	83 c4 04	 add	 esp, 4
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 _LoadFile
  00035	8b d8		 mov	 ebx, eax
  00037	83 c4 08	 add	 esp, 8

; 140  : 	char *xml = history;
; 141  : 	char volume[MAX_PATH];
; 142  : 
; 143  : 	if (xml == NULL) return;

  0003a	85 db		 test	 ebx, ebx
  0003c	74 61		 je	 SHORT $LN4@LoadCombo
  0003e	56		 push	 esi

; 144  : 
; 145  : 	while (xml = XmlFindElement (xml, "volume"))

  0003f	68 00 00 00 00	 push	 OFFSET ??_C@_06EMCPHFGM@volume?$AA@
  00044	53		 push	 ebx
  00045	e8 00 00 00 00	 call	 _XmlFindElement
  0004a	8b f0		 mov	 esi, eax
  0004c	83 c4 08	 add	 esp, 8
  0004f	85 f6		 test	 esi, esi
  00051	74 32		 je	 SHORT $LN1@LoadCombo
$LL2@LoadCombo:

; 146  : 	{
; 147  : 		XmlGetNodeText (xml, volume, sizeof (volume));

  00053	68 04 01 00 00	 push	 260			; 00000104H
  00058	8d 4c 24 14	 lea	 ecx, DWORD PTR _volume$[esp+284]
  0005c	51		 push	 ecx
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 _XmlGetNodeText

; 148  : 		AddComboItem (hComboBox, volume, TRUE);

  00063	6a 01		 push	 1
  00065	8d 54 24 20	 lea	 edx, DWORD PTR _volume$[esp+296]
  00069	52		 push	 edx
  0006a	57		 push	 edi
  0006b	e8 00 00 00 00	 call	 _AddComboItem
  00070	68 00 00 00 00	 push	 OFFSET ??_C@_06EMCPHFGM@volume?$AA@

; 149  : 		xml++;

  00075	46		 inc	 esi
  00076	56		 push	 esi
  00077	e8 00 00 00 00	 call	 _XmlFindElement
  0007c	8b f0		 mov	 esi, eax
  0007e	83 c4 20	 add	 esp, 32			; 00000020H
  00081	85 f6		 test	 esi, esi
  00083	75 ce		 jne	 SHORT $LL2@LoadCombo
$LN1@LoadCombo:

; 150  : 	}
; 151  : 
; 152  : 	SendMessage (hComboBox, CB_SETCURSEL, 0, 0);

  00085	6a 00		 push	 0
  00087	6a 00		 push	 0
  00089	68 4e 01 00 00	 push	 334			; 0000014eH
  0008e	57		 push	 edi
  0008f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16

; 153  : 
; 154  : 	free (history);

  00095	53		 push	 ebx
  00096	e8 00 00 00 00	 call	 _free
  0009b	83 c4 04	 add	 esp, 4
  0009e	5e		 pop	 esi
$LN4@LoadCombo:

; 155  : }

  0009f	8b 8c 24 10 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+276]
  000a6	5f		 pop	 edi
  000a7	5b		 pop	 ebx
  000a8	33 cc		 xor	 ecx, esp
  000aa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000af	81 c4 0c 01 00
	00		 add	 esp, 268		; 0000010cH
  000b5	c3		 ret	 0
_LoadCombo ENDP
_TEXT	ENDS
PUBLIC	??_C@_0N@GOMGLJCI@?6?7?$DM?1history?$DO?$AA@	; `string'
PUBLIC	??_C@_0BH@PGAPGLND@?6?7?7?$DMvolume?$DO?$CFs?$DM?1volume?$DO?$AA@ ; `string'
PUBLIC	??_C@_0M@MCACFAKG@?6?7?$DMhistory?$DO?$AA@	; `string'
PUBLIC	??_C@_01NOFIACDB@w?$AA@				; `string'
PUBLIC	__$ArrayPad$
PUBLIC	_DumpCombo
EXTRN	_fclose:PROC
EXTRN	_XmlWriteFooter:PROC
EXTRN	_fprintf:PROC
EXTRN	_XmlQuoteText:PROC
EXTRN	_fputs:PROC
EXTRN	_XmlWriteHeader:PROC
EXTRN	_fopen:PROC
EXTRN	__imp__DeleteFileA@4:PROC
;	COMDAT ??_C@_0N@GOMGLJCI@?6?7?$DM?1history?$DO?$AA@
CONST	SEGMENT
??_C@_0N@GOMGLJCI@?6?7?$DM?1history?$DO?$AA@ DB 0aH, 09H, '</history>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PGAPGLND@?6?7?7?$DMvolume?$DO?$CFs?$DM?1volume?$DO?$AA@
CONST	SEGMENT
??_C@_0BH@PGAPGLND@?6?7?7?$DMvolume?$DO?$CFs?$DM?1volume?$DO?$AA@ DB 0aH, 09H
	DB	09H, '<volume>%s</volume>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MCACFAKG@?6?7?$DMhistory?$DO?$AA@
CONST	SEGMENT
??_C@_0M@MCACFAKG@?6?7?$DMhistory?$DO?$AA@ DB 0aH, 09H, '<history>', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w?$AA@
CONST	SEGMENT
??_C@_01NOFIACDB@w?$AA@ DB 'w', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _DumpCombo
_TEXT	SEGMENT
_f$ = -868						; size = 4
_nComboIdx$ = -864					; size = 80
_szTmp$80441 = -784					; size = 260
_q$80445 = -524						; size = 520
__$ArrayPad$ = -4					; size = 4
_hComboBox$ = 8						; size = 4
_bClear$ = 12						; size = 4
_DumpCombo PROC						; COMDAT

; 158  : {

  00000	81 ec 64 03 00
	00		 sub	 esp, 868		; 00000364H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c4		 xor	 eax, esp
  0000d	89 84 24 60 03
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+868], eax

; 159  : 	FILE *f;
; 160  : 	int i, nComboIdx[SIZEOF_MRU_LIST];
; 161  : 
; 162  : 	if (bClear)

  00014	83 bc 24 6c 03
	00 00 00	 cmp	 DWORD PTR _bClear$[esp+864], 0
  0001c	57		 push	 edi
  0001d	8b bc 24 6c 03
	00 00		 mov	 edi, DWORD PTR _hComboBox$[esp+868]
  00024	74 2a		 je	 SHORT $LN10@DumpCombo

; 163  : 	{
; 164  : 		DeleteFile (GetConfigPath (TC_APPD_FILENAME_HISTORY));

  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0M@COMBLGLD@History?4xml?$AA@
  0002b	e8 00 00 00 00	 call	 _GetConfigPath
  00030	83 c4 04	 add	 esp, 4
  00033	50		 push	 eax
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DeleteFileA@4
  0003a	5f		 pop	 edi

; 198  : }

  0003b	8b 8c 24 60 03
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+868]
  00042	33 cc		 xor	 ecx, esp
  00044	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00049	81 c4 64 03 00
	00		 add	 esp, 868		; 00000364H
  0004f	c3		 ret	 0
$LN10@DumpCombo:
  00050	56		 push	 esi

; 165  : 		return;
; 166  : 	}
; 167  : 
; 168  : 	f = fopen (GetConfigPath (TC_APPD_FILENAME_HISTORY), "w");

  00051	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w?$AA@
  00056	68 00 00 00 00	 push	 OFFSET ??_C@_0M@COMBLGLD@History?4xml?$AA@
  0005b	e8 00 00 00 00	 call	 _GetConfigPath
  00060	83 c4 04	 add	 esp, 4
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _fopen
  00069	8b f0		 mov	 esi, eax
  0006b	83 c4 08	 add	 esp, 8
  0006e	89 74 24 08	 mov	 DWORD PTR _f$[esp+876], esi

; 169  : 	if (f == NULL) return;

  00072	85 f6		 test	 esi, esi
  00074	0f 84 f4 00 00
	00		 je	 $LN17@DumpCombo

; 170  : 
; 171  : 	XmlWriteHeader (f);

  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 _XmlWriteHeader

; 172  : 	fputs ("\n\t<history>", f);

  00080	56		 push	 esi
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MCACFAKG@?6?7?$DMhistory?$DO?$AA@
  00086	e8 00 00 00 00	 call	 _fputs
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 173  : 
; 174  : 	/* combo list part:- get mru items */
; 175  : 	for (i = 0; i < SIZEOF_MRU_LIST; i++)

  0008e	33 f6		 xor	 esi, esi
$LL8@DumpCombo:

; 176  : 		nComboIdx[i] = GetOrderComboIdx (hComboBox, &nComboIdx[0], i);

  00090	56		 push	 esi
  00091	8d 44 24 10	 lea	 eax, DWORD PTR _nComboIdx$[esp+880]
  00095	50		 push	 eax
  00096	57		 push	 edi
  00097	e8 00 00 00 00	 call	 _GetOrderComboIdx
  0009c	89 44 b4 18	 mov	 DWORD PTR _nComboIdx$[esp+esi*4+888], eax
  000a0	46		 inc	 esi
  000a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a4	83 fe 14	 cmp	 esi, 20			; 00000014H
  000a7	7c e7		 jl	 SHORT $LL8@DumpCombo
  000a9	53		 push	 ebx

; 177  : 
; 178  : 	/* combo list part:- write out mru items */
; 179  : 	for (i = 0; i < SIZEOF_MRU_LIST; i++)

  000aa	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__SendMessageA@16
  000b0	55		 push	 ebp
  000b1	33 ed		 xor	 ebp, ebp
$LL5@DumpCombo:

; 180  : 	{
; 181  : 		char szTmp[MAX_PATH] = { 0 };

  000b3	68 03 01 00 00	 push	 259			; 00000103H
  000b8	8d 4c 24 69	 lea	 ecx, DWORD PTR _szTmp$80441[esp+889]
  000bc	6a 00		 push	 0
  000be	51		 push	 ecx
  000bf	c6 44 24 70 00	 mov	 BYTE PTR _szTmp$80441[esp+896], 0
  000c4	e8 00 00 00 00	 call	 _memset

; 182  : 		 
; 183  : 		if (SendMessage (hComboBox, CB_GETLBTEXTLEN, nComboIdx[i], 0) < sizeof (szTmp))

  000c9	8b 74 ac 20	 mov	 esi, DWORD PTR _nComboIdx$[esp+ebp*4+896]
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH
  000d0	6a 00		 push	 0
  000d2	56		 push	 esi
  000d3	68 49 01 00 00	 push	 329			; 00000149H
  000d8	57		 push	 edi
  000d9	ff d3		 call	 ebx
  000db	3d 04 01 00 00	 cmp	 eax, 260		; 00000104H
  000e0	73 0e		 jae	 SHORT $LN2@DumpCombo

; 184  : 			SendMessage (hComboBox, CB_GETLBTEXT, nComboIdx[i], (LPARAM) & szTmp[0]);

  000e2	8d 54 24 64	 lea	 edx, DWORD PTR _szTmp$80441[esp+884]
  000e6	52		 push	 edx
  000e7	56		 push	 esi
  000e8	68 48 01 00 00	 push	 328			; 00000148H
  000ed	57		 push	 edi
  000ee	ff d3		 call	 ebx
$LN2@DumpCombo:

; 185  : 
; 186  : 		if (szTmp[0] != 0)

  000f0	80 7c 24 64 00	 cmp	 BYTE PTR _szTmp$80441[esp+884], 0
  000f5	74 4d		 je	 SHORT $LN4@DumpCombo

; 187  : 		{
; 188  : 			char q[MAX_PATH * 2] = { 0 };

  000f7	68 07 02 00 00	 push	 519			; 00000207H
  000fc	8d 84 24 6d 01
	00 00		 lea	 eax, DWORD PTR _q$80445[esp+889]
  00103	6a 00		 push	 0
  00105	50		 push	 eax
  00106	c6 84 24 74 01
	00 00 00	 mov	 BYTE PTR _q$80445[esp+896], 0
  0010e	e8 00 00 00 00	 call	 _memset

; 189  : 			XmlQuoteText (szTmp, q, sizeof (q));

  00113	68 08 02 00 00	 push	 520			; 00000208H
  00118	8d 8c 24 78 01
	00 00		 lea	 ecx, DWORD PTR _q$80445[esp+900]
  0011f	51		 push	 ecx
  00120	8d 54 24 78	 lea	 edx, DWORD PTR _szTmp$80441[esp+904]
  00124	52		 push	 edx
  00125	e8 00 00 00 00	 call	 _XmlQuoteText

; 190  : 
; 191  : 			fprintf (f, "\n\t\t<volume>%s</volume>", q);

  0012a	8b 4c 24 28	 mov	 ecx, DWORD PTR _f$[esp+908]
  0012e	8d 84 24 80 01
	00 00		 lea	 eax, DWORD PTR _q$80445[esp+908]
  00135	50		 push	 eax
  00136	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@PGAPGLND@?6?7?7?$DMvolume?$DO?$CFs?$DM?1volume?$DO?$AA@
  0013b	51		 push	 ecx
  0013c	e8 00 00 00 00	 call	 _fprintf
  00141	83 c4 24	 add	 esp, 36			; 00000024H
$LN4@DumpCombo:
  00144	45		 inc	 ebp
  00145	83 fd 14	 cmp	 ebp, 20			; 00000014H
  00148	0f 8c 65 ff ff
	ff		 jl	 $LL5@DumpCombo

; 192  : 		}
; 193  : 	}
; 194  : 
; 195  : 	fputs ("\n\t</history>", f);

  0014e	8b 74 24 10	 mov	 esi, DWORD PTR _f$[esp+884]
  00152	56		 push	 esi
  00153	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GOMGLJCI@?6?7?$DM?1history?$DO?$AA@
  00158	e8 00 00 00 00	 call	 _fputs

; 196  : 	XmlWriteFooter (f);

  0015d	56		 push	 esi
  0015e	e8 00 00 00 00	 call	 _XmlWriteFooter

; 197  : 	fclose (f);

  00163	56		 push	 esi
  00164	e8 00 00 00 00	 call	 _fclose
  00169	83 c4 10	 add	 esp, 16			; 00000010H
  0016c	5d		 pop	 ebp
  0016d	5b		 pop	 ebx
$LN17@DumpCombo:

; 198  : }

  0016e	8b 8c 24 68 03
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+876]
  00175	5e		 pop	 esi
  00176	5f		 pop	 edi
  00177	33 cc		 xor	 ecx, esp
  00179	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0017e	81 c4 64 03 00
	00		 add	 esp, 868		; 00000364H
  00184	c3		 ret	 0
_DumpCombo ENDP
_TEXT	ENDS
PUBLIC	_ClearCombo
; Function compile flags: /Ogtpy
;	COMDAT _ClearCombo
_TEXT	SEGMENT
_hComboBox$ = 8						; size = 4
_ClearCombo PROC					; COMDAT

; 201  : {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 202  : 	int i;
; 203  : 	for (i = 0; i < SIZEOF_MRU_LIST; i++)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR _hComboBox$[esp+4]
  00006	57		 push	 edi
  00007	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__SendMessageA@16
  0000d	bb 14 00 00 00	 mov	 ebx, 20			; 00000014H
$LL3@ClearCombo:

; 204  : 	{
; 205  : 		SendMessage (hComboBox, CB_DELETESTRING, 0, 0);

  00012	6a 00		 push	 0
  00014	6a 00		 push	 0
  00016	68 44 01 00 00	 push	 324			; 00000144H
  0001b	56		 push	 esi
  0001c	ff d7		 call	 edi
  0001e	83 eb 01	 sub	 ebx, 1
  00021	75 ef		 jne	 SHORT $LL3@ClearCombo
  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx

; 206  : 	}
; 207  : }

  00026	c3		 ret	 0
_ClearCombo ENDP
_TEXT	ENDS
PUBLIC	_IsComboEmpty
; Function compile flags: /Ogtpy
;	COMDAT _IsComboEmpty
_TEXT	SEGMENT
_hComboBox$ = 8						; size = 4
_IsComboEmpty PROC					; COMDAT

; 211  : 	return SendMessage (hComboBox, CB_GETCOUNT, 0, 0) < 1;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hComboBox$[esp-4]
  00004	6a 00		 push	 0
  00006	6a 00		 push	 0
  00008	68 46 01 00 00	 push	 326			; 00000146H
  0000d	50		 push	 eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SendMessageA@16
  00014	33 c9		 xor	 ecx, ecx
  00016	83 f8 01	 cmp	 eax, 1
  00019	0f 9c c1	 setl	 cl
  0001c	8b c1		 mov	 eax, ecx

; 212  : }

  0001e	c3		 ret	 0
_IsComboEmpty ENDP
_TEXT	ENDS
END
