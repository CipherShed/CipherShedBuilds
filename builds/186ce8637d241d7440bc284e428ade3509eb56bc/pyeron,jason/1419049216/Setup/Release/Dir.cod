; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\home\public\Desktop\projects\cipherShed\src\Setup\Dir.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
PUBLIC	??_C@_02HHAEMJFE@?2?1?$AA@			; `string'
PUBLIC	_mkfulldir_internal
EXTRN	__stat64i32:PROC
EXTRN	__mkdir:PROC
EXTRN	_strtok:PROC
_BSS	SEGMENT
?trail@?1??mkfulldir_internal@@9@9 DB 0104H DUP (?)	; `mkfulldir_internal'::`2'::trail
?tokpath@?1??mkfulldir_internal@@9@9 DB 0104H DUP (?)	; `mkfulldir_internal'::`2'::tokpath
_BSS	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
; File c:\home\public\desktop\projects\ciphershed\src\setup\dir.c
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HHAEMJFE@?2?1?$AA@
CONST	SEGMENT
??_C@_02HHAEMJFE@?2?1?$AA@ DB '\/', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _mkfulldir_internal
_TEXT	SEGMENT
_st$ = -48						; size = 48
_path$ = 8						; size = 4
_mkfulldir_internal PROC				; COMDAT

; 60   : {

  00000	83 ec 30	 sub	 esp, 48			; 00000030H
  00003	55		 push	 ebp

; 61   : 	char *token;
; 62   : 	struct _stat st;
; 63   : 	static char tokpath[_MAX_PATH];
; 64   : 	static char trail[_MAX_PATH];
; 65   : 
; 66   : 	strcpy (tokpath, path);

  00004	8b 6c 24 38	 mov	 ebp, DWORD PTR _path$[esp+48]
  00008	56		 push	 esi
  00009	ba 00 00 00 00	 mov	 edx, OFFSET ?tokpath@?1??mkfulldir_internal@@9@9
  0000e	57		 push	 edi
  0000f	8b c5		 mov	 eax, ebp
  00011	2b d5		 sub	 edx, ebp
$LL8@mkfulldir_:
  00013	8a 08		 mov	 cl, BYTE PTR [eax]
  00015	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00018	40		 inc	 eax
  00019	84 c9		 test	 cl, cl
  0001b	75 f6		 jne	 SHORT $LL8@mkfulldir_

; 67   : 	trail[0] = '\0';
; 68   : 
; 69   : 	token = strtok (tokpath, "\\/");

  0001d	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  00022	68 00 00 00 00	 push	 OFFSET ?tokpath@?1??mkfulldir_internal@@9@9
  00027	88 0d 00 00 00
	00		 mov	 BYTE PTR ?trail@?1??mkfulldir_internal@@9@9, cl
  0002d	e8 00 00 00 00	 call	 _strtok

; 70   : 
; 71   : 	if (tokpath[0] == '\\' && tokpath[1] == '\\')

  00032	b1 5c		 mov	 cl, 92			; 0000005cH
  00034	83 c4 08	 add	 esp, 8
  00037	38 0d 00 00 00
	00		 cmp	 BYTE PTR ?tokpath@?1??mkfulldir_internal@@9@9, cl
  0003d	0f 85 c2 00 00
	00		 jne	 $LN24@mkfulldir_
  00043	38 0d 01 00 00
	00		 cmp	 BYTE PTR ?tokpath@?1??mkfulldir_internal@@9@9+1, cl
  00049	0f 85 b6 00 00
	00		 jne	 $LN24@mkfulldir_

; 72   : 	{			/* unc */
; 73   : 		trail[0] = tokpath[0];

  0004f	88 0d 00 00 00
	00		 mov	 BYTE PTR ?trail@?1??mkfulldir_internal@@9@9, cl

; 74   : 		trail[1] = tokpath[1];

  00055	88 0d 01 00 00
	00		 mov	 BYTE PTR ?trail@?1??mkfulldir_internal@@9@9+1, cl

; 75   : 		trail[2] = '\0';

  0005b	c6 05 02 00 00
	00 00		 mov	 BYTE PTR ?trail@?1??mkfulldir_internal@@9@9+2, 0

; 76   : 		strcat (trail, token);

  00062	8b c8		 mov	 ecx, eax
$LL12@mkfulldir_:
  00064	8a 10		 mov	 dl, BYTE PTR [eax]
  00066	40		 inc	 eax
  00067	84 d2		 test	 dl, dl
  00069	75 f9		 jne	 SHORT $LL12@mkfulldir_
  0006b	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  00070	2b c1		 sub	 eax, ecx
  00072	8b f1		 mov	 esi, ecx
  00074	4f		 dec	 edi
$LL13@mkfulldir_:
  00075	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00078	47		 inc	 edi
  00079	84 c9		 test	 cl, cl
  0007b	75 f8		 jne	 SHORT $LL13@mkfulldir_
  0007d	8b c8		 mov	 ecx, eax
  0007f	c1 e9 02	 shr	 ecx, 2
  00082	f3 a5		 rep movsd
  00084	8b c8		 mov	 ecx, eax
  00086	83 e1 03	 and	 ecx, 3
  00089	f3 a4		 rep movsb

; 77   : 		strcat (trail, "\\");

  0008b	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  00090	4f		 dec	 edi
$LL14@mkfulldir_:
  00091	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00094	47		 inc	 edi
  00095	84 c0		 test	 al, al
  00097	75 f8		 jne	 SHORT $LL14@mkfulldir_
  00099	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01KICIPPFI@?2?$AA@

; 78   : 		token = strtok (NULL, "\\/");

  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  000a4	6a 00		 push	 0
  000a6	66 89 07	 mov	 WORD PTR [edi], ax
  000a9	e8 00 00 00 00	 call	 _strtok
  000ae	83 c4 08	 add	 esp, 8

; 79   : 		if (token)

  000b1	85 c0		 test	 eax, eax
  000b3	74 41		 je	 SHORT $LN4@mkfulldir_

; 80   : 		{		/* get share name */
; 81   : 			strcat (trail, token);

  000b5	8b c8		 mov	 ecx, eax
$LL15@mkfulldir_:
  000b7	8a 10		 mov	 dl, BYTE PTR [eax]
  000b9	40		 inc	 eax
  000ba	84 d2		 test	 dl, dl
  000bc	75 f9		 jne	 SHORT $LL15@mkfulldir_
  000be	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  000c3	2b c1		 sub	 eax, ecx
  000c5	8b f1		 mov	 esi, ecx
  000c7	4f		 dec	 edi
$LL16@mkfulldir_:
  000c8	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  000cb	47		 inc	 edi
  000cc	84 c9		 test	 cl, cl
  000ce	75 f8		 jne	 SHORT $LL16@mkfulldir_
  000d0	8b c8		 mov	 ecx, eax
  000d2	c1 e9 02	 shr	 ecx, 2
  000d5	f3 a5		 rep movsd
  000d7	8b c8		 mov	 ecx, eax
  000d9	83 e1 03	 and	 ecx, 3
  000dc	f3 a4		 rep movsb

; 82   : 			strcat (trail, "\\");

  000de	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  000e3	4f		 dec	 edi
$LL17@mkfulldir_:
  000e4	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  000e7	47		 inc	 edi
  000e8	84 c0		 test	 al, al
  000ea	75 f8		 jne	 SHORT $LL17@mkfulldir_
  000ec	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ??_C@_01KICIPPFI@?2?$AA@
  000f3	66 89 0f	 mov	 WORD PTR [edi], cx
$LN4@mkfulldir_:

; 83   : 		}
; 84   : 		token = strtok (NULL, "\\/");

  000f6	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  000fb	6a 00		 push	 0
  000fd	e8 00 00 00 00	 call	 _strtok
  00102	83 c4 08	 add	 esp, 8
$LN24@mkfulldir_:

; 85   : 	}
; 86   : 
; 87   : 	if (tokpath[1] == ':')

  00105	80 3d 01 00 00
	00 3a		 cmp	 BYTE PTR ?tokpath@?1??mkfulldir_internal@@9@9+1, 58 ; 0000003aH
  0010c	75 55		 jne	 SHORT $LN10@mkfulldir_

; 88   : 	{			/* drive letter */
; 89   : 		strcat (trail, tokpath);

  0010e	b8 00 00 00 00	 mov	 eax, OFFSET ?tokpath@?1??mkfulldir_internal@@9@9
  00113	8b c8		 mov	 ecx, eax
$LL18@mkfulldir_:
  00115	8a 10		 mov	 dl, BYTE PTR [eax]
  00117	40		 inc	 eax
  00118	84 d2		 test	 dl, dl
  0011a	75 f9		 jne	 SHORT $LL18@mkfulldir_
  0011c	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  00121	2b c1		 sub	 eax, ecx
  00123	8b f1		 mov	 esi, ecx
  00125	4f		 dec	 edi
$LL19@mkfulldir_:
  00126	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00129	47		 inc	 edi
  0012a	84 c9		 test	 cl, cl
  0012c	75 f8		 jne	 SHORT $LL19@mkfulldir_
  0012e	8b c8		 mov	 ecx, eax
  00130	c1 e9 02	 shr	 ecx, 2
  00133	f3 a5		 rep movsd
  00135	8b c8		 mov	 ecx, eax
  00137	83 e1 03	 and	 ecx, 3
  0013a	f3 a4		 rep movsb

; 90   : 		strcat (trail, "\\");

  0013c	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  00141	4f		 dec	 edi
$LL20@mkfulldir_:
  00142	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00145	47		 inc	 edi
  00146	84 c0		 test	 al, al
  00148	75 f8		 jne	 SHORT $LL20@mkfulldir_
  0014a	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ??_C@_01KICIPPFI@?2?$AA@

; 91   : 		token = strtok (NULL, "\\/");

  00151	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  00156	6a 00		 push	 0
  00158	66 89 17	 mov	 WORD PTR [edi], dx
  0015b	e8 00 00 00 00	 call	 _strtok
  00160	83 c4 08	 add	 esp, 8
$LN10@mkfulldir_:

; 92   : 	}
; 93   : 
; 94   : 	while (token != NULL)

  00163	85 c0		 test	 eax, eax
  00165	74 6d		 je	 SHORT $LN1@mkfulldir_
$LL2@mkfulldir_:

; 95   : 	{
; 96   : 		int x;
; 97   : 		strcat (trail, token);

  00167	8b c8		 mov	 ecx, eax
  00169	8d a4 24 00 00
	00 00		 npad	 7
$LL21@mkfulldir_:
  00170	8a 10		 mov	 dl, BYTE PTR [eax]
  00172	40		 inc	 eax
  00173	84 d2		 test	 dl, dl
  00175	75 f9		 jne	 SHORT $LL21@mkfulldir_
  00177	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  0017c	2b c1		 sub	 eax, ecx
  0017e	8b f1		 mov	 esi, ecx
  00180	4f		 dec	 edi
$LL22@mkfulldir_:
  00181	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00184	47		 inc	 edi
  00185	84 c9		 test	 cl, cl
  00187	75 f8		 jne	 SHORT $LL22@mkfulldir_
  00189	8b c8		 mov	 ecx, eax
  0018b	c1 e9 02	 shr	 ecx, 2
  0018e	f3 a5		 rep movsd
  00190	8b c8		 mov	 ecx, eax
  00192	83 e1 03	 and	 ecx, 3

; 98   : 		x = _mkdir (trail);

  00195	68 00 00 00 00	 push	 OFFSET ?trail@?1??mkfulldir_internal@@9@9
  0019a	f3 a4		 rep movsb
  0019c	e8 00 00 00 00	 call	 __mkdir

; 99   : 		strcat (trail, "\\");

  001a1	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  001a6	83 c4 04	 add	 esp, 4
  001a9	4f		 dec	 edi
  001aa	8d 9b 00 00 00
	00		 npad	 6
$LL23@mkfulldir_:
  001b0	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  001b3	47		 inc	 edi
  001b4	84 c0		 test	 al, al
  001b6	75 f8		 jne	 SHORT $LL23@mkfulldir_
  001b8	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01KICIPPFI@?2?$AA@

; 100  : 		token = strtok (NULL, "\\/");

  001be	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  001c3	6a 00		 push	 0
  001c5	66 89 07	 mov	 WORD PTR [edi], ax
  001c8	e8 00 00 00 00	 call	 _strtok
  001cd	83 c4 08	 add	 esp, 8
  001d0	85 c0		 test	 eax, eax
  001d2	75 93		 jne	 SHORT $LL2@mkfulldir_
$LN1@mkfulldir_:

; 101  : 	}
; 102  : 
; 103  : 	return _stat (path, &st);

  001d4	8d 4c 24 0c	 lea	 ecx, DWORD PTR _st$[esp+60]
  001d8	51		 push	 ecx
  001d9	55		 push	 ebp
  001da	e8 00 00 00 00	 call	 __stat64i32
  001df	83 c4 08	 add	 esp, 8
  001e2	5f		 pop	 edi
  001e3	5e		 pop	 esi
  001e4	5d		 pop	 ebp

; 104  : }

  001e5	83 c4 30	 add	 esp, 48			; 00000030H
  001e8	c3		 ret	 0
_mkfulldir_internal ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_mkfulldir
EXTRN	_strrchr:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT _mkfulldir
_TEXT	SEGMENT
_st$ = -312						; size = 48
_path$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_oriPath$ = 8						; size = 4
_bCheckonly$ = 12					; size = 4
_mkfulldir PROC						; COMDAT

; 26   : {

  00000	81 ec 38 01 00
	00		 sub	 esp, 312		; 00000138H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c4		 xor	 eax, esp
  0000d	89 84 24 34 01
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+312], eax

; 27   : 	struct _stat st;
; 28   : 	char *uniq_file;
; 29   : 	char path [TC_MAX_PATH];
; 30   : 
; 31   : 	strcpy (path, oriPath);

  00014	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR _oriPath$[esp+308]
  0001b	8d 54 24 30	 lea	 edx, DWORD PTR _path$[esp+312]
  0001f	2b d0		 sub	 edx, eax
$LL10@mkfulldir:
  00021	8a 08		 mov	 cl, BYTE PTR [eax]
  00023	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00026	40		 inc	 eax
  00027	84 c9		 test	 cl, cl
  00029	75 f6		 jne	 SHORT $LL10@mkfulldir

; 32   : 
; 33   : 	if (strlen (path) == 3 && path[1] == ':')

  0002b	8d 44 24 30	 lea	 eax, DWORD PTR _path$[esp+312]
  0002f	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL12@mkfulldir:
  00032	8a 08		 mov	 cl, BYTE PTR [eax]
  00034	40		 inc	 eax
  00035	84 c9		 test	 cl, cl
  00037	75 f9		 jne	 SHORT $LL12@mkfulldir
  00039	2b c2		 sub	 eax, edx
  0003b	83 f8 03	 cmp	 eax, 3
  0003e	75 07		 jne	 SHORT $LN7@mkfulldir
  00040	80 7c 24 31 3a	 cmp	 BYTE PTR _path$[esp+313], 58 ; 0000003aH
  00045	74 35		 je	 SHORT $is_root$77814
$LN7@mkfulldir:

; 34   : 		goto is_root;	/* keep final slash in root if present */
; 35   : 
; 36   : 	/* strip final forward or backslash if we have one! */
; 37   : 	uniq_file = strrchr (path, '\\');

  00047	8d 44 24 30	 lea	 eax, DWORD PTR _path$[esp+312]
  0004b	6a 5c		 push	 92			; 0000005cH
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 _strrchr
  00053	83 c4 08	 add	 esp, 8

; 38   : 	if (uniq_file && uniq_file[1] == '\0')

  00056	85 c0		 test	 eax, eax
  00058	74 06		 je	 SHORT $LN6@mkfulldir
  0005a	80 78 01 00	 cmp	 BYTE PTR [eax+1], 0

; 39   : 		uniq_file[0] = '\0';
; 40   : 	else

  0005e	74 19		 je	 SHORT $LN13@mkfulldir
$LN6@mkfulldir:

; 41   : 	{
; 42   : 		uniq_file = strrchr (path, '/');

  00060	8d 4c 24 30	 lea	 ecx, DWORD PTR _path$[esp+312]
  00064	6a 2f		 push	 47			; 0000002fH
  00066	51		 push	 ecx
  00067	e8 00 00 00 00	 call	 _strrchr
  0006c	83 c4 08	 add	 esp, 8

; 43   : 		if (uniq_file && uniq_file[1] == '\0')

  0006f	85 c0		 test	 eax, eax
  00071	74 09		 je	 SHORT $is_root$77814
  00073	80 78 01 00	 cmp	 BYTE PTR [eax+1], 0
  00077	75 03		 jne	 SHORT $is_root$77814
$LN13@mkfulldir:

; 44   : 			uniq_file[0] = '\0';

  00079	c6 00 00	 mov	 BYTE PTR [eax], 0
$is_root$77814:

; 45   : 	}
; 46   : 
; 47   :       is_root:
; 48   : 	if (bCheckonly)

  0007c	83 bc 24 40 01
	00 00 00	 cmp	 DWORD PTR _bCheckonly$[esp+308], 0
  00084	74 26		 je	 SHORT $LN3@mkfulldir

; 49   : 		return _stat (path, &st);

  00086	8d 14 24	 lea	 edx, DWORD PTR _st$[esp+312]
  00089	52		 push	 edx
  0008a	8d 44 24 34	 lea	 eax, DWORD PTR _path$[esp+316]
  0008e	50		 push	 eax
  0008f	e8 00 00 00 00	 call	 __stat64i32
  00094	83 c4 08	 add	 esp, 8

; 53   : 	else
; 54   : 		return 0;
; 55   : }

  00097	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+312]
  0009e	33 cc		 xor	 ecx, esp
  000a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a5	81 c4 38 01 00
	00		 add	 esp, 312		; 00000138H
  000ab	c3		 ret	 0
$LN3@mkfulldir:

; 50   : 
; 51   : 	if (_stat (path, &st))

  000ac	8d 0c 24	 lea	 ecx, DWORD PTR _st$[esp+312]
  000af	51		 push	 ecx
  000b0	8d 54 24 34	 lea	 edx, DWORD PTR _path$[esp+316]
  000b4	52		 push	 edx
  000b5	e8 00 00 00 00	 call	 __stat64i32
  000ba	83 c4 08	 add	 esp, 8
  000bd	85 c0		 test	 eax, eax
  000bf	74 22		 je	 SHORT $LN2@mkfulldir

; 52   : 		return mkfulldir_internal (path);

  000c1	8d 44 24 30	 lea	 eax, DWORD PTR _path$[esp+312]
  000c5	50		 push	 eax
  000c6	e8 00 00 00 00	 call	 _mkfulldir_internal
  000cb	83 c4 04	 add	 esp, 4

; 53   : 	else
; 54   : 		return 0;
; 55   : }

  000ce	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+312]
  000d5	33 cc		 xor	 ecx, esp
  000d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000dc	81 c4 38 01 00
	00		 add	 esp, 312		; 00000138H
  000e2	c3		 ret	 0
$LN2@mkfulldir:
  000e3	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+312]
  000ea	33 cc		 xor	 ecx, esp
  000ec	33 c0		 xor	 eax, eax
  000ee	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f3	81 c4 38 01 00
	00		 add	 esp, 312		; 00000138H
  000f9	c3		 ret	 0
_mkfulldir ENDP
_TEXT	ENDS
END
