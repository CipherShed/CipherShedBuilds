; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\home\public\Desktop\projects\cipherShed\src\Crypto\Rmd160.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	_RMD160Init
; Function compile flags: /Ogtpy
; File c:\home\public\desktop\projects\ciphershed\src\crypto\rmd160.c
;	COMDAT _RMD160Init
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_RMD160Init PROC					; COMDAT

; 55   : 	ctx->count = 0;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ctx$[esp-4]
  00004	33 c9		 xor	 ecx, ecx
  00006	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  00009	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 56   : 	ctx->state[0] = 0x67452301;

  0000c	c7 00 01 23 45
	67		 mov	 DWORD PTR [eax], 1732584193 ; 67452301H

; 57   : 	ctx->state[1] = 0xefcdab89;

  00012	c7 40 04 89 ab
	cd ef		 mov	 DWORD PTR [eax+4], -271733879 ; efcdab89H

; 58   : 	ctx->state[2] = 0x98badcfe;

  00019	c7 40 08 fe dc
	ba 98		 mov	 DWORD PTR [eax+8], -1732584194 ; 98badcfeH

; 59   : 	ctx->state[3] = 0x10325476;

  00020	c7 40 0c 76 54
	32 10		 mov	 DWORD PTR [eax+12], 271733878 ; 10325476H

; 60   : 	ctx->state[4] = 0xc3d2e1f0;

  00027	c7 40 10 f0 e1
	d2 c3		 mov	 DWORD PTR [eax+16], -1009589776 ; c3d2e1f0H

; 61   : 	PADDING[0] = 0x80;

  0002e	c6 05 00 00 00
	00 80		 mov	 BYTE PTR _PADDING, 128	; 00000080H

; 62   : }

  00035	c3		 ret	 0
_RMD160Init ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT _rotlFixed
_TEXT	SEGMENT
_rotlFixed PROC						; COMDAT
; _x$ = eax
; _y$ = ecx

; 166  : 	return (word32)((x<<y) | (x>>(sizeof(word32)*8-y)));

  00000	d3 c0		 rol	 eax, cl

; 167  : }

  00002	c3		 ret	 0
_rotlFixed ENDP
_TEXT	ENDS
PUBLIC	_RMD160Transform
; Function compile flags: /Ogtpy
;	COMDAT _RMD160Transform
_TEXT	SEGMENT
_d1$ = -88						; size = 4
_c2$ = -84						; size = 4
_b1$ = -80						; size = 4
_c1$ = -76						; size = 4
_a2$ = -72						; size = 4
_e1$ = -68						; size = 4
tv4749 = -64						; size = 4
_e2$ = -64						; size = 4
tv4237 = -60						; size = 4
_d2$ = -60						; size = 4
tv7046 = -56						; size = 4
tv4758 = -56						; size = 4
_b2$ = -56						; size = 4
tv5514 = -52						; size = 4
tv5500 = -48						; size = 4
tv5472 = -44						; size = 4
tv5430 = -40						; size = 4
tv5944 = -36						; size = 4
tv5444 = -32						; size = 4
tv5486 = -28						; size = 4
tv5598 = -24						; size = 4
tv5528 = -20						; size = 4
tv5458 = -16						; size = 4
tv5414 = -12						; size = 4
tv5556 = -8						; size = 4
tv4234 = -8						; size = 4
tv6988 = -4						; size = 4
tv4228 = -4						; size = 4
_digest$ = 8						; size = 4
_a1$ = 12						; size = 4
_data$ = 12						; size = 4
_RMD160Transform PROC					; COMDAT

; 175  : {

  00000	83 ec 58	 sub	 esp, 88			; 00000058H

; 176  : #if BYTE_ORDER == LITTLE_ENDIAN
; 177  : 	const word32 *X = data;
; 178  : #else
; 179  : 	word32 X[16];
; 180  : 	int i;
; 181  : #endif
; 182  : 
; 183  : 	word32 a1, b1, c1, d1, e1, a2, b2, c2, d2, e2;
; 184  : 	a1 = a2 = digest[0];

  00003	8b 44 24 5c	 mov	 eax, DWORD PTR _digest$[esp+84]

; 185  : 	b1 = b2 = digest[1];
; 186  : 	c1 = c2 = digest[2];
; 187  : 	d1 = d2 = digest[3];

  00007	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]

; 188  : 	e1 = e2 = digest[4];

  0000a	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0000d	53		 push	 ebx
  0000e	8b 58 08	 mov	 ebx, DWORD PTR [eax+8]
  00011	89 4c 24 54	 mov	 DWORD PTR tv4234[esp+92], ecx
  00015	33 cb		 xor	 ecx, ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b 30		 mov	 esi, DWORD PTR [eax]
  0001b	57		 push	 edi
  0001c	8b 78 04	 mov	 edi, DWORD PTR [eax+4]

; 189  : 
; 190  : #if BYTE_ORDER == BIG_ENDIAN
; 191  : 	for (i = 0; i < 16; i++)
; 192  : 	{
; 193  : 		X[i] = LE32 (data[i]);
; 194  : 	}
; 195  : #endif
; 196  : 
; 197  : 	Subround(F, a1, b1, c1, d1, e1, X[ 0], 11, k0);

  0001f	8b 44 24 70	 mov	 eax, DWORD PTR _data$[esp+100]
  00023	8b 28		 mov	 ebp, DWORD PTR [eax]
  00025	33 cf		 xor	 ecx, edi
  00027	03 cd		 add	 ecx, ebp
  00029	03 ce		 add	 ecx, esi

; 198  : 	Subround(F, e1, a1, b1, c1, d1, X[ 1], 14, k0);

  0002b	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0002e	c1 c1 0b	 rol	 ecx, 11			; 0000000bH
  00031	03 ca		 add	 ecx, edx
  00033	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00036	89 54 24 2c	 mov	 DWORD PTR tv4237[esp+104], edx
  0003a	8b d3		 mov	 edx, ebx
  0003c	33 d7		 xor	 edx, edi
  0003e	33 d1		 xor	 edx, ecx
  00040	03 d6		 add	 edx, esi
  00042	03 54 24 2c	 add	 edx, DWORD PTR tv4237[esp+104]

; 199  : 	Subround(F, d1, e1, a1, b1, c1, X[ 2], 15, k0);

  00046	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00049	c1 c2 0e	 rol	 edx, 14			; 0000000eH
  0004c	03 54 24 60	 add	 edx, DWORD PTR tv4234[esp+104]
  00050	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00053	89 74 24 40	 mov	 DWORD PTR tv5430[esp+104], esi
  00057	8b f2		 mov	 esi, edx
  00059	33 f7		 xor	 esi, edi
  0005b	33 f1		 xor	 esi, ecx
  0005d	03 74 24 40	 add	 esi, DWORD PTR tv5430[esp+104]
  00061	89 7c 24 30	 mov	 DWORD PTR tv4758[esp+104], edi
  00065	03 74 24 60	 add	 esi, DWORD PTR tv4234[esp+104]

; 200  : 	Subround(F, c1, d1, e1, a1, b1, X[ 3], 12, k0);

  00069	8b 78 0c	 mov	 edi, DWORD PTR [eax+12]
  0006c	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  0006f	03 f3		 add	 esi, ebx
  00071	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00074	89 7c 24 48	 mov	 DWORD PTR tv5444[esp+104], edi
  00078	8b fa		 mov	 edi, edx
  0007a	33 fe		 xor	 edi, esi
  0007c	33 f9		 xor	 edi, ecx
  0007e	03 7c 24 48	 add	 edi, DWORD PTR tv5444[esp+104]
  00082	89 5c 24 28	 mov	 DWORD PTR tv4749[esp+104], ebx
  00086	03 fb		 add	 edi, ebx
  00088	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  0008b	03 7c 24 30	 add	 edi, DWORD PTR tv4758[esp+104]
  0008f	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00092	89 4c 24 70	 mov	 DWORD PTR _a1$[esp+100], ecx

; 201  : 	Subround(F, b1, c1, d1, e1, a1, X[ 4],  5, k0);

  00096	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00099	8b da		 mov	 ebx, edx
  0009b	33 de		 xor	 ebx, esi
  0009d	33 df		 xor	 ebx, edi
  0009f	03 d9		 add	 ebx, ecx
  000a1	03 5c 24 30	 add	 ebx, DWORD PTR tv4758[esp+104]
  000a5	89 54 24 24	 mov	 DWORD PTR _e1$[esp+104], edx
  000a9	c1 c3 05	 rol	 ebx, 5
  000ac	03 5c 24 70	 add	 ebx, DWORD PTR _a1$[esp+100]
  000b0	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  000b3	8b ce		 mov	 ecx, esi

; 202  : 	Subround(F, a1, b1, c1, d1, e1, X[ 5],  8, k0);

  000b5	8b 70 14	 mov	 esi, DWORD PTR [eax+20]
  000b8	89 4c 24 10	 mov	 DWORD PTR _d1$[esp+104], ecx
  000bc	33 cf		 xor	 ecx, edi
  000be	33 cb		 xor	 ecx, ebx
  000c0	03 ce		 add	 ecx, esi
  000c2	03 4c 24 70	 add	 ecx, DWORD PTR _a1$[esp+100]
  000c6	89 74 24 3c	 mov	 DWORD PTR tv5472[esp+104], esi

; 203  : 	Subround(F, e1, a1, b1, c1, d1, X[ 6],  7, k0);

  000ca	8b 70 18	 mov	 esi, DWORD PTR [eax+24]
  000cd	c1 c1 08	 rol	 ecx, 8
  000d0	03 ca		 add	 ecx, edx
  000d2	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  000d5	8b d7		 mov	 edx, edi
  000d7	33 d3		 xor	 edx, ebx
  000d9	33 d1		 xor	 edx, ecx
  000db	03 d6		 add	 edx, esi
  000dd	03 54 24 24	 add	 edx, DWORD PTR _e1$[esp+104]
  000e1	89 74 24 4c	 mov	 DWORD PTR tv5486[esp+104], esi

; 204  : 	Subround(F, d1, e1, a1, b1, c1, X[ 7],  9, k0);

  000e5	8b 70 1c	 mov	 esi, DWORD PTR [eax+28]
  000e8	c1 c2 07	 rol	 edx, 7
  000eb	03 54 24 10	 add	 edx, DWORD PTR _d1$[esp+104]
  000ef	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  000f2	89 74 24 38	 mov	 DWORD PTR tv5500[esp+104], esi
  000f6	8b f2		 mov	 esi, edx
  000f8	33 f3		 xor	 esi, ebx
  000fa	33 f1		 xor	 esi, ecx
  000fc	03 74 24 38	 add	 esi, DWORD PTR tv5500[esp+104]
  00100	89 5c 24 18	 mov	 DWORD PTR _b1$[esp+104], ebx
  00104	03 74 24 10	 add	 esi, DWORD PTR _d1$[esp+104]
  00108	c1 c6 09	 rol	 esi, 9
  0010b	03 f7		 add	 esi, edi
  0010d	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00110	8b d9		 mov	 ebx, ecx

; 205  : 	Subround(F, c1, d1, e1, a1, b1, X[ 8], 11, k0);

  00112	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00115	89 4c 24 34	 mov	 DWORD PTR tv5514[esp+104], ecx
  00119	8b ca		 mov	 ecx, edx
  0011b	33 ce		 xor	 ecx, esi
  0011d	33 cb		 xor	 ecx, ebx
  0011f	03 4c 24 34	 add	 ecx, DWORD PTR tv5514[esp+104]
  00123	89 5c 24 70	 mov	 DWORD PTR _a1$[esp+100], ebx
  00127	03 cf		 add	 ecx, edi

; 206  : 	Subround(F, b1, c1, d1, e1, a1, X[ 9], 13, k0);

  00129	8b 58 24	 mov	 ebx, DWORD PTR [eax+36]
  0012c	c1 c1 0b	 rol	 ecx, 11			; 0000000bH
  0012f	03 4c 24 18	 add	 ecx, DWORD PTR _b1$[esp+104]
  00133	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00136	8b fa		 mov	 edi, edx
  00138	33 fe		 xor	 edi, esi
  0013a	33 f9		 xor	 edi, ecx
  0013c	03 fb		 add	 edi, ebx
  0013e	03 7c 24 18	 add	 edi, DWORD PTR _b1$[esp+104]
  00142	89 5c 24 54	 mov	 DWORD PTR tv5528[esp+104], ebx
  00146	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00149	03 7c 24 70	 add	 edi, DWORD PTR _a1$[esp+100]
  0014d	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00150	8b de		 mov	 ebx, esi

; 207  : 	Subround(F, a1, b1, c1, d1, e1, X[10], 14, k0);

  00152	8b 70 28	 mov	 esi, DWORD PTR [eax+40]
  00155	89 5c 24 10	 mov	 DWORD PTR _d1$[esp+104], ebx
  00159	33 d9		 xor	 ebx, ecx
  0015b	33 df		 xor	 ebx, edi
  0015d	03 de		 add	 ebx, esi
  0015f	03 5c 24 70	 add	 ebx, DWORD PTR _a1$[esp+100]

; 208  : 	Subround(F, e1, a1, b1, c1, d1, X[11], 15, k0);

  00163	8b 70 2c	 mov	 esi, DWORD PTR [eax+44]
  00166	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  00169	03 da		 add	 ebx, edx
  0016b	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  0016e	89 4c 24 1c	 mov	 DWORD PTR _c1$[esp+104], ecx
  00172	33 cf		 xor	 ecx, edi
  00174	33 cb		 xor	 ecx, ebx
  00176	03 ce		 add	 ecx, esi
  00178	03 ca		 add	 ecx, edx
  0017a	c1 c1 0f	 rol	 ecx, 15			; 0000000fH
  0017d	03 4c 24 10	 add	 ecx, DWORD PTR _d1$[esp+104]
  00181	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 209  : 	Subround(F, d1, e1, a1, b1, c1, X[12],  6, k0);

  00184	8b d1		 mov	 edx, ecx
  00186	33 d7		 xor	 edx, edi
  00188	89 74 24 60	 mov	 DWORD PTR tv5556[esp+104], esi
  0018c	8b 70 30	 mov	 esi, DWORD PTR [eax+48]
  0018f	33 d3		 xor	 edx, ebx
  00191	03 d6		 add	 edx, esi
  00193	03 54 24 10	 add	 edx, DWORD PTR _d1$[esp+104]

; 210  : 	Subround(F, c1, d1, e1, a1, b1, X[13],  7, k0);

  00197	8b f1		 mov	 esi, ecx
  00199	c1 c2 06	 rol	 edx, 6
  0019c	03 54 24 1c	 add	 edx, DWORD PTR _c1$[esp+104]
  001a0	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  001a3	33 f2		 xor	 esi, edx
  001a5	33 f3		 xor	 esi, ebx
  001a7	03 70 34	 add	 esi, DWORD PTR [eax+52]
  001aa	89 5c 24 70	 mov	 DWORD PTR _a1$[esp+100], ebx
  001ae	03 74 24 1c	 add	 esi, DWORD PTR _c1$[esp+104]

; 211  : 	Subround(F, b1, c1, d1, e1, a1, X[14],  9, k0);

  001b2	8b 58 38	 mov	 ebx, DWORD PTR [eax+56]
  001b5	c1 c6 07	 rol	 esi, 7
  001b8	03 f7		 add	 esi, edi
  001ba	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  001bd	89 4c 24 24	 mov	 DWORD PTR _e1$[esp+104], ecx
  001c1	33 ca		 xor	 ecx, edx
  001c3	33 ce		 xor	 ecx, esi
  001c5	03 cb		 add	 ecx, ebx
  001c7	89 5c 24 50	 mov	 DWORD PTR tv5598[esp+104], ebx
  001cb	03 cf		 add	 ecx, edi
  001cd	c1 c1 09	 rol	 ecx, 9
  001d0	03 4c 24 70	 add	 ecx, DWORD PTR _a1$[esp+100]

; 212  : 	Subround(F, a1, b1, c1, d1, e1, X[15],  8, k0);

  001d4	8b 58 3c	 mov	 ebx, DWORD PTR [eax+60]
  001d7	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  001da	8b fa		 mov	 edi, edx
  001dc	33 fe		 xor	 edi, esi
  001de	33 f9		 xor	 edi, ecx
  001e0	03 fb		 add	 edi, ebx
  001e2	03 7c 24 70	 add	 edi, DWORD PTR _a1$[esp+100]
  001e6	89 54 24 10	 mov	 DWORD PTR _d1$[esp+104], edx
  001ea	8b 54 24 24	 mov	 edx, DWORD PTR _e1$[esp+104]
  001ee	c1 c7 08	 rol	 edi, 8
  001f1	03 fa		 add	 edi, edx
  001f3	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 213  : 
; 214  : 	Subround(G, e1, a1, b1, c1, d1, X[ 7],  7, k1);

  001f6	8b de		 mov	 ebx, esi
  001f8	33 d9		 xor	 ebx, ecx
  001fa	23 df		 and	 ebx, edi
  001fc	33 de		 xor	 ebx, esi
  001fe	03 5c 24 38	 add	 ebx, DWORD PTR tv5500[esp+104]
  00202	8d 94 13 99 79
	82 5a		 lea	 edx, DWORD PTR [ebx+edx+1518500249]
  00209	c1 c2 07	 rol	 edx, 7
  0020c	03 54 24 10	 add	 edx, DWORD PTR _d1$[esp+104]
  00210	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 215  : 	Subround(G, d1, e1, a1, b1, c1, X[ 4],  6, k1);

  00213	8b d9		 mov	 ebx, ecx
  00215	33 df		 xor	 ebx, edi
  00217	23 da		 and	 ebx, edx
  00219	33 d9		 xor	 ebx, ecx
  0021b	89 4c 24 18	 mov	 DWORD PTR _b1$[esp+104], ecx
  0021f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00222	03 d9		 add	 ebx, ecx

; 216  : 	Subround(G, c1, d1, e1, a1, b1, X[13],  8, k1);
; 217  : 	Subround(G, b1, c1, d1, e1, a1, X[ 1], 13, k1);
; 218  : 	Subround(G, a1, b1, c1, d1, e1, X[10], 11, k1);
; 219  : 	Subround(G, e1, a1, b1, c1, d1, X[ 6],  9, k1);
; 220  : 	Subround(G, d1, e1, a1, b1, c1, X[15],  7, k1);
; 221  : 	Subround(G, c1, d1, e1, a1, b1, X[ 3], 15, k1);
; 222  : 	Subround(G, b1, c1, d1, e1, a1, X[12],  7, k1);
; 223  : 	Subround(G, a1, b1, c1, d1, e1, X[ 0], 12, k1);
; 224  : 	Subround(G, e1, a1, b1, c1, d1, X[ 9], 15, k1);
; 225  : 	Subround(G, d1, e1, a1, b1, c1, X[ 5],  9, k1);
; 226  : 	Subround(G, c1, d1, e1, a1, b1, X[ 2], 11, k1);
; 227  : 	Subround(G, b1, c1, d1, e1, a1, X[14],  7, k1);
; 228  : 	Subround(G, a1, b1, c1, d1, e1, X[11], 13, k1);
; 229  : 	Subround(G, e1, a1, b1, c1, d1, X[ 8], 12, k1);
; 230  : 
; 231  : 	Subround(H, d1, e1, a1, b1, c1, X[ 3], 11, k2);
; 232  : 	Subround(H, c1, d1, e1, a1, b1, X[10], 13, k2);
; 233  : 	Subround(H, b1, c1, d1, e1, a1, X[14],  6, k2);
; 234  : 	Subround(H, a1, b1, c1, d1, e1, X[ 4],  7, k2);
; 235  : 	Subround(H, e1, a1, b1, c1, d1, X[ 9], 14, k2);
; 236  : 	Subround(H, d1, e1, a1, b1, c1, X[15],  9, k2);
; 237  : 	Subround(H, c1, d1, e1, a1, b1, X[ 8], 13, k2);
; 238  : 	Subround(H, b1, c1, d1, e1, a1, X[ 1], 15, k2);
; 239  : 	Subround(H, a1, b1, c1, d1, e1, X[ 2], 14, k2);
; 240  : 	Subround(H, e1, a1, b1, c1, d1, X[ 7],  8, k2);
; 241  : 	Subround(H, d1, e1, a1, b1, c1, X[ 0], 13, k2);
; 242  : 	Subround(H, c1, d1, e1, a1, b1, X[ 6],  6, k2);
; 243  : 	Subround(H, b1, c1, d1, e1, a1, X[13],  5, k2);
; 244  : 	Subround(H, a1, b1, c1, d1, e1, X[11], 12, k2);
; 245  : 	Subround(H, e1, a1, b1, c1, d1, X[ 5],  7, k2);
; 246  : 	Subround(H, d1, e1, a1, b1, c1, X[12],  5, k2);
; 247  : 
; 248  : 	Subround(I, c1, d1, e1, a1, b1, X[ 1], 11, k3);
; 249  : 	Subround(I, b1, c1, d1, e1, a1, X[ 9], 12, k3);
; 250  : 	Subround(I, a1, b1, c1, d1, e1, X[11], 14, k3);
; 251  : 	Subround(I, e1, a1, b1, c1, d1, X[10], 15, k3);
; 252  : 	Subround(I, d1, e1, a1, b1, c1, X[ 0], 14, k3);
; 253  : 	Subround(I, c1, d1, e1, a1, b1, X[ 8], 15, k3);
; 254  : 	Subround(I, b1, c1, d1, e1, a1, X[12],  9, k3);
; 255  : 	Subround(I, a1, b1, c1, d1, e1, X[ 4],  8, k3);
; 256  : 	Subround(I, e1, a1, b1, c1, d1, X[13],  9, k3);
; 257  : 	Subround(I, d1, e1, a1, b1, c1, X[ 3], 14, k3);
; 258  : 	Subround(I, c1, d1, e1, a1, b1, X[ 7],  5, k3);

  00224	89 4c 24 58	 mov	 DWORD PTR tv5458[esp+104], ecx
  00228	8b 4c 24 10	 mov	 ecx, DWORD PTR _d1$[esp+104]
  0022c	8d 8c 0b 99 79
	82 5a		 lea	 ecx, DWORD PTR [ebx+ecx+1518500249]
  00233	c1 c1 06	 rol	 ecx, 6
  00236	03 ce		 add	 ecx, esi
  00238	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  0023b	8b da		 mov	 ebx, edx
  0023d	33 df		 xor	 ebx, edi
  0023f	23 d9		 and	 ebx, ecx
  00241	33 df		 xor	 ebx, edi
  00243	03 58 34	 add	 ebx, DWORD PTR [eax+52]
  00246	89 7c 24 70	 mov	 DWORD PTR _a1$[esp+100], edi
  0024a	8d b4 33 99 79
	82 5a		 lea	 esi, DWORD PTR [ebx+esi+1518500249]
  00251	c1 c6 08	 rol	 esi, 8
  00254	03 74 24 18	 add	 esi, DWORD PTR _b1$[esp+104]
  00258	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  0025b	8b da		 mov	 ebx, edx
  0025d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00260	8b fb		 mov	 edi, ebx
  00262	33 f9		 xor	 edi, ecx
  00264	23 fe		 and	 edi, esi
  00266	33 fb		 xor	 edi, ebx
  00268	03 fa		 add	 edi, edx
  0026a	89 54 24 5c	 mov	 DWORD PTR tv5414[esp+104], edx
  0026e	8b 54 24 18	 mov	 edx, DWORD PTR _b1$[esp+104]
  00272	8d 94 17 99 79
	82 5a		 lea	 edx, DWORD PTR [edi+edx+1518500249]
  00279	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  0027c	03 54 24 70	 add	 edx, DWORD PTR _a1$[esp+100]
  00280	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00283	8b f9		 mov	 edi, ecx
  00285	33 fe		 xor	 edi, esi
  00287	23 fa		 and	 edi, edx
  00289	33 f9		 xor	 edi, ecx
  0028b	03 78 28	 add	 edi, DWORD PTR [eax+40]
  0028e	89 4c 24 10	 mov	 DWORD PTR _d1$[esp+104], ecx
  00292	8b 4c 24 70	 mov	 ecx, DWORD PTR _a1$[esp+100]
  00296	8d bc 0f 99 79
	82 5a		 lea	 edi, DWORD PTR [edi+ecx+1518500249]
  0029d	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  002a0	03 fb		 add	 edi, ebx
  002a2	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  002a5	8b ce		 mov	 ecx, esi
  002a7	33 ca		 xor	 ecx, edx
  002a9	23 cf		 and	 ecx, edi
  002ab	33 ce		 xor	 ecx, esi
  002ad	03 4c 24 4c	 add	 ecx, DWORD PTR tv5486[esp+104]
  002b1	8d 8c 19 99 79
	82 5a		 lea	 ecx, DWORD PTR [ecx+ebx+1518500249]
  002b8	c1 c1 09	 rol	 ecx, 9
  002bb	03 4c 24 10	 add	 ecx, DWORD PTR _d1$[esp+104]
  002bf	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  002c2	89 54 24 18	 mov	 DWORD PTR _b1$[esp+104], edx
  002c6	8b da		 mov	 ebx, edx
  002c8	33 df		 xor	 ebx, edi
  002ca	23 d9		 and	 ebx, ecx
  002cc	33 da		 xor	 ebx, edx
  002ce	03 58 3c	 add	 ebx, DWORD PTR [eax+60]
  002d1	8b 54 24 10	 mov	 edx, DWORD PTR _d1$[esp+104]
  002d5	8d 94 13 99 79
	82 5a		 lea	 edx, DWORD PTR [ebx+edx+1518500249]
  002dc	c1 c2 07	 rol	 edx, 7
  002df	03 d6		 add	 edx, esi
  002e1	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  002e4	8b d9		 mov	 ebx, ecx
  002e6	33 df		 xor	 ebx, edi
  002e8	23 da		 and	 ebx, edx
  002ea	33 df		 xor	 ebx, edi
  002ec	03 5c 24 48	 add	 ebx, DWORD PTR tv5444[esp+104]
  002f0	89 7c 24 70	 mov	 DWORD PTR _a1$[esp+100], edi
  002f4	8b 7c 24 18	 mov	 edi, DWORD PTR _b1$[esp+104]
  002f8	8d b4 33 99 79
	82 5a		 lea	 esi, DWORD PTR [ebx+esi+1518500249]
  002ff	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  00302	03 f7		 add	 esi, edi
  00304	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00307	8b d9		 mov	 ebx, ecx
  00309	33 ca		 xor	 ecx, edx
  0030b	23 ce		 and	 ecx, esi
  0030d	33 cb		 xor	 ecx, ebx
  0030f	03 48 30	 add	 ecx, DWORD PTR [eax+48]
  00312	8d 8c 39 99 79
	82 5a		 lea	 ecx, DWORD PTR [ecx+edi+1518500249]
  00319	c1 c1 07	 rol	 ecx, 7
  0031c	03 4c 24 70	 add	 ecx, DWORD PTR _a1$[esp+100]
  00320	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00323	8b fa		 mov	 edi, edx
  00325	33 fe		 xor	 edi, esi
  00327	23 f9		 and	 edi, ecx
  00329	33 fa		 xor	 edi, edx
  0032b	03 fd		 add	 edi, ebp
  0032d	89 54 24 10	 mov	 DWORD PTR _d1$[esp+104], edx
  00331	8b 54 24 70	 mov	 edx, DWORD PTR _a1$[esp+100]
  00335	8d bc 17 99 79
	82 5a		 lea	 edi, DWORD PTR [edi+edx+1518500249]
  0033c	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  0033f	03 fb		 add	 edi, ebx
  00341	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00344	8b d6		 mov	 edx, esi
  00346	33 d1		 xor	 edx, ecx
  00348	23 d7		 and	 edx, edi
  0034a	33 d6		 xor	 edx, esi
  0034c	03 50 24	 add	 edx, DWORD PTR [eax+36]
  0034f	89 74 24 1c	 mov	 DWORD PTR _c1$[esp+104], esi
  00353	8b 74 24 10	 mov	 esi, DWORD PTR _d1$[esp+104]
  00357	8d 94 1a 99 79
	82 5a		 lea	 edx, DWORD PTR [edx+ebx+1518500249]
  0035e	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  00361	03 d6		 add	 edx, esi
  00363	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00366	8b d9		 mov	 ebx, ecx
  00368	33 cf		 xor	 ecx, edi
  0036a	23 ca		 and	 ecx, edx
  0036c	33 cb		 xor	 ecx, ebx
  0036e	03 4c 24 3c	 add	 ecx, DWORD PTR tv5472[esp+104]
  00372	8d 8c 31 99 79
	82 5a		 lea	 ecx, DWORD PTR [ecx+esi+1518500249]
  00379	c1 c1 09	 rol	 ecx, 9
  0037c	03 4c 24 1c	 add	 ecx, DWORD PTR _c1$[esp+104]
  00380	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00383	8b f2		 mov	 esi, edx
  00385	33 f7		 xor	 esi, edi
  00387	23 f1		 and	 esi, ecx
  00389	33 f7		 xor	 esi, edi
  0038b	03 74 24 40	 add	 esi, DWORD PTR tv5430[esp+104]
  0038f	89 7c 24 70	 mov	 DWORD PTR _a1$[esp+100], edi
  00393	8b 7c 24 1c	 mov	 edi, DWORD PTR _c1$[esp+104]
  00397	8d b4 3e 99 79
	82 5a		 lea	 esi, DWORD PTR [esi+edi+1518500249]
  0039e	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  003a1	03 f3		 add	 esi, ebx
  003a3	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  003a6	8b fa		 mov	 edi, edx
  003a8	33 f9		 xor	 edi, ecx
  003aa	23 fe		 and	 edi, esi
  003ac	33 fa		 xor	 edi, edx
  003ae	03 78 38	 add	 edi, DWORD PTR [eax+56]
  003b1	89 54 24 24	 mov	 DWORD PTR _e1$[esp+104], edx
  003b5	8d 94 1f 99 79
	82 5a		 lea	 edx, DWORD PTR [edi+ebx+1518500249]
  003bc	8b 7c 24 70	 mov	 edi, DWORD PTR _a1$[esp+100]
  003c0	c1 c2 07	 rol	 edx, 7
  003c3	03 d7		 add	 edx, edi
  003c5	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  003c8	8b d9		 mov	 ebx, ecx
  003ca	33 ce		 xor	 ecx, esi
  003cc	23 ca		 and	 ecx, edx
  003ce	33 cb		 xor	 ecx, ebx
  003d0	03 4c 24 60	 add	 ecx, DWORD PTR tv5556[esp+104]
  003d4	8d bc 39 99 79
	82 5a		 lea	 edi, DWORD PTR [ecx+edi+1518500249]
  003db	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  003de	03 7c 24 24	 add	 edi, DWORD PTR _e1$[esp+104]
  003e2	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  003e5	8b ce		 mov	 ecx, esi
  003e7	33 ca		 xor	 ecx, edx
  003e9	23 cf		 and	 ecx, edi
  003eb	33 ce		 xor	 ecx, esi
  003ed	03 4c 24 34	 add	 ecx, DWORD PTR tv5514[esp+104]
  003f1	89 74 24 1c	 mov	 DWORD PTR _c1$[esp+104], esi
  003f5	8b 74 24 24	 mov	 esi, DWORD PTR _e1$[esp+104]
  003f9	8d 8c 31 99 79
	82 5a		 lea	 ecx, DWORD PTR [ecx+esi+1518500249]
  00400	c1 c1 0c	 rol	 ecx, 12			; 0000000cH
  00403	03 cb		 add	 ecx, ebx
  00405	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00408	89 54 24 18	 mov	 DWORD PTR _b1$[esp+104], edx
  0040c	8b f7		 mov	 esi, edi
  0040e	f7 d6		 not	 esi
  00410	0b f1		 or	 esi, ecx
  00412	33 f2		 xor	 esi, edx
  00414	03 74 24 48	 add	 esi, DWORD PTR tv5444[esp+104]
  00418	8d 94 1e a1 eb
	d9 6e		 lea	 edx, DWORD PTR [esi+ebx+1859775393]
  0041f	8b 74 24 1c	 mov	 esi, DWORD PTR _c1$[esp+104]
  00423	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00426	03 d6		 add	 edx, esi
  00428	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  0042b	8b d9		 mov	 ebx, ecx
  0042d	f7 d3		 not	 ebx
  0042f	0b da		 or	 ebx, edx
  00431	33 df		 xor	 ebx, edi
  00433	03 58 28	 add	 ebx, DWORD PTR [eax+40]
  00436	8d b4 33 a1 eb
	d9 6e		 lea	 esi, DWORD PTR [ebx+esi+1859775393]
  0043d	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00440	03 74 24 18	 add	 esi, DWORD PTR _b1$[esp+104]
  00444	8b da		 mov	 ebx, edx
  00446	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00449	f7 d3		 not	 ebx
  0044b	0b de		 or	 ebx, esi
  0044d	33 d9		 xor	 ebx, ecx
  0044f	03 58 38	 add	 ebx, DWORD PTR [eax+56]
  00452	89 4c 24 24	 mov	 DWORD PTR _e1$[esp+104], ecx
  00456	8b 4c 24 18	 mov	 ecx, DWORD PTR _b1$[esp+104]
  0045a	8d 8c 0b a1 eb
	d9 6e		 lea	 ecx, DWORD PTR [ebx+ecx+1859775393]
  00461	c1 c1 06	 rol	 ecx, 6
  00464	03 cf		 add	 ecx, edi
  00466	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00469	8b da		 mov	 ebx, edx
  0046b	8b d6		 mov	 edx, esi
  0046d	f7 d2		 not	 edx
  0046f	0b d1		 or	 edx, ecx
  00471	33 d3		 xor	 edx, ebx
  00473	03 54 24 58	 add	 edx, DWORD PTR tv5458[esp+104]
  00477	89 5c 24 10	 mov	 DWORD PTR _d1$[esp+104], ebx
  0047b	8d bc 3a a1 eb
	d9 6e		 lea	 edi, DWORD PTR [edx+edi+1859775393]
  00482	8b 54 24 24	 mov	 edx, DWORD PTR _e1$[esp+104]
  00486	c1 c7 07	 rol	 edi, 7
  00489	03 fa		 add	 edi, edx
  0048b	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  0048e	89 74 24 1c	 mov	 DWORD PTR _c1$[esp+104], esi
  00492	8b f1		 mov	 esi, ecx
  00494	f7 d6		 not	 esi
  00496	0b f7		 or	 esi, edi
  00498	33 74 24 1c	 xor	 esi, DWORD PTR _c1$[esp+104]
  0049c	03 70 24	 add	 esi, DWORD PTR [eax+36]
  0049f	8d 94 16 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [esi+edx+1859775393]
  004a6	c1 c2 0e	 rol	 edx, 14			; 0000000eH
  004a9	03 d3		 add	 edx, ebx
  004ab	8b 58 3c	 mov	 ebx, DWORD PTR [eax+60]
  004ae	8b f7		 mov	 esi, edi
  004b0	f7 d6		 not	 esi
  004b2	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  004b5	0b f2		 or	 esi, edx
  004b7	33 f1		 xor	 esi, ecx
  004b9	89 4c 24 18	 mov	 DWORD PTR _b1$[esp+104], ecx
  004bd	03 f3		 add	 esi, ebx
  004bf	8b 4c 24 10	 mov	 ecx, DWORD PTR _d1$[esp+104]
  004c3	8d 8c 0e a1 eb
	d9 6e		 lea	 ecx, DWORD PTR [esi+ecx+1859775393]
  004ca	c1 c1 09	 rol	 ecx, 9
  004cd	03 4c 24 1c	 add	 ecx, DWORD PTR _c1$[esp+104]
  004d1	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  004d4	89 7c 24 70	 mov	 DWORD PTR _a1$[esp+100], edi
  004d8	8b f2		 mov	 esi, edx
  004da	f7 d6		 not	 esi
  004dc	0b f1		 or	 esi, ecx
  004de	33 f7		 xor	 esi, edi
  004e0	03 74 24 34	 add	 esi, DWORD PTR tv5514[esp+104]
  004e4	8b 7c 24 1c	 mov	 edi, DWORD PTR _c1$[esp+104]
  004e8	8d b4 3e a1 eb
	d9 6e		 lea	 esi, DWORD PTR [esi+edi+1859775393]
  004ef	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  004f2	03 74 24 18	 add	 esi, DWORD PTR _b1$[esp+104]
  004f6	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  004f9	8b f9		 mov	 edi, ecx
  004fb	f7 d7		 not	 edi
  004fd	0b fe		 or	 edi, esi
  004ff	33 fa		 xor	 edi, edx
  00501	03 78 04	 add	 edi, DWORD PTR [eax+4]
  00504	89 54 24 24	 mov	 DWORD PTR _e1$[esp+104], edx
  00508	8b 54 24 18	 mov	 edx, DWORD PTR _b1$[esp+104]
  0050c	8d 94 17 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [edi+edx+1859775393]
  00513	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  00516	03 54 24 70	 add	 edx, DWORD PTR _a1$[esp+100]
  0051a	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  0051d	8b fe		 mov	 edi, esi
  0051f	f7 d7		 not	 edi
  00521	0b fa		 or	 edi, edx
  00523	33 f9		 xor	 edi, ecx
  00525	03 7c 24 40	 add	 edi, DWORD PTR tv5430[esp+104]
  00529	89 4c 24 10	 mov	 DWORD PTR _d1$[esp+104], ecx
  0052d	8b 4c 24 70	 mov	 ecx, DWORD PTR _a1$[esp+100]
  00531	8d 8c 0f a1 eb
	d9 6e		 lea	 ecx, DWORD PTR [edi+ecx+1859775393]
  00538	c1 c1 0e	 rol	 ecx, 14			; 0000000eH
  0053b	03 4c 24 24	 add	 ecx, DWORD PTR _e1$[esp+104]
  0053f	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00542	8b fa		 mov	 edi, edx
  00544	f7 d7		 not	 edi
  00546	0b f9		 or	 edi, ecx
  00548	33 fe		 xor	 edi, esi
  0054a	03 7c 24 38	 add	 edi, DWORD PTR tv5500[esp+104]
  0054e	89 74 24 1c	 mov	 DWORD PTR _c1$[esp+104], esi
  00552	8b 74 24 24	 mov	 esi, DWORD PTR _e1$[esp+104]
  00556	8d b4 37 a1 eb
	d9 6e		 lea	 esi, DWORD PTR [edi+esi+1859775393]
  0055d	c1 c6 08	 rol	 esi, 8
  00560	03 74 24 10	 add	 esi, DWORD PTR _d1$[esp+104]
  00564	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00567	8b f9		 mov	 edi, ecx
  00569	f7 d7		 not	 edi
  0056b	0b fe		 or	 edi, esi
  0056d	33 fa		 xor	 edi, edx
  0056f	03 fd		 add	 edi, ebp
  00571	89 54 24 18	 mov	 DWORD PTR _b1$[esp+104], edx
  00575	8b 54 24 10	 mov	 edx, DWORD PTR _d1$[esp+104]
  00579	8d 94 17 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [edi+edx+1859775393]
  00580	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  00583	03 54 24 1c	 add	 edx, DWORD PTR _c1$[esp+104]
  00587	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  0058a	8b fe		 mov	 edi, esi
  0058c	f7 d7		 not	 edi
  0058e	0b fa		 or	 edi, edx
  00590	33 f9		 xor	 edi, ecx
  00592	03 7c 24 4c	 add	 edi, DWORD PTR tv5486[esp+104]
  00596	89 4c 24 70	 mov	 DWORD PTR _a1$[esp+100], ecx
  0059a	8b 4c 24 1c	 mov	 ecx, DWORD PTR _c1$[esp+104]
  0059e	8d 8c 0f a1 eb
	d9 6e		 lea	 ecx, DWORD PTR [edi+ecx+1859775393]
  005a5	8b 78 34	 mov	 edi, DWORD PTR [eax+52]
  005a8	89 7c 24 44	 mov	 DWORD PTR tv5944[esp+104], edi
  005ac	c1 c1 06	 rol	 ecx, 6
  005af	03 4c 24 18	 add	 ecx, DWORD PTR _b1$[esp+104]
  005b3	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  005b6	8b fa		 mov	 edi, edx
  005b8	f7 d7		 not	 edi
  005ba	0b f9		 or	 edi, ecx
  005bc	33 fe		 xor	 edi, esi
  005be	03 7c 24 44	 add	 edi, DWORD PTR tv5944[esp+104]
  005c2	89 74 24 24	 mov	 DWORD PTR _e1$[esp+104], esi
  005c6	8b 74 24 18	 mov	 esi, DWORD PTR _b1$[esp+104]
  005ca	8d b4 37 a1 eb
	d9 6e		 lea	 esi, DWORD PTR [edi+esi+1859775393]
  005d1	c1 c6 05	 rol	 esi, 5
  005d4	03 74 24 70	 add	 esi, DWORD PTR _a1$[esp+100]
  005d8	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  005db	89 54 24 10	 mov	 DWORD PTR _d1$[esp+104], edx
  005df	8b f9		 mov	 edi, ecx
  005e1	f7 d7		 not	 edi
  005e3	0b fe		 or	 edi, esi
  005e5	33 fa		 xor	 edi, edx
  005e7	03 78 2c	 add	 edi, DWORD PTR [eax+44]
  005ea	8b 54 24 70	 mov	 edx, DWORD PTR _a1$[esp+100]
  005ee	8d bc 17 a1 eb
	d9 6e		 lea	 edi, DWORD PTR [edi+edx+1859775393]
  005f5	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  005f8	03 7c 24 24	 add	 edi, DWORD PTR _e1$[esp+104]
  005fc	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  005ff	8b d6		 mov	 edx, esi
  00601	f7 d2		 not	 edx
  00603	0b d7		 or	 edx, edi
  00605	33 d1		 xor	 edx, ecx
  00607	03 54 24 3c	 add	 edx, DWORD PTR tv5472[esp+104]
  0060b	89 4c 24 1c	 mov	 DWORD PTR _c1$[esp+104], ecx
  0060f	8b 4c 24 24	 mov	 ecx, DWORD PTR _e1$[esp+104]
  00613	8d 8c 0a a1 eb
	d9 6e		 lea	 ecx, DWORD PTR [edx+ecx+1859775393]
  0061a	c1 c1 07	 rol	 ecx, 7
  0061d	03 4c 24 10	 add	 ecx, DWORD PTR _d1$[esp+104]
  00621	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00624	8b d7		 mov	 edx, edi
  00626	f7 d2		 not	 edx
  00628	0b d1		 or	 edx, ecx
  0062a	33 d6		 xor	 edx, esi
  0062c	03 50 30	 add	 edx, DWORD PTR [eax+48]
  0062f	89 74 24 18	 mov	 DWORD PTR _b1$[esp+104], esi
  00633	8b 74 24 10	 mov	 esi, DWORD PTR _d1$[esp+104]
  00637	8d 94 32 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [edx+esi+1859775393]
  0063e	c1 c2 05	 rol	 edx, 5
  00641	03 54 24 1c	 add	 edx, DWORD PTR _c1$[esp+104]
  00645	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00648	8b f1		 mov	 esi, ecx
  0064a	33 f2		 xor	 esi, edx
  0064c	23 f7		 and	 esi, edi
  0064e	33 f1		 xor	 esi, ecx
  00650	03 70 04	 add	 esi, DWORD PTR [eax+4]
  00653	89 7c 24 70	 mov	 DWORD PTR _a1$[esp+100], edi
  00657	8b 7c 24 1c	 mov	 edi, DWORD PTR _c1$[esp+104]
  0065b	8d b4 3e dc bc
	1b 8f		 lea	 esi, DWORD PTR [esi+edi-1894007588]
  00662	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00665	03 74 24 18	 add	 esi, DWORD PTR _b1$[esp+104]
  00669	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  0066c	8b fa		 mov	 edi, edx
  0066e	33 fe		 xor	 edi, esi
  00670	23 f9		 and	 edi, ecx
  00672	33 fa		 xor	 edi, edx
  00674	03 7c 24 54	 add	 edi, DWORD PTR tv5528[esp+104]
  00678	89 4c 24 24	 mov	 DWORD PTR _e1$[esp+104], ecx
  0067c	8b 4c 24 18	 mov	 ecx, DWORD PTR _b1$[esp+104]
  00680	8d bc 0f dc bc
	1b 8f		 lea	 edi, DWORD PTR [edi+ecx-1894007588]
  00687	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  0068a	03 7c 24 70	 add	 edi, DWORD PTR _a1$[esp+100]
  0068e	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00691	8b ce		 mov	 ecx, esi
  00693	33 cf		 xor	 ecx, edi
  00695	23 ca		 and	 ecx, edx
  00697	33 ce		 xor	 ecx, esi
  00699	03 48 2c	 add	 ecx, DWORD PTR [eax+44]
  0069c	89 54 24 10	 mov	 DWORD PTR _d1$[esp+104], edx
  006a0	8b 54 24 70	 mov	 edx, DWORD PTR _a1$[esp+100]
  006a4	8d 8c 11 dc bc
	1b 8f		 lea	 ecx, DWORD PTR [ecx+edx-1894007588]
  006ab	c1 c1 0e	 rol	 ecx, 14			; 0000000eH
  006ae	03 4c 24 24	 add	 ecx, DWORD PTR _e1$[esp+104]
  006b2	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  006b5	8b d7		 mov	 edx, edi
  006b7	33 d1		 xor	 edx, ecx
  006b9	23 d6		 and	 edx, esi
  006bb	33 d7		 xor	 edx, edi
  006bd	03 50 28	 add	 edx, DWORD PTR [eax+40]
  006c0	89 74 24 1c	 mov	 DWORD PTR _c1$[esp+104], esi
  006c4	8b 74 24 24	 mov	 esi, DWORD PTR _e1$[esp+104]
  006c8	8d 94 32 dc bc
	1b 8f		 lea	 edx, DWORD PTR [edx+esi-1894007588]
  006cf	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  006d2	03 54 24 10	 add	 edx, DWORD PTR _d1$[esp+104]
  006d6	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  006d9	89 7c 24 18	 mov	 DWORD PTR _b1$[esp+104], edi
  006dd	8b f2		 mov	 esi, edx
  006df	33 f1		 xor	 esi, ecx
  006e1	23 f7		 and	 esi, edi
  006e3	33 f1		 xor	 esi, ecx
  006e5	8b 7c 24 10	 mov	 edi, DWORD PTR _d1$[esp+104]
  006e9	03 f5		 add	 esi, ebp
  006eb	8d b4 3e dc bc
	1b 8f		 lea	 esi, DWORD PTR [esi+edi-1894007588]
  006f2	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  006f5	03 74 24 1c	 add	 esi, DWORD PTR _c1$[esp+104]
  006f9	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  006fc	8b fa		 mov	 edi, edx
  006fe	33 fe		 xor	 edi, esi
  00700	23 f9		 and	 edi, ecx
  00702	33 fa		 xor	 edi, edx
  00704	03 7c 24 34	 add	 edi, DWORD PTR tv5514[esp+104]
  00708	89 4c 24 70	 mov	 DWORD PTR _a1$[esp+100], ecx
  0070c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _c1$[esp+104]
  00710	8d 8c 0f dc bc
	1b 8f		 lea	 ecx, DWORD PTR [edi+ecx-1894007588]
  00717	c1 c1 0f	 rol	 ecx, 15			; 0000000fH
  0071a	03 4c 24 18	 add	 ecx, DWORD PTR _b1$[esp+104]
  0071e	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00721	8b fe		 mov	 edi, esi
  00723	33 f9		 xor	 edi, ecx
  00725	23 fa		 and	 edi, edx
  00727	33 fe		 xor	 edi, esi
  00729	03 78 30	 add	 edi, DWORD PTR [eax+48]
  0072c	89 54 24 24	 mov	 DWORD PTR _e1$[esp+104], edx
  00730	8b 54 24 18	 mov	 edx, DWORD PTR _b1$[esp+104]
  00734	8d bc 17 dc bc
	1b 8f		 lea	 edi, DWORD PTR [edi+edx-1894007588]
  0073b	c1 c7 09	 rol	 edi, 9
  0073e	03 7c 24 70	 add	 edi, DWORD PTR _a1$[esp+100]
  00742	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00745	89 74 24 10	 mov	 DWORD PTR _d1$[esp+104], esi
  00749	8b d1		 mov	 edx, ecx
  0074b	33 d7		 xor	 edx, edi
  0074d	23 d6		 and	 edx, esi
  0074f	8b 74 24 70	 mov	 esi, DWORD PTR _a1$[esp+100]
  00753	33 d1		 xor	 edx, ecx
  00755	03 54 24 58	 add	 edx, DWORD PTR tv5458[esp+104]
  00759	8d 94 32 dc bc
	1b 8f		 lea	 edx, DWORD PTR [edx+esi-1894007588]
  00760	c1 c2 08	 rol	 edx, 8
  00763	03 54 24 24	 add	 edx, DWORD PTR _e1$[esp+104]
  00767	8b f7		 mov	 esi, edi
  00769	33 f2		 xor	 esi, edx
  0076b	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  0076e	23 f1		 and	 esi, ecx
  00770	33 f7		 xor	 esi, edi
  00772	03 74 24 44	 add	 esi, DWORD PTR tv5944[esp+104]
  00776	89 4c 24 1c	 mov	 DWORD PTR _c1$[esp+104], ecx
  0077a	8b 4c 24 24	 mov	 ecx, DWORD PTR _e1$[esp+104]
  0077e	8d 8c 0e dc bc
	1b 8f		 lea	 ecx, DWORD PTR [esi+ecx-1894007588]
  00785	c1 c1 09	 rol	 ecx, 9
  00788	03 4c 24 10	 add	 ecx, DWORD PTR _d1$[esp+104]
  0078c	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  0078f	89 7c 24 18	 mov	 DWORD PTR _b1$[esp+104], edi
  00793	8b f1		 mov	 esi, ecx
  00795	33 f2		 xor	 esi, edx
  00797	23 f7		 and	 esi, edi
  00799	8b 7c 24 10	 mov	 edi, DWORD PTR _d1$[esp+104]
  0079d	33 f2		 xor	 esi, edx
  0079f	03 74 24 48	 add	 esi, DWORD PTR tv5444[esp+104]
  007a3	8d b4 3e dc bc
	1b 8f		 lea	 esi, DWORD PTR [esi+edi-1894007588]
  007aa	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  007ad	03 74 24 1c	 add	 esi, DWORD PTR _c1$[esp+104]
  007b1	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  007b4	8b f9		 mov	 edi, ecx
  007b6	33 fe		 xor	 edi, esi
  007b8	23 fa		 and	 edi, edx
  007ba	33 f9		 xor	 edi, ecx
  007bc	03 7c 24 38	 add	 edi, DWORD PTR tv5500[esp+104]
  007c0	89 54 24 70	 mov	 DWORD PTR _a1$[esp+100], edx
  007c4	8b 54 24 1c	 mov	 edx, DWORD PTR _c1$[esp+104]
  007c8	8d 94 17 dc bc
	1b 8f		 lea	 edx, DWORD PTR [edi+edx-1894007588]
  007cf	c1 c2 05	 rol	 edx, 5
  007d2	03 54 24 18	 add	 edx, DWORD PTR _b1$[esp+104]
  007d6	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 259  : 	Subround(I, b1, c1, d1, e1, a1, X[15],  6, k3);

  007d9	8b fe		 mov	 edi, esi
  007db	33 fa		 xor	 edi, edx
  007dd	23 f9		 and	 edi, ecx
  007df	89 4c 24 24	 mov	 DWORD PTR _e1$[esp+104], ecx
  007e3	33 fe		 xor	 edi, esi
  007e5	8b 4c 24 18	 mov	 ecx, DWORD PTR _b1$[esp+104]
  007e9	03 fb		 add	 edi, ebx
  007eb	8d bc 0f dc bc
	1b 8f		 lea	 edi, DWORD PTR [edi+ecx-1894007588]
  007f2	c1 c7 06	 rol	 edi, 6
  007f5	03 7c 24 70	 add	 edi, DWORD PTR _a1$[esp+100]
  007f9	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  007fc	89 74 24 10	 mov	 DWORD PTR _d1$[esp+104], esi

; 260  : 	Subround(I, a1, b1, c1, d1, e1, X[14],  8, k3);

  00800	8b ca		 mov	 ecx, edx
  00802	33 cf		 xor	 ecx, edi
  00804	23 ce		 and	 ecx, esi
  00806	33 ca		 xor	 ecx, edx
  00808	03 4c 24 50	 add	 ecx, DWORD PTR tv5598[esp+104]
  0080c	8b 74 24 70	 mov	 esi, DWORD PTR _a1$[esp+100]
  00810	8d 8c 31 dc bc
	1b 8f		 lea	 ecx, DWORD PTR [ecx+esi-1894007588]
  00817	c1 c1 08	 rol	 ecx, 8
  0081a	03 4c 24 24	 add	 ecx, DWORD PTR _e1$[esp+104]
  0081e	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 261  : 	Subround(I, e1, a1, b1, c1, d1, X[ 5],  6, k3);

  00821	8b f7		 mov	 esi, edi
  00823	33 f1		 xor	 esi, ecx
  00825	23 f2		 and	 esi, edx
  00827	33 f7		 xor	 esi, edi
  00829	03 74 24 3c	 add	 esi, DWORD PTR tv5472[esp+104]
  0082d	89 54 24 1c	 mov	 DWORD PTR _c1$[esp+104], edx
  00831	8b 54 24 24	 mov	 edx, DWORD PTR _e1$[esp+104]
  00835	8d 94 16 dc bc
	1b 8f		 lea	 edx, DWORD PTR [esi+edx-1894007588]
  0083c	c1 c2 06	 rol	 edx, 6
  0083f	03 54 24 10	 add	 edx, DWORD PTR _d1$[esp+104]
  00843	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 262  : 	Subround(I, d1, e1, a1, b1, c1, X[ 6],  5, k3);

  00846	8b f2		 mov	 esi, edx
  00848	33 f1		 xor	 esi, ecx
  0084a	23 f7		 and	 esi, edi
  0084c	33 f1		 xor	 esi, ecx
  0084e	03 74 24 4c	 add	 esi, DWORD PTR tv5486[esp+104]
  00852	89 7c 24 18	 mov	 DWORD PTR _b1$[esp+104], edi
  00856	8b 7c 24 10	 mov	 edi, DWORD PTR _d1$[esp+104]
  0085a	8d b4 3e dc bc
	1b 8f		 lea	 esi, DWORD PTR [esi+edi-1894007588]
  00861	c1 c6 05	 rol	 esi, 5
  00864	03 74 24 1c	 add	 esi, DWORD PTR _c1$[esp+104]
  00868	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 263  : 	Subround(I, c1, d1, e1, a1, b1, X[ 2], 12, k3);

  0086b	8b fa		 mov	 edi, edx
  0086d	33 fe		 xor	 edi, esi
  0086f	23 f9		 and	 edi, ecx
  00871	33 fa		 xor	 edi, edx
  00873	03 78 08	 add	 edi, DWORD PTR [eax+8]
  00876	89 4c 24 70	 mov	 DWORD PTR _a1$[esp+100], ecx
  0087a	8b 4c 24 1c	 mov	 ecx, DWORD PTR _c1$[esp+104]
  0087e	8d 8c 0f dc bc
	1b 8f		 lea	 ecx, DWORD PTR [edi+ecx-1894007588]

; 264  : 
; 265  : 	Subround(J, b1, c1, d1, e1, a1, X[ 4],  9, k4);

  00885	8b 7c 24 18	 mov	 edi, DWORD PTR _b1$[esp+104]
  00889	c1 c1 0c	 rol	 ecx, 12			; 0000000cH
  0088c	03 4c 24 18	 add	 ecx, DWORD PTR _b1$[esp+104]
  00890	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00893	89 54 24 24	 mov	 DWORD PTR _e1$[esp+104], edx
  00897	f7 d2		 not	 edx
  00899	0b d6		 or	 edx, esi
  0089b	33 d1		 xor	 edx, ecx
  0089d	03 54 24 58	 add	 edx, DWORD PTR tv5458[esp+104]
  008a1	8d 94 3a 4e fd
	53 a9		 lea	 edx, DWORD PTR [edx+edi-1454113458]
  008a8	8b 7c 24 70	 mov	 edi, DWORD PTR _a1$[esp+100]
  008ac	c1 c2 09	 rol	 edx, 9
  008af	03 d7		 add	 edx, edi
  008b1	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  008b4	89 74 24 10	 mov	 DWORD PTR _d1$[esp+104], esi

; 266  : 	Subround(J, a1, b1, c1, d1, e1, X[ 0], 15, k4);

  008b8	f7 d6		 not	 esi
  008ba	0b f1		 or	 esi, ecx
  008bc	33 f2		 xor	 esi, edx
  008be	03 f5		 add	 esi, ebp
  008c0	8d b4 3e 4e fd
	53 a9		 lea	 esi, DWORD PTR [esi+edi-1454113458]

; 267  : 	Subround(J, e1, a1, b1, c1, d1, X[ 5],  5, k4);

  008c7	8b 7c 24 24	 mov	 edi, DWORD PTR _e1$[esp+104]
  008cb	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  008ce	03 74 24 24	 add	 esi, DWORD PTR _e1$[esp+104]
  008d2	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  008d5	89 4c 24 1c	 mov	 DWORD PTR _c1$[esp+104], ecx
  008d9	f7 d1		 not	 ecx
  008db	0b ca		 or	 ecx, edx
  008dd	33 ce		 xor	 ecx, esi
  008df	03 4c 24 3c	 add	 ecx, DWORD PTR tv5472[esp+104]
  008e3	8d 8c 39 4e fd
	53 a9		 lea	 ecx, DWORD PTR [ecx+edi-1454113458]
  008ea	c1 c1 05	 rol	 ecx, 5
  008ed	03 4c 24 10	 add	 ecx, DWORD PTR _d1$[esp+104]
  008f1	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  008f4	89 54 24 18	 mov	 DWORD PTR _b1$[esp+104], edx

; 268  : 	Subround(J, d1, e1, a1, b1, c1, X[ 9], 11, k4);

  008f8	8b 7c 24 10	 mov	 edi, DWORD PTR _d1$[esp+104]
  008fc	f7 d2		 not	 edx
  008fe	0b d6		 or	 edx, esi
  00900	33 d1		 xor	 edx, ecx
  00902	03 54 24 54	 add	 edx, DWORD PTR tv5528[esp+104]
  00906	8d 94 3a 4e fd
	53 a9		 lea	 edx, DWORD PTR [edx+edi-1454113458]
  0090d	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00910	03 54 24 1c	 add	 edx, DWORD PTR _c1$[esp+104]
  00914	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 269  : 	Subround(J, c1, d1, e1, a1, b1, X[ 7],  6, k4);

  00917	8b 7c 24 1c	 mov	 edi, DWORD PTR _c1$[esp+104]
  0091b	89 74 24 70	 mov	 DWORD PTR _a1$[esp+100], esi
  0091f	f7 d6		 not	 esi
  00921	0b f1		 or	 esi, ecx
  00923	33 f2		 xor	 esi, edx
  00925	03 74 24 38	 add	 esi, DWORD PTR tv5500[esp+104]
  00929	8d b4 3e 4e fd
	53 a9		 lea	 esi, DWORD PTR [esi+edi-1454113458]
  00930	c1 c6 06	 rol	 esi, 6
  00933	03 74 24 18	 add	 esi, DWORD PTR _b1$[esp+104]
  00937	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 270  : 	Subround(J, b1, c1, d1, e1, a1, X[12],  8, k4);

  0093a	8b 7c 24 18	 mov	 edi, DWORD PTR _b1$[esp+104]
  0093e	89 4c 24 24	 mov	 DWORD PTR _e1$[esp+104], ecx
  00942	f7 d1		 not	 ecx
  00944	0b ca		 or	 ecx, edx
  00946	33 ce		 xor	 ecx, esi
  00948	03 48 30	 add	 ecx, DWORD PTR [eax+48]
  0094b	8d 8c 39 4e fd
	53 a9		 lea	 ecx, DWORD PTR [ecx+edi-1454113458]
  00952	8b 7c 24 70	 mov	 edi, DWORD PTR _a1$[esp+100]
  00956	c1 c1 08	 rol	 ecx, 8
  00959	03 cf		 add	 ecx, edi
  0095b	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  0095e	89 54 24 10	 mov	 DWORD PTR _d1$[esp+104], edx

; 271  : 	Subround(J, a1, b1, c1, d1, e1, X[ 2], 13, k4);

  00962	f7 d2		 not	 edx
  00964	0b d6		 or	 edx, esi
  00966	33 d1		 xor	 edx, ecx
  00968	03 50 08	 add	 edx, DWORD PTR [eax+8]
  0096b	8d 94 3a 4e fd
	53 a9		 lea	 edx, DWORD PTR [edx+edi-1454113458]

; 272  : 	Subround(J, e1, a1, b1, c1, d1, X[10], 12, k4);

  00972	8b 7c 24 24	 mov	 edi, DWORD PTR _e1$[esp+104]
  00976	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  00979	03 54 24 24	 add	 edx, DWORD PTR _e1$[esp+104]
  0097d	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00980	89 74 24 1c	 mov	 DWORD PTR _c1$[esp+104], esi
  00984	f7 d6		 not	 esi
  00986	0b f1		 or	 esi, ecx
  00988	33 f2		 xor	 esi, edx
  0098a	03 70 28	 add	 esi, DWORD PTR [eax+40]
  0098d	8d b4 3e 4e fd
	53 a9		 lea	 esi, DWORD PTR [esi+edi-1454113458]

; 273  : 	Subround(J, d1, e1, a1, b1, c1, X[14],  5, k4);

  00994	8b 7c 24 10	 mov	 edi, DWORD PTR _d1$[esp+104]
  00998	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  0099b	03 74 24 10	 add	 esi, DWORD PTR _d1$[esp+104]
  0099f	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  009a2	89 4c 24 18	 mov	 DWORD PTR _b1$[esp+104], ecx
  009a6	f7 d1		 not	 ecx
  009a8	0b ca		 or	 ecx, edx
  009aa	33 ce		 xor	 ecx, esi
  009ac	03 4c 24 50	 add	 ecx, DWORD PTR tv5598[esp+104]
  009b0	8d 8c 39 4e fd
	53 a9		 lea	 ecx, DWORD PTR [ecx+edi-1454113458]

; 274  : 	Subround(J, c1, d1, e1, a1, b1, X[ 1], 12, k4);

  009b7	8b 7c 24 1c	 mov	 edi, DWORD PTR _c1$[esp+104]
  009bb	c1 c1 05	 rol	 ecx, 5
  009be	03 4c 24 1c	 add	 ecx, DWORD PTR _c1$[esp+104]
  009c2	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  009c5	89 54 24 70	 mov	 DWORD PTR _a1$[esp+100], edx
  009c9	f7 d2		 not	 edx
  009cb	0b d6		 or	 edx, esi
  009cd	33 d1		 xor	 edx, ecx
  009cf	03 54 24 5c	 add	 edx, DWORD PTR tv5414[esp+104]
  009d3	8d 94 3a 4e fd
	53 a9		 lea	 edx, DWORD PTR [edx+edi-1454113458]
  009da	8b 7c 24 18	 mov	 edi, DWORD PTR _b1$[esp+104]
  009de	c1 c2 0c	 rol	 edx, 12			; 0000000cH
  009e1	03 d7		 add	 edx, edi
  009e3	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  009e6	89 74 24 24	 mov	 DWORD PTR _e1$[esp+104], esi

; 275  : 	Subround(J, b1, c1, d1, e1, a1, X[ 3], 13, k4);

  009ea	f7 d6		 not	 esi
  009ec	0b f1		 or	 esi, ecx
  009ee	33 f2		 xor	 esi, edx
  009f0	03 74 24 48	 add	 esi, DWORD PTR tv5444[esp+104]
  009f4	8d b4 3e 4e fd
	53 a9		 lea	 esi, DWORD PTR [esi+edi-1454113458]
  009fb	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  009fe	03 74 24 70	 add	 esi, DWORD PTR _a1$[esp+100]
  00a02	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00a05	89 4c 24 10	 mov	 DWORD PTR _d1$[esp+104], ecx

; 276  : 	Subround(J, a1, b1, c1, d1, e1, X[ 8], 14, k4);

  00a09	f7 d1		 not	 ecx
  00a0b	0b ca		 or	 ecx, edx
  00a0d	33 ce		 xor	 ecx, esi
  00a0f	03 4c 24 34	 add	 ecx, DWORD PTR tv5514[esp+104]
  00a13	8b 7c 24 70	 mov	 edi, DWORD PTR _a1$[esp+100]
  00a17	8d 8c 39 4e fd
	53 a9		 lea	 ecx, DWORD PTR [ecx+edi-1454113458]
  00a1e	c1 c1 0e	 rol	 ecx, 14			; 0000000eH
  00a21	03 4c 24 24	 add	 ecx, DWORD PTR _e1$[esp+104]
  00a25	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 277  : 	Subround(J, e1, a1, b1, c1, d1, X[11], 11, k4);

  00a28	8b 78 2c	 mov	 edi, DWORD PTR [eax+44]
  00a2b	89 54 24 1c	 mov	 DWORD PTR _c1$[esp+104], edx
  00a2f	f7 d2		 not	 edx
  00a31	0b d6		 or	 edx, esi
  00a33	33 d1		 xor	 edx, ecx
  00a35	03 d7		 add	 edx, edi
  00a37	8b 7c 24 24	 mov	 edi, DWORD PTR _e1$[esp+104]
  00a3b	8d 94 3a 4e fd
	53 a9		 lea	 edx, DWORD PTR [edx+edi-1454113458]
  00a42	8b 7c 24 10	 mov	 edi, DWORD PTR _d1$[esp+104]
  00a46	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00a49	03 d7		 add	 edx, edi
  00a4b	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00a4e	89 74 24 18	 mov	 DWORD PTR _b1$[esp+104], esi

; 278  : 	Subround(J, d1, e1, a1, b1, c1, X[ 6],  8, k4);

  00a52	f7 d6		 not	 esi
  00a54	0b f1		 or	 esi, ecx
  00a56	33 f2		 xor	 esi, edx
  00a58	03 74 24 4c	 add	 esi, DWORD PTR tv5486[esp+104]
  00a5c	8d b4 3e 4e fd
	53 a9		 lea	 esi, DWORD PTR [esi+edi-1454113458]
  00a63	8b 7c 24 1c	 mov	 edi, DWORD PTR _c1$[esp+104]
  00a67	c1 c6 08	 rol	 esi, 8
  00a6a	03 f7		 add	 esi, edi
  00a6c	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00a6f	89 4c 24 70	 mov	 DWORD PTR _a1$[esp+100], ecx

; 279  : 	Subround(J, c1, d1, e1, a1, b1, X[15],  5, k4);

  00a73	f7 d1		 not	 ecx
  00a75	0b ca		 or	 ecx, edx
  00a77	33 ce		 xor	 ecx, esi
  00a79	03 cb		 add	 ecx, ebx
  00a7b	8d 8c 39 4e fd
	53 a9		 lea	 ecx, DWORD PTR [ecx+edi-1454113458]
  00a82	8b 7c 24 18	 mov	 edi, DWORD PTR _b1$[esp+104]
  00a86	c1 c1 05	 rol	 ecx, 5
  00a89	03 cf		 add	 ecx, edi
  00a8b	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00a8e	89 54 24 24	 mov	 DWORD PTR _e1$[esp+104], edx

; 280  : 	Subround(J, b1, c1, d1, e1, a1, X[13],  6, k4);

  00a92	f7 d2		 not	 edx
  00a94	0b d6		 or	 edx, esi
  00a96	33 d1		 xor	 edx, ecx
  00a98	03 54 24 44	 add	 edx, DWORD PTR tv5944[esp+104]
  00a9c	89 4c 24 1c	 mov	 DWORD PTR _c1$[esp+104], ecx
  00aa0	8d 8c 3a 4e fd
	53 a9		 lea	 ecx, DWORD PTR [edx+edi-1454113458]

; 281  : 
; 282  : 	Subround(J, a2, b2, c2, d2, e2, X[ 5],  8, k5);

  00aa7	8b 54 24 6c	 mov	 edx, DWORD PTR _digest$[esp+100]
  00aab	c1 c1 06	 rol	 ecx, 6
  00aae	03 4c 24 70	 add	 ecx, DWORD PTR _a1$[esp+100]
  00ab2	89 74 24 10	 mov	 DWORD PTR _d1$[esp+104], esi
  00ab6	8b 72 0c	 mov	 esi, DWORD PTR [edx+12]
  00ab9	8b fe		 mov	 edi, esi
  00abb	f7 d7		 not	 edi
  00abd	0b 7a 08	 or	 edi, DWORD PTR [edx+8]
  00ac0	89 4c 24 18	 mov	 DWORD PTR _b1$[esp+104], ecx
  00ac4	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00ac7	33 f9		 xor	 edi, ecx
  00ac9	03 7c 24 3c	 add	 edi, DWORD PTR tv5472[esp+104]
  00acd	89 4c 24 64	 mov	 DWORD PTR tv4228[esp+104], ecx
  00ad1	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00ad3	8b 52 10	 mov	 edx, DWORD PTR [edx+16]
  00ad6	8d 8c 0f e6 8b
	a2 50		 lea	 ecx, DWORD PTR [edi+ecx+1352829926]
  00add	89 54 24 2c	 mov	 DWORD PTR tv4237[esp+104], edx

; 283  : 	Subround(J, e2, a2, b2, c2, d2, X[14],  9, k5);

  00ae1	8b fa		 mov	 edi, edx
  00ae3	c1 c1 08	 rol	 ecx, 8
  00ae6	03 ca		 add	 ecx, edx
  00ae8	8b 54 24 28	 mov	 edx, DWORD PTR tv4749[esp+104]
  00aec	f7 d2		 not	 edx
  00aee	0b 54 24 64	 or	 edx, DWORD PTR tv4228[esp+104]
  00af2	33 d1		 xor	 edx, ecx
  00af4	03 54 24 50	 add	 edx, DWORD PTR tv5598[esp+104]
  00af8	8d 94 3a e6 8b
	a2 50		 lea	 edx, DWORD PTR [edx+edi+1352829926]

; 284  : 	Subround(J, d2, e2, a2, b2, c2, X[ 7],  9, k5);

  00aff	8b 7c 24 30	 mov	 edi, DWORD PTR tv4758[esp+104]
  00b03	f7 d7		 not	 edi
  00b05	c1 c2 09	 rol	 edx, 9
  00b08	03 d6		 add	 edx, esi
  00b0a	0b f9		 or	 edi, ecx
  00b0c	33 fa		 xor	 edi, edx
  00b0e	03 7c 24 38	 add	 edi, DWORD PTR tv5500[esp+104]
  00b12	8d b4 37 e6 8b
	a2 50		 lea	 esi, DWORD PTR [edi+esi+1352829926]
  00b19	8b 7c 24 28	 mov	 edi, DWORD PTR tv4749[esp+104]
  00b1d	c1 c6 09	 rol	 esi, 9
  00b20	03 f7		 add	 esi, edi
  00b22	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00b25	89 4c 24 20	 mov	 DWORD PTR _a2$[esp+104], ecx

; 285  : 	Subround(J, c2, d2, e2, a2, b2, X[ 0], 11, k5);

  00b29	f7 d1		 not	 ecx
  00b2b	0b ca		 or	 ecx, edx
  00b2d	33 ce		 xor	 ecx, esi
  00b2f	03 cd		 add	 ecx, ebp
  00b31	8d 8c 39 e6 8b
	a2 50		 lea	 ecx, DWORD PTR [ecx+edi+1352829926]
  00b38	8b 7c 24 30	 mov	 edi, DWORD PTR tv4758[esp+104]
  00b3c	c1 c1 0b	 rol	 ecx, 11			; 0000000bH
  00b3f	03 cf		 add	 ecx, edi
  00b41	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00b44	89 54 24 28	 mov	 DWORD PTR _e2$[esp+104], edx

; 286  : 	Subround(J, b2, c2, d2, e2, a2, X[ 9], 13, k5);

  00b48	f7 d2		 not	 edx
  00b4a	0b d6		 or	 edx, esi
  00b4c	33 d1		 xor	 edx, ecx
  00b4e	03 54 24 54	 add	 edx, DWORD PTR tv5528[esp+104]
  00b52	8d 94 3a e6 8b
	a2 50		 lea	 edx, DWORD PTR [edx+edi+1352829926]
  00b59	8b 7c 24 20	 mov	 edi, DWORD PTR _a2$[esp+104]
  00b5d	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  00b60	03 d7		 add	 edx, edi
  00b62	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00b65	89 74 24 2c	 mov	 DWORD PTR _d2$[esp+104], esi

; 287  : 	Subround(J, a2, b2, c2, d2, e2, X[ 2], 15, k5);

  00b69	f7 d6		 not	 esi
  00b6b	0b f1		 or	 esi, ecx
  00b6d	33 f2		 xor	 esi, edx
  00b6f	03 74 24 40	 add	 esi, DWORD PTR tv5430[esp+104]
  00b73	8d b4 3e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+edi+1352829926]
  00b7a	8b 7c 24 28	 mov	 edi, DWORD PTR _e2$[esp+104]
  00b7e	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  00b81	03 f7		 add	 esi, edi
  00b83	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00b86	89 4c 24 14	 mov	 DWORD PTR _c2$[esp+104], ecx

; 288  : 	Subround(J, e2, a2, b2, c2, d2, X[11], 15, k5);

  00b8a	f7 d1		 not	 ecx
  00b8c	0b ca		 or	 ecx, edx
  00b8e	33 ce		 xor	 ecx, esi
  00b90	03 48 2c	 add	 ecx, DWORD PTR [eax+44]
  00b93	8d 8c 39 e6 8b
	a2 50		 lea	 ecx, DWORD PTR [ecx+edi+1352829926]
  00b9a	8b 7c 24 2c	 mov	 edi, DWORD PTR _d2$[esp+104]
  00b9e	c1 c1 0f	 rol	 ecx, 15			; 0000000fH
  00ba1	03 cf		 add	 ecx, edi
  00ba3	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00ba6	89 54 24 30	 mov	 DWORD PTR _b2$[esp+104], edx

; 289  : 	Subround(J, d2, e2, a2, b2, c2, X[ 4],  5, k5);

  00baa	f7 d2		 not	 edx
  00bac	0b d6		 or	 edx, esi
  00bae	33 d1		 xor	 edx, ecx
  00bb0	03 54 24 58	 add	 edx, DWORD PTR tv5458[esp+104]
  00bb4	8d 94 3a e6 8b
	a2 50		 lea	 edx, DWORD PTR [edx+edi+1352829926]
  00bbb	8b 7c 24 14	 mov	 edi, DWORD PTR _c2$[esp+104]
  00bbf	c1 c2 05	 rol	 edx, 5
  00bc2	03 d7		 add	 edx, edi
  00bc4	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00bc7	89 74 24 20	 mov	 DWORD PTR _a2$[esp+104], esi

; 290  : 	Subround(J, c2, d2, e2, a2, b2, X[13],  7, k5);

  00bcb	f7 d6		 not	 esi
  00bcd	0b f1		 or	 esi, ecx
  00bcf	33 f2		 xor	 esi, edx
  00bd1	03 74 24 44	 add	 esi, DWORD PTR tv5944[esp+104]
  00bd5	8d b4 3e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+edi+1352829926]

; 291  : 	Subround(J, b2, c2, d2, e2, a2, X[ 6],  7, k5);

  00bdc	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  00bdf	c1 c6 07	 rol	 esi, 7
  00be2	03 74 24 30	 add	 esi, DWORD PTR _b2$[esp+104]
  00be6	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00be9	89 4c 24 28	 mov	 DWORD PTR _e2$[esp+104], ecx
  00bed	f7 d1		 not	 ecx
  00bef	0b ca		 or	 ecx, edx
  00bf1	33 ce		 xor	 ecx, esi
  00bf3	03 cf		 add	 ecx, edi
  00bf5	8b 7c 24 30	 mov	 edi, DWORD PTR _b2$[esp+104]
  00bf9	8d 8c 39 e6 8b
	a2 50		 lea	 ecx, DWORD PTR [ecx+edi+1352829926]
  00c00	8b 7c 24 20	 mov	 edi, DWORD PTR _a2$[esp+104]
  00c04	c1 c1 07	 rol	 ecx, 7
  00c07	03 cf		 add	 ecx, edi
  00c09	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00c0c	89 54 24 2c	 mov	 DWORD PTR _d2$[esp+104], edx

; 292  : 	Subround(J, a2, b2, c2, d2, e2, X[15],  8, k5);

  00c10	f7 d2		 not	 edx
  00c12	0b d6		 or	 edx, esi
  00c14	33 d1		 xor	 edx, ecx
  00c16	03 d3		 add	 edx, ebx
  00c18	8d 94 3a e6 8b
	a2 50		 lea	 edx, DWORD PTR [edx+edi+1352829926]
  00c1f	8b 7c 24 28	 mov	 edi, DWORD PTR _e2$[esp+104]
  00c23	c1 c2 08	 rol	 edx, 8
  00c26	03 d7		 add	 edx, edi
  00c28	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00c2b	89 74 24 14	 mov	 DWORD PTR _c2$[esp+104], esi

; 293  : 	Subround(J, e2, a2, b2, c2, d2, X[ 8], 11, k5);

  00c2f	f7 d6		 not	 esi
  00c31	0b f1		 or	 esi, ecx
  00c33	33 f2		 xor	 esi, edx
  00c35	03 74 24 34	 add	 esi, DWORD PTR tv5514[esp+104]
  00c39	8d b4 3e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+edi+1352829926]
  00c40	8b 7c 24 2c	 mov	 edi, DWORD PTR _d2$[esp+104]
  00c44	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00c47	03 f7		 add	 esi, edi
  00c49	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  00c4c	89 4c 24 30	 mov	 DWORD PTR _b2$[esp+104], ecx

; 294  : 	Subround(J, d2, e2, a2, b2, c2, X[ 1], 14, k5);

  00c50	f7 d1		 not	 ecx
  00c52	0b ca		 or	 ecx, edx
  00c54	33 ce		 xor	 ecx, esi
  00c56	03 4c 24 5c	 add	 ecx, DWORD PTR tv5414[esp+104]
  00c5a	8d bc 39 e6 8b
	a2 50		 lea	 edi, DWORD PTR [ecx+edi+1352829926]
  00c61	8b 4c 24 14	 mov	 ecx, DWORD PTR _c2$[esp+104]
  00c65	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  00c68	03 f9		 add	 edi, ecx
  00c6a	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00c6d	89 54 24 20	 mov	 DWORD PTR _a2$[esp+104], edx

; 295  : 	Subround(J, c2, d2, e2, a2, b2, X[10], 14, k5);

  00c71	f7 d2		 not	 edx
  00c73	0b d6		 or	 edx, esi
  00c75	33 d7		 xor	 edx, edi
  00c77	03 50 28	 add	 edx, DWORD PTR [eax+40]
  00c7a	8d 94 0a e6 8b
	a2 50		 lea	 edx, DWORD PTR [edx+ecx+1352829926]

; 296  : 	Subround(J, b2, c2, d2, e2, a2, X[ 3], 12, k5);

  00c81	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00c84	c1 c2 0e	 rol	 edx, 14			; 0000000eH
  00c87	03 54 24 30	 add	 edx, DWORD PTR _b2$[esp+104]
  00c8b	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00c8e	89 74 24 28	 mov	 DWORD PTR _e2$[esp+104], esi
  00c92	f7 d6		 not	 esi
  00c94	0b f7		 or	 esi, edi
  00c96	33 f2		 xor	 esi, edx
  00c98	03 f1		 add	 esi, ecx
  00c9a	8b 4c 24 30	 mov	 ecx, DWORD PTR _b2$[esp+104]
  00c9e	8d 8c 0e e6 8b
	a2 50		 lea	 ecx, DWORD PTR [esi+ecx+1352829926]
  00ca5	8b 74 24 20	 mov	 esi, DWORD PTR _a2$[esp+104]
  00ca9	c1 c1 0c	 rol	 ecx, 12			; 0000000cH
  00cac	03 ce		 add	 ecx, esi
  00cae	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00cb1	89 7c 24 2c	 mov	 DWORD PTR _d2$[esp+104], edi

; 297  : 	Subround(J, a2, b2, c2, d2, e2, X[12],  6, k5);

  00cb5	f7 d7		 not	 edi
  00cb7	0b fa		 or	 edi, edx
  00cb9	33 f9		 xor	 edi, ecx
  00cbb	03 78 30	 add	 edi, DWORD PTR [eax+48]
  00cbe	89 54 24 14	 mov	 DWORD PTR _c2$[esp+104], edx
  00cc2	8d 94 37 e6 8b
	a2 50		 lea	 edx, DWORD PTR [edi+esi+1352829926]
  00cc9	8b 74 24 14	 mov	 esi, DWORD PTR _c2$[esp+104]
  00ccd	c1 c2 06	 rol	 edx, 6
  00cd0	03 54 24 28	 add	 edx, DWORD PTR _e2$[esp+104]
  00cd4	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 298  : 
; 299  : 	Subround(I, e2, a2, b2, c2, d2, X[ 6],  9, k6); 

  00cd7	8b f9		 mov	 edi, ecx
  00cd9	33 fa		 xor	 edi, edx
  00cdb	23 fe		 and	 edi, esi
  00cdd	33 f9		 xor	 edi, ecx
  00cdf	03 78 18	 add	 edi, DWORD PTR [eax+24]
  00ce2	89 74 24 14	 mov	 DWORD PTR _c2$[esp+104], esi
  00ce6	8b 74 24 28	 mov	 esi, DWORD PTR _e2$[esp+104]
  00cea	8d b4 37 24 d1
	4d 5c		 lea	 esi, DWORD PTR [edi+esi+1548603684]
  00cf1	c1 c6 09	 rol	 esi, 9
  00cf4	03 74 24 2c	 add	 esi, DWORD PTR _d2$[esp+104]
  00cf8	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 300  : 	Subround(I, d2, e2, a2, b2, c2, X[11], 13, k6);

  00cfb	8b fe		 mov	 edi, esi
  00cfd	33 fa		 xor	 edi, edx
  00cff	23 f9		 and	 edi, ecx
  00d01	33 fa		 xor	 edi, edx
  00d03	03 7c 24 60	 add	 edi, DWORD PTR tv5556[esp+104]
  00d07	89 4c 24 30	 mov	 DWORD PTR _b2$[esp+104], ecx
  00d0b	8b 4c 24 2c	 mov	 ecx, DWORD PTR _d2$[esp+104]
  00d0f	8d bc 0f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ecx+1548603684]
  00d16	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00d19	03 7c 24 14	 add	 edi, DWORD PTR _c2$[esp+104]
  00d1d	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 301  : 	Subround(I, c2, d2, e2, a2, b2, X[ 3], 15, k6);

  00d20	8b ce		 mov	 ecx, esi
  00d22	89 54 24 20	 mov	 DWORD PTR _a2$[esp+104], edx
  00d26	33 cf		 xor	 ecx, edi
  00d28	23 ca		 and	 ecx, edx
  00d2a	33 ce		 xor	 ecx, esi
  00d2c	03 48 0c	 add	 ecx, DWORD PTR [eax+12]
  00d2f	8b 54 24 14	 mov	 edx, DWORD PTR _c2$[esp+104]
  00d33	8d 8c 11 24 d1
	4d 5c		 lea	 ecx, DWORD PTR [ecx+edx+1548603684]
  00d3a	c1 c1 0f	 rol	 ecx, 15			; 0000000fH
  00d3d	03 4c 24 30	 add	 ecx, DWORD PTR _b2$[esp+104]
  00d41	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 302  : 	Subround(I, b2, c2, d2, e2, a2, X[ 7],  7, k6);

  00d44	8b d7		 mov	 edx, edi
  00d46	33 d1		 xor	 edx, ecx
  00d48	23 d6		 and	 edx, esi
  00d4a	33 d7		 xor	 edx, edi
  00d4c	03 54 24 38	 add	 edx, DWORD PTR tv5500[esp+104]
  00d50	89 74 24 28	 mov	 DWORD PTR _e2$[esp+104], esi
  00d54	8b 74 24 30	 mov	 esi, DWORD PTR _b2$[esp+104]
  00d58	8d 94 32 24 d1
	4d 5c		 lea	 edx, DWORD PTR [edx+esi+1548603684]
  00d5f	c1 c2 07	 rol	 edx, 7
  00d62	03 54 24 20	 add	 edx, DWORD PTR _a2$[esp+104]
  00d66	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00d69	89 7c 24 2c	 mov	 DWORD PTR _d2$[esp+104], edi

; 303  : 	Subround(I, a2, b2, c2, d2, e2, X[ 0], 12, k6);

  00d6d	8b f1		 mov	 esi, ecx
  00d6f	33 f2		 xor	 esi, edx
  00d71	23 f7		 and	 esi, edi
  00d73	8b 7c 24 20	 mov	 edi, DWORD PTR _a2$[esp+104]
  00d77	33 f1		 xor	 esi, ecx
  00d79	03 f5		 add	 esi, ebp
  00d7b	8d b4 3e 24 d1
	4d 5c		 lea	 esi, DWORD PTR [esi+edi+1548603684]
  00d82	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  00d85	03 74 24 28	 add	 esi, DWORD PTR _e2$[esp+104]
  00d89	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 304  : 	Subround(I, e2, a2, b2, c2, d2, X[13],  8, k6);

  00d8c	8b fa		 mov	 edi, edx
  00d8e	33 fe		 xor	 edi, esi
  00d90	23 f9		 and	 edi, ecx
  00d92	33 fa		 xor	 edi, edx
  00d94	03 7c 24 44	 add	 edi, DWORD PTR tv5944[esp+104]
  00d98	89 4c 24 14	 mov	 DWORD PTR _c2$[esp+104], ecx
  00d9c	8b 4c 24 28	 mov	 ecx, DWORD PTR _e2$[esp+104]
  00da0	8d 8c 0f 24 d1
	4d 5c		 lea	 ecx, DWORD PTR [edi+ecx+1548603684]
  00da7	c1 c1 08	 rol	 ecx, 8
  00daa	03 4c 24 2c	 add	 ecx, DWORD PTR _d2$[esp+104]
  00dae	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 305  : 	Subround(I, d2, e2, a2, b2, c2, X[ 5],  9, k6);

  00db1	8b f9		 mov	 edi, ecx
  00db3	33 fe		 xor	 edi, esi
  00db5	23 fa		 and	 edi, edx
  00db7	33 fe		 xor	 edi, esi
  00db9	03 7c 24 3c	 add	 edi, DWORD PTR tv5472[esp+104]
  00dbd	89 54 24 30	 mov	 DWORD PTR _b2$[esp+104], edx
  00dc1	8b 54 24 2c	 mov	 edx, DWORD PTR _d2$[esp+104]
  00dc5	8d bc 17 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+edx+1548603684]
  00dcc	c1 c7 09	 rol	 edi, 9
  00dcf	03 7c 24 14	 add	 edi, DWORD PTR _c2$[esp+104]
  00dd3	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 306  : 	Subround(I, c2, d2, e2, a2, b2, X[10], 11, k6);

  00dd6	8b d1		 mov	 edx, ecx
  00dd8	33 d7		 xor	 edx, edi
  00dda	23 d6		 and	 edx, esi
  00ddc	89 74 24 20	 mov	 DWORD PTR _a2$[esp+104], esi
  00de0	8b 74 24 14	 mov	 esi, DWORD PTR _c2$[esp+104]
  00de4	33 d1		 xor	 edx, ecx
  00de6	03 50 28	 add	 edx, DWORD PTR [eax+40]
  00de9	8d 94 32 24 d1
	4d 5c		 lea	 edx, DWORD PTR [edx+esi+1548603684]
  00df0	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00df3	03 54 24 30	 add	 edx, DWORD PTR _b2$[esp+104]
  00df7	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 307  : 	Subround(I, b2, c2, d2, e2, a2, X[14],  7, k6);

  00dfa	8b f7		 mov	 esi, edi
  00dfc	33 f2		 xor	 esi, edx
  00dfe	23 f1		 and	 esi, ecx
  00e00	33 f7		 xor	 esi, edi
  00e02	03 74 24 50	 add	 esi, DWORD PTR tv5598[esp+104]
  00e06	89 4c 24 28	 mov	 DWORD PTR _e2$[esp+104], ecx
  00e0a	8b 4c 24 30	 mov	 ecx, DWORD PTR _b2$[esp+104]
  00e0e	8d 8c 0e 24 d1
	4d 5c		 lea	 ecx, DWORD PTR [esi+ecx+1548603684]
  00e15	c1 c1 07	 rol	 ecx, 7
  00e18	03 4c 24 20	 add	 ecx, DWORD PTR _a2$[esp+104]
  00e1c	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 308  : 	Subround(I, a2, b2, c2, d2, e2, X[15],  7, k6);

  00e1f	8b f2		 mov	 esi, edx
  00e21	33 f1		 xor	 esi, ecx
  00e23	23 f7		 and	 esi, edi
  00e25	33 f2		 xor	 esi, edx
  00e27	89 7c 24 2c	 mov	 DWORD PTR _d2$[esp+104], edi
  00e2b	8b 7c 24 20	 mov	 edi, DWORD PTR _a2$[esp+104]
  00e2f	03 f3		 add	 esi, ebx
  00e31	8d b4 3e 24 d1
	4d 5c		 lea	 esi, DWORD PTR [esi+edi+1548603684]
  00e38	c1 c6 07	 rol	 esi, 7
  00e3b	03 74 24 28	 add	 esi, DWORD PTR _e2$[esp+104]
  00e3f	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 309  : 	Subround(I, e2, a2, b2, c2, d2, X[ 8], 12, k6);

  00e42	8b f9		 mov	 edi, ecx
  00e44	33 fe		 xor	 edi, esi
  00e46	23 fa		 and	 edi, edx
  00e48	33 f9		 xor	 edi, ecx
  00e4a	03 7c 24 34	 add	 edi, DWORD PTR tv5514[esp+104]
  00e4e	89 54 24 14	 mov	 DWORD PTR _c2$[esp+104], edx
  00e52	8b 54 24 28	 mov	 edx, DWORD PTR _e2$[esp+104]
  00e56	8d 94 17 24 d1
	4d 5c		 lea	 edx, DWORD PTR [edi+edx+1548603684]
  00e5d	c1 c2 0c	 rol	 edx, 12			; 0000000cH
  00e60	03 54 24 2c	 add	 edx, DWORD PTR _d2$[esp+104]
  00e64	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 310  : 	Subround(I, d2, e2, a2, b2, c2, X[12],  7, k6);

  00e67	8b fa		 mov	 edi, edx
  00e69	33 fe		 xor	 edi, esi
  00e6b	23 f9		 and	 edi, ecx
  00e6d	33 fe		 xor	 edi, esi
  00e6f	03 78 30	 add	 edi, DWORD PTR [eax+48]
  00e72	89 4c 24 30	 mov	 DWORD PTR _b2$[esp+104], ecx
  00e76	8b 4c 24 2c	 mov	 ecx, DWORD PTR _d2$[esp+104]
  00e7a	8d bc 0f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ecx+1548603684]
  00e81	c1 c7 07	 rol	 edi, 7
  00e84	03 7c 24 14	 add	 edi, DWORD PTR _c2$[esp+104]
  00e88	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 311  : 	Subround(I, c2, d2, e2, a2, b2, X[ 4],  6, k6);

  00e8b	8b ca		 mov	 ecx, edx
  00e8d	33 cf		 xor	 ecx, edi
  00e8f	23 ce		 and	 ecx, esi
  00e91	33 ca		 xor	 ecx, edx
  00e93	03 4c 24 58	 add	 ecx, DWORD PTR tv5458[esp+104]
  00e97	89 74 24 20	 mov	 DWORD PTR _a2$[esp+104], esi
  00e9b	8b 74 24 14	 mov	 esi, DWORD PTR _c2$[esp+104]
  00e9f	8d 8c 31 24 d1
	4d 5c		 lea	 ecx, DWORD PTR [ecx+esi+1548603684]
  00ea6	c1 c1 06	 rol	 ecx, 6
  00ea9	03 4c 24 30	 add	 ecx, DWORD PTR _b2$[esp+104]
  00ead	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 312  : 	Subround(I, b2, c2, d2, e2, a2, X[ 9], 15, k6);

  00eb0	8b f7		 mov	 esi, edi
  00eb2	33 f1		 xor	 esi, ecx
  00eb4	23 f2		 and	 esi, edx
  00eb6	33 f7		 xor	 esi, edi
  00eb8	03 74 24 54	 add	 esi, DWORD PTR tv5528[esp+104]
  00ebc	89 54 24 28	 mov	 DWORD PTR _e2$[esp+104], edx
  00ec0	8b 54 24 30	 mov	 edx, DWORD PTR _b2$[esp+104]
  00ec4	8d 94 16 24 d1
	4d 5c		 lea	 edx, DWORD PTR [esi+edx+1548603684]
  00ecb	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  00ece	03 54 24 20	 add	 edx, DWORD PTR _a2$[esp+104]
  00ed2	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 313  : 	Subround(I, a2, b2, c2, d2, e2, X[ 1], 13, k6);

  00ed5	8b f1		 mov	 esi, ecx
  00ed7	33 f2		 xor	 esi, edx
  00ed9	23 f7		 and	 esi, edi
  00edb	33 f1		 xor	 esi, ecx
  00edd	03 74 24 5c	 add	 esi, DWORD PTR tv5414[esp+104]
  00ee1	89 7c 24 2c	 mov	 DWORD PTR _d2$[esp+104], edi
  00ee5	8b 7c 24 20	 mov	 edi, DWORD PTR _a2$[esp+104]
  00ee9	8d b4 3e 24 d1
	4d 5c		 lea	 esi, DWORD PTR [esi+edi+1548603684]
  00ef0	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00ef3	03 74 24 28	 add	 esi, DWORD PTR _e2$[esp+104]
  00ef7	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 314  : 	Subround(I, e2, a2, b2, c2, d2, X[ 2], 11, k6);

  00efa	8b fa		 mov	 edi, edx
  00efc	33 fe		 xor	 edi, esi
  00efe	23 f9		 and	 edi, ecx
  00f00	33 fa		 xor	 edi, edx
  00f02	03 7c 24 40	 add	 edi, DWORD PTR tv5430[esp+104]
  00f06	89 4c 24 14	 mov	 DWORD PTR _c2$[esp+104], ecx
  00f0a	8b 4c 24 28	 mov	 ecx, DWORD PTR _e2$[esp+104]
  00f0e	8d 8c 0f 24 d1
	4d 5c		 lea	 ecx, DWORD PTR [edi+ecx+1548603684]
  00f15	c1 c1 0b	 rol	 ecx, 11			; 0000000bH
  00f18	03 4c 24 2c	 add	 ecx, DWORD PTR _d2$[esp+104]
  00f1c	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 315  : 
; 316  : 	Subround(H, d2, e2, a2, b2, c2, X[15],  9, k7);

  00f1f	8b fe		 mov	 edi, esi
  00f21	f7 d7		 not	 edi
  00f23	0b f9		 or	 edi, ecx
  00f25	33 fa		 xor	 edi, edx
  00f27	89 54 24 30	 mov	 DWORD PTR _b2$[esp+104], edx
  00f2b	8b 54 24 2c	 mov	 edx, DWORD PTR _d2$[esp+104]
  00f2f	03 fb		 add	 edi, ebx
  00f31	8d 94 17 f3 3e
	70 6d		 lea	 edx, DWORD PTR [edi+edx+1836072691]
  00f38	c1 c2 09	 rol	 edx, 9
  00f3b	03 54 24 14	 add	 edx, DWORD PTR _c2$[esp+104]
  00f3f	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 317  : 	Subround(H, c2, d2, e2, a2, b2, X[ 5],  7, k7);

  00f42	8b f9		 mov	 edi, ecx
  00f44	f7 d7		 not	 edi
  00f46	0b fa		 or	 edi, edx
  00f48	33 fe		 xor	 edi, esi
  00f4a	03 7c 24 3c	 add	 edi, DWORD PTR tv5472[esp+104]
  00f4e	89 74 24 20	 mov	 DWORD PTR _a2$[esp+104], esi
  00f52	8b 74 24 14	 mov	 esi, DWORD PTR _c2$[esp+104]
  00f56	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  00f5d	c1 c6 07	 rol	 esi, 7
  00f60	03 74 24 30	 add	 esi, DWORD PTR _b2$[esp+104]
  00f64	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 318  : 	Subround(H, b2, c2, d2, e2, a2, X[ 1], 15, k7);

  00f67	8b fa		 mov	 edi, edx
  00f69	f7 d7		 not	 edi
  00f6b	0b fe		 or	 edi, esi
  00f6d	33 f9		 xor	 edi, ecx
  00f6f	03 7c 24 5c	 add	 edi, DWORD PTR tv5414[esp+104]
  00f73	89 4c 24 28	 mov	 DWORD PTR _e2$[esp+104], ecx
  00f77	8b 4c 24 30	 mov	 ecx, DWORD PTR _b2$[esp+104]
  00f7b	8d 8c 0f f3 3e
	70 6d		 lea	 ecx, DWORD PTR [edi+ecx+1836072691]
  00f82	c1 c1 0f	 rol	 ecx, 15			; 0000000fH
  00f85	03 4c 24 20	 add	 ecx, DWORD PTR _a2$[esp+104]
  00f89	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 319  : 	Subround(H, a2, b2, c2, d2, e2, X[ 3], 11, k7);

  00f8c	8b fe		 mov	 edi, esi
  00f8e	f7 d7		 not	 edi
  00f90	0b f9		 or	 edi, ecx
  00f92	33 fa		 xor	 edi, edx
  00f94	03 7c 24 48	 add	 edi, DWORD PTR tv5444[esp+104]
  00f98	89 54 24 2c	 mov	 DWORD PTR _d2$[esp+104], edx
  00f9c	8b 54 24 20	 mov	 edx, DWORD PTR _a2$[esp+104]
  00fa0	8d 94 17 f3 3e
	70 6d		 lea	 edx, DWORD PTR [edi+edx+1836072691]
  00fa7	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00faa	03 54 24 28	 add	 edx, DWORD PTR _e2$[esp+104]
  00fae	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 320  : 	Subround(H, e2, a2, b2, c2, d2, X[ 7],  8, k7);

  00fb1	8b f9		 mov	 edi, ecx
  00fb3	f7 d7		 not	 edi
  00fb5	0b fa		 or	 edi, edx
  00fb7	33 fe		 xor	 edi, esi
  00fb9	03 7c 24 38	 add	 edi, DWORD PTR tv5500[esp+104]
  00fbd	89 74 24 14	 mov	 DWORD PTR _c2$[esp+104], esi
  00fc1	8b 74 24 28	 mov	 esi, DWORD PTR _e2$[esp+104]
  00fc5	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  00fcc	c1 c6 08	 rol	 esi, 8
  00fcf	03 74 24 2c	 add	 esi, DWORD PTR _d2$[esp+104]
  00fd3	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 321  : 	Subround(H, d2, e2, a2, b2, c2, X[14],  6, k7);

  00fd6	8b fa		 mov	 edi, edx
  00fd8	f7 d7		 not	 edi
  00fda	0b fe		 or	 edi, esi
  00fdc	33 f9		 xor	 edi, ecx
  00fde	03 7c 24 50	 add	 edi, DWORD PTR tv5598[esp+104]
  00fe2	89 4c 24 30	 mov	 DWORD PTR _b2$[esp+104], ecx
  00fe6	8b 4c 24 2c	 mov	 ecx, DWORD PTR _d2$[esp+104]
  00fea	8d 8c 0f f3 3e
	70 6d		 lea	 ecx, DWORD PTR [edi+ecx+1836072691]
  00ff1	c1 c1 06	 rol	 ecx, 6
  00ff4	03 4c 24 14	 add	 ecx, DWORD PTR _c2$[esp+104]
  00ff8	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 322  : 	Subround(H, c2, d2, e2, a2, b2, X[ 6],  6, k7);

  00ffb	8b fe		 mov	 edi, esi
  00ffd	f7 d7		 not	 edi
  00fff	0b f9		 or	 edi, ecx
  01001	33 fa		 xor	 edi, edx
  01003	03 7c 24 4c	 add	 edi, DWORD PTR tv5486[esp+104]
  01007	89 54 24 20	 mov	 DWORD PTR _a2$[esp+104], edx
  0100b	8b 54 24 14	 mov	 edx, DWORD PTR _c2$[esp+104]
  0100f	8d 94 17 f3 3e
	70 6d		 lea	 edx, DWORD PTR [edi+edx+1836072691]
  01016	c1 c2 06	 rol	 edx, 6
  01019	03 54 24 30	 add	 edx, DWORD PTR _b2$[esp+104]
  0101d	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 323  : 	Subround(H, b2, c2, d2, e2, a2, X[ 9], 14, k7);

  01020	8b f9		 mov	 edi, ecx
  01022	f7 d7		 not	 edi
  01024	0b fa		 or	 edi, edx
  01026	33 fe		 xor	 edi, esi
  01028	03 7c 24 54	 add	 edi, DWORD PTR tv5528[esp+104]
  0102c	89 74 24 28	 mov	 DWORD PTR _e2$[esp+104], esi
  01030	8b 74 24 30	 mov	 esi, DWORD PTR _b2$[esp+104]
  01034	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  0103b	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  0103e	03 74 24 20	 add	 esi, DWORD PTR _a2$[esp+104]

; 324  : 	Subround(H, a2, b2, c2, d2, e2, X[11], 12, k7);

  01042	8b fa		 mov	 edi, edx
  01044	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  01047	f7 d7		 not	 edi
  01049	89 4c 24 2c	 mov	 DWORD PTR _d2$[esp+104], ecx
  0104d	0b fe		 or	 edi, esi
  0104f	33 f9		 xor	 edi, ecx
  01051	03 7c 24 60	 add	 edi, DWORD PTR tv5556[esp+104]
  01055	8b 4c 24 20	 mov	 ecx, DWORD PTR _a2$[esp+104]
  01059	8d 8c 0f f3 3e
	70 6d		 lea	 ecx, DWORD PTR [edi+ecx+1836072691]
  01060	c1 c1 0c	 rol	 ecx, 12			; 0000000cH
  01063	03 4c 24 28	 add	 ecx, DWORD PTR _e2$[esp+104]
  01067	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 325  : 	Subround(H, e2, a2, b2, c2, d2, X[ 8], 13, k7);

  0106a	8b fe		 mov	 edi, esi
  0106c	f7 d7		 not	 edi
  0106e	0b f9		 or	 edi, ecx
  01070	33 fa		 xor	 edi, edx
  01072	03 7c 24 34	 add	 edi, DWORD PTR tv5514[esp+104]
  01076	89 54 24 14	 mov	 DWORD PTR _c2$[esp+104], edx
  0107a	8b 54 24 28	 mov	 edx, DWORD PTR _e2$[esp+104]
  0107e	8d 94 17 f3 3e
	70 6d		 lea	 edx, DWORD PTR [edi+edx+1836072691]
  01085	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  01088	03 54 24 2c	 add	 edx, DWORD PTR _d2$[esp+104]
  0108c	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 326  : 	Subround(H, d2, e2, a2, b2, c2, X[12],  5, k7);

  0108f	8b f9		 mov	 edi, ecx
  01091	f7 d7		 not	 edi
  01093	0b fa		 or	 edi, edx
  01095	33 fe		 xor	 edi, esi
  01097	03 78 30	 add	 edi, DWORD PTR [eax+48]
  0109a	89 74 24 30	 mov	 DWORD PTR _b2$[esp+104], esi
  0109e	8b 74 24 2c	 mov	 esi, DWORD PTR _d2$[esp+104]
  010a2	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  010a9	c1 c6 05	 rol	 esi, 5
  010ac	03 74 24 14	 add	 esi, DWORD PTR _c2$[esp+104]
  010b0	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 327  : 	Subround(H, c2, d2, e2, a2, b2, X[ 2], 14, k7);

  010b3	8b fa		 mov	 edi, edx
  010b5	f7 d7		 not	 edi
  010b7	0b fe		 or	 edi, esi
  010b9	33 f9		 xor	 edi, ecx
  010bb	03 7c 24 40	 add	 edi, DWORD PTR tv5430[esp+104]
  010bf	89 4c 24 20	 mov	 DWORD PTR _a2$[esp+104], ecx
  010c3	8b 4c 24 14	 mov	 ecx, DWORD PTR _c2$[esp+104]
  010c7	8d 8c 0f f3 3e
	70 6d		 lea	 ecx, DWORD PTR [edi+ecx+1836072691]
  010ce	c1 c1 0e	 rol	 ecx, 14			; 0000000eH
  010d1	03 4c 24 30	 add	 ecx, DWORD PTR _b2$[esp+104]
  010d5	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 328  : 	Subround(H, b2, c2, d2, e2, a2, X[10], 13, k7);

  010d8	8b fe		 mov	 edi, esi
  010da	f7 d7		 not	 edi
  010dc	0b f9		 or	 edi, ecx
  010de	33 fa		 xor	 edi, edx
  010e0	03 78 28	 add	 edi, DWORD PTR [eax+40]
  010e3	89 54 24 28	 mov	 DWORD PTR _e2$[esp+104], edx
  010e7	8b 54 24 30	 mov	 edx, DWORD PTR _b2$[esp+104]
  010eb	8d 94 17 f3 3e
	70 6d		 lea	 edx, DWORD PTR [edi+edx+1836072691]
  010f2	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  010f5	03 54 24 20	 add	 edx, DWORD PTR _a2$[esp+104]
  010f9	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 329  : 	Subround(H, a2, b2, c2, d2, e2, X[ 0], 13, k7);

  010fc	8b f9		 mov	 edi, ecx
  010fe	f7 d7		 not	 edi
  01100	0b fa		 or	 edi, edx
  01102	33 fe		 xor	 edi, esi
  01104	03 fd		 add	 edi, ebp
  01106	89 74 24 2c	 mov	 DWORD PTR _d2$[esp+104], esi
  0110a	8b 74 24 20	 mov	 esi, DWORD PTR _a2$[esp+104]
  0110e	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  01115	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  01118	03 74 24 28	 add	 esi, DWORD PTR _e2$[esp+104]
  0111c	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 330  : 	Subround(H, e2, a2, b2, c2, d2, X[ 4],  7, k7);

  0111f	8b fa		 mov	 edi, edx
  01121	f7 d7		 not	 edi
  01123	0b fe		 or	 edi, esi
  01125	33 f9		 xor	 edi, ecx
  01127	03 78 10	 add	 edi, DWORD PTR [eax+16]
  0112a	89 4c 24 14	 mov	 DWORD PTR _c2$[esp+104], ecx
  0112e	8b 4c 24 28	 mov	 ecx, DWORD PTR _e2$[esp+104]
  01132	8d 8c 0f f3 3e
	70 6d		 lea	 ecx, DWORD PTR [edi+ecx+1836072691]
  01139	c1 c1 07	 rol	 ecx, 7
  0113c	03 4c 24 2c	 add	 ecx, DWORD PTR _d2$[esp+104]
  01140	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 331  : 	Subround(H, d2, e2, a2, b2, c2, X[13],  5, k7);

  01143	8b fe		 mov	 edi, esi
  01145	f7 d7		 not	 edi
  01147	0b f9		 or	 edi, ecx
  01149	33 fa		 xor	 edi, edx
  0114b	03 7c 24 44	 add	 edi, DWORD PTR tv5944[esp+104]
  0114f	89 54 24 30	 mov	 DWORD PTR _b2$[esp+104], edx
  01153	8b 54 24 2c	 mov	 edx, DWORD PTR _d2$[esp+104]
  01157	8d 94 17 f3 3e
	70 6d		 lea	 edx, DWORD PTR [edi+edx+1836072691]
  0115e	c1 c2 05	 rol	 edx, 5
  01161	03 54 24 14	 add	 edx, DWORD PTR _c2$[esp+104]
  01165	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 332  : 
; 333  : 	Subround(G, c2, d2, e2, a2, b2, X[ 8], 15, k8);

  01168	8b f9		 mov	 edi, ecx
  0116a	33 fe		 xor	 edi, esi
  0116c	23 fa		 and	 edi, edx
  0116e	33 fe		 xor	 edi, esi
  01170	03 7c 24 34	 add	 edi, DWORD PTR tv5514[esp+104]
  01174	89 74 24 20	 mov	 DWORD PTR _a2$[esp+104], esi
  01178	8b 74 24 14	 mov	 esi, DWORD PTR _c2$[esp+104]
  0117c	8d b4 37 e9 76
	6d 7a		 lea	 esi, DWORD PTR [edi+esi+2053994217]
  01183	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  01186	03 74 24 30	 add	 esi, DWORD PTR _b2$[esp+104]
  0118a	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 334  : 	Subround(G, b2, c2, d2, e2, a2, X[ 6],  5, k8);

  0118d	8b f9		 mov	 edi, ecx
  0118f	33 fa		 xor	 edi, edx
  01191	23 fe		 and	 edi, esi
  01193	33 f9		 xor	 edi, ecx
  01195	03 7c 24 4c	 add	 edi, DWORD PTR tv5486[esp+104]
  01199	89 4c 24 28	 mov	 DWORD PTR _e2$[esp+104], ecx
  0119d	8b 4c 24 30	 mov	 ecx, DWORD PTR _b2$[esp+104]
  011a1	8d 8c 0f e9 76
	6d 7a		 lea	 ecx, DWORD PTR [edi+ecx+2053994217]
  011a8	c1 c1 05	 rol	 ecx, 5
  011ab	03 4c 24 20	 add	 ecx, DWORD PTR _a2$[esp+104]
  011af	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 335  : 	Subround(G, a2, b2, c2, d2, e2, X[ 4],  8, k8);

  011b2	8b fa		 mov	 edi, edx
  011b4	33 fe		 xor	 edi, esi
  011b6	23 f9		 and	 edi, ecx
  011b8	33 fa		 xor	 edi, edx
  011ba	03 78 10	 add	 edi, DWORD PTR [eax+16]
  011bd	89 54 24 2c	 mov	 DWORD PTR _d2$[esp+104], edx
  011c1	8b 54 24 20	 mov	 edx, DWORD PTR _a2$[esp+104]
  011c5	8d 94 17 e9 76
	6d 7a		 lea	 edx, DWORD PTR [edi+edx+2053994217]
  011cc	c1 c2 08	 rol	 edx, 8
  011cf	03 54 24 28	 add	 edx, DWORD PTR _e2$[esp+104]
  011d3	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 336  : 	Subround(G, e2, a2, b2, c2, d2, X[ 1], 11, k8);

  011d6	8b fe		 mov	 edi, esi
  011d8	33 f9		 xor	 edi, ecx
  011da	23 fa		 and	 edi, edx
  011dc	33 fe		 xor	 edi, esi
  011de	03 7c 24 5c	 add	 edi, DWORD PTR tv5414[esp+104]
  011e2	89 74 24 14	 mov	 DWORD PTR _c2$[esp+104], esi
  011e6	8b 74 24 28	 mov	 esi, DWORD PTR _e2$[esp+104]
  011ea	8d b4 37 e9 76
	6d 7a		 lea	 esi, DWORD PTR [edi+esi+2053994217]
  011f1	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  011f4	03 74 24 2c	 add	 esi, DWORD PTR _d2$[esp+104]
  011f8	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 337  : 	Subround(G, d2, e2, a2, b2, c2, X[ 3], 14, k8);

  011fb	8b f9		 mov	 edi, ecx
  011fd	33 fa		 xor	 edi, edx
  011ff	23 fe		 and	 edi, esi
  01201	33 f9		 xor	 edi, ecx
  01203	03 7c 24 48	 add	 edi, DWORD PTR tv5444[esp+104]
  01207	89 4c 24 30	 mov	 DWORD PTR _b2$[esp+104], ecx
  0120b	8b 4c 24 2c	 mov	 ecx, DWORD PTR _d2$[esp+104]
  0120f	8d 8c 0f e9 76
	6d 7a		 lea	 ecx, DWORD PTR [edi+ecx+2053994217]
  01216	c1 c1 0e	 rol	 ecx, 14			; 0000000eH
  01219	03 4c 24 14	 add	 ecx, DWORD PTR _c2$[esp+104]
  0121d	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 338  : 	Subround(G, c2, d2, e2, a2, b2, X[11], 14, k8);

  01220	8b fe		 mov	 edi, esi
  01222	33 fa		 xor	 edi, edx
  01224	23 f9		 and	 edi, ecx
  01226	33 fa		 xor	 edi, edx
  01228	03 7c 24 60	 add	 edi, DWORD PTR tv5556[esp+104]
  0122c	89 54 24 20	 mov	 DWORD PTR _a2$[esp+104], edx
  01230	8b 54 24 14	 mov	 edx, DWORD PTR _c2$[esp+104]
  01234	8d 94 17 e9 76
	6d 7a		 lea	 edx, DWORD PTR [edi+edx+2053994217]
  0123b	c1 c2 0e	 rol	 edx, 14			; 0000000eH
  0123e	03 54 24 30	 add	 edx, DWORD PTR _b2$[esp+104]
  01242	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 339  : 	Subround(G, b2, c2, d2, e2, a2, X[15],  6, k8);

  01245	8b fe		 mov	 edi, esi
  01247	33 f9		 xor	 edi, ecx
  01249	23 fa		 and	 edi, edx
  0124b	33 fe		 xor	 edi, esi
  0124d	89 74 24 28	 mov	 DWORD PTR _e2$[esp+104], esi
  01251	8b 74 24 30	 mov	 esi, DWORD PTR _b2$[esp+104]
  01255	03 fb		 add	 edi, ebx
  01257	8d b4 37 e9 76
	6d 7a		 lea	 esi, DWORD PTR [edi+esi+2053994217]
  0125e	c1 c6 06	 rol	 esi, 6
  01261	03 74 24 20	 add	 esi, DWORD PTR _a2$[esp+104]
  01265	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  01268	89 4c 24 2c	 mov	 DWORD PTR _d2$[esp+104], ecx

; 340  : 	Subround(G, a2, b2, c2, d2, e2, X[ 0], 14, k8);

  0126c	8b f9		 mov	 edi, ecx
  0126e	33 fa		 xor	 edi, edx
  01270	23 fe		 and	 edi, esi
  01272	33 f9		 xor	 edi, ecx
  01274	03 fd		 add	 edi, ebp
  01276	8b 4c 24 20	 mov	 ecx, DWORD PTR _a2$[esp+104]
  0127a	8d 8c 0f e9 76
	6d 7a		 lea	 ecx, DWORD PTR [edi+ecx+2053994217]
  01281	c1 c1 0e	 rol	 ecx, 14			; 0000000eH
  01284	03 4c 24 28	 add	 ecx, DWORD PTR _e2$[esp+104]
  01288	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 341  : 	Subround(G, e2, a2, b2, c2, d2, X[ 5],  6, k8);

  0128b	8b fa		 mov	 edi, edx
  0128d	33 fe		 xor	 edi, esi
  0128f	23 f9		 and	 edi, ecx
  01291	33 fa		 xor	 edi, edx
  01293	03 7c 24 3c	 add	 edi, DWORD PTR tv5472[esp+104]
  01297	89 54 24 14	 mov	 DWORD PTR _c2$[esp+104], edx
  0129b	8b 54 24 28	 mov	 edx, DWORD PTR _e2$[esp+104]
  0129f	8d 94 17 e9 76
	6d 7a		 lea	 edx, DWORD PTR [edi+edx+2053994217]

; 342  : 	Subround(G, d2, e2, a2, b2, c2, X[12],  9, k8);

  012a6	8b 78 30	 mov	 edi, DWORD PTR [eax+48]
  012a9	89 7c 24 64	 mov	 DWORD PTR tv6988[esp+104], edi
  012ad	c1 c2 06	 rol	 edx, 6
  012b0	03 54 24 2c	 add	 edx, DWORD PTR _d2$[esp+104]
  012b4	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  012b7	8b fe		 mov	 edi, esi
  012b9	33 f9		 xor	 edi, ecx
  012bb	23 fa		 and	 edi, edx
  012bd	33 fe		 xor	 edi, esi
  012bf	03 7c 24 64	 add	 edi, DWORD PTR tv6988[esp+104]
  012c3	89 74 24 30	 mov	 DWORD PTR _b2$[esp+104], esi
  012c7	8b 74 24 2c	 mov	 esi, DWORD PTR _d2$[esp+104]
  012cb	8d b4 37 e9 76
	6d 7a		 lea	 esi, DWORD PTR [edi+esi+2053994217]
  012d2	c1 c6 09	 rol	 esi, 9
  012d5	03 74 24 14	 add	 esi, DWORD PTR _c2$[esp+104]
  012d9	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 343  : 	Subround(G, c2, d2, e2, a2, b2, X[ 2], 12, k8);

  012dc	8b fa		 mov	 edi, edx
  012de	33 f9		 xor	 edi, ecx
  012e0	23 fe		 and	 edi, esi
  012e2	33 f9		 xor	 edi, ecx
  012e4	03 7c 24 40	 add	 edi, DWORD PTR tv5430[esp+104]
  012e8	89 4c 24 20	 mov	 DWORD PTR _a2$[esp+104], ecx
  012ec	8b 4c 24 14	 mov	 ecx, DWORD PTR _c2$[esp+104]
  012f0	8d 8c 0f e9 76
	6d 7a		 lea	 ecx, DWORD PTR [edi+ecx+2053994217]
  012f7	c1 c1 0c	 rol	 ecx, 12			; 0000000cH
  012fa	03 4c 24 30	 add	 ecx, DWORD PTR _b2$[esp+104]
  012fe	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 344  : 	Subround(G, b2, c2, d2, e2, a2, X[13],  9, k8);

  01301	8b fa		 mov	 edi, edx
  01303	33 fe		 xor	 edi, esi
  01305	23 f9		 and	 edi, ecx
  01307	33 fa		 xor	 edi, edx
  01309	03 7c 24 44	 add	 edi, DWORD PTR tv5944[esp+104]
  0130d	89 54 24 28	 mov	 DWORD PTR _e2$[esp+104], edx
  01311	8b 54 24 30	 mov	 edx, DWORD PTR _b2$[esp+104]
  01315	8d 94 17 e9 76
	6d 7a		 lea	 edx, DWORD PTR [edi+edx+2053994217]
  0131c	c1 c2 09	 rol	 edx, 9
  0131f	03 54 24 20	 add	 edx, DWORD PTR _a2$[esp+104]
  01323	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 345  : 	Subround(G, a2, b2, c2, d2, e2, X[ 9], 12, k8);

  01326	8b fe		 mov	 edi, esi
  01328	33 f9		 xor	 edi, ecx
  0132a	23 fa		 and	 edi, edx
  0132c	33 fe		 xor	 edi, esi
  0132e	03 7c 24 54	 add	 edi, DWORD PTR tv5528[esp+104]

; 346  : 	Subround(G, e2, a2, b2, c2, d2, X[ 7],  5, k8);
; 347  : 	Subround(G, d2, e2, a2, b2, c2, X[10], 15, k8);

  01332	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  01335	89 74 24 2c	 mov	 DWORD PTR _d2$[esp+104], esi
  01339	8b 74 24 20	 mov	 esi, DWORD PTR _a2$[esp+104]
  0133d	8d b4 37 e9 76
	6d 7a		 lea	 esi, DWORD PTR [edi+esi+2053994217]
  01344	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  01347	03 74 24 28	 add	 esi, DWORD PTR _e2$[esp+104]
  0134b	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  0134e	8b f9		 mov	 edi, ecx
  01350	33 fa		 xor	 edi, edx
  01352	23 fe		 and	 edi, esi
  01354	33 f9		 xor	 edi, ecx
  01356	03 7c 24 38	 add	 edi, DWORD PTR tv5500[esp+104]
  0135a	89 4c 24 14	 mov	 DWORD PTR _c2$[esp+104], ecx
  0135e	8b 4c 24 28	 mov	 ecx, DWORD PTR _e2$[esp+104]
  01362	8d 8c 0f e9 76
	6d 7a		 lea	 ecx, DWORD PTR [edi+ecx+2053994217]
  01369	c1 c1 05	 rol	 ecx, 5
  0136c	03 4c 24 2c	 add	 ecx, DWORD PTR _d2$[esp+104]
  01370	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  01373	89 44 24 30	 mov	 DWORD PTR tv7046[esp+104], eax
  01377	8b fa		 mov	 edi, edx
  01379	33 fe		 xor	 edi, esi
  0137b	23 f9		 and	 edi, ecx
  0137d	33 fa		 xor	 edi, edx
  0137f	03 f8		 add	 edi, eax
  01381	8b 44 24 2c	 mov	 eax, DWORD PTR _d2$[esp+104]
  01385	8d bc 07 e9 76
	6d 7a		 lea	 edi, DWORD PTR [edi+eax+2053994217]
  0138c	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  0138f	03 7c 24 14	 add	 edi, DWORD PTR _c2$[esp+104]
  01393	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 348  : 	Subround(G, c2, d2, e2, a2, b2, X[14],  8, k8);

  01396	8b c1		 mov	 eax, ecx
  01398	33 c6		 xor	 eax, esi
  0139a	23 c7		 and	 eax, edi
  0139c	33 c6		 xor	 eax, esi
  0139e	03 44 24 50	 add	 eax, DWORD PTR tv5598[esp+104]
  013a2	89 74 24 20	 mov	 DWORD PTR _a2$[esp+104], esi
  013a6	8b 74 24 14	 mov	 esi, DWORD PTR _c2$[esp+104]
  013aa	8d b4 30 e9 76
	6d 7a		 lea	 esi, DWORD PTR [eax+esi+2053994217]
  013b1	c1 c6 08	 rol	 esi, 8
  013b4	03 f2		 add	 esi, edx
  013b6	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  013b9	8b c1		 mov	 eax, ecx
  013bb	33 cf		 xor	 ecx, edi

; 349  : 
; 350  : 	Subround(F, b2, c2, d2, e2, a2, X[12],  8, k9);

  013bd	33 ce		 xor	 ecx, esi
  013bf	03 4c 24 64	 add	 ecx, DWORD PTR tv6988[esp+104]
  013c3	03 ca		 add	 ecx, edx
  013c5	c1 c1 08	 rol	 ecx, 8
  013c8	03 4c 24 20	 add	 ecx, DWORD PTR _a2$[esp+104]
  013cc	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 351  : 	Subround(F, a2, b2, c2, d2, e2, X[15],  5, k9);

  013cf	8b d7		 mov	 edx, edi
  013d1	33 d6		 xor	 edx, esi
  013d3	33 d1		 xor	 edx, ecx
  013d5	03 d3		 add	 edx, ebx
  013d7	03 54 24 20	 add	 edx, DWORD PTR _a2$[esp+104]
  013db	c1 c2 05	 rol	 edx, 5
  013de	03 d0		 add	 edx, eax
  013e0	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  013e3	8b de		 mov	 ebx, esi
  013e5	33 f1		 xor	 esi, ecx

; 352  : 	Subround(F, e2, a2, b2, c2, d2, X[10], 12, k9);

  013e7	33 f2		 xor	 esi, edx
  013e9	03 74 24 30	 add	 esi, DWORD PTR tv7046[esp+104]
  013ed	03 f0		 add	 esi, eax
  013ef	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  013f2	03 f7		 add	 esi, edi
  013f4	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 353  : 	Subround(F, d2, e2, a2, b2, c2, X[ 4],  9, k9);

  013f7	8b c6		 mov	 eax, esi
  013f9	33 c1		 xor	 eax, ecx
  013fb	33 c2		 xor	 eax, edx
  013fd	03 44 24 58	 add	 eax, DWORD PTR tv5458[esp+104]
  01401	03 c7		 add	 eax, edi
  01403	c1 c0 09	 rol	 eax, 9
  01406	03 c3		 add	 eax, ebx
  01408	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 354  : 	Subround(F, c2, d2, e2, a2, b2, X[ 1], 12, k9);

  0140b	8b fe		 mov	 edi, esi
  0140d	33 f8		 xor	 edi, eax
  0140f	33 fa		 xor	 edi, edx
  01411	03 7c 24 5c	 add	 edi, DWORD PTR tv5414[esp+104]
  01415	03 fb		 add	 edi, ebx
  01417	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  0141a	03 f9		 add	 edi, ecx
  0141c	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 355  : 	Subround(F, b2, c2, d2, e2, a2, X[ 5],  5, k9);

  0141f	8b de		 mov	 ebx, esi
  01421	33 d8		 xor	 ebx, eax
  01423	33 df		 xor	 ebx, edi
  01425	03 5c 24 3c	 add	 ebx, DWORD PTR tv5472[esp+104]
  01429	03 d9		 add	 ebx, ecx
  0142b	c1 c3 05	 rol	 ebx, 5
  0142e	03 da		 add	 ebx, edx
  01430	c1 c0 0a	 rol	 eax, 10			; 0000000aH

; 356  : 	Subround(F, a2, b2, c2, d2, e2, X[ 8], 14, k9);

  01433	8b c8		 mov	 ecx, eax
  01435	33 cf		 xor	 ecx, edi
  01437	33 cb		 xor	 ecx, ebx
  01439	03 4c 24 34	 add	 ecx, DWORD PTR tv5514[esp+104]
  0143d	03 ca		 add	 ecx, edx
  0143f	c1 c1 0e	 rol	 ecx, 14			; 0000000eH
  01442	03 ce		 add	 ecx, esi
  01444	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 357  : 	Subround(F, e2, a2, b2, c2, d2, X[ 7],  6, k9);

  01447	8b d7		 mov	 edx, edi
  01449	33 d3		 xor	 edx, ebx
  0144b	33 d1		 xor	 edx, ecx
  0144d	03 54 24 38	 add	 edx, DWORD PTR tv5500[esp+104]
  01451	03 d6		 add	 edx, esi
  01453	c1 c2 06	 rol	 edx, 6
  01456	03 d0		 add	 edx, eax
  01458	c1 c3 0a	 rol	 ebx, 10			; 0000000aH

; 358  : 	Subround(F, d2, e2, a2, b2, c2, X[ 6],  8, k9);

  0145b	8b f2		 mov	 esi, edx
  0145d	33 f3		 xor	 esi, ebx
  0145f	33 f1		 xor	 esi, ecx
  01461	03 74 24 4c	 add	 esi, DWORD PTR tv5486[esp+104]
  01465	03 f0		 add	 esi, eax
  01467	c1 c6 08	 rol	 esi, 8
  0146a	03 f7		 add	 esi, edi
  0146c	c1 c1 0a	 rol	 ecx, 10			; 0000000aH

; 359  : 	Subround(F, c2, d2, e2, a2, b2, X[ 2], 13, k9);

  0146f	8b c2		 mov	 eax, edx
  01471	33 c6		 xor	 eax, esi
  01473	33 c1		 xor	 eax, ecx
  01475	03 44 24 40	 add	 eax, DWORD PTR tv5430[esp+104]
  01479	03 c7		 add	 eax, edi
  0147b	c1 c0 0d	 rol	 eax, 13			; 0000000dH
  0147e	03 c3		 add	 eax, ebx
  01480	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 360  : 	Subround(F, b2, c2, d2, e2, a2, X[13],  6, k9);

  01483	8b fa		 mov	 edi, edx
  01485	33 fe		 xor	 edi, esi
  01487	33 f8		 xor	 edi, eax
  01489	03 7c 24 44	 add	 edi, DWORD PTR tv5944[esp+104]
  0148d	03 fb		 add	 edi, ebx
  0148f	c1 c7 06	 rol	 edi, 6
  01492	03 f9		 add	 edi, ecx
  01494	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 361  : 	Subround(F, a2, b2, c2, d2, e2, X[14],  5, k9);

  01497	8b de		 mov	 ebx, esi
  01499	33 d8		 xor	 ebx, eax
  0149b	33 df		 xor	 ebx, edi
  0149d	03 5c 24 50	 add	 ebx, DWORD PTR tv5598[esp+104]
  014a1	03 d9		 add	 ebx, ecx
  014a3	c1 c3 05	 rol	 ebx, 5
  014a6	03 da		 add	 ebx, edx
  014a8	c1 c0 0a	 rol	 eax, 10			; 0000000aH

; 362  : 	Subround(F, e2, a2, b2, c2, d2, X[ 0], 15, k9);

  014ab	8b c8		 mov	 ecx, eax
  014ad	33 cf		 xor	 ecx, edi
  014af	33 cb		 xor	 ecx, ebx
  014b1	03 cd		 add	 ecx, ebp
  014b3	03 ca		 add	 ecx, edx
  014b5	c1 c1 0f	 rol	 ecx, 15			; 0000000fH
  014b8	03 ce		 add	 ecx, esi
  014ba	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  014bd	89 44 24 14	 mov	 DWORD PTR _c2$[esp+104], eax

; 363  : 	Subround(F, d2, e2, a2, b2, c2, X[ 3], 13, k9);

  014c1	8b c1		 mov	 eax, ecx
  014c3	33 c7		 xor	 eax, edi
  014c5	33 c3		 xor	 eax, ebx
  014c7	03 44 24 48	 add	 eax, DWORD PTR tv5444[esp+104]

; 364  : 	Subround(F, c2, d2, e2, a2, b2, X[ 9], 11, k9);

  014cb	8b d1		 mov	 edx, ecx
  014cd	03 c6		 add	 eax, esi
  014cf	8b 74 24 14	 mov	 esi, DWORD PTR _c2$[esp+104]
  014d3	c1 c0 0d	 rol	 eax, 13			; 0000000dH
  014d6	03 c6		 add	 eax, esi
  014d8	33 d0		 xor	 edx, eax
  014da	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  014dd	33 d3		 xor	 edx, ebx
  014df	03 54 24 54	 add	 edx, DWORD PTR tv5528[esp+104]

; 365  : 	Subround(F, b2, c2, d2, e2, a2, X[11], 11, k9);
; 366  : 
; 367  : 	c1        = digest[1] + c1 + d2;

  014e3	8b 6c 24 1c	 mov	 ebp, DWORD PTR _c1$[esp+104]
  014e7	03 d6		 add	 edx, esi
  014e9	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  014ec	03 d7		 add	 edx, edi
  014ee	c1 c1 0a	 rol	 ecx, 10			; 0000000aH
  014f1	8b f1		 mov	 esi, ecx
  014f3	33 f0		 xor	 esi, eax
  014f5	33 f2		 xor	 esi, edx
  014f7	03 74 24 60	 add	 esi, DWORD PTR tv5556[esp+104]
  014fb	03 f7		 add	 esi, edi
  014fd	8b 7c 24 6c	 mov	 edi, DWORD PTR _digest$[esp+100]
  01501	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  01504	03 f3		 add	 esi, ebx
  01506	c1 c0 0a	 rol	 eax, 10			; 0000000aH
  01509	03 47 04	 add	 eax, DWORD PTR [edi+4]
  0150c	8b 7c 24 10	 mov	 edi, DWORD PTR _d1$[esp+104]
  01510	03 e8		 add	 ebp, eax
  01512	8b 44 24 6c	 mov	 eax, DWORD PTR _digest$[esp+100]
  01516	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  01519	03 78 08	 add	 edi, DWORD PTR [eax+8]

; 368  : 	digest[1] = digest[2] + d1 + e2;

  0151c	03 f9		 add	 edi, ecx

; 369  : 	digest[2] = digest[3] + e1 + a2;

  0151e	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  01521	89 78 04	 mov	 DWORD PTR [eax+4], edi
  01524	8b 7c 24 24	 mov	 edi, DWORD PTR _e1$[esp+104]
  01528	03 cf		 add	 ecx, edi
  0152a	03 cb		 add	 ecx, ebx
  0152c	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 370  : 	digest[3] = digest[4] + a1 + b2;

  0152f	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  01532	03 ce		 add	 ecx, esi
  01534	03 4c 24 70	 add	 ecx, DWORD PTR _a1$[esp+100]
  01538	5f		 pop	 edi
  01539	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 371  : 	digest[4] = digest[0] + b1 + c2;

  0153c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0153e	03 ca		 add	 ecx, edx
  01540	03 4c 24 14	 add	 ecx, DWORD PTR _b1$[esp+100]
  01544	5e		 pop	 esi

; 372  : 	digest[0] = c1;

  01545	89 28		 mov	 DWORD PTR [eax], ebp
  01547	5d		 pop	 ebp
  01548	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0154b	5b		 pop	 ebx

; 373  : }

  0154c	83 c4 58	 add	 esp, 88			; 00000058H
  0154f	c3		 ret	 0
_RMD160Transform ENDP
_TEXT	ENDS
PUBLIC	_RMD160Update
EXTRN	_memcpy:PROC
EXTRN	__allmul:PROC
; Function compile flags: /Ogtpy
;	COMDAT _RMD160Update
_TEXT	SEGMENT
_have$ = -16						; size = 8
_need$ = -8						; size = 8
_ctx$ = 8						; size = 4
_input$ = 12						; size = 4
_lenArg$ = 16						; size = 4
_RMD160Update PROC					; COMDAT

; 69   : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	55		 push	 ebp

; 70   : #ifndef TC_WINDOWS_BOOT
; 71   : 	uint64 len = lenArg, have, need;

  00005	8b 6c 24 24	 mov	 ebp, DWORD PTR _lenArg$[esp+20]
  00009	56		 push	 esi

; 72   : #else
; 73   : 	uint16 len = (uint16) lenArg, have, need;
; 74   : #endif
; 75   : 
; 76   : 	/* Check how many bytes we already have and how many more we need. */
; 77   : 	have = ((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  0000a	8b 74 24 20	 mov	 esi, DWORD PTR _ctx$[esp+24]
  0000e	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00011	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00014	0f ac c8 03	 shrd	 eax, ecx, 3
  00018	57		 push	 edi
  00019	33 c9		 xor	 ecx, ecx
  0001b	83 e0 3f	 and	 eax, 63			; 0000003fH

; 78   : 	need = RIPEMD160_BLOCK_LENGTH - have;
; 79   : 
; 80   : 	/* Update bitcount */
; 81   : 	ctx->count += len << 3;

  0001e	51		 push	 ecx
  0001f	33 ff		 xor	 edi, edi
  00021	89 44 24 14	 mov	 DWORD PTR _have$[esp+36], eax
  00025	bb 40 00 00 00	 mov	 ebx, 64			; 00000040H
  0002a	2b d8		 sub	 ebx, eax
  0002c	6a 08		 push	 8
  0002e	8b c1		 mov	 eax, ecx
  00030	57		 push	 edi
  00031	1b c1		 sbb	 eax, ecx
  00033	55		 push	 ebp
  00034	89 44 24 2c	 mov	 DWORD PTR _need$[esp+52], eax
  00038	e8 00 00 00 00	 call	 __allmul
  0003d	03 46 18	 add	 eax, DWORD PTR [esi+24]
  00040	13 56 1c	 adc	 edx, DWORD PTR [esi+28]
  00043	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00046	89 56 1c	 mov	 DWORD PTR [esi+28], edx

; 82   : 
; 83   : 	if (len >= need) {

  00049	3b 7c 24 1c	 cmp	 edi, DWORD PTR _need$[esp+36]
  0004d	72 73		 jb	 SHORT $LN15@RMD160Upda
  0004f	77 04		 ja	 SHORT $LN10@RMD160Upda
  00051	3b eb		 cmp	 ebp, ebx
  00053	72 6d		 jb	 SHORT $LN15@RMD160Upda
$LN10@RMD160Upda:

; 84   : 		if (have != 0) {

  00055	8b 4c 24 10	 mov	 ecx, DWORD PTR _have$[esp+32]
  00059	8b d1		 mov	 edx, ecx
  0005b	33 c0		 xor	 eax, eax
  0005d	0b d0		 or	 edx, eax
  0005f	74 31		 je	 SHORT $LN14@RMD160Upda

; 85   : 			memcpy (ctx->buffer + have, input, (size_t) need);

  00061	8b 44 24 28	 mov	 eax, DWORD PTR _input$[esp+28]
  00065	53		 push	 ebx
  00066	50		 push	 eax
  00067	8d 4c 31 20	 lea	 ecx, DWORD PTR [ecx+esi+32]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 _memcpy

; 86   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) ctx->buffer);

  00071	8d 56 20	 lea	 edx, DWORD PTR [esi+32]
  00074	52		 push	 edx
  00075	56		 push	 esi
  00076	e8 00 00 00 00	 call	 _RMD160Transform

; 87   : 			input += need;

  0007b	01 5c 24 3c	 add	 DWORD PTR _input$[esp+48], ebx
  0007f	83 c4 14	 add	 esp, 20			; 00000014H

; 88   : 			len -= need;

  00082	2b eb		 sub	 ebp, ebx
  00084	1b 7c 24 1c	 sbb	 edi, DWORD PTR _need$[esp+36]

; 89   : 			have = 0;

  00088	33 c0		 xor	 eax, eax
  0008a	89 44 24 10	 mov	 DWORD PTR _have$[esp+32], eax
  0008e	89 44 24 14	 mov	 DWORD PTR _have$[esp+36], eax
$LN14@RMD160Upda:

; 90   : 		}
; 91   : 
; 92   : 		/* Process data in RIPEMD160_BLOCK_LENGTH-byte chunks. */
; 93   : 		while (len >= RIPEMD160_BLOCK_LENGTH) {

  00092	85 ff		 test	 edi, edi
  00094	77 05		 ja	 SHORT $LN16@RMD160Upda
  00096	83 fd 40	 cmp	 ebp, 64			; 00000040H
  00099	72 27		 jb	 SHORT $LN15@RMD160Upda
$LN16@RMD160Upda:
  0009b	bb 40 00 00 00	 mov	 ebx, 64			; 00000040H
$LL3@RMD160Upda:

; 94   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) input);

  000a0	8b 44 24 28	 mov	 eax, DWORD PTR _input$[esp+28]
  000a4	50		 push	 eax
  000a5	56		 push	 esi
  000a6	e8 00 00 00 00	 call	 _RMD160Transform

; 95   : 			input += RIPEMD160_BLOCK_LENGTH;

  000ab	01 5c 24 30	 add	 DWORD PTR _input$[esp+36], ebx
  000af	83 c4 08	 add	 esp, 8

; 96   : 			len -= RIPEMD160_BLOCK_LENGTH;

  000b2	83 c5 c0	 add	 ebp, -64		; ffffffc0H
  000b5	83 d7 ff	 adc	 edi, -1
  000b8	85 ff		 test	 edi, edi
  000ba	77 e4		 ja	 SHORT $LL3@RMD160Upda

; 90   : 		}
; 91   : 
; 92   : 		/* Process data in RIPEMD160_BLOCK_LENGTH-byte chunks. */
; 93   : 		while (len >= RIPEMD160_BLOCK_LENGTH) {

  000bc	72 04		 jb	 SHORT $LN15@RMD160Upda
  000be	3b eb		 cmp	 ebp, ebx
  000c0	73 de		 jae	 SHORT $LL3@RMD160Upda
$LN15@RMD160Upda:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	/* Handle any remaining bytes of data. */
; 101  : 	if (len != 0)

  000c2	8b cd		 mov	 ecx, ebp
  000c4	0b cf		 or	 ecx, edi
  000c6	74 17		 je	 SHORT $LN1@RMD160Upda

; 102  : 		memcpy (ctx->buffer + have, input, (size_t) len);

  000c8	8b 54 24 28	 mov	 edx, DWORD PTR _input$[esp+28]
  000cc	8b 44 24 10	 mov	 eax, DWORD PTR _have$[esp+32]
  000d0	55		 push	 ebp
  000d1	52		 push	 edx
  000d2	8d 4c 30 20	 lea	 ecx, DWORD PTR [eax+esi+32]
  000d6	51		 push	 ecx
  000d7	e8 00 00 00 00	 call	 _memcpy
  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@RMD160Upda:
  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	5d		 pop	 ebp
  000e2	5b		 pop	 ebx

; 103  : }

  000e3	83 c4 10	 add	 esp, 16			; 00000010H
  000e6	c3		 ret	 0
_RMD160Update ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogtpy
;	COMDAT _RMD160Pad
_TEXT	SEGMENT
tv162 = -20						; size = 8
_count$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_RMD160Pad PROC						; COMDAT
; _ctx$ = esi

; 110  : {

  00000	83 ec 14	 sub	 esp, 20			; 00000014H
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	33 c4		 xor	 eax, esp
  0000a	89 44 24 10	 mov	 DWORD PTR __$ArrayPad$[esp+20], eax

; 111  : 	byte count[8];
; 112  : 	uint32 padlen;
; 113  : 
; 114  : 	/* Convert count to 8 bytes in little endian order. */
; 115  : 
; 116  : #ifndef TC_WINDOWS_BOOT
; 117  : 	PUT_64BIT_LE(count, ctx->count);

  0000e	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00011	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00014	8b d0		 mov	 edx, eax
  00016	c1 ea 18	 shr	 edx, 24			; 00000018H
  00019	88 54 24 0f	 mov	 BYTE PTR _count$[esp+27], dl
  0001d	8b d0		 mov	 edx, eax
  0001f	c1 ea 10	 shr	 edx, 16			; 00000010H
  00022	88 54 24 0e	 mov	 BYTE PTR _count$[esp+26], dl
  00026	8b d0		 mov	 edx, eax
  00028	c1 ea 08	 shr	 edx, 8
  0002b	88 54 24 0d	 mov	 BYTE PTR _count$[esp+25], dl
  0002f	57		 push	 edi
  00030	0f b6 d0	 movzx	 edx, al
  00033	88 54 24 10	 mov	 BYTE PTR _count$[esp+28], dl
  00037	8b f8		 mov	 edi, eax
  00039	8b d1		 mov	 edx, ecx
  0003b	0f ac fa 18	 shrd	 edx, edi, 24
  0003f	c1 ef 18	 shr	 edi, 24			; 00000018H
  00042	88 54 24 0f	 mov	 BYTE PTR _count$[esp+27], dl
  00046	8b f8		 mov	 edi, eax
  00048	8b d1		 mov	 edx, ecx
  0004a	0f ac fa 10	 shrd	 edx, edi, 16
  0004e	c1 ef 10	 shr	 edi, 16			; 00000010H
  00051	88 54 24 0e	 mov	 BYTE PTR _count$[esp+26], dl
  00055	8b f8		 mov	 edi, eax
  00057	8b d1		 mov	 edx, ecx
  00059	0f ac fa 08	 shrd	 edx, edi, 8
  0005d	88 54 24 0d	 mov	 BYTE PTR _count$[esp+25], dl
  00061	0f b6 d1	 movzx	 edx, cl

; 118  : #else
; 119  : 	*(uint32 *) (count + 4) = 0;
; 120  : 	*(uint16 *) (count + 2) = 0;
; 121  : 	*(uint16 *) (count + 0) = ctx->count;
; 122  : #endif
; 123  : 
; 124  : 	/* Pad out to 56 mod 64. */
; 125  : 	padlen = RIPEMD160_BLOCK_LENGTH -
; 126  : 		(uint32)((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  00064	0f ac c1 03	 shrd	 ecx, eax, 3
  00068	89 44 24 08	 mov	 DWORD PTR tv162[esp+28], eax
  0006c	c1 e8 03	 shr	 eax, 3
  0006f	83 e1 3f	 and	 ecx, 63			; 0000003fH
  00072	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00077	c1 ef 08	 shr	 edi, 8
  0007a	2b c1		 sub	 eax, ecx
  0007c	88 54 24 0c	 mov	 BYTE PTR _count$[esp+24], dl
  00080	5f		 pop	 edi

; 127  : 	if (padlen < 1 + 8)

  00081	83 f8 09	 cmp	 eax, 9
  00084	73 03		 jae	 SHORT $LN1@RMD160Pad

; 128  : 		padlen += RIPEMD160_BLOCK_LENGTH;

  00086	83 c0 40	 add	 eax, 64			; 00000040H
$LN1@RMD160Pad:

; 129  : 	RMD160Update(ctx, PADDING, padlen - 8);            /* padlen - 8 <= 64 */

  00089	83 c0 f8	 add	 eax, -8			; fffffff8H
  0008c	50		 push	 eax
  0008d	68 00 00 00 00	 push	 OFFSET _PADDING
  00092	56		 push	 esi
  00093	e8 00 00 00 00	 call	 _RMD160Update

; 130  : 	RMD160Update(ctx, count, 8);

  00098	6a 08		 push	 8
  0009a	8d 44 24 18	 lea	 eax, DWORD PTR _count$[esp+36]
  0009e	50		 push	 eax
  0009f	56		 push	 esi
  000a0	e8 00 00 00 00	 call	 _RMD160Update

; 131  : }

  000a5	8b 4c 24 28	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+44]
  000a9	83 c4 18	 add	 esp, 24			; 00000018H
  000ac	33 cc		 xor	 ecx, esp
  000ae	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b3	83 c4 14	 add	 esp, 20			; 00000014H
  000b6	c3		 ret	 0
_RMD160Pad ENDP
_TEXT	ENDS
PUBLIC	_RMD160Final
EXTRN	_memset:PROC
; Function compile flags: /Ogtpy
;	COMDAT _RMD160Final
_TEXT	SEGMENT
_digest$ = 8						; size = 4
_ctx$ = 12						; size = 4
_RMD160Final PROC					; COMDAT

; 137  : {

  00000	56		 push	 esi

; 138  : 	int i;
; 139  : 
; 140  : 	RMD160Pad(ctx);

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR _ctx$[esp]
  00005	e8 00 00 00 00	 call	 _RMD160Pad

; 141  : 	if (digest) {

  0000a	8b 44 24 08	 mov	 eax, DWORD PTR _digest$[esp]
  0000e	85 c0		 test	 eax, eax
  00010	0f 84 a0 00 00
	00		 je	 $LN7@RMD160Fina

; 142  : 		for (i = 0; i < 5; i++)
; 143  : 			PUT_32BIT_LE(digest + i * 4, ctx->state[i]);

  00016	0f b6 4e 03	 movzx	 ecx, BYTE PTR [esi+3]
  0001a	88 48 03	 mov	 BYTE PTR [eax+3], cl
  0001d	0f b6 56 02	 movzx	 edx, BYTE PTR [esi+2]
  00021	88 50 02	 mov	 BYTE PTR [eax+2], dl
  00024	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00026	c1 e9 08	 shr	 ecx, 8
  00029	88 48 01	 mov	 BYTE PTR [eax+1], cl
  0002c	0f b6 16	 movzx	 edx, BYTE PTR [esi]
  0002f	88 10		 mov	 BYTE PTR [eax], dl
  00031	0f b6 4e 07	 movzx	 ecx, BYTE PTR [esi+7]
  00035	88 48 07	 mov	 BYTE PTR [eax+7], cl
  00038	0f b6 56 06	 movzx	 edx, BYTE PTR [esi+6]
  0003c	88 50 06	 mov	 BYTE PTR [eax+6], dl
  0003f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00042	c1 e9 08	 shr	 ecx, 8
  00045	88 48 05	 mov	 BYTE PTR [eax+5], cl
  00048	0f b6 56 04	 movzx	 edx, BYTE PTR [esi+4]
  0004c	88 50 04	 mov	 BYTE PTR [eax+4], dl
  0004f	0f b6 4e 0b	 movzx	 ecx, BYTE PTR [esi+11]
  00053	88 48 0b	 mov	 BYTE PTR [eax+11], cl
  00056	0f b6 56 0a	 movzx	 edx, BYTE PTR [esi+10]
  0005a	88 50 0a	 mov	 BYTE PTR [eax+10], dl
  0005d	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00060	c1 e9 08	 shr	 ecx, 8
  00063	88 48 09	 mov	 BYTE PTR [eax+9], cl
  00066	0f b6 56 08	 movzx	 edx, BYTE PTR [esi+8]
  0006a	88 50 08	 mov	 BYTE PTR [eax+8], dl
  0006d	0f b6 4e 0f	 movzx	 ecx, BYTE PTR [esi+15]
  00071	88 48 0f	 mov	 BYTE PTR [eax+15], cl
  00074	0f b6 56 0e	 movzx	 edx, BYTE PTR [esi+14]
  00078	88 50 0e	 mov	 BYTE PTR [eax+14], dl
  0007b	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  0007e	c1 e9 08	 shr	 ecx, 8
  00081	88 48 0d	 mov	 BYTE PTR [eax+13], cl
  00084	0f b6 56 0c	 movzx	 edx, BYTE PTR [esi+12]
  00088	88 50 0c	 mov	 BYTE PTR [eax+12], dl
  0008b	0f b6 4e 13	 movzx	 ecx, BYTE PTR [esi+19]
  0008f	88 48 13	 mov	 BYTE PTR [eax+19], cl
  00092	0f b6 56 12	 movzx	 edx, BYTE PTR [esi+18]
  00096	88 50 12	 mov	 BYTE PTR [eax+18], dl
  00099	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  0009c	c1 e9 08	 shr	 ecx, 8
  0009f	88 48 11	 mov	 BYTE PTR [eax+17], cl
  000a2	0f b6 56 10	 movzx	 edx, BYTE PTR [esi+16]

; 144  : 		memset (ctx, 0, sizeof(*ctx));

  000a6	6a 60		 push	 96			; 00000060H
  000a8	6a 00		 push	 0
  000aa	56		 push	 esi
  000ab	88 50 10	 mov	 BYTE PTR [eax+16], dl
  000ae	e8 00 00 00 00	 call	 _memset
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@RMD160Fina:
  000b6	5e		 pop	 esi

; 145  : 	}
; 146  : }

  000b7	c3		 ret	 0
_RMD160Final ENDP
_TEXT	ENDS
END
