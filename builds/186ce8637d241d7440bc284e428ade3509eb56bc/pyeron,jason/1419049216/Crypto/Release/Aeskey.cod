; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	c:\home\public\Desktop\projects\cipherShed\src\Crypto\Aeskey.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_aes_encrypt_key256
EXTRN	_t_rc:BYTE
EXTRN	_t_fl:BYTE
; Function compile flags: /Ogtpy
; File c:\home\public\desktop\projects\ciphershed\src\crypto\aeskey.c
;	COMDAT _aes_encrypt_key256
_TEXT	SEGMENT
_ss$ = -32						; size = 32
tv1222 = 8						; size = 4
tv1221 = 8						; size = 4
tv1220 = 8						; size = 4
tv1219 = 8						; size = 4
tv1218 = 8						; size = 4
tv1217 = 8						; size = 4
tv1216 = 8						; size = 4
tv1215 = 8						; size = 4
tv1214 = 8						; size = 4
tv1213 = 8						; size = 4
tv1212 = 8						; size = 4
tv1211 = 8						; size = 4
tv1210 = 8						; size = 4
_key$ = 8						; size = 4
_cx$ = 12						; size = 4
_aes_encrypt_key256 PROC				; COMDAT

; 175  : {   uint_32t    ss[8];

  00000	83 ec 20	 sub	 esp, 32			; 00000020H

; 176  : 
; 177  :     cx->ks[0] = ss[0] = word_in(key, 0);

  00003	8b 44 24 28	 mov	 eax, DWORD PTR _cx$[esp+28]
  00007	8b 4c 24 24	 mov	 ecx, DWORD PTR _key$[esp+28]
  0000b	53		 push	 ebx
  0000c	55		 push	 ebp
  0000d	56		 push	 esi
  0000e	8b 31		 mov	 esi, DWORD PTR [ecx]
  00010	89 30		 mov	 DWORD PTR [eax], esi
  00012	57		 push	 edi

; 178  :     cx->ks[1] = ss[1] = word_in(key, 1);

  00013	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  00016	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 179  :     cx->ks[2] = ss[2] = word_in(key, 2);

  00019	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  0001c	89 50 08	 mov	 DWORD PTR [eax+8], edx
  0001f	89 54 24 18	 mov	 DWORD PTR _ss$[esp+56], edx

; 180  :     cx->ks[3] = ss[3] = word_in(key, 3);

  00023	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00026	89 50 0c	 mov	 DWORD PTR [eax+12], edx

; 181  :     cx->ks[4] = ss[4] = word_in(key, 4);

  00029	8b 59 10	 mov	 ebx, DWORD PTR [ecx+16]
  0002c	89 58 10	 mov	 DWORD PTR [eax+16], ebx
  0002f	89 5c 24 20	 mov	 DWORD PTR _ss$[esp+64], ebx

; 182  :     cx->ks[5] = ss[5] = word_in(key, 5);

  00033	8b 59 14	 mov	 ebx, DWORD PTR [ecx+20]
  00036	89 58 14	 mov	 DWORD PTR [eax+20], ebx
  00039	89 5c 24 24	 mov	 DWORD PTR _ss$[esp+68], ebx

; 183  :     cx->ks[6] = ss[6] = word_in(key, 6);

  0003d	8b 59 18	 mov	 ebx, DWORD PTR [ecx+24]
  00040	89 58 18	 mov	 DWORD PTR [eax+24], ebx

; 184  :     cx->ks[7] = ss[7] = word_in(key, 7);

  00043	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00046	89 5c 24 28	 mov	 DWORD PTR _ss$[esp+72], ebx
  0004a	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 185  : 
; 186  : #if ENC_UNROLL == NONE
; 187  :     {   uint_32t i;
; 188  :         for(i = 0; i < 6; ++i)
; 189  :             ke8(cx->ks,  i);
; 190  :     }
; 191  : #else
; 192  :     ke8(cx->ks, 0); ke8(cx->ks, 1);

  0004d	89 54 24 34	 mov	 DWORD PTR tv1222[esp+44], edx
  00051	8b d1		 mov	 edx, ecx
  00053	8b d9		 mov	 ebx, ecx
  00055	c1 eb 18	 shr	 ebx, 24			; 00000018H
  00058	8b 1c 9d 00 08
	00 00		 mov	 ebx, DWORD PTR _t_fl[ebx*4+2048]
  0005f	c1 ea 10	 shr	 edx, 16			; 00000010H
  00062	0f b6 ea	 movzx	 ebp, dl
  00065	33 1c ad 00 04
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+1024]
  0006c	8b d1		 mov	 edx, ecx
  0006e	c1 ea 08	 shr	 edx, 8
  00071	0f b6 ea	 movzx	 ebp, dl
  00074	33 1c ad 00 00
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4]
  0007b	8b 54 24 34	 mov	 edx, DWORD PTR tv1222[esp+44]
  0007f	0f b6 e9	 movzx	 ebp, cl
  00082	33 1c ad 00 0c
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+3072]
  00089	89 4c 24 34	 mov	 DWORD PTR tv1221[esp+44], ecx
  0008d	33 1d 00 00 00
	00		 xor	 ebx, DWORD PTR _t_rc
  00093	33 f3		 xor	 esi, ebx
  00095	8b 5c 24 18	 mov	 ebx, DWORD PTR _ss$[esp+56]
  00099	33 fe		 xor	 edi, esi
  0009b	33 df		 xor	 ebx, edi
  0009d	33 d3		 xor	 edx, ebx
  0009f	89 58 28	 mov	 DWORD PTR [eax+40], ebx
  000a2	89 5c 24 18	 mov	 DWORD PTR _ss$[esp+56], ebx
  000a6	8b ca		 mov	 ecx, edx
  000a8	c1 e9 10	 shr	 ecx, 16			; 00000010H
  000ab	0f b6 e9	 movzx	 ebp, cl
  000ae	89 70 20	 mov	 DWORD PTR [eax+32], esi
  000b1	89 78 24	 mov	 DWORD PTR [eax+36], edi
  000b4	89 50 2c	 mov	 DWORD PTR [eax+44], edx
  000b7	8b da		 mov	 ebx, edx
  000b9	c1 eb 18	 shr	 ebx, 24			; 00000018H
  000bc	8b 0c 9d 00 0c
	00 00		 mov	 ecx, DWORD PTR _t_fl[ebx*4+3072]
  000c3	33 0c ad 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebp*4+2048]
  000ca	8b 6c 24 24	 mov	 ebp, DWORD PTR _ss$[esp+68]
  000ce	8b da		 mov	 ebx, edx
  000d0	c1 eb 08	 shr	 ebx, 8
  000d3	0f b6 db	 movzx	 ebx, bl
  000d6	33 0c 9d 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4+1024]
  000dd	0f b6 da	 movzx	 ebx, dl
  000e0	33 0c 9d 00 00
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4]
  000e7	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+64]
  000eb	33 d9		 xor	 ebx, ecx
  000ed	8b 4c 24 34	 mov	 ecx, DWORD PTR tv1221[esp+44]
  000f1	33 eb		 xor	 ebp, ebx
  000f3	89 5c 24 20	 mov	 DWORD PTR _ss$[esp+64], ebx
  000f7	89 58 30	 mov	 DWORD PTR [eax+48], ebx
  000fa	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+72]
  000fe	33 dd		 xor	 ebx, ebp
  00100	33 cb		 xor	 ecx, ebx
  00102	89 6c 24 24	 mov	 DWORD PTR _ss$[esp+68], ebp
  00106	89 68 34	 mov	 DWORD PTR [eax+52], ebp
  00109	89 5c 24 28	 mov	 DWORD PTR _ss$[esp+72], ebx
  0010d	89 58 38	 mov	 DWORD PTR [eax+56], ebx
  00110	89 48 3c	 mov	 DWORD PTR [eax+60], ecx
  00113	89 54 24 34	 mov	 DWORD PTR tv1220[esp+44], edx
  00117	8b d1		 mov	 edx, ecx
  00119	c1 ea 10	 shr	 edx, 16			; 00000010H
  0011c	0f b6 ea	 movzx	 ebp, dl
  0011f	8b d9		 mov	 ebx, ecx
  00121	c1 eb 18	 shr	 ebx, 24			; 00000018H
  00124	8b 1c 9d 00 08
	00 00		 mov	 ebx, DWORD PTR _t_fl[ebx*4+2048]
  0012b	33 1c ad 00 04
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+1024]
  00132	8b d1		 mov	 edx, ecx
  00134	c1 ea 08	 shr	 edx, 8
  00137	0f b6 ea	 movzx	 ebp, dl
  0013a	33 1c ad 00 00
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4]
  00141	8b 54 24 34	 mov	 edx, DWORD PTR tv1220[esp+44]
  00145	0f b6 e9	 movzx	 ebp, cl
  00148	33 1c ad 00 0c
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+3072]
  0014f	89 4c 24 34	 mov	 DWORD PTR tv1219[esp+44], ecx
  00153	33 1d 04 00 00
	00		 xor	 ebx, DWORD PTR _t_rc+4
  00159	33 f3		 xor	 esi, ebx
  0015b	8b 5c 24 18	 mov	 ebx, DWORD PTR _ss$[esp+56]
  0015f	33 fe		 xor	 edi, esi
  00161	33 df		 xor	 ebx, edi
  00163	33 d3		 xor	 edx, ebx
  00165	89 58 48	 mov	 DWORD PTR [eax+72], ebx
  00168	89 5c 24 18	 mov	 DWORD PTR _ss$[esp+56], ebx
  0016c	89 50 4c	 mov	 DWORD PTR [eax+76], edx
  0016f	8b ca		 mov	 ecx, edx
  00171	89 70 40	 mov	 DWORD PTR [eax+64], esi
  00174	89 78 44	 mov	 DWORD PTR [eax+68], edi
  00177	8b da		 mov	 ebx, edx
  00179	c1 eb 18	 shr	 ebx, 24			; 00000018H
  0017c	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0017f	0f b6 e9	 movzx	 ebp, cl
  00182	8b 0c 9d 00 0c
	00 00		 mov	 ecx, DWORD PTR _t_fl[ebx*4+3072]
  00189	33 0c ad 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebp*4+2048]
  00190	8b 6c 24 24	 mov	 ebp, DWORD PTR _ss$[esp+68]
  00194	8b da		 mov	 ebx, edx
  00196	c1 eb 08	 shr	 ebx, 8
  00199	0f b6 db	 movzx	 ebx, bl
  0019c	33 0c 9d 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4+1024]
  001a3	0f b6 da	 movzx	 ebx, dl
  001a6	33 0c 9d 00 00
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4]
  001ad	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+64]
  001b1	33 d9		 xor	 ebx, ecx
  001b3	8b 4c 24 34	 mov	 ecx, DWORD PTR tv1219[esp+44]
  001b7	33 eb		 xor	 ebp, ebx
  001b9	89 5c 24 20	 mov	 DWORD PTR _ss$[esp+64], ebx
  001bd	89 58 50	 mov	 DWORD PTR [eax+80], ebx
  001c0	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+72]
  001c4	33 dd		 xor	 ebx, ebp
  001c6	33 cb		 xor	 ecx, ebx
  001c8	89 5c 24 28	 mov	 DWORD PTR _ss$[esp+72], ebx
  001cc	89 58 58	 mov	 DWORD PTR [eax+88], ebx

; 193  :     ke8(cx->ks, 2); ke8(cx->ks, 3);

  001cf	89 54 24 34	 mov	 DWORD PTR tv1218[esp+44], edx
  001d3	89 68 54	 mov	 DWORD PTR [eax+84], ebp
  001d6	8b d1		 mov	 edx, ecx
  001d8	c1 ea 10	 shr	 edx, 16			; 00000010H
  001db	89 6c 24 24	 mov	 DWORD PTR _ss$[esp+68], ebp
  001df	0f b6 ea	 movzx	 ebp, dl
  001e2	89 48 5c	 mov	 DWORD PTR [eax+92], ecx
  001e5	8b d9		 mov	 ebx, ecx
  001e7	c1 eb 18	 shr	 ebx, 24			; 00000018H
  001ea	8b 1c 9d 00 08
	00 00		 mov	 ebx, DWORD PTR _t_fl[ebx*4+2048]
  001f1	33 1c ad 00 04
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+1024]
  001f8	8b d1		 mov	 edx, ecx
  001fa	c1 ea 08	 shr	 edx, 8
  001fd	0f b6 ea	 movzx	 ebp, dl
  00200	33 1c ad 00 00
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4]
  00207	8b 54 24 34	 mov	 edx, DWORD PTR tv1218[esp+44]
  0020b	0f b6 e9	 movzx	 ebp, cl
  0020e	33 1c ad 00 0c
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+3072]
  00215	33 1d 08 00 00
	00		 xor	 ebx, DWORD PTR _t_rc+8
  0021b	33 f3		 xor	 esi, ebx
  0021d	8b 5c 24 18	 mov	 ebx, DWORD PTR _ss$[esp+56]
  00221	33 fe		 xor	 edi, esi
  00223	33 df		 xor	 ebx, edi
  00225	33 d3		 xor	 edx, ebx
  00227	89 70 60	 mov	 DWORD PTR [eax+96], esi
  0022a	89 78 64	 mov	 DWORD PTR [eax+100], edi
  0022d	89 5c 24 18	 mov	 DWORD PTR _ss$[esp+56], ebx
  00231	89 58 68	 mov	 DWORD PTR [eax+104], ebx
  00234	89 50 6c	 mov	 DWORD PTR [eax+108], edx
  00237	89 4c 24 34	 mov	 DWORD PTR tv1217[esp+44], ecx
  0023b	8b ca		 mov	 ecx, edx
  0023d	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00240	0f b6 e9	 movzx	 ebp, cl
  00243	8b da		 mov	 ebx, edx
  00245	c1 eb 18	 shr	 ebx, 24			; 00000018H
  00248	8b 0c 9d 00 0c
	00 00		 mov	 ecx, DWORD PTR _t_fl[ebx*4+3072]
  0024f	33 0c ad 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebp*4+2048]
  00256	8b 6c 24 24	 mov	 ebp, DWORD PTR _ss$[esp+68]
  0025a	8b da		 mov	 ebx, edx
  0025c	c1 eb 08	 shr	 ebx, 8
  0025f	0f b6 db	 movzx	 ebx, bl
  00262	33 0c 9d 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4+1024]
  00269	0f b6 da	 movzx	 ebx, dl
  0026c	33 0c 9d 00 00
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4]
  00273	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+64]
  00277	33 d9		 xor	 ebx, ecx
  00279	8b 4c 24 34	 mov	 ecx, DWORD PTR tv1217[esp+44]
  0027d	33 eb		 xor	 ebp, ebx
  0027f	89 58 70	 mov	 DWORD PTR [eax+112], ebx
  00282	89 5c 24 20	 mov	 DWORD PTR _ss$[esp+64], ebx
  00286	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+72]
  0028a	33 dd		 xor	 ebx, ebp
  0028c	33 cb		 xor	 ecx, ebx
  0028e	89 58 78	 mov	 DWORD PTR [eax+120], ebx
  00291	89 5c 24 28	 mov	 DWORD PTR _ss$[esp+72], ebx
  00295	89 68 74	 mov	 DWORD PTR [eax+116], ebp
  00298	89 54 24 34	 mov	 DWORD PTR tv1216[esp+44], edx
  0029c	8b d1		 mov	 edx, ecx
  0029e	89 48 7c	 mov	 DWORD PTR [eax+124], ecx
  002a1	8b d9		 mov	 ebx, ecx
  002a3	c1 eb 18	 shr	 ebx, 24			; 00000018H
  002a6	8b 1c 9d 00 08
	00 00		 mov	 ebx, DWORD PTR _t_fl[ebx*4+2048]
  002ad	89 6c 24 24	 mov	 DWORD PTR _ss$[esp+68], ebp
  002b1	c1 ea 10	 shr	 edx, 16			; 00000010H
  002b4	0f b6 ea	 movzx	 ebp, dl
  002b7	33 1c ad 00 04
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+1024]
  002be	8b d1		 mov	 edx, ecx
  002c0	c1 ea 08	 shr	 edx, 8
  002c3	0f b6 ea	 movzx	 ebp, dl
  002c6	33 1c ad 00 00
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4]
  002cd	8b 54 24 34	 mov	 edx, DWORD PTR tv1216[esp+44]
  002d1	0f b6 e9	 movzx	 ebp, cl
  002d4	33 1c ad 00 0c
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+3072]
  002db	89 4c 24 34	 mov	 DWORD PTR tv1215[esp+44], ecx
  002df	33 1d 0c 00 00
	00		 xor	 ebx, DWORD PTR _t_rc+12
  002e5	33 f3		 xor	 esi, ebx
  002e7	8b 5c 24 18	 mov	 ebx, DWORD PTR _ss$[esp+56]
  002eb	33 fe		 xor	 edi, esi
  002ed	33 df		 xor	 ebx, edi
  002ef	89 98 88 00 00
	00		 mov	 DWORD PTR [eax+136], ebx
  002f5	33 d3		 xor	 edx, ebx
  002f7	89 5c 24 18	 mov	 DWORD PTR _ss$[esp+56], ebx
  002fb	8b ca		 mov	 ecx, edx
  002fd	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00300	0f b6 e9	 movzx	 ebp, cl
  00303	89 b0 80 00 00
	00		 mov	 DWORD PTR [eax+128], esi
  00309	89 b8 84 00 00
	00		 mov	 DWORD PTR [eax+132], edi
  0030f	89 90 8c 00 00
	00		 mov	 DWORD PTR [eax+140], edx
  00315	8b da		 mov	 ebx, edx
  00317	c1 eb 18	 shr	 ebx, 24			; 00000018H
  0031a	8b 0c 9d 00 0c
	00 00		 mov	 ecx, DWORD PTR _t_fl[ebx*4+3072]
  00321	33 0c ad 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebp*4+2048]
  00328	8b 6c 24 24	 mov	 ebp, DWORD PTR _ss$[esp+68]
  0032c	8b da		 mov	 ebx, edx
  0032e	c1 eb 08	 shr	 ebx, 8
  00331	0f b6 db	 movzx	 ebx, bl
  00334	33 0c 9d 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4+1024]
  0033b	0f b6 da	 movzx	 ebx, dl
  0033e	33 0c 9d 00 00
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4]
  00345	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+64]
  00349	33 d9		 xor	 ebx, ecx
  0034b	33 eb		 xor	 ebp, ebx
  0034d	89 5c 24 20	 mov	 DWORD PTR _ss$[esp+64], ebx
  00351	89 98 90 00 00
	00		 mov	 DWORD PTR [eax+144], ebx
  00357	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+72]
  0035b	33 dd		 xor	 ebx, ebp
  0035d	89 6c 24 24	 mov	 DWORD PTR _ss$[esp+68], ebp
  00361	89 a8 94 00 00
	00		 mov	 DWORD PTR [eax+148], ebp
  00367	89 5c 24 28	 mov	 DWORD PTR _ss$[esp+72], ebx
  0036b	89 98 98 00 00
	00		 mov	 DWORD PTR [eax+152], ebx
  00371	8b 4c 24 34	 mov	 ecx, DWORD PTR tv1215[esp+44]
  00375	33 cb		 xor	 ecx, ebx
  00377	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx

; 194  :     ke8(cx->ks, 4); ke8(cx->ks, 5);

  0037d	89 54 24 34	 mov	 DWORD PTR tv1214[esp+44], edx
  00381	8b d1		 mov	 edx, ecx
  00383	c1 ea 10	 shr	 edx, 16			; 00000010H
  00386	8b d9		 mov	 ebx, ecx
  00388	c1 eb 18	 shr	 ebx, 24			; 00000018H
  0038b	8b 1c 9d 00 08
	00 00		 mov	 ebx, DWORD PTR _t_fl[ebx*4+2048]
  00392	0f b6 ea	 movzx	 ebp, dl
  00395	33 1c ad 00 04
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+1024]
  0039c	8b d1		 mov	 edx, ecx
  0039e	c1 ea 08	 shr	 edx, 8
  003a1	0f b6 ea	 movzx	 ebp, dl
  003a4	33 1c ad 00 00
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4]
  003ab	8b 54 24 34	 mov	 edx, DWORD PTR tv1214[esp+44]
  003af	0f b6 e9	 movzx	 ebp, cl
  003b2	33 1c ad 00 0c
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+3072]
  003b9	89 4c 24 34	 mov	 DWORD PTR tv1213[esp+44], ecx
  003bd	33 1d 10 00 00
	00		 xor	 ebx, DWORD PTR _t_rc+16
  003c3	33 f3		 xor	 esi, ebx
  003c5	8b 5c 24 18	 mov	 ebx, DWORD PTR _ss$[esp+56]
  003c9	33 fe		 xor	 edi, esi
  003cb	33 df		 xor	 ebx, edi
  003cd	33 d3		 xor	 edx, ebx
  003cf	89 98 a8 00 00
	00		 mov	 DWORD PTR [eax+168], ebx
  003d5	89 5c 24 18	 mov	 DWORD PTR _ss$[esp+56], ebx
  003d9	89 90 ac 00 00
	00		 mov	 DWORD PTR [eax+172], edx
  003df	89 b0 a0 00 00
	00		 mov	 DWORD PTR [eax+160], esi
  003e5	89 b8 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edi
  003eb	8b ca		 mov	 ecx, edx
  003ed	c1 e9 10	 shr	 ecx, 16			; 00000010H
  003f0	8b da		 mov	 ebx, edx
  003f2	c1 eb 18	 shr	 ebx, 24			; 00000018H
  003f5	0f b6 e9	 movzx	 ebp, cl
  003f8	8b 0c 9d 00 0c
	00 00		 mov	 ecx, DWORD PTR _t_fl[ebx*4+3072]
  003ff	33 0c ad 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebp*4+2048]
  00406	8b 6c 24 24	 mov	 ebp, DWORD PTR _ss$[esp+68]
  0040a	8b da		 mov	 ebx, edx
  0040c	c1 eb 08	 shr	 ebx, 8
  0040f	0f b6 db	 movzx	 ebx, bl
  00412	33 0c 9d 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4+1024]
  00419	0f b6 da	 movzx	 ebx, dl
  0041c	33 0c 9d 00 00
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4]
  00423	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+64]
  00427	33 d9		 xor	 ebx, ecx
  00429	8b 4c 24 34	 mov	 ecx, DWORD PTR tv1213[esp+44]
  0042d	33 eb		 xor	 ebp, ebx
  0042f	89 5c 24 20	 mov	 DWORD PTR _ss$[esp+64], ebx
  00433	89 98 b0 00 00
	00		 mov	 DWORD PTR [eax+176], ebx
  00439	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+72]
  0043d	33 dd		 xor	 ebx, ebp
  0043f	33 cb		 xor	 ecx, ebx
  00441	89 5c 24 28	 mov	 DWORD PTR _ss$[esp+72], ebx
  00445	89 98 b8 00 00
	00		 mov	 DWORD PTR [eax+184], ebx
  0044b	89 a8 b4 00 00
	00		 mov	 DWORD PTR [eax+180], ebp
  00451	89 54 24 34	 mov	 DWORD PTR tv1212[esp+44], edx
  00455	8b d1		 mov	 edx, ecx
  00457	c1 ea 10	 shr	 edx, 16			; 00000010H
  0045a	89 6c 24 24	 mov	 DWORD PTR _ss$[esp+68], ebp
  0045e	89 88 bc 00 00
	00		 mov	 DWORD PTR [eax+188], ecx
  00464	0f b6 ea	 movzx	 ebp, dl
  00467	8b d9		 mov	 ebx, ecx
  00469	c1 eb 18	 shr	 ebx, 24			; 00000018H
  0046c	8b 1c 9d 00 08
	00 00		 mov	 ebx, DWORD PTR _t_fl[ebx*4+2048]
  00473	33 1c ad 00 04
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+1024]
  0047a	8b d1		 mov	 edx, ecx
  0047c	c1 ea 08	 shr	 edx, 8
  0047f	0f b6 ea	 movzx	 ebp, dl
  00482	33 1c ad 00 00
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4]
  00489	0f b6 e9	 movzx	 ebp, cl
  0048c	33 1c ad 00 0c
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+3072]
  00493	33 1d 14 00 00
	00		 xor	 ebx, DWORD PTR _t_rc+20
  00499	33 f3		 xor	 esi, ebx
  0049b	8b 5c 24 18	 mov	 ebx, DWORD PTR _ss$[esp+56]
  0049f	33 fe		 xor	 edi, esi
  004a1	33 df		 xor	 ebx, edi
  004a3	89 b0 c0 00 00
	00		 mov	 DWORD PTR [eax+192], esi
  004a9	89 b8 c4 00 00
	00		 mov	 DWORD PTR [eax+196], edi
  004af	89 5c 24 18	 mov	 DWORD PTR _ss$[esp+56], ebx
  004b3	89 98 c8 00 00
	00		 mov	 DWORD PTR [eax+200], ebx
  004b9	8b 54 24 34	 mov	 edx, DWORD PTR tv1212[esp+44]
  004bd	33 d3		 xor	 edx, ebx
  004bf	89 4c 24 34	 mov	 DWORD PTR tv1211[esp+44], ecx
  004c3	89 90 cc 00 00
	00		 mov	 DWORD PTR [eax+204], edx
  004c9	8b ca		 mov	 ecx, edx
  004cb	c1 e9 10	 shr	 ecx, 16			; 00000010H
  004ce	8b da		 mov	 ebx, edx
  004d0	c1 eb 18	 shr	 ebx, 24			; 00000018H
  004d3	0f b6 e9	 movzx	 ebp, cl
  004d6	8b 0c 9d 00 0c
	00 00		 mov	 ecx, DWORD PTR _t_fl[ebx*4+3072]
  004dd	33 0c ad 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebp*4+2048]
  004e4	8b 6c 24 24	 mov	 ebp, DWORD PTR _ss$[esp+68]
  004e8	8b da		 mov	 ebx, edx
  004ea	c1 eb 08	 shr	 ebx, 8
  004ed	0f b6 db	 movzx	 ebx, bl
  004f0	33 0c 9d 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4+1024]
  004f7	0f b6 da	 movzx	 ebx, dl
  004fa	33 0c 9d 00 00
	00 00		 xor	 ecx, DWORD PTR _t_fl[ebx*4]
  00501	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+64]
  00505	33 d9		 xor	 ebx, ecx
  00507	8b 4c 24 34	 mov	 ecx, DWORD PTR tv1211[esp+44]
  0050b	33 eb		 xor	 ebp, ebx
  0050d	89 98 d0 00 00
	00		 mov	 DWORD PTR [eax+208], ebx
  00513	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+72]
  00517	33 dd		 xor	 ebx, ebp
  00519	33 cb		 xor	 ecx, ebx
  0051b	89 98 d8 00 00
	00		 mov	 DWORD PTR [eax+216], ebx

; 195  : #endif
; 196  :     kef8(cx->ks, 6);

  00521	89 54 24 34	 mov	 DWORD PTR tv1210[esp+44], edx
  00525	89 a8 d4 00 00
	00		 mov	 DWORD PTR [eax+212], ebp
  0052b	89 88 dc 00 00
	00		 mov	 DWORD PTR [eax+220], ecx
  00531	8b d1		 mov	 edx, ecx
  00533	c1 ea 10	 shr	 edx, 16			; 00000010H
  00536	8b d9		 mov	 ebx, ecx
  00538	c1 eb 18	 shr	 ebx, 24			; 00000018H
  0053b	8b 1c 9d 00 08
	00 00		 mov	 ebx, DWORD PTR _t_fl[ebx*4+2048]
  00542	0f b6 ea	 movzx	 ebp, dl
  00545	33 1c ad 00 04
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4+1024]
  0054c	8b d1		 mov	 edx, ecx
  0054e	c1 ea 08	 shr	 edx, 8
  00551	0f b6 ea	 movzx	 ebp, dl
  00554	33 1c ad 00 00
	00 00		 xor	 ebx, DWORD PTR _t_fl[ebp*4]
  0055b	8b 54 24 34	 mov	 edx, DWORD PTR tv1210[esp+44]
  0055f	0f b6 c9	 movzx	 ecx, cl
  00562	33 1c 8d 00 0c
	00 00		 xor	 ebx, DWORD PTR _t_fl[ecx*4+3072]
  00569	8b 4c 24 18	 mov	 ecx, DWORD PTR _ss$[esp+56]
  0056d	33 1d 18 00 00
	00		 xor	 ebx, DWORD PTR _t_rc+24

; 197  :     cx->inf.l = 0;

  00573	c7 80 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+240], 0
  0057d	33 f3		 xor	 esi, ebx
  0057f	33 fe		 xor	 edi, esi
  00581	33 cf		 xor	 ecx, edi
  00583	89 b8 e4 00 00
	00		 mov	 DWORD PTR [eax+228], edi
  00589	5f		 pop	 edi
  0058a	89 b0 e0 00 00
	00		 mov	 DWORD PTR [eax+224], esi
  00590	5e		 pop	 esi
  00591	33 d1		 xor	 edx, ecx
  00593	5d		 pop	 ebp
  00594	89 88 e8 00 00
	00		 mov	 DWORD PTR [eax+232], ecx
  0059a	89 90 ec 00 00
	00		 mov	 DWORD PTR [eax+236], edx

; 198  :     cx->inf.b[0] = 14 * 16;

  005a0	c6 80 f0 00 00
	00 e0		 mov	 BYTE PTR [eax+240], 224	; 000000e0H

; 199  : 
; 200  : #ifdef USE_VIA_ACE_IF_PRESENT
; 201  :     if(VIA_ACE_AVAILABLE)
; 202  :         cx->inf.b[1] = 0xff;
; 203  : #endif
; 204  : 
; 205  : #if defined( AES_ERR_CHK )
; 206  :     return EXIT_SUCCESS;

  005a7	33 c0		 xor	 eax, eax
  005a9	5b		 pop	 ebx

; 207  : #endif
; 208  : }

  005aa	83 c4 20	 add	 esp, 32			; 00000020H
  005ad	c3		 ret	 0
_aes_encrypt_key256 ENDP
_TEXT	ENDS
PUBLIC	_aes_decrypt_key256
EXTRN	_t_im:BYTE
; Function compile flags: /Ogtpy
;	COMDAT _aes_decrypt_key256
_TEXT	SEGMENT
_ss$ = -36						; size = 36
tv2120 = 8						; size = 4
_key$ = 8						; size = 4
_cx$ = 12						; size = 4
_aes_decrypt_key256 PROC				; COMDAT

; 498  : {   uint_32t    ss[9];

  00000	83 ec 24	 sub	 esp, 36			; 00000024H
  00003	53		 push	 ebx

; 499  : #if defined( d_vars )
; 500  :         d_vars;
; 501  : #endif
; 502  :     cx->ks[v(56,(0))] = ss[0] = word_in(key, 0);

  00004	8b 44 24 30	 mov	 eax, DWORD PTR _cx$[esp+36]
  00008	55		 push	 ebp
  00009	56		 push	 esi
  0000a	8b 74 24 34	 mov	 esi, DWORD PTR _key$[esp+44]
  0000e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00010	89 88 e0 00 00
	00		 mov	 DWORD PTR [eax+224], ecx

; 503  :     cx->ks[v(56,(1))] = ss[1] = word_in(key, 1);

  00016	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00019	89 90 e4 00 00
	00		 mov	 DWORD PTR [eax+228], edx
  0001f	57		 push	 edi
  00020	89 4c 24 10	 mov	 DWORD PTR _ss$[esp+52], ecx

; 504  :     cx->ks[v(56,(2))] = ss[2] = word_in(key, 2);

  00024	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00027	89 88 e8 00 00
	00		 mov	 DWORD PTR [eax+232], ecx
  0002d	89 4c 24 18	 mov	 DWORD PTR _ss$[esp+60], ecx

; 505  :     cx->ks[v(56,(3))] = ss[3] = word_in(key, 3);

  00031	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00034	89 88 ec 00 00
	00		 mov	 DWORD PTR [eax+236], ecx

; 506  : 
; 507  : #if DEC_UNROLL == NONE
; 508  :     cx->ks[v(56,(4))] = ss[4] = word_in(key, 4);
; 509  :     cx->ks[v(56,(5))] = ss[5] = word_in(key, 5);
; 510  :     cx->ks[v(56,(6))] = ss[6] = word_in(key, 6);
; 511  :     cx->ks[v(56,(7))] = ss[7] = word_in(key, 7);
; 512  :     {   uint_32t i;
; 513  : 
; 514  :         for(i = 0; i < 6; ++i)
; 515  :             k8e(cx->ks,  i);
; 516  :         k8ef(cx->ks,  6);
; 517  : #if !(DEC_ROUND == NO_TABLES)
; 518  :         for(i = N_COLS; i < 14 * N_COLS; ++i)
; 519  :             cx->ks[i] = inv_mcol(cx->ks[i]);
; 520  : 
; 521  : #endif
; 522  :     }
; 523  : #else
; 524  :     cx->ks[v(56,(4))] = ff(ss[4] = word_in(key, 4));

  0003a	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0003d	89 7c 24 20	 mov	 DWORD PTR _ss$[esp+68], edi
  00041	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+68]
  00045	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00048	0f b6 db	 movzx	 ebx, bl
  0004b	c1 ef 18	 shr	 edi, 24			; 00000018H
  0004e	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_im[edi*4+3072]
  00055	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+2048]
  0005c	8b 5c 24 20	 mov	 ebx, DWORD PTR _ss$[esp+68]
  00060	c1 eb 08	 shr	 ebx, 8
  00063	0f b6 db	 movzx	 ebx, bl
  00066	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+1024]
  0006d	0f b6 5c 24 20	 movzx	 ebx, BYTE PTR _ss$[esp+68]
  00072	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4]
  00079	89 b8 d0 00 00
	00		 mov	 DWORD PTR [eax+208], edi

; 525  :     cx->ks[v(56,(5))] = ff(ss[5] = word_in(key, 5));

  0007f	8b 7e 14	 mov	 edi, DWORD PTR [esi+20]
  00082	89 7c 24 24	 mov	 DWORD PTR _ss$[esp+72], edi
  00086	8b 5c 24 24	 mov	 ebx, DWORD PTR _ss$[esp+72]
  0008a	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0008d	0f b6 db	 movzx	 ebx, bl
  00090	c1 ef 18	 shr	 edi, 24			; 00000018H
  00093	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_im[edi*4+3072]
  0009a	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+2048]
  000a1	8b 5c 24 24	 mov	 ebx, DWORD PTR _ss$[esp+72]
  000a5	c1 eb 08	 shr	 ebx, 8
  000a8	0f b6 db	 movzx	 ebx, bl
  000ab	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+1024]
  000b2	0f b6 5c 24 24	 movzx	 ebx, BYTE PTR _ss$[esp+72]
  000b7	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4]
  000be	89 b8 d4 00 00
	00		 mov	 DWORD PTR [eax+212], edi

; 526  :     cx->ks[v(56,(6))] = ff(ss[6] = word_in(key, 6));

  000c4	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  000c7	89 7c 24 28	 mov	 DWORD PTR _ss$[esp+76], edi
  000cb	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+76]
  000cf	c1 eb 10	 shr	 ebx, 16			; 00000010H
  000d2	0f b6 db	 movzx	 ebx, bl
  000d5	c1 ef 18	 shr	 edi, 24			; 00000018H
  000d8	8b 3c bd 00 0c
	00 00		 mov	 edi, DWORD PTR _t_im[edi*4+3072]
  000df	33 3c 9d 00 08
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+2048]
  000e6	8b 5c 24 28	 mov	 ebx, DWORD PTR _ss$[esp+76]
  000ea	c1 eb 08	 shr	 ebx, 8
  000ed	0f b6 db	 movzx	 ebx, bl
  000f0	33 3c 9d 00 04
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4+1024]
  000f7	0f b6 5c 24 28	 movzx	 ebx, BYTE PTR _ss$[esp+76]
  000fc	33 3c 9d 00 00
	00 00		 xor	 edi, DWORD PTR _t_im[ebx*4]
  00103	89 b8 d8 00 00
	00		 mov	 DWORD PTR [eax+216], edi

; 527  :     cx->ks[v(56,(7))] = ff(ss[7] = word_in(key, 7));

  00109	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
  0010c	89 74 24 2c	 mov	 DWORD PTR _ss$[esp+80], esi
  00110	8b 5c 24 2c	 mov	 ebx, DWORD PTR _ss$[esp+80]
  00114	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00117	0f b6 fb	 movzx	 edi, bl
  0011a	8b 5c 24 2c	 mov	 ebx, DWORD PTR _ss$[esp+80]
  0011e	c1 eb 08	 shr	 ebx, 8
  00121	0f b6 eb	 movzx	 ebp, bl
  00124	0f b6 5c 24 2c	 movzx	 ebx, BYTE PTR _ss$[esp+80]
  00129	c1 ee 18	 shr	 esi, 24			; 00000018H
  0012c	03 f6		 add	 esi, esi
  0012e	03 ff		 add	 edi, edi
  00130	03 ed		 add	 ebp, ebp
  00132	03 db		 add	 ebx, ebx
  00134	03 f6		 add	 esi, esi
  00136	03 ff		 add	 edi, edi
  00138	03 ed		 add	 ebp, ebp
  0013a	03 db		 add	 ebx, ebx
  0013c	89 5c 24 38	 mov	 DWORD PTR tv2120[esp+48], ebx
  00140	8b 9b 00 00 00
	00		 mov	 ebx, DWORD PTR _t_im[ebx]
  00146	33 9d 00 04 00
	00		 xor	 ebx, DWORD PTR _t_im[ebp+1024]
  0014c	33 9f 00 08 00
	00		 xor	 ebx, DWORD PTR _t_im[edi+2048]
  00152	33 9e 00 0c 00
	00		 xor	 ebx, DWORD PTR _t_im[esi+3072]
  00158	89 98 dc 00 00
	00		 mov	 DWORD PTR [eax+220], ebx

; 528  :     kdf8(cx->ks, 0); kd8(cx->ks, 1);

  0015e	8b 5c 24 38	 mov	 ebx, DWORD PTR tv2120[esp+48]
  00162	8b 9b 00 0c 00
	00		 mov	 ebx, DWORD PTR _t_fl[ebx+3072]
  00168	33 9d 00 00 00
	00		 xor	 ebx, DWORD PTR _t_fl[ebp]
  0016e	33 9f 00 04 00
	00		 xor	 ebx, DWORD PTR _t_fl[edi+1024]
  00174	33 9e 00 08 00
	00		 xor	 ebx, DWORD PTR _t_fl[esi+2048]
  0017a	8b 74 24 10	 mov	 esi, DWORD PTR _ss$[esp+52]
  0017e	33 1d 00 00 00
	00		 xor	 ebx, DWORD PTR _t_rc
  00184	33 f3		 xor	 esi, ebx
  00186	89 74 24 10	 mov	 DWORD PTR _ss$[esp+52], esi
  0018a	8b 5c 24 10	 mov	 ebx, DWORD PTR _ss$[esp+52]
  0018e	33 54 24 10	 xor	 edx, DWORD PTR _ss$[esp+52]
  00192	c1 ee 18	 shr	 esi, 24			; 00000018H
  00195	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  0019c	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0019f	0f b6 fb	 movzx	 edi, bl
  001a2	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  001a9	8b 5c 24 10	 mov	 ebx, DWORD PTR _ss$[esp+52]
  001ad	c1 eb 08	 shr	 ebx, 8
  001b0	0f b6 fb	 movzx	 edi, bl
  001b3	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  001ba	0f b6 7c 24 10	 movzx	 edi, BYTE PTR _ss$[esp+52]
  001bf	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4]
  001c6	8b da		 mov	 ebx, edx
  001c8	89 b0 c0 00 00
	00		 mov	 DWORD PTR [eax+192], esi
  001ce	8b f2		 mov	 esi, edx
  001d0	c1 ee 18	 shr	 esi, 24			; 00000018H
  001d3	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  001da	c1 eb 10	 shr	 ebx, 16			; 00000010H
  001dd	0f b6 fb	 movzx	 edi, bl
  001e0	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  001e7	8b da		 mov	 ebx, edx
  001e9	c1 eb 08	 shr	 ebx, 8
  001ec	0f b6 fb	 movzx	 edi, bl
  001ef	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  001f6	89 54 24 14	 mov	 DWORD PTR _ss$[esp+56], edx
  001fa	0f b6 d2	 movzx	 edx, dl
  001fd	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00204	8b 54 24 18	 mov	 edx, DWORD PTR _ss$[esp+60]
  00208	33 54 24 14	 xor	 edx, DWORD PTR _ss$[esp+56]
  0020c	89 b0 c4 00 00
	00		 mov	 DWORD PTR [eax+196], esi
  00212	8b da		 mov	 ebx, edx
  00214	8b f2		 mov	 esi, edx
  00216	c1 ee 18	 shr	 esi, 24			; 00000018H
  00219	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00220	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00223	0f b6 fb	 movzx	 edi, bl
  00226	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0022d	8b da		 mov	 ebx, edx
  0022f	c1 eb 08	 shr	 ebx, 8
  00232	33 ca		 xor	 ecx, edx
  00234	0f b6 fb	 movzx	 edi, bl
  00237	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0023e	0f b6 fa	 movzx	 edi, dl
  00241	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4]
  00248	89 54 24 18	 mov	 DWORD PTR _ss$[esp+60], edx
  0024c	8b d1		 mov	 edx, ecx
  0024e	c1 ea 10	 shr	 edx, 16			; 00000010H
  00251	0f b6 fa	 movzx	 edi, dl
  00254	8b d1		 mov	 edx, ecx
  00256	c1 ea 08	 shr	 edx, 8
  00259	89 b0 c8 00 00
	00		 mov	 DWORD PTR [eax+200], esi
  0025f	0f b6 d9	 movzx	 ebx, cl
  00262	0f b6 d2	 movzx	 edx, dl
  00265	03 db		 add	 ebx, ebx
  00267	8b ac 1b 00 00
	00 00		 mov	 ebp, DWORD PTR _t_im[ebx+ebx]
  0026e	03 d2		 add	 edx, edx
  00270	33 ac 12 00 04
	00 00		 xor	 ebp, DWORD PTR _t_im[edx+edx+1024]
  00277	03 db		 add	 ebx, ebx
  00279	03 d2		 add	 edx, edx
  0027b	8b f1		 mov	 esi, ecx
  0027d	c1 ee 18	 shr	 esi, 24			; 00000018H
  00280	03 ff		 add	 edi, edi
  00282	33 ac 3f 00 08
	00 00		 xor	 ebp, DWORD PTR _t_im[edi+edi+2048]
  00289	03 ff		 add	 edi, edi
  0028b	03 f6		 add	 esi, esi
  0028d	03 f6		 add	 esi, esi
  0028f	33 ae 00 0c 00
	00		 xor	 ebp, DWORD PTR _t_im[esi+3072]
  00295	89 a8 cc 00 00
	00		 mov	 DWORD PTR [eax+204], ebp
  0029b	8b 9b 00 00 00
	00		 mov	 ebx, DWORD PTR _t_fl[ebx]
  002a1	33 9a 00 04 00
	00		 xor	 ebx, DWORD PTR _t_fl[edx+1024]
  002a7	8b 54 24 20	 mov	 edx, DWORD PTR _ss$[esp+68]
  002ab	33 9f 00 08 00
	00		 xor	 ebx, DWORD PTR _t_fl[edi+2048]
  002b1	33 9e 00 0c 00
	00		 xor	 ebx, DWORD PTR _t_fl[esi+3072]
  002b7	33 d3		 xor	 edx, ebx
  002b9	8b da		 mov	 ebx, edx
  002bb	c1 eb 10	 shr	 ebx, 16			; 00000010H
  002be	0f b6 fb	 movzx	 edi, bl
  002c1	8b f2		 mov	 esi, edx
  002c3	c1 ee 18	 shr	 esi, 24			; 00000018H
  002c6	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  002cd	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  002d4	8b da		 mov	 ebx, edx
  002d6	c1 eb 08	 shr	 ebx, 8
  002d9	0f b6 fb	 movzx	 edi, bl
  002dc	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  002e3	89 54 24 20	 mov	 DWORD PTR _ss$[esp+68], edx
  002e7	0f b6 d2	 movzx	 edx, dl
  002ea	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  002f1	8b 54 24 24	 mov	 edx, DWORD PTR _ss$[esp+72]
  002f5	33 54 24 20	 xor	 edx, DWORD PTR _ss$[esp+68]
  002f9	89 b0 b0 00 00
	00		 mov	 DWORD PTR [eax+176], esi
  002ff	8b da		 mov	 ebx, edx
  00301	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00304	0f b6 fb	 movzx	 edi, bl
  00307	8b f2		 mov	 esi, edx
  00309	c1 ee 18	 shr	 esi, 24			; 00000018H
  0030c	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00313	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0031a	8b da		 mov	 ebx, edx
  0031c	c1 eb 08	 shr	 ebx, 8
  0031f	0f b6 fb	 movzx	 edi, bl
  00322	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00329	89 54 24 24	 mov	 DWORD PTR _ss$[esp+72], edx
  0032d	0f b6 d2	 movzx	 edx, dl
  00330	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00337	8b 54 24 28	 mov	 edx, DWORD PTR _ss$[esp+76]
  0033b	33 54 24 24	 xor	 edx, DWORD PTR _ss$[esp+72]
  0033f	89 b0 b4 00 00
	00		 mov	 DWORD PTR [eax+180], esi
  00345	8b da		 mov	 ebx, edx
  00347	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0034a	0f b6 fb	 movzx	 edi, bl
  0034d	8b f2		 mov	 esi, edx
  0034f	c1 ee 18	 shr	 esi, 24			; 00000018H
  00352	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00359	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00360	8b da		 mov	 ebx, edx
  00362	c1 eb 08	 shr	 ebx, 8
  00365	0f b6 fb	 movzx	 edi, bl
  00368	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0036f	89 54 24 28	 mov	 DWORD PTR _ss$[esp+76], edx
  00373	0f b6 d2	 movzx	 edx, dl
  00376	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  0037d	8b 54 24 2c	 mov	 edx, DWORD PTR _ss$[esp+80]
  00381	33 54 24 28	 xor	 edx, DWORD PTR _ss$[esp+76]
  00385	89 b0 b8 00 00
	00		 mov	 DWORD PTR [eax+184], esi
  0038b	8b da		 mov	 ebx, edx
  0038d	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00390	0f b6 fb	 movzx	 edi, bl
  00393	8b da		 mov	 ebx, edx
  00395	8b f2		 mov	 esi, edx
  00397	89 54 24 2c	 mov	 DWORD PTR _ss$[esp+80], edx
  0039b	c1 eb 08	 shr	 ebx, 8
  0039e	0f b6 d2	 movzx	 edx, dl
  003a1	0f b6 db	 movzx	 ebx, bl
  003a4	03 d2		 add	 edx, edx
  003a6	8b ac 12 00 00
	00 00		 mov	 ebp, DWORD PTR _t_im[edx+edx]
  003ad	03 db		 add	 ebx, ebx
  003af	33 ac 1b 00 04
	00 00		 xor	 ebp, DWORD PTR _t_im[ebx+ebx+1024]
  003b6	03 d2		 add	 edx, edx
  003b8	03 db		 add	 ebx, ebx
  003ba	c1 ee 18	 shr	 esi, 24			; 00000018H
  003bd	03 ff		 add	 edi, edi
  003bf	33 ac 3f 00 08
	00 00		 xor	 ebp, DWORD PTR _t_im[edi+edi+2048]
  003c6	03 ff		 add	 edi, edi
  003c8	03 f6		 add	 esi, esi
  003ca	03 f6		 add	 esi, esi
  003cc	33 ae 00 0c 00
	00		 xor	 ebp, DWORD PTR _t_im[esi+3072]
  003d2	89 a8 bc 00 00
	00		 mov	 DWORD PTR [eax+188], ebp
  003d8	8b 92 00 0c 00
	00		 mov	 edx, DWORD PTR _t_fl[edx+3072]
  003de	33 93 00 00 00
	00		 xor	 edx, DWORD PTR _t_fl[ebx]
  003e4	33 97 00 04 00
	00		 xor	 edx, DWORD PTR _t_fl[edi+1024]
  003ea	33 96 00 08 00
	00		 xor	 edx, DWORD PTR _t_fl[esi+2048]
  003f0	33 15 04 00 00
	00		 xor	 edx, DWORD PTR _t_rc+4
  003f6	31 54 24 10	 xor	 DWORD PTR _ss$[esp+52], edx
  003fa	8b da		 mov	 ebx, edx
  003fc	8b f2		 mov	 esi, edx
  003fe	c1 ee 18	 shr	 esi, 24			; 00000018H
  00401	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00408	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0040b	0f b6 fb	 movzx	 edi, bl
  0040e	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00415	8b da		 mov	 ebx, edx
  00417	89 54 24 30	 mov	 DWORD PTR _ss$[esp+84], edx
  0041b	c1 eb 08	 shr	 ebx, 8
  0041e	0f b6 d2	 movzx	 edx, dl
  00421	0f b6 fb	 movzx	 edi, bl
  00424	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0042b	8b 7c 24 18	 mov	 edi, DWORD PTR _ss$[esp+60]
  0042f	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00436	8b 54 24 10	 mov	 edx, DWORD PTR _ss$[esp+52]
  0043a	33 b0 c0 00 00
	00		 xor	 esi, DWORD PTR [eax+192]
  00440	31 54 24 14	 xor	 DWORD PTR _ss$[esp+56], edx
  00444	33 7c 24 14	 xor	 edi, DWORD PTR _ss$[esp+56]
  00448	89 b0 a0 00 00
	00		 mov	 DWORD PTR [eax+160], esi
  0044e	33 b0 c4 00 00
	00		 xor	 esi, DWORD PTR [eax+196]
  00454	33 cf		 xor	 ecx, edi
  00456	89 b0 a4 00 00
	00		 mov	 DWORD PTR [eax+164], esi
  0045c	33 b0 c8 00 00
	00		 xor	 esi, DWORD PTR [eax+200]
  00462	8b d1		 mov	 edx, ecx
  00464	89 b0 a8 00 00
	00		 mov	 DWORD PTR [eax+168], esi
  0046a	33 b0 cc 00 00
	00		 xor	 esi, DWORD PTR [eax+204]
  00470	c1 ea 18	 shr	 edx, 24			; 00000018H
  00473	89 b0 ac 00 00
	00		 mov	 DWORD PTR [eax+172], esi
  00479	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  00480	8b d9		 mov	 ebx, ecx
  00482	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00485	89 7c 24 18	 mov	 DWORD PTR _ss$[esp+60], edi
  00489	0f b6 fb	 movzx	 edi, bl
  0048c	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  00493	8b d1		 mov	 edx, ecx
  00495	c1 ea 08	 shr	 edx, 8
  00498	0f b6 d2	 movzx	 edx, dl
  0049b	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  004a2	0f b6 d1	 movzx	 edx, cl
  004a5	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  004ac	8b d6		 mov	 edx, esi
  004ae	31 54 24 20	 xor	 DWORD PTR _ss$[esp+68], edx
  004b2	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  004b6	c1 ee 18	 shr	 esi, 24			; 00000018H
  004b9	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  004c0	8b da		 mov	 ebx, edx
  004c2	c1 eb 10	 shr	 ebx, 16			; 00000010H
  004c5	0f b6 fb	 movzx	 edi, bl
  004c8	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  004cf	8b da		 mov	 ebx, edx
  004d1	c1 eb 08	 shr	 ebx, 8
  004d4	0f b6 fb	 movzx	 edi, bl
  004d7	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  004de	0f b6 d2	 movzx	 edx, dl
  004e1	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  004e8	8b 54 24 20	 mov	 edx, DWORD PTR _ss$[esp+68]
  004ec	33 b0 b0 00 00
	00		 xor	 esi, DWORD PTR [eax+176]
  004f2	31 54 24 24	 xor	 DWORD PTR _ss$[esp+72], edx
  004f6	8b 54 24 24	 mov	 edx, DWORD PTR _ss$[esp+72]
  004fa	31 54 24 28	 xor	 DWORD PTR _ss$[esp+76], edx
  004fe	8b 54 24 2c	 mov	 edx, DWORD PTR _ss$[esp+80]
  00502	33 54 24 28	 xor	 edx, DWORD PTR _ss$[esp+76]
  00506	89 b0 90 00 00
	00		 mov	 DWORD PTR [eax+144], esi
  0050c	33 b0 b4 00 00
	00		 xor	 esi, DWORD PTR [eax+180]

; 529  :     kd8(cx->ks, 2);  kd8(cx->ks, 3);

  00512	8b da		 mov	 ebx, edx
  00514	89 b0 94 00 00
	00		 mov	 DWORD PTR [eax+148], esi
  0051a	33 b0 b8 00 00
	00		 xor	 esi, DWORD PTR [eax+184]
  00520	89 54 24 2c	 mov	 DWORD PTR _ss$[esp+80], edx
  00524	89 b0 98 00 00
	00		 mov	 DWORD PTR [eax+152], esi
  0052a	33 f5		 xor	 esi, ebp
  0052c	89 b0 9c 00 00
	00		 mov	 DWORD PTR [eax+156], esi
  00532	8b f2		 mov	 esi, edx
  00534	c1 ee 18	 shr	 esi, 24			; 00000018H
  00537	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0053a	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  00541	0f b6 fb	 movzx	 edi, bl
  00544	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  0054b	8b da		 mov	 ebx, edx
  0054d	c1 eb 08	 shr	 ebx, 8
  00550	0f b6 d2	 movzx	 edx, dl
  00553	0f b6 fb	 movzx	 edi, bl
  00556	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  0055d	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  00564	33 35 08 00 00
	00		 xor	 esi, DWORD PTR _t_rc+8
  0056a	8b d6		 mov	 edx, esi
  0056c	31 54 24 10	 xor	 DWORD PTR _ss$[esp+52], edx
  00570	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  00574	c1 ee 18	 shr	 esi, 24			; 00000018H
  00577	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  0057e	8b da		 mov	 ebx, edx
  00580	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00583	0f b6 fb	 movzx	 edi, bl
  00586	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0058d	8b da		 mov	 ebx, edx
  0058f	0f b6 d2	 movzx	 edx, dl
  00592	c1 eb 08	 shr	 ebx, 8
  00595	0f b6 fb	 movzx	 edi, bl
  00598	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0059f	8b 7c 24 18	 mov	 edi, DWORD PTR _ss$[esp+60]
  005a3	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  005aa	8b 54 24 10	 mov	 edx, DWORD PTR _ss$[esp+52]
  005ae	33 b0 a0 00 00
	00		 xor	 esi, DWORD PTR [eax+160]
  005b4	31 54 24 14	 xor	 DWORD PTR _ss$[esp+56], edx
  005b8	33 7c 24 14	 xor	 edi, DWORD PTR _ss$[esp+56]
  005bc	89 b0 80 00 00
	00		 mov	 DWORD PTR [eax+128], esi
  005c2	33 b0 a4 00 00
	00		 xor	 esi, DWORD PTR [eax+164]
  005c8	33 cf		 xor	 ecx, edi
  005ca	89 b0 84 00 00
	00		 mov	 DWORD PTR [eax+132], esi
  005d0	33 b0 a8 00 00
	00		 xor	 esi, DWORD PTR [eax+168]
  005d6	8b d1		 mov	 edx, ecx
  005d8	89 b0 88 00 00
	00		 mov	 DWORD PTR [eax+136], esi
  005de	33 b0 ac 00 00
	00		 xor	 esi, DWORD PTR [eax+172]
  005e4	c1 ea 18	 shr	 edx, 24			; 00000018H
  005e7	89 b0 8c 00 00
	00		 mov	 DWORD PTR [eax+140], esi
  005ed	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  005f4	8b d9		 mov	 ebx, ecx
  005f6	c1 eb 10	 shr	 ebx, 16			; 00000010H
  005f9	89 7c 24 18	 mov	 DWORD PTR _ss$[esp+60], edi
  005fd	0f b6 fb	 movzx	 edi, bl
  00600	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  00607	8b d1		 mov	 edx, ecx
  00609	c1 ea 08	 shr	 edx, 8
  0060c	0f b6 d2	 movzx	 edx, dl
  0060f	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  00616	0f b6 d1	 movzx	 edx, cl
  00619	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  00620	8b d6		 mov	 edx, esi
  00622	31 54 24 20	 xor	 DWORD PTR _ss$[esp+68], edx
  00626	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  0062a	8b da		 mov	 ebx, edx
  0062c	c1 ee 18	 shr	 esi, 24			; 00000018H
  0062f	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00636	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00639	0f b6 fb	 movzx	 edi, bl
  0063c	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00643	8b da		 mov	 ebx, edx
  00645	c1 eb 08	 shr	 ebx, 8
  00648	0f b6 d2	 movzx	 edx, dl
  0064b	0f b6 fb	 movzx	 edi, bl
  0064e	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00655	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  0065c	8b 54 24 20	 mov	 edx, DWORD PTR _ss$[esp+68]
  00660	33 b0 90 00 00
	00		 xor	 esi, DWORD PTR [eax+144]
  00666	31 54 24 24	 xor	 DWORD PTR _ss$[esp+72], edx
  0066a	8b 54 24 24	 mov	 edx, DWORD PTR _ss$[esp+72]
  0066e	31 54 24 28	 xor	 DWORD PTR _ss$[esp+76], edx
  00672	8b 54 24 2c	 mov	 edx, DWORD PTR _ss$[esp+80]
  00676	33 54 24 28	 xor	 edx, DWORD PTR _ss$[esp+76]
  0067a	89 70 70	 mov	 DWORD PTR [eax+112], esi
  0067d	33 b0 94 00 00
	00		 xor	 esi, DWORD PTR [eax+148]
  00683	89 54 24 2c	 mov	 DWORD PTR _ss$[esp+80], edx
  00687	89 70 74	 mov	 DWORD PTR [eax+116], esi
  0068a	33 b0 98 00 00
	00		 xor	 esi, DWORD PTR [eax+152]
  00690	89 70 78	 mov	 DWORD PTR [eax+120], esi
  00693	33 b0 9c 00 00
	00		 xor	 esi, DWORD PTR [eax+156]
  00699	89 70 7c	 mov	 DWORD PTR [eax+124], esi
  0069c	8b da		 mov	 ebx, edx
  0069e	8b f2		 mov	 esi, edx
  006a0	c1 ee 18	 shr	 esi, 24			; 00000018H
  006a3	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  006aa	c1 eb 10	 shr	 ebx, 16			; 00000010H
  006ad	0f b6 fb	 movzx	 edi, bl
  006b0	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  006b7	8b da		 mov	 ebx, edx
  006b9	c1 eb 08	 shr	 ebx, 8
  006bc	0f b6 fb	 movzx	 edi, bl
  006bf	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  006c6	0f b6 d2	 movzx	 edx, dl
  006c9	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  006d0	33 35 0c 00 00
	00		 xor	 esi, DWORD PTR _t_rc+12
  006d6	8b d6		 mov	 edx, esi
  006d8	31 54 24 10	 xor	 DWORD PTR _ss$[esp+52], edx
  006dc	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  006e0	c1 ee 18	 shr	 esi, 24			; 00000018H
  006e3	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  006ea	8b da		 mov	 ebx, edx
  006ec	c1 eb 10	 shr	 ebx, 16			; 00000010H
  006ef	0f b6 fb	 movzx	 edi, bl
  006f2	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  006f9	8b da		 mov	 ebx, edx
  006fb	c1 eb 08	 shr	 ebx, 8
  006fe	0f b6 d2	 movzx	 edx, dl
  00701	0f b6 fb	 movzx	 edi, bl
  00704	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0070b	8b 7c 24 18	 mov	 edi, DWORD PTR _ss$[esp+60]
  0070f	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00716	8b 54 24 10	 mov	 edx, DWORD PTR _ss$[esp+52]
  0071a	33 b0 80 00 00
	00		 xor	 esi, DWORD PTR [eax+128]
  00720	31 54 24 14	 xor	 DWORD PTR _ss$[esp+56], edx
  00724	33 7c 24 14	 xor	 edi, DWORD PTR _ss$[esp+56]
  00728	89 70 60	 mov	 DWORD PTR [eax+96], esi
  0072b	33 b0 84 00 00
	00		 xor	 esi, DWORD PTR [eax+132]
  00731	33 cf		 xor	 ecx, edi
  00733	89 70 64	 mov	 DWORD PTR [eax+100], esi
  00736	33 b0 88 00 00
	00		 xor	 esi, DWORD PTR [eax+136]
  0073c	8b d1		 mov	 edx, ecx
  0073e	89 70 68	 mov	 DWORD PTR [eax+104], esi
  00741	33 b0 8c 00 00
	00		 xor	 esi, DWORD PTR [eax+140]
  00747	c1 ea 18	 shr	 edx, 24			; 00000018H
  0074a	89 70 6c	 mov	 DWORD PTR [eax+108], esi
  0074d	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  00754	8b d9		 mov	 ebx, ecx
  00756	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00759	89 7c 24 18	 mov	 DWORD PTR _ss$[esp+60], edi
  0075d	0f b6 fb	 movzx	 edi, bl
  00760	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  00767	8b d1		 mov	 edx, ecx
  00769	c1 ea 08	 shr	 edx, 8
  0076c	0f b6 d2	 movzx	 edx, dl
  0076f	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  00776	0f b6 d1	 movzx	 edx, cl
  00779	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  00780	8b d6		 mov	 edx, esi
  00782	31 54 24 20	 xor	 DWORD PTR _ss$[esp+68], edx
  00786	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  0078a	8b da		 mov	 ebx, edx
  0078c	c1 ee 18	 shr	 esi, 24			; 00000018H
  0078f	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00796	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00799	0f b6 fb	 movzx	 edi, bl
  0079c	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  007a3	8b da		 mov	 ebx, edx
  007a5	c1 eb 08	 shr	 ebx, 8
  007a8	0f b6 fb	 movzx	 edi, bl
  007ab	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  007b2	0f b6 d2	 movzx	 edx, dl
  007b5	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  007bc	8b 54 24 20	 mov	 edx, DWORD PTR _ss$[esp+68]
  007c0	33 70 70	 xor	 esi, DWORD PTR [eax+112]
  007c3	31 54 24 24	 xor	 DWORD PTR _ss$[esp+72], edx
  007c7	8b 54 24 24	 mov	 edx, DWORD PTR _ss$[esp+72]
  007cb	31 54 24 28	 xor	 DWORD PTR _ss$[esp+76], edx
  007cf	89 70 50	 mov	 DWORD PTR [eax+80], esi
  007d2	33 70 74	 xor	 esi, DWORD PTR [eax+116]
  007d5	89 70 54	 mov	 DWORD PTR [eax+84], esi
  007d8	33 70 78	 xor	 esi, DWORD PTR [eax+120]
  007db	8b 54 24 2c	 mov	 edx, DWORD PTR _ss$[esp+80]
  007df	33 54 24 28	 xor	 edx, DWORD PTR _ss$[esp+76]
  007e3	89 70 58	 mov	 DWORD PTR [eax+88], esi
  007e6	33 70 7c	 xor	 esi, DWORD PTR [eax+124]

; 530  :     kd8(cx->ks, 4);  kd8(cx->ks, 5);

  007e9	8b da		 mov	 ebx, edx
  007eb	89 70 5c	 mov	 DWORD PTR [eax+92], esi
  007ee	8b f2		 mov	 esi, edx
  007f0	c1 ee 18	 shr	 esi, 24			; 00000018H
  007f3	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  007fa	c1 eb 10	 shr	 ebx, 16			; 00000010H
  007fd	0f b6 fb	 movzx	 edi, bl
  00800	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  00807	8b da		 mov	 ebx, edx
  00809	c1 eb 08	 shr	 ebx, 8
  0080c	0f b6 fb	 movzx	 edi, bl
  0080f	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  00816	89 54 24 2c	 mov	 DWORD PTR _ss$[esp+80], edx
  0081a	0f b6 d2	 movzx	 edx, dl
  0081d	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  00824	33 35 10 00 00
	00		 xor	 esi, DWORD PTR _t_rc+16
  0082a	8b d6		 mov	 edx, esi
  0082c	31 54 24 10	 xor	 DWORD PTR _ss$[esp+52], edx
  00830	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  00834	c1 ee 18	 shr	 esi, 24			; 00000018H
  00837	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  0083e	8b da		 mov	 ebx, edx
  00840	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00843	0f b6 fb	 movzx	 edi, bl
  00846	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  0084d	8b da		 mov	 ebx, edx
  0084f	c1 eb 08	 shr	 ebx, 8
  00852	0f b6 fb	 movzx	 edi, bl
  00855	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  0085c	8b 7c 24 18	 mov	 edi, DWORD PTR _ss$[esp+60]
  00860	0f b6 d2	 movzx	 edx, dl
  00863	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  0086a	8b 54 24 10	 mov	 edx, DWORD PTR _ss$[esp+52]
  0086e	33 70 60	 xor	 esi, DWORD PTR [eax+96]
  00871	31 54 24 14	 xor	 DWORD PTR _ss$[esp+56], edx
  00875	33 7c 24 14	 xor	 edi, DWORD PTR _ss$[esp+56]
  00879	89 70 40	 mov	 DWORD PTR [eax+64], esi
  0087c	33 70 64	 xor	 esi, DWORD PTR [eax+100]
  0087f	33 cf		 xor	 ecx, edi
  00881	89 70 44	 mov	 DWORD PTR [eax+68], esi
  00884	33 70 68	 xor	 esi, DWORD PTR [eax+104]
  00887	8b d1		 mov	 edx, ecx
  00889	89 70 48	 mov	 DWORD PTR [eax+72], esi
  0088c	33 70 6c	 xor	 esi, DWORD PTR [eax+108]
  0088f	c1 ea 18	 shr	 edx, 24			; 00000018H
  00892	89 70 4c	 mov	 DWORD PTR [eax+76], esi
  00895	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  0089c	8b d9		 mov	 ebx, ecx
  0089e	c1 eb 10	 shr	 ebx, 16			; 00000010H
  008a1	89 7c 24 18	 mov	 DWORD PTR _ss$[esp+60], edi
  008a5	0f b6 fb	 movzx	 edi, bl
  008a8	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  008af	8b d1		 mov	 edx, ecx
  008b1	c1 ea 08	 shr	 edx, 8
  008b4	0f b6 d2	 movzx	 edx, dl
  008b7	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  008be	0f b6 d1	 movzx	 edx, cl
  008c1	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  008c8	8b d6		 mov	 edx, esi
  008ca	31 54 24 20	 xor	 DWORD PTR _ss$[esp+68], edx
  008ce	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  008d2	8b da		 mov	 ebx, edx
  008d4	c1 ee 18	 shr	 esi, 24			; 00000018H
  008d7	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  008de	c1 eb 10	 shr	 ebx, 16			; 00000010H
  008e1	0f b6 fb	 movzx	 edi, bl
  008e4	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  008eb	8b da		 mov	 ebx, edx
  008ed	c1 eb 08	 shr	 ebx, 8
  008f0	0f b6 fb	 movzx	 edi, bl
  008f3	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  008fa	0f b6 d2	 movzx	 edx, dl
  008fd	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00904	8b 54 24 20	 mov	 edx, DWORD PTR _ss$[esp+68]
  00908	33 70 50	 xor	 esi, DWORD PTR [eax+80]
  0090b	31 54 24 24	 xor	 DWORD PTR _ss$[esp+72], edx
  0090f	89 70 30	 mov	 DWORD PTR [eax+48], esi
  00912	33 70 54	 xor	 esi, DWORD PTR [eax+84]
  00915	8b 54 24 24	 mov	 edx, DWORD PTR _ss$[esp+72]
  00919	31 54 24 28	 xor	 DWORD PTR _ss$[esp+76], edx
  0091d	8b 54 24 2c	 mov	 edx, DWORD PTR _ss$[esp+80]
  00921	33 54 24 28	 xor	 edx, DWORD PTR _ss$[esp+76]
  00925	89 70 34	 mov	 DWORD PTR [eax+52], esi
  00928	33 70 58	 xor	 esi, DWORD PTR [eax+88]
  0092b	8b da		 mov	 ebx, edx
  0092d	89 70 38	 mov	 DWORD PTR [eax+56], esi
  00930	33 70 5c	 xor	 esi, DWORD PTR [eax+92]
  00933	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00936	89 70 3c	 mov	 DWORD PTR [eax+60], esi
  00939	8b f2		 mov	 esi, edx
  0093b	c1 ee 18	 shr	 esi, 24			; 00000018H
  0093e	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  00945	0f b6 fb	 movzx	 edi, bl
  00948	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  0094f	8b da		 mov	 ebx, edx
  00951	c1 eb 08	 shr	 ebx, 8
  00954	0f b6 fb	 movzx	 edi, bl
  00957	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  0095e	89 54 24 2c	 mov	 DWORD PTR _ss$[esp+80], edx
  00962	0f b6 d2	 movzx	 edx, dl
  00965	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  0096c	33 35 14 00 00
	00		 xor	 esi, DWORD PTR _t_rc+20
  00972	8b d6		 mov	 edx, esi
  00974	31 54 24 10	 xor	 DWORD PTR _ss$[esp+52], edx
  00978	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  0097c	c1 ee 18	 shr	 esi, 24			; 00000018H
  0097f	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00986	8b da		 mov	 ebx, edx
  00988	c1 eb 10	 shr	 ebx, 16			; 00000010H
  0098b	0f b6 fb	 movzx	 edi, bl
  0098e	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00995	8b da		 mov	 ebx, edx
  00997	c1 eb 08	 shr	 ebx, 8
  0099a	0f b6 fb	 movzx	 edi, bl
  0099d	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  009a4	8b 7c 24 18	 mov	 edi, DWORD PTR _ss$[esp+60]
  009a8	0f b6 d2	 movzx	 edx, dl
  009ab	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  009b2	8b 54 24 10	 mov	 edx, DWORD PTR _ss$[esp+52]
  009b6	33 70 40	 xor	 esi, DWORD PTR [eax+64]
  009b9	31 54 24 14	 xor	 DWORD PTR _ss$[esp+56], edx
  009bd	33 7c 24 14	 xor	 edi, DWORD PTR _ss$[esp+56]
  009c1	89 70 20	 mov	 DWORD PTR [eax+32], esi
  009c4	33 70 44	 xor	 esi, DWORD PTR [eax+68]
  009c7	33 cf		 xor	 ecx, edi
  009c9	89 70 24	 mov	 DWORD PTR [eax+36], esi
  009cc	33 70 48	 xor	 esi, DWORD PTR [eax+72]
  009cf	8b d1		 mov	 edx, ecx
  009d1	89 70 28	 mov	 DWORD PTR [eax+40], esi
  009d4	33 70 4c	 xor	 esi, DWORD PTR [eax+76]
  009d7	c1 ea 18	 shr	 edx, 24			; 00000018H
  009da	89 70 2c	 mov	 DWORD PTR [eax+44], esi
  009dd	8b 34 95 00 0c
	00 00		 mov	 esi, DWORD PTR _t_fl[edx*4+3072]
  009e4	8b d9		 mov	 ebx, ecx
  009e6	c1 eb 10	 shr	 ebx, 16			; 00000010H
  009e9	89 7c 24 18	 mov	 DWORD PTR _ss$[esp+60], edi
  009ed	0f b6 fb	 movzx	 edi, bl
  009f0	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+2048]
  009f7	8b d1		 mov	 edx, ecx
  009f9	c1 ea 08	 shr	 edx, 8
  009fc	0f b6 d2	 movzx	 edx, dl
  009ff	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+1024]
  00a06	0f b6 d1	 movzx	 edx, cl
  00a09	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4]
  00a10	8b d6		 mov	 edx, esi
  00a12	31 54 24 20	 xor	 DWORD PTR _ss$[esp+68], edx
  00a16	8b da		 mov	 ebx, edx
  00a18	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00a1b	89 74 24 30	 mov	 DWORD PTR _ss$[esp+84], esi
  00a1f	0f b6 fb	 movzx	 edi, bl
  00a22	c1 ee 18	 shr	 esi, 24			; 00000018H
  00a25	8b 34 b5 00 0c
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4+3072]
  00a2c	33 34 bd 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+2048]
  00a33	8b da		 mov	 ebx, edx
  00a35	c1 eb 08	 shr	 ebx, 8
  00a38	0f b6 fb	 movzx	 edi, bl
  00a3b	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edi*4+1024]
  00a42	0f b6 d2	 movzx	 edx, dl
  00a45	33 34 95 00 00
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4]
  00a4c	8b 54 24 20	 mov	 edx, DWORD PTR _ss$[esp+68]
  00a50	33 70 30	 xor	 esi, DWORD PTR [eax+48]
  00a53	31 54 24 24	 xor	 DWORD PTR _ss$[esp+72], edx
  00a57	8b 54 24 24	 mov	 edx, DWORD PTR _ss$[esp+72]
  00a5b	31 54 24 28	 xor	 DWORD PTR _ss$[esp+76], edx
  00a5f	8b 54 24 2c	 mov	 edx, DWORD PTR _ss$[esp+80]
  00a63	33 54 24 28	 xor	 edx, DWORD PTR _ss$[esp+76]
  00a67	89 70 10	 mov	 DWORD PTR [eax+16], esi
  00a6a	33 70 34	 xor	 esi, DWORD PTR [eax+52]

; 531  :     kdl8(cx->ks, 6);

  00a6d	8b da		 mov	 ebx, edx
  00a6f	89 70 14	 mov	 DWORD PTR [eax+20], esi
  00a72	33 70 38	 xor	 esi, DWORD PTR [eax+56]
  00a75	c1 eb 10	 shr	 ebx, 16			; 00000010H
  00a78	89 70 18	 mov	 DWORD PTR [eax+24], esi
  00a7b	33 70 3c	 xor	 esi, DWORD PTR [eax+60]
  00a7e	0f b6 fb	 movzx	 edi, bl
  00a81	89 70 1c	 mov	 DWORD PTR [eax+28], esi
  00a84	8b f2		 mov	 esi, edx
  00a86	c1 ee 18	 shr	 esi, 24			; 00000018H
  00a89	8b 34 b5 00 08
	00 00		 mov	 esi, DWORD PTR _t_fl[esi*4+2048]
  00a90	33 34 bd 00 04
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4+1024]
  00a97	8b da		 mov	 ebx, edx
  00a99	c1 eb 08	 shr	 ebx, 8
  00a9c	0f b6 fb	 movzx	 edi, bl
  00a9f	33 34 bd 00 00
	00 00		 xor	 esi, DWORD PTR _t_fl[edi*4]
  00aa6	0f b6 d2	 movzx	 edx, dl
  00aa9	33 34 95 00 0c
	00 00		 xor	 esi, DWORD PTR _t_fl[edx*4+3072]
  00ab0	8b 54 24 10	 mov	 edx, DWORD PTR _ss$[esp+52]
  00ab4	33 35 18 00 00
	00		 xor	 esi, DWORD PTR _t_rc+24
  00aba	5f		 pop	 edi
  00abb	33 d6		 xor	 edx, esi
  00abd	8b 74 24 10	 mov	 esi, DWORD PTR _ss$[esp+52]
  00ac1	33 f2		 xor	 esi, edx
  00ac3	89 70 04	 mov	 DWORD PTR [eax+4], esi
  00ac6	89 74 24 10	 mov	 DWORD PTR _ss$[esp+52], esi
  00aca	8b 74 24 14	 mov	 esi, DWORD PTR _ss$[esp+56]
  00ace	33 74 24 10	 xor	 esi, DWORD PTR _ss$[esp+52]

; 532  : #endif
; 533  :     cx->inf.l = 0;

  00ad2	c7 80 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+240], 0
  00adc	33 ce		 xor	 ecx, esi
  00ade	89 70 08	 mov	 DWORD PTR [eax+8], esi
  00ae1	5e		 pop	 esi
  00ae2	5d		 pop	 ebp
  00ae3	89 10		 mov	 DWORD PTR [eax], edx
  00ae5	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 534  :     cx->inf.b[0] = 14 * 16;

  00ae8	c6 80 f0 00 00
	00 e0		 mov	 BYTE PTR [eax+240], 224	; 000000e0H
  00aef	89 54 24 04	 mov	 DWORD PTR _ss$[esp+40], edx

; 535  : 
; 536  : #ifdef USE_VIA_ACE_IF_PRESENT
; 537  :     if(VIA_ACE_AVAILABLE)
; 538  :         cx->inf.b[1] = 0xff;
; 539  : #endif
; 540  : 
; 541  : #if defined( AES_ERR_CHK )
; 542  :     return EXIT_SUCCESS;

  00af3	33 c0		 xor	 eax, eax
  00af5	5b		 pop	 ebx

; 543  : #endif
; 544  : }

  00af6	83 c4 24	 add	 esp, 36			; 00000024H
  00af9	c3		 ret	 0
_aes_decrypt_key256 ENDP
_TEXT	ENDS
END
