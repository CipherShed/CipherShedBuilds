; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\home\public\desktop\projects\ciphershed\src\crypto\aeskey.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_aes_encrypt_key256@8
EXTRN	_t_rc:BYTE
EXTRN	_t_fl:BYTE
; Function compile flags: /Odtp
; File c:\home\public\desktop\projects\ciphershed\src\crypto\aeskey.c
;	COMDAT _aes_encrypt_key256@8
_TEXT	SEGMENT
_ss$ = -32						; size = 32
_key$ = 8						; size = 4
_cx$ = 12						; size = 4
_aes_encrypt_key256@8 PROC				; COMDAT

; 175  : {   uint_32t    ss[8];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 20	 sub	 esp, 32			; 00000020H

; 176  : 
; 177  :     cx->ks[0] = ss[0] = word_in(key, 0);

  00008	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000d	89 4d e0	 mov	 DWORD PTR _ss$[ebp], ecx
  00010	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00013	8b 45 e0	 mov	 eax, DWORD PTR _ss$[ebp]
  00016	89 02		 mov	 DWORD PTR [edx], eax

; 178  :     cx->ks[1] = ss[1] = word_in(key, 1);

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  0001b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001e	89 55 e4	 mov	 DWORD PTR _ss$[ebp+4], edx
  00021	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00024	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  00027	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 179  :     cx->ks[2] = ss[2] = word_in(key, 2);

  0002a	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  0002d	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00030	89 45 e8	 mov	 DWORD PTR _ss$[ebp+8], eax
  00033	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00036	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+8]
  00039	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 180  :     cx->ks[3] = ss[3] = word_in(key, 3);

  0003c	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0003f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00042	89 4d ec	 mov	 DWORD PTR _ss$[ebp+12], ecx
  00045	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00048	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  0004b	89 42 0c	 mov	 DWORD PTR [edx+12], eax

; 181  :     cx->ks[4] = ss[4] = word_in(key, 4);

  0004e	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00051	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00054	89 55 f0	 mov	 DWORD PTR _ss$[ebp+16], edx
  00057	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0005a	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  0005d	89 48 10	 mov	 DWORD PTR [eax+16], ecx

; 182  :     cx->ks[5] = ss[5] = word_in(key, 5);

  00060	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  00063	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00066	89 45 f4	 mov	 DWORD PTR _ss$[ebp+20], eax
  00069	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0006c	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+20]
  0006f	89 51 14	 mov	 DWORD PTR [ecx+20], edx

; 183  :     cx->ks[6] = ss[6] = word_in(key, 6);

  00072	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00075	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00078	89 4d f8	 mov	 DWORD PTR _ss$[ebp+24], ecx
  0007b	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0007e	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+24]
  00081	89 42 18	 mov	 DWORD PTR [edx+24], eax

; 184  :     cx->ks[7] = ss[7] = word_in(key, 7);

  00084	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00087	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0008a	89 55 fc	 mov	 DWORD PTR _ss$[ebp+28], edx
  0008d	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00090	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  00093	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 185  : 
; 186  : #if ENC_UNROLL == NONE
; 187  :     {   uint_32t i;
; 188  :         for(i = 0; i < 6; ++i)
; 189  :             ke8(cx->ks,  i);
; 190  :     }
; 191  : #else
; 192  :     ke8(cx->ks, 0); ke8(cx->ks, 1);

  00096	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00099	c1 ea 08	 shr	 edx, 8
  0009c	0f b6 c2	 movzx	 eax, dl
  0009f	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  000a2	c1 e9 10	 shr	 ecx, 16			; 00000010H
  000a5	0f b6 d1	 movzx	 edx, cl
  000a8	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  000af	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  000b6	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  000b9	c1 e9 18	 shr	 ecx, 24			; 00000018H
  000bc	0f b6 d1	 movzx	 edx, cl
  000bf	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  000c6	0f b6 4d fc	 movzx	 ecx, BYTE PTR _ss$[ebp+28]
  000ca	33 04 8d 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[ecx*4+3072]
  000d1	33 05 00 00 00
	00		 xor	 eax, DWORD PTR _t_rc
  000d7	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp]
  000da	89 45 e0	 mov	 DWORD PTR _ss$[ebp], eax
  000dd	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  000e0	8b 45 e0	 mov	 eax, DWORD PTR _ss$[ebp]
  000e3	89 42 20	 mov	 DWORD PTR [edx+32], eax
  000e6	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  000e9	33 4d e0	 xor	 ecx, DWORD PTR _ss$[ebp]
  000ec	89 4d e4	 mov	 DWORD PTR _ss$[ebp+4], ecx
  000ef	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  000f2	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+4]
  000f5	89 42 24	 mov	 DWORD PTR [edx+36], eax
  000f8	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+8]
  000fb	33 4d e4	 xor	 ecx, DWORD PTR _ss$[ebp+4]
  000fe	89 4d e8	 mov	 DWORD PTR _ss$[ebp+8], ecx
  00101	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00104	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+8]
  00107	89 42 28	 mov	 DWORD PTR [edx+40], eax
  0010a	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  0010d	33 4d e8	 xor	 ecx, DWORD PTR _ss$[ebp+8]
  00110	89 4d ec	 mov	 DWORD PTR _ss$[ebp+12], ecx
  00113	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00116	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00119	89 42 2c	 mov	 DWORD PTR [edx+44], eax
  0011c	0f b6 4d ec	 movzx	 ecx, BYTE PTR _ss$[ebp+12]
  00120	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00123	c1 ea 08	 shr	 edx, 8
  00126	0f b6 c2	 movzx	 eax, dl
  00129	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  00130	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  00137	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  0013a	c1 ea 10	 shr	 edx, 16			; 00000010H
  0013d	0f b6 c2	 movzx	 eax, dl
  00140	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  00147	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  0014a	c1 ea 18	 shr	 edx, 24			; 00000018H
  0014d	0f b6 c2	 movzx	 eax, dl
  00150	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+3072]
  00157	33 4d f0	 xor	 ecx, DWORD PTR _ss$[ebp+16]
  0015a	89 4d f0	 mov	 DWORD PTR _ss$[ebp+16], ecx
  0015d	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00160	8b 55 f0	 mov	 edx, DWORD PTR _ss$[ebp+16]
  00163	89 51 30	 mov	 DWORD PTR [ecx+48], edx
  00166	8b 45 f4	 mov	 eax, DWORD PTR _ss$[ebp+20]
  00169	33 45 f0	 xor	 eax, DWORD PTR _ss$[ebp+16]
  0016c	89 45 f4	 mov	 DWORD PTR _ss$[ebp+20], eax
  0016f	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00172	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+20]
  00175	89 51 34	 mov	 DWORD PTR [ecx+52], edx
  00178	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+24]
  0017b	33 45 f4	 xor	 eax, DWORD PTR _ss$[ebp+20]
  0017e	89 45 f8	 mov	 DWORD PTR _ss$[ebp+24], eax
  00181	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00184	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+24]
  00187	89 51 38	 mov	 DWORD PTR [ecx+56], edx
  0018a	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  0018d	33 45 f8	 xor	 eax, DWORD PTR _ss$[ebp+24]
  00190	89 45 fc	 mov	 DWORD PTR _ss$[ebp+28], eax
  00193	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00196	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00199	89 51 3c	 mov	 DWORD PTR [ecx+60], edx
  0019c	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  0019f	c1 e8 08	 shr	 eax, 8
  001a2	0f b6 c8	 movzx	 ecx, al
  001a5	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  001a8	c1 ea 10	 shr	 edx, 16			; 00000010H
  001ab	0f b6 c2	 movzx	 eax, dl
  001ae	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  001b5	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  001bc	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  001bf	c1 ea 18	 shr	 edx, 24			; 00000018H
  001c2	0f b6 c2	 movzx	 eax, dl
  001c5	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  001cc	0f b6 55 fc	 movzx	 edx, BYTE PTR _ss$[ebp+28]
  001d0	33 0c 95 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[edx*4+3072]
  001d7	33 0d 04 00 00
	00		 xor	 ecx, DWORD PTR _t_rc+4
  001dd	33 4d e0	 xor	 ecx, DWORD PTR _ss$[ebp]
  001e0	89 4d e0	 mov	 DWORD PTR _ss$[ebp], ecx
  001e3	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  001e6	8b 4d e0	 mov	 ecx, DWORD PTR _ss$[ebp]
  001e9	89 48 40	 mov	 DWORD PTR [eax+64], ecx
  001ec	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+4]
  001ef	33 55 e0	 xor	 edx, DWORD PTR _ss$[ebp]
  001f2	89 55 e4	 mov	 DWORD PTR _ss$[ebp+4], edx
  001f5	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  001f8	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  001fb	89 48 44	 mov	 DWORD PTR [eax+68], ecx
  001fe	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+8]
  00201	33 55 e4	 xor	 edx, DWORD PTR _ss$[ebp+4]
  00204	89 55 e8	 mov	 DWORD PTR _ss$[ebp+8], edx
  00207	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0020a	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+8]
  0020d	89 48 48	 mov	 DWORD PTR [eax+72], ecx
  00210	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00213	33 55 e8	 xor	 edx, DWORD PTR _ss$[ebp+8]
  00216	89 55 ec	 mov	 DWORD PTR _ss$[ebp+12], edx
  00219	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0021c	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  0021f	89 48 4c	 mov	 DWORD PTR [eax+76], ecx
  00222	0f b6 55 ec	 movzx	 edx, BYTE PTR _ss$[ebp+12]
  00226	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00229	c1 e8 08	 shr	 eax, 8
  0022c	0f b6 c8	 movzx	 ecx, al
  0022f	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  00236	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  0023d	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00240	c1 e8 10	 shr	 eax, 16			; 00000010H
  00243	0f b6 c8	 movzx	 ecx, al
  00246	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  0024d	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00250	c1 e8 18	 shr	 eax, 24			; 00000018H
  00253	0f b6 c8	 movzx	 ecx, al
  00256	33 14 8d 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+3072]
  0025d	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+16]
  00260	89 55 f0	 mov	 DWORD PTR _ss$[ebp+16], edx
  00263	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00266	8b 45 f0	 mov	 eax, DWORD PTR _ss$[ebp+16]
  00269	89 42 50	 mov	 DWORD PTR [edx+80], eax
  0026c	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  0026f	33 4d f0	 xor	 ecx, DWORD PTR _ss$[ebp+16]
  00272	89 4d f4	 mov	 DWORD PTR _ss$[ebp+20], ecx
  00275	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00278	8b 45 f4	 mov	 eax, DWORD PTR _ss$[ebp+20]
  0027b	89 42 54	 mov	 DWORD PTR [edx+84], eax
  0027e	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  00281	33 4d f4	 xor	 ecx, DWORD PTR _ss$[ebp+20]
  00284	89 4d f8	 mov	 DWORD PTR _ss$[ebp+24], ecx
  00287	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0028a	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+24]
  0028d	89 42 58	 mov	 DWORD PTR [edx+88], eax
  00290	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  00293	33 4d f8	 xor	 ecx, DWORD PTR _ss$[ebp+24]
  00296	89 4d fc	 mov	 DWORD PTR _ss$[ebp+28], ecx
  00299	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0029c	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  0029f	89 42 5c	 mov	 DWORD PTR [edx+92], eax

; 193  :     ke8(cx->ks, 2); ke8(cx->ks, 3);

  002a2	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  002a5	c1 e9 08	 shr	 ecx, 8
  002a8	0f b6 d1	 movzx	 edx, cl
  002ab	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  002ae	c1 e8 10	 shr	 eax, 16			; 00000010H
  002b1	0f b6 c8	 movzx	 ecx, al
  002b4	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  002bb	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  002c2	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  002c5	c1 e8 18	 shr	 eax, 24			; 00000018H
  002c8	0f b6 c8	 movzx	 ecx, al
  002cb	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  002d2	0f b6 45 fc	 movzx	 eax, BYTE PTR _ss$[ebp+28]
  002d6	33 14 85 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[eax*4+3072]
  002dd	33 15 08 00 00
	00		 xor	 edx, DWORD PTR _t_rc+8
  002e3	33 55 e0	 xor	 edx, DWORD PTR _ss$[ebp]
  002e6	89 55 e0	 mov	 DWORD PTR _ss$[ebp], edx
  002e9	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  002ec	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp]
  002ef	89 51 60	 mov	 DWORD PTR [ecx+96], edx
  002f2	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+4]
  002f5	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp]
  002f8	89 45 e4	 mov	 DWORD PTR _ss$[ebp+4], eax
  002fb	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  002fe	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+4]
  00301	89 51 64	 mov	 DWORD PTR [ecx+100], edx
  00304	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+8]
  00307	33 45 e4	 xor	 eax, DWORD PTR _ss$[ebp+4]
  0030a	89 45 e8	 mov	 DWORD PTR _ss$[ebp+8], eax
  0030d	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00310	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+8]
  00313	89 51 68	 mov	 DWORD PTR [ecx+104], edx
  00316	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00319	33 45 e8	 xor	 eax, DWORD PTR _ss$[ebp+8]
  0031c	89 45 ec	 mov	 DWORD PTR _ss$[ebp+12], eax
  0031f	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00322	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00325	89 51 6c	 mov	 DWORD PTR [ecx+108], edx
  00328	0f b6 45 ec	 movzx	 eax, BYTE PTR _ss$[ebp+12]
  0032c	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  0032f	c1 e9 08	 shr	 ecx, 8
  00332	0f b6 d1	 movzx	 edx, cl
  00335	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  0033c	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  00343	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00346	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00349	0f b6 d1	 movzx	 edx, cl
  0034c	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  00353	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00356	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00359	0f b6 d1	 movzx	 edx, cl
  0035c	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+3072]
  00363	33 45 f0	 xor	 eax, DWORD PTR _ss$[ebp+16]
  00366	89 45 f0	 mov	 DWORD PTR _ss$[ebp+16], eax
  00369	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0036c	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  0036f	89 48 70	 mov	 DWORD PTR [eax+112], ecx
  00372	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+20]
  00375	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+16]
  00378	89 55 f4	 mov	 DWORD PTR _ss$[ebp+20], edx
  0037b	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0037e	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  00381	89 48 74	 mov	 DWORD PTR [eax+116], ecx
  00384	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+24]
  00387	33 55 f4	 xor	 edx, DWORD PTR _ss$[ebp+20]
  0038a	89 55 f8	 mov	 DWORD PTR _ss$[ebp+24], edx
  0038d	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00390	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  00393	89 48 78	 mov	 DWORD PTR [eax+120], ecx
  00396	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00399	33 55 f8	 xor	 edx, DWORD PTR _ss$[ebp+24]
  0039c	89 55 fc	 mov	 DWORD PTR _ss$[ebp+28], edx
  0039f	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  003a2	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  003a5	89 48 7c	 mov	 DWORD PTR [eax+124], ecx
  003a8	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  003ab	c1 ea 08	 shr	 edx, 8
  003ae	0f b6 c2	 movzx	 eax, dl
  003b1	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  003b4	c1 e9 10	 shr	 ecx, 16			; 00000010H
  003b7	0f b6 d1	 movzx	 edx, cl
  003ba	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  003c1	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  003c8	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  003cb	c1 e9 18	 shr	 ecx, 24			; 00000018H
  003ce	0f b6 d1	 movzx	 edx, cl
  003d1	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  003d8	0f b6 4d fc	 movzx	 ecx, BYTE PTR _ss$[ebp+28]
  003dc	33 04 8d 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[ecx*4+3072]
  003e3	33 05 0c 00 00
	00		 xor	 eax, DWORD PTR _t_rc+12
  003e9	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp]
  003ec	89 45 e0	 mov	 DWORD PTR _ss$[ebp], eax
  003ef	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  003f2	8b 45 e0	 mov	 eax, DWORD PTR _ss$[ebp]
  003f5	89 82 80 00 00
	00		 mov	 DWORD PTR [edx+128], eax
  003fb	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  003fe	33 4d e0	 xor	 ecx, DWORD PTR _ss$[ebp]
  00401	89 4d e4	 mov	 DWORD PTR _ss$[ebp+4], ecx
  00404	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00407	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+4]
  0040a	89 82 84 00 00
	00		 mov	 DWORD PTR [edx+132], eax
  00410	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+8]
  00413	33 4d e4	 xor	 ecx, DWORD PTR _ss$[ebp+4]
  00416	89 4d e8	 mov	 DWORD PTR _ss$[ebp+8], ecx
  00419	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0041c	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+8]
  0041f	89 82 88 00 00
	00		 mov	 DWORD PTR [edx+136], eax
  00425	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00428	33 4d e8	 xor	 ecx, DWORD PTR _ss$[ebp+8]
  0042b	89 4d ec	 mov	 DWORD PTR _ss$[ebp+12], ecx
  0042e	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00431	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00434	89 82 8c 00 00
	00		 mov	 DWORD PTR [edx+140], eax
  0043a	0f b6 4d ec	 movzx	 ecx, BYTE PTR _ss$[ebp+12]
  0043e	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00441	c1 ea 08	 shr	 edx, 8
  00444	0f b6 c2	 movzx	 eax, dl
  00447	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  0044e	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  00455	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00458	c1 ea 10	 shr	 edx, 16			; 00000010H
  0045b	0f b6 c2	 movzx	 eax, dl
  0045e	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  00465	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00468	c1 ea 18	 shr	 edx, 24			; 00000018H
  0046b	0f b6 c2	 movzx	 eax, dl
  0046e	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+3072]
  00475	33 4d f0	 xor	 ecx, DWORD PTR _ss$[ebp+16]
  00478	89 4d f0	 mov	 DWORD PTR _ss$[ebp+16], ecx
  0047b	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0047e	8b 55 f0	 mov	 edx, DWORD PTR _ss$[ebp+16]
  00481	89 91 90 00 00
	00		 mov	 DWORD PTR [ecx+144], edx
  00487	8b 45 f4	 mov	 eax, DWORD PTR _ss$[ebp+20]
  0048a	33 45 f0	 xor	 eax, DWORD PTR _ss$[ebp+16]
  0048d	89 45 f4	 mov	 DWORD PTR _ss$[ebp+20], eax
  00490	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00493	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+20]
  00496	89 91 94 00 00
	00		 mov	 DWORD PTR [ecx+148], edx
  0049c	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+24]
  0049f	33 45 f4	 xor	 eax, DWORD PTR _ss$[ebp+20]
  004a2	89 45 f8	 mov	 DWORD PTR _ss$[ebp+24], eax
  004a5	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  004a8	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+24]
  004ab	89 91 98 00 00
	00		 mov	 DWORD PTR [ecx+152], edx
  004b1	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  004b4	33 45 f8	 xor	 eax, DWORD PTR _ss$[ebp+24]
  004b7	89 45 fc	 mov	 DWORD PTR _ss$[ebp+28], eax
  004ba	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  004bd	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  004c0	89 91 9c 00 00
	00		 mov	 DWORD PTR [ecx+156], edx

; 194  :     ke8(cx->ks, 4); ke8(cx->ks, 5);

  004c6	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  004c9	c1 e8 08	 shr	 eax, 8
  004cc	0f b6 c8	 movzx	 ecx, al
  004cf	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  004d2	c1 ea 10	 shr	 edx, 16			; 00000010H
  004d5	0f b6 c2	 movzx	 eax, dl
  004d8	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  004df	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  004e6	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  004e9	c1 ea 18	 shr	 edx, 24			; 00000018H
  004ec	0f b6 c2	 movzx	 eax, dl
  004ef	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  004f6	0f b6 55 fc	 movzx	 edx, BYTE PTR _ss$[ebp+28]
  004fa	33 0c 95 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[edx*4+3072]
  00501	33 0d 10 00 00
	00		 xor	 ecx, DWORD PTR _t_rc+16
  00507	33 4d e0	 xor	 ecx, DWORD PTR _ss$[ebp]
  0050a	89 4d e0	 mov	 DWORD PTR _ss$[ebp], ecx
  0050d	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00510	8b 4d e0	 mov	 ecx, DWORD PTR _ss$[ebp]
  00513	89 88 a0 00 00
	00		 mov	 DWORD PTR [eax+160], ecx
  00519	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+4]
  0051c	33 55 e0	 xor	 edx, DWORD PTR _ss$[ebp]
  0051f	89 55 e4	 mov	 DWORD PTR _ss$[ebp+4], edx
  00522	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00525	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  00528	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
  0052e	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+8]
  00531	33 55 e4	 xor	 edx, DWORD PTR _ss$[ebp+4]
  00534	89 55 e8	 mov	 DWORD PTR _ss$[ebp+8], edx
  00537	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0053a	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+8]
  0053d	89 88 a8 00 00
	00		 mov	 DWORD PTR [eax+168], ecx
  00543	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00546	33 55 e8	 xor	 edx, DWORD PTR _ss$[ebp+8]
  00549	89 55 ec	 mov	 DWORD PTR _ss$[ebp+12], edx
  0054c	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0054f	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00552	89 88 ac 00 00
	00		 mov	 DWORD PTR [eax+172], ecx
  00558	0f b6 55 ec	 movzx	 edx, BYTE PTR _ss$[ebp+12]
  0055c	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  0055f	c1 e8 08	 shr	 eax, 8
  00562	0f b6 c8	 movzx	 ecx, al
  00565	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  0056c	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  00573	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00576	c1 e8 10	 shr	 eax, 16			; 00000010H
  00579	0f b6 c8	 movzx	 ecx, al
  0057c	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  00583	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00586	c1 e8 18	 shr	 eax, 24			; 00000018H
  00589	0f b6 c8	 movzx	 ecx, al
  0058c	33 14 8d 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+3072]
  00593	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+16]
  00596	89 55 f0	 mov	 DWORD PTR _ss$[ebp+16], edx
  00599	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0059c	8b 45 f0	 mov	 eax, DWORD PTR _ss$[ebp+16]
  0059f	89 82 b0 00 00
	00		 mov	 DWORD PTR [edx+176], eax
  005a5	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  005a8	33 4d f0	 xor	 ecx, DWORD PTR _ss$[ebp+16]
  005ab	89 4d f4	 mov	 DWORD PTR _ss$[ebp+20], ecx
  005ae	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  005b1	8b 45 f4	 mov	 eax, DWORD PTR _ss$[ebp+20]
  005b4	89 82 b4 00 00
	00		 mov	 DWORD PTR [edx+180], eax
  005ba	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  005bd	33 4d f4	 xor	 ecx, DWORD PTR _ss$[ebp+20]
  005c0	89 4d f8	 mov	 DWORD PTR _ss$[ebp+24], ecx
  005c3	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  005c6	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+24]
  005c9	89 82 b8 00 00
	00		 mov	 DWORD PTR [edx+184], eax
  005cf	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  005d2	33 4d f8	 xor	 ecx, DWORD PTR _ss$[ebp+24]
  005d5	89 4d fc	 mov	 DWORD PTR _ss$[ebp+28], ecx
  005d8	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  005db	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  005de	89 82 bc 00 00
	00		 mov	 DWORD PTR [edx+188], eax
  005e4	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  005e7	c1 e9 08	 shr	 ecx, 8
  005ea	0f b6 d1	 movzx	 edx, cl
  005ed	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  005f0	c1 e8 10	 shr	 eax, 16			; 00000010H
  005f3	0f b6 c8	 movzx	 ecx, al
  005f6	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  005fd	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  00604	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+28]
  00607	c1 e8 18	 shr	 eax, 24			; 00000018H
  0060a	0f b6 c8	 movzx	 ecx, al
  0060d	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  00614	0f b6 45 fc	 movzx	 eax, BYTE PTR _ss$[ebp+28]
  00618	33 14 85 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[eax*4+3072]
  0061f	33 15 14 00 00
	00		 xor	 edx, DWORD PTR _t_rc+20
  00625	33 55 e0	 xor	 edx, DWORD PTR _ss$[ebp]
  00628	89 55 e0	 mov	 DWORD PTR _ss$[ebp], edx
  0062b	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0062e	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp]
  00631	89 91 c0 00 00
	00		 mov	 DWORD PTR [ecx+192], edx
  00637	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+4]
  0063a	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp]
  0063d	89 45 e4	 mov	 DWORD PTR _ss$[ebp+4], eax
  00640	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00643	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+4]
  00646	89 91 c4 00 00
	00		 mov	 DWORD PTR [ecx+196], edx
  0064c	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+8]
  0064f	33 45 e4	 xor	 eax, DWORD PTR _ss$[ebp+4]
  00652	89 45 e8	 mov	 DWORD PTR _ss$[ebp+8], eax
  00655	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00658	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+8]
  0065b	89 91 c8 00 00
	00		 mov	 DWORD PTR [ecx+200], edx
  00661	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00664	33 45 e8	 xor	 eax, DWORD PTR _ss$[ebp+8]
  00667	89 45 ec	 mov	 DWORD PTR _ss$[ebp+12], eax
  0066a	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0066d	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00670	89 91 cc 00 00
	00		 mov	 DWORD PTR [ecx+204], edx
  00676	0f b6 45 ec	 movzx	 eax, BYTE PTR _ss$[ebp+12]
  0067a	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  0067d	c1 e9 08	 shr	 ecx, 8
  00680	0f b6 d1	 movzx	 edx, cl
  00683	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  0068a	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  00691	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00694	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00697	0f b6 d1	 movzx	 edx, cl
  0069a	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  006a1	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  006a4	c1 e9 18	 shr	 ecx, 24			; 00000018H
  006a7	0f b6 d1	 movzx	 edx, cl
  006aa	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+3072]
  006b1	33 45 f0	 xor	 eax, DWORD PTR _ss$[ebp+16]
  006b4	89 45 f0	 mov	 DWORD PTR _ss$[ebp+16], eax
  006b7	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  006ba	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  006bd	89 88 d0 00 00
	00		 mov	 DWORD PTR [eax+208], ecx
  006c3	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+20]
  006c6	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+16]
  006c9	89 55 f4	 mov	 DWORD PTR _ss$[ebp+20], edx
  006cc	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  006cf	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  006d2	89 88 d4 00 00
	00		 mov	 DWORD PTR [eax+212], ecx
  006d8	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+24]
  006db	33 55 f4	 xor	 edx, DWORD PTR _ss$[ebp+20]
  006de	89 55 f8	 mov	 DWORD PTR _ss$[ebp+24], edx
  006e1	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  006e4	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  006e7	89 88 d8 00 00
	00		 mov	 DWORD PTR [eax+216], ecx
  006ed	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  006f0	33 55 f8	 xor	 edx, DWORD PTR _ss$[ebp+24]
  006f3	89 55 fc	 mov	 DWORD PTR _ss$[ebp+28], edx
  006f6	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  006f9	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  006fc	89 88 dc 00 00
	00		 mov	 DWORD PTR [eax+220], ecx

; 195  : #endif
; 196  :     kef8(cx->ks, 6);

  00702	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00705	c1 ea 08	 shr	 edx, 8
  00708	0f b6 c2	 movzx	 eax, dl
  0070b	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  0070e	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00711	0f b6 d1	 movzx	 edx, cl
  00714	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  0071b	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  00722	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  00725	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00728	0f b6 d1	 movzx	 edx, cl
  0072b	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  00732	0f b6 4d fc	 movzx	 ecx, BYTE PTR _ss$[ebp+28]
  00736	33 04 8d 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[ecx*4+3072]
  0073d	33 05 18 00 00
	00		 xor	 eax, DWORD PTR _t_rc+24
  00743	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp]
  00746	89 45 e0	 mov	 DWORD PTR _ss$[ebp], eax
  00749	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0074c	8b 45 e0	 mov	 eax, DWORD PTR _ss$[ebp]
  0074f	89 82 e0 00 00
	00		 mov	 DWORD PTR [edx+224], eax
  00755	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  00758	33 4d e0	 xor	 ecx, DWORD PTR _ss$[ebp]
  0075b	89 4d e4	 mov	 DWORD PTR _ss$[ebp+4], ecx
  0075e	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00761	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+4]
  00764	89 82 e4 00 00
	00		 mov	 DWORD PTR [edx+228], eax
  0076a	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+8]
  0076d	33 4d e4	 xor	 ecx, DWORD PTR _ss$[ebp+4]
  00770	89 4d e8	 mov	 DWORD PTR _ss$[ebp+8], ecx
  00773	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00776	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+8]
  00779	89 82 e8 00 00
	00		 mov	 DWORD PTR [edx+232], eax
  0077f	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00782	33 4d e8	 xor	 ecx, DWORD PTR _ss$[ebp+8]
  00785	89 4d ec	 mov	 DWORD PTR _ss$[ebp+12], ecx
  00788	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0078b	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+12]
  0078e	89 82 ec 00 00
	00		 mov	 DWORD PTR [edx+236], eax

; 197  :     cx->inf.l = 0;

  00794	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00797	c7 81 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [ecx+240], 0

; 198  :     cx->inf.b[0] = 14 * 16;

  007a1	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  007a4	c6 82 f0 00 00
	00 e0		 mov	 BYTE PTR [edx+240], 224	; 000000e0H

; 199  : 
; 200  : #ifdef USE_VIA_ACE_IF_PRESENT
; 201  :     if(VIA_ACE_AVAILABLE)
; 202  :         cx->inf.b[1] = 0xff;
; 203  : #endif
; 204  : 
; 205  : #if defined( AES_ERR_CHK )
; 206  :     return EXIT_SUCCESS;

  007ab	33 c0		 xor	 eax, eax

; 207  : #endif
; 208  : }

  007ad	8b e5		 mov	 esp, ebp
  007af	5d		 pop	 ebp
  007b0	c2 08 00	 ret	 8
_aes_encrypt_key256@8 ENDP
_TEXT	ENDS
PUBLIC	_aes_decrypt_key256@8
EXTRN	_t_im:BYTE
; Function compile flags: /Odtp
;	COMDAT _aes_decrypt_key256@8
_TEXT	SEGMENT
_ss$ = -36						; size = 36
_key$ = 8						; size = 4
_cx$ = 12						; size = 4
_aes_decrypt_key256@8 PROC				; COMDAT

; 498  : {   uint_32t    ss[9];

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 24	 sub	 esp, 36			; 00000024H
  00008	56		 push	 esi

; 499  : #if defined( d_vars )
; 500  :         d_vars;
; 501  : #endif
; 502  :     cx->ks[v(56,(0))] = ss[0] = word_in(key, 0);

  00009	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0000c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000e	89 4d dc	 mov	 DWORD PTR _ss$[ebp], ecx
  00011	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00014	8b 45 dc	 mov	 eax, DWORD PTR _ss$[ebp]
  00017	89 82 e0 00 00
	00		 mov	 DWORD PTR [edx+224], eax

; 503  :     cx->ks[v(56,(1))] = ss[1] = word_in(key, 1);

  0001d	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00020	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00023	89 55 e0	 mov	 DWORD PTR _ss$[ebp+4], edx
  00026	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00029	8b 4d e0	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  0002c	89 88 e4 00 00
	00		 mov	 DWORD PTR [eax+228], ecx

; 504  :     cx->ks[v(56,(2))] = ss[2] = word_in(key, 2);

  00032	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  00035	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00038	89 45 e4	 mov	 DWORD PTR _ss$[ebp+8], eax
  0003b	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0003e	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+8]
  00041	89 91 e8 00 00
	00		 mov	 DWORD PTR [ecx+232], edx

; 505  :     cx->ks[v(56,(3))] = ss[3] = word_in(key, 3);

  00047	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  0004a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0004d	89 4d e8	 mov	 DWORD PTR _ss$[ebp+12], ecx
  00050	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00053	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00056	89 82 ec 00 00
	00		 mov	 DWORD PTR [edx+236], eax

; 506  : 
; 507  : #if DEC_UNROLL == NONE
; 508  :     cx->ks[v(56,(4))] = ss[4] = word_in(key, 4);
; 509  :     cx->ks[v(56,(5))] = ss[5] = word_in(key, 5);
; 510  :     cx->ks[v(56,(6))] = ss[6] = word_in(key, 6);
; 511  :     cx->ks[v(56,(7))] = ss[7] = word_in(key, 7);
; 512  :     {   uint_32t i;
; 513  : 
; 514  :         for(i = 0; i < 6; ++i)
; 515  :             k8e(cx->ks,  i);
; 516  :         k8ef(cx->ks,  6);
; 517  : #if !(DEC_ROUND == NO_TABLES)
; 518  :         for(i = N_COLS; i < 14 * N_COLS; ++i)
; 519  :             cx->ks[i] = inv_mcol(cx->ks[i]);
; 520  : 
; 521  : #endif
; 522  :     }
; 523  : #else
; 524  :     cx->ks[v(56,(4))] = ff(ss[4] = word_in(key, 4));

  0005c	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  0005f	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00062	89 55 ec	 mov	 DWORD PTR _ss$[ebp+16], edx
  00065	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00068	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0006b	89 4d ec	 mov	 DWORD PTR _ss$[ebp+16], ecx
  0006e	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  00071	8b 42 10	 mov	 eax, DWORD PTR [edx+16]
  00074	89 45 ec	 mov	 DWORD PTR _ss$[ebp+16], eax
  00077	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  0007a	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0007d	89 55 ec	 mov	 DWORD PTR _ss$[ebp+16], edx
  00080	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+16]
  00083	c1 e8 18	 shr	 eax, 24			; 00000018H
  00086	0f b6 c8	 movzx	 ecx, al
  00089	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+16]
  0008c	c1 ea 10	 shr	 edx, 16			; 00000010H
  0008f	0f b6 c2	 movzx	 eax, dl
  00092	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+16]
  00095	c1 ea 08	 shr	 edx, 8
  00098	0f b6 d2	 movzx	 edx, dl
  0009b	0f b6 75 ec	 movzx	 esi, BYTE PTR _ss$[ebp+16]
  0009f	8b 34 b5 00 00
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4]
  000a6	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4+1024]
  000ad	33 34 85 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[eax*4+2048]
  000b4	33 34 8d 00 0c
	00 00		 xor	 esi, DWORD PTR _t_im[ecx*4+3072]
  000bb	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  000be	89 b0 d0 00 00
	00		 mov	 DWORD PTR [eax+208], esi

; 525  :     cx->ks[v(56,(5))] = ff(ss[5] = word_in(key, 5));

  000c4	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  000c7	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000ca	89 55 f0	 mov	 DWORD PTR _ss$[ebp+20], edx
  000cd	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  000d0	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  000d3	89 4d f0	 mov	 DWORD PTR _ss$[ebp+20], ecx
  000d6	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  000d9	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  000dc	89 45 f0	 mov	 DWORD PTR _ss$[ebp+20], eax
  000df	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  000e2	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  000e5	89 55 f0	 mov	 DWORD PTR _ss$[ebp+20], edx
  000e8	8b 45 f0	 mov	 eax, DWORD PTR _ss$[ebp+20]
  000eb	c1 e8 18	 shr	 eax, 24			; 00000018H
  000ee	0f b6 c8	 movzx	 ecx, al
  000f1	8b 55 f0	 mov	 edx, DWORD PTR _ss$[ebp+20]
  000f4	c1 ea 10	 shr	 edx, 16			; 00000010H
  000f7	0f b6 c2	 movzx	 eax, dl
  000fa	8b 55 f0	 mov	 edx, DWORD PTR _ss$[ebp+20]
  000fd	c1 ea 08	 shr	 edx, 8
  00100	0f b6 d2	 movzx	 edx, dl
  00103	0f b6 75 f0	 movzx	 esi, BYTE PTR _ss$[ebp+20]
  00107	8b 34 b5 00 00
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4]
  0010e	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4+1024]
  00115	33 34 85 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[eax*4+2048]
  0011c	33 34 8d 00 0c
	00 00		 xor	 esi, DWORD PTR _t_im[ecx*4+3072]
  00123	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00126	89 b0 d4 00 00
	00		 mov	 DWORD PTR [eax+212], esi

; 526  :     cx->ks[v(56,(6))] = ff(ss[6] = word_in(key, 6));

  0012c	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  0012f	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  00132	89 55 f4	 mov	 DWORD PTR _ss$[ebp+24], edx
  00135	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  00138	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0013b	89 4d f4	 mov	 DWORD PTR _ss$[ebp+24], ecx
  0013e	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  00141	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00144	89 45 f4	 mov	 DWORD PTR _ss$[ebp+24], eax
  00147	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  0014a	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]
  0014d	89 55 f4	 mov	 DWORD PTR _ss$[ebp+24], edx
  00150	8b 45 f4	 mov	 eax, DWORD PTR _ss$[ebp+24]
  00153	c1 e8 18	 shr	 eax, 24			; 00000018H
  00156	0f b6 c8	 movzx	 ecx, al
  00159	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+24]
  0015c	c1 ea 10	 shr	 edx, 16			; 00000010H
  0015f	0f b6 c2	 movzx	 eax, dl
  00162	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+24]
  00165	c1 ea 08	 shr	 edx, 8
  00168	0f b6 d2	 movzx	 edx, dl
  0016b	0f b6 75 f4	 movzx	 esi, BYTE PTR _ss$[ebp+24]
  0016f	8b 34 b5 00 00
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4]
  00176	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4+1024]
  0017d	33 34 85 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[eax*4+2048]
  00184	33 34 8d 00 0c
	00 00		 xor	 esi, DWORD PTR _t_im[ecx*4+3072]
  0018b	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  0018e	89 b0 d8 00 00
	00		 mov	 DWORD PTR [eax+216], esi

; 527  :     cx->ks[v(56,(7))] = ff(ss[7] = word_in(key, 7));

  00194	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  00197	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  0019a	89 55 f8	 mov	 DWORD PTR _ss$[ebp+28], edx
  0019d	8b 45 08	 mov	 eax, DWORD PTR _key$[ebp]
  001a0	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  001a3	89 4d f8	 mov	 DWORD PTR _ss$[ebp+28], ecx
  001a6	8b 55 08	 mov	 edx, DWORD PTR _key$[ebp]
  001a9	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  001ac	89 45 f8	 mov	 DWORD PTR _ss$[ebp+28], eax
  001af	8b 4d 08	 mov	 ecx, DWORD PTR _key$[ebp]
  001b2	8b 51 1c	 mov	 edx, DWORD PTR [ecx+28]
  001b5	89 55 f8	 mov	 DWORD PTR _ss$[ebp+28], edx
  001b8	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  001bb	c1 e8 18	 shr	 eax, 24			; 00000018H
  001be	0f b6 c8	 movzx	 ecx, al
  001c1	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  001c4	c1 ea 10	 shr	 edx, 16			; 00000010H
  001c7	0f b6 c2	 movzx	 eax, dl
  001ca	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  001cd	c1 ea 08	 shr	 edx, 8
  001d0	0f b6 d2	 movzx	 edx, dl
  001d3	0f b6 75 f8	 movzx	 esi, BYTE PTR _ss$[ebp+28]
  001d7	8b 34 b5 00 00
	00 00		 mov	 esi, DWORD PTR _t_im[esi*4]
  001de	33 34 95 00 04
	00 00		 xor	 esi, DWORD PTR _t_im[edx*4+1024]
  001e5	33 34 85 00 08
	00 00		 xor	 esi, DWORD PTR _t_im[eax*4+2048]
  001ec	33 34 8d 00 0c
	00 00		 xor	 esi, DWORD PTR _t_im[ecx*4+3072]
  001f3	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  001f6	89 b0 dc 00 00
	00		 mov	 DWORD PTR [eax+220], esi

; 528  :     kdf8(cx->ks, 0); kd8(cx->ks, 1);

  001fc	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  001ff	c1 e9 08	 shr	 ecx, 8
  00202	0f b6 d1	 movzx	 edx, cl
  00205	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  00208	c1 e8 10	 shr	 eax, 16			; 00000010H
  0020b	0f b6 c8	 movzx	 ecx, al
  0020e	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  00215	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  0021c	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  0021f	c1 e8 18	 shr	 eax, 24			; 00000018H
  00222	0f b6 c8	 movzx	 ecx, al
  00225	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  0022c	0f b6 45 f8	 movzx	 eax, BYTE PTR _ss$[ebp+28]
  00230	33 14 85 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[eax*4+3072]
  00237	33 15 00 00 00
	00		 xor	 edx, DWORD PTR _t_rc
  0023d	33 55 dc	 xor	 edx, DWORD PTR _ss$[ebp]
  00240	89 55 dc	 mov	 DWORD PTR _ss$[ebp], edx
  00243	0f b6 4d dc	 movzx	 ecx, BYTE PTR _ss$[ebp]
  00247	8b 55 dc	 mov	 edx, DWORD PTR _ss$[ebp]
  0024a	c1 ea 08	 shr	 edx, 8
  0024d	0f b6 c2	 movzx	 eax, dl
  00250	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_im[ecx*4]
  00257	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+1024]
  0025e	8b 55 dc	 mov	 edx, DWORD PTR _ss$[ebp]
  00261	c1 ea 10	 shr	 edx, 16			; 00000010H
  00264	0f b6 c2	 movzx	 eax, dl
  00267	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+2048]
  0026e	8b 55 dc	 mov	 edx, DWORD PTR _ss$[ebp]
  00271	c1 ea 18	 shr	 edx, 24			; 00000018H
  00274	0f b6 c2	 movzx	 eax, dl
  00277	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+3072]
  0027e	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00281	89 8a c0 00 00
	00		 mov	 DWORD PTR [edx+192], ecx
  00287	8b 45 e0	 mov	 eax, DWORD PTR _ss$[ebp+4]
  0028a	33 45 dc	 xor	 eax, DWORD PTR _ss$[ebp]
  0028d	89 45 e0	 mov	 DWORD PTR _ss$[ebp+4], eax
  00290	0f b6 4d e0	 movzx	 ecx, BYTE PTR _ss$[ebp+4]
  00294	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp+4]
  00297	c1 ea 08	 shr	 edx, 8
  0029a	0f b6 c2	 movzx	 eax, dl
  0029d	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_im[ecx*4]
  002a4	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+1024]
  002ab	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp+4]
  002ae	c1 ea 10	 shr	 edx, 16			; 00000010H
  002b1	0f b6 c2	 movzx	 eax, dl
  002b4	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+2048]
  002bb	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp+4]
  002be	c1 ea 18	 shr	 edx, 24			; 00000018H
  002c1	0f b6 c2	 movzx	 eax, dl
  002c4	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+3072]
  002cb	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  002ce	89 8a c4 00 00
	00		 mov	 DWORD PTR [edx+196], ecx
  002d4	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+8]
  002d7	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp+4]
  002da	89 45 e4	 mov	 DWORD PTR _ss$[ebp+8], eax
  002dd	0f b6 4d e4	 movzx	 ecx, BYTE PTR _ss$[ebp+8]
  002e1	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+8]
  002e4	c1 ea 08	 shr	 edx, 8
  002e7	0f b6 c2	 movzx	 eax, dl
  002ea	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_im[ecx*4]
  002f1	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+1024]
  002f8	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+8]
  002fb	c1 ea 10	 shr	 edx, 16			; 00000010H
  002fe	0f b6 c2	 movzx	 eax, dl
  00301	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+2048]
  00308	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+8]
  0030b	c1 ea 18	 shr	 edx, 24			; 00000018H
  0030e	0f b6 c2	 movzx	 eax, dl
  00311	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+3072]
  00318	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0031b	89 8a c8 00 00
	00		 mov	 DWORD PTR [edx+200], ecx
  00321	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00324	33 45 e4	 xor	 eax, DWORD PTR _ss$[ebp+8]
  00327	89 45 e8	 mov	 DWORD PTR _ss$[ebp+12], eax
  0032a	0f b6 4d e8	 movzx	 ecx, BYTE PTR _ss$[ebp+12]
  0032e	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00331	c1 ea 08	 shr	 edx, 8
  00334	0f b6 c2	 movzx	 eax, dl
  00337	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_im[ecx*4]
  0033e	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+1024]
  00345	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00348	c1 ea 10	 shr	 edx, 16			; 00000010H
  0034b	0f b6 c2	 movzx	 eax, dl
  0034e	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+2048]
  00355	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00358	c1 ea 18	 shr	 edx, 24			; 00000018H
  0035b	0f b6 c2	 movzx	 eax, dl
  0035e	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+3072]
  00365	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00368	89 8a cc 00 00
	00		 mov	 DWORD PTR [edx+204], ecx
  0036e	0f b6 45 e8	 movzx	 eax, BYTE PTR _ss$[ebp+12]
  00372	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00375	c1 e9 08	 shr	 ecx, 8
  00378	0f b6 d1	 movzx	 edx, cl
  0037b	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  00382	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  00389	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  0038c	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0038f	0f b6 d1	 movzx	 edx, cl
  00392	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  00399	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  0039c	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0039f	0f b6 d1	 movzx	 edx, cl
  003a2	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+3072]
  003a9	33 45 ec	 xor	 eax, DWORD PTR _ss$[ebp+16]
  003ac	89 45 ec	 mov	 DWORD PTR _ss$[ebp+16], eax
  003af	0f b6 45 ec	 movzx	 eax, BYTE PTR _ss$[ebp+16]
  003b3	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  003b6	c1 e9 08	 shr	 ecx, 8
  003b9	0f b6 d1	 movzx	 edx, cl
  003bc	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  003c3	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  003ca	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  003cd	c1 e9 10	 shr	 ecx, 16			; 00000010H
  003d0	0f b6 d1	 movzx	 edx, cl
  003d3	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  003da	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  003dd	c1 e9 18	 shr	 ecx, 24			; 00000018H
  003e0	0f b6 d1	 movzx	 edx, cl
  003e3	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  003ea	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  003ed	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax
  003f3	8b 55 f0	 mov	 edx, DWORD PTR _ss$[ebp+20]
  003f6	33 55 ec	 xor	 edx, DWORD PTR _ss$[ebp+16]
  003f9	89 55 f0	 mov	 DWORD PTR _ss$[ebp+20], edx
  003fc	0f b6 45 f0	 movzx	 eax, BYTE PTR _ss$[ebp+20]
  00400	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  00403	c1 e9 08	 shr	 ecx, 8
  00406	0f b6 d1	 movzx	 edx, cl
  00409	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  00410	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  00417	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  0041a	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0041d	0f b6 d1	 movzx	 edx, cl
  00420	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  00427	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  0042a	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0042d	0f b6 d1	 movzx	 edx, cl
  00430	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  00437	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0043a	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax
  00440	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+24]
  00443	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+20]
  00446	89 55 f4	 mov	 DWORD PTR _ss$[ebp+24], edx
  00449	0f b6 45 f4	 movzx	 eax, BYTE PTR _ss$[ebp+24]
  0044d	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  00450	c1 e9 08	 shr	 ecx, 8
  00453	0f b6 d1	 movzx	 edx, cl
  00456	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  0045d	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  00464	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  00467	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0046a	0f b6 d1	 movzx	 edx, cl
  0046d	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  00474	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  00477	c1 e9 18	 shr	 ecx, 24			; 00000018H
  0047a	0f b6 d1	 movzx	 edx, cl
  0047d	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  00484	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00487	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax
  0048d	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00490	33 55 f4	 xor	 edx, DWORD PTR _ss$[ebp+24]
  00493	89 55 f8	 mov	 DWORD PTR _ss$[ebp+28], edx
  00496	0f b6 45 f8	 movzx	 eax, BYTE PTR _ss$[ebp+28]
  0049a	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  0049d	c1 e9 08	 shr	 ecx, 8
  004a0	0f b6 d1	 movzx	 edx, cl
  004a3	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  004aa	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  004b1	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  004b4	c1 e9 10	 shr	 ecx, 16			; 00000010H
  004b7	0f b6 d1	 movzx	 edx, cl
  004ba	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  004c1	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  004c4	c1 e9 18	 shr	 ecx, 24			; 00000018H
  004c7	0f b6 d1	 movzx	 edx, cl
  004ca	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  004d1	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  004d4	89 81 bc 00 00
	00		 mov	 DWORD PTR [ecx+188], eax
  004da	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  004dd	c1 ea 08	 shr	 edx, 8
  004e0	0f b6 c2	 movzx	 eax, dl
  004e3	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  004e6	c1 e9 10	 shr	 ecx, 16			; 00000010H
  004e9	0f b6 d1	 movzx	 edx, cl
  004ec	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  004f3	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  004fa	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  004fd	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00500	0f b6 d1	 movzx	 edx, cl
  00503	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  0050a	0f b6 4d f8	 movzx	 ecx, BYTE PTR _ss$[ebp+28]
  0050e	33 04 8d 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[ecx*4+3072]
  00515	33 05 04 00 00
	00		 xor	 eax, DWORD PTR _t_rc+4
  0051b	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  0051e	8b 55 dc	 mov	 edx, DWORD PTR _ss$[ebp]
  00521	33 55 fc	 xor	 edx, DWORD PTR _ss$[ebp+32]
  00524	89 55 dc	 mov	 DWORD PTR _ss$[ebp], edx
  00527	0f b6 45 fc	 movzx	 eax, BYTE PTR _ss$[ebp+32]
  0052b	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  0052e	c1 e9 08	 shr	 ecx, 8
  00531	0f b6 d1	 movzx	 edx, cl
  00534	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  0053b	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  00542	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00545	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00548	0f b6 d1	 movzx	 edx, cl
  0054b	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  00552	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00555	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00558	0f b6 d1	 movzx	 edx, cl
  0055b	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  00562	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00565	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00568	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  0056b	33 88 c0 00 00
	00		 xor	 ecx, DWORD PTR [eax+192]
  00571	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00574	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00577	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  0057a	89 82 a0 00 00
	00		 mov	 DWORD PTR [edx+160], eax
  00580	8b 4d e0	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  00583	33 4d dc	 xor	 ecx, DWORD PTR _ss$[ebp]
  00586	89 4d e0	 mov	 DWORD PTR _ss$[ebp+4], ecx
  00589	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  0058c	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  0058f	33 82 c4 00 00
	00		 xor	 eax, DWORD PTR [edx+196]
  00595	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00598	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  0059b	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  0059e	89 91 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], edx
  005a4	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+8]
  005a7	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp+4]
  005aa	89 45 e4	 mov	 DWORD PTR _ss$[ebp+8], eax
  005ad	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  005b0	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  005b3	33 91 c8 00 00
	00		 xor	 edx, DWORD PTR [ecx+200]
  005b9	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  005bc	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  005bf	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  005c2	89 88 a8 00 00
	00		 mov	 DWORD PTR [eax+168], ecx
  005c8	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  005cb	33 55 e4	 xor	 edx, DWORD PTR _ss$[ebp+8]
  005ce	89 55 e8	 mov	 DWORD PTR _ss$[ebp+12], edx
  005d1	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  005d4	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  005d7	33 88 cc 00 00
	00		 xor	 ecx, DWORD PTR [eax+204]
  005dd	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  005e0	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  005e3	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  005e6	89 82 ac 00 00
	00		 mov	 DWORD PTR [edx+172], eax
  005ec	0f b6 4d e8	 movzx	 ecx, BYTE PTR _ss$[ebp+12]
  005f0	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  005f3	c1 ea 08	 shr	 edx, 8
  005f6	0f b6 c2	 movzx	 eax, dl
  005f9	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  00600	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  00607	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  0060a	c1 ea 10	 shr	 edx, 16			; 00000010H
  0060d	0f b6 c2	 movzx	 eax, dl
  00610	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  00617	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  0061a	c1 ea 18	 shr	 edx, 24			; 00000018H
  0061d	0f b6 c2	 movzx	 eax, dl
  00620	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+3072]
  00627	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  0062a	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  0062d	33 4d fc	 xor	 ecx, DWORD PTR _ss$[ebp+32]
  00630	89 4d ec	 mov	 DWORD PTR _ss$[ebp+16], ecx
  00633	0f b6 55 fc	 movzx	 edx, BYTE PTR _ss$[ebp+32]
  00637	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  0063a	c1 e8 08	 shr	 eax, 8
  0063d	0f b6 c8	 movzx	 ecx, al
  00640	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_im[edx*4]
  00647	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+1024]
  0064e	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00651	c1 e8 10	 shr	 eax, 16			; 00000010H
  00654	0f b6 c8	 movzx	 ecx, al
  00657	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+2048]
  0065e	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00661	c1 e8 18	 shr	 eax, 24			; 00000018H
  00664	0f b6 c8	 movzx	 ecx, al
  00667	33 14 8d 00 0c
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+3072]
  0066e	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00671	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00674	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00677	33 82 b0 00 00
	00		 xor	 eax, DWORD PTR [edx+176]
  0067d	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00680	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00683	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00686	89 91 90 00 00
	00		 mov	 DWORD PTR [ecx+144], edx
  0068c	8b 45 f0	 mov	 eax, DWORD PTR _ss$[ebp+20]
  0068f	33 45 ec	 xor	 eax, DWORD PTR _ss$[ebp+16]
  00692	89 45 f0	 mov	 DWORD PTR _ss$[ebp+20], eax
  00695	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00698	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  0069b	33 91 b4 00 00
	00		 xor	 edx, DWORD PTR [ecx+180]
  006a1	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  006a4	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  006a7	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  006aa	89 88 94 00 00
	00		 mov	 DWORD PTR [eax+148], ecx
  006b0	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+24]
  006b3	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+20]
  006b6	89 55 f4	 mov	 DWORD PTR _ss$[ebp+24], edx
  006b9	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  006bc	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  006bf	33 88 b8 00 00
	00		 xor	 ecx, DWORD PTR [eax+184]
  006c5	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  006c8	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  006cb	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  006ce	89 82 98 00 00
	00		 mov	 DWORD PTR [edx+152], eax
  006d4	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  006d7	33 4d f4	 xor	 ecx, DWORD PTR _ss$[ebp+24]
  006da	89 4d f8	 mov	 DWORD PTR _ss$[ebp+28], ecx
  006dd	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  006e0	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  006e3	33 82 bc 00 00
	00		 xor	 eax, DWORD PTR [edx+188]
  006e9	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  006ec	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  006ef	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  006f2	89 91 9c 00 00
	00		 mov	 DWORD PTR [ecx+156], edx

; 529  :     kd8(cx->ks, 2);  kd8(cx->ks, 3);

  006f8	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  006fb	c1 e8 08	 shr	 eax, 8
  006fe	0f b6 c8	 movzx	 ecx, al
  00701	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00704	c1 ea 10	 shr	 edx, 16			; 00000010H
  00707	0f b6 c2	 movzx	 eax, dl
  0070a	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  00711	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  00718	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  0071b	c1 ea 18	 shr	 edx, 24			; 00000018H
  0071e	0f b6 c2	 movzx	 eax, dl
  00721	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  00728	0f b6 55 f8	 movzx	 edx, BYTE PTR _ss$[ebp+28]
  0072c	33 0c 95 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[edx*4+3072]
  00733	33 0d 08 00 00
	00		 xor	 ecx, DWORD PTR _t_rc+8
  00739	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  0073c	8b 45 dc	 mov	 eax, DWORD PTR _ss$[ebp]
  0073f	33 45 fc	 xor	 eax, DWORD PTR _ss$[ebp+32]
  00742	89 45 dc	 mov	 DWORD PTR _ss$[ebp], eax
  00745	0f b6 4d fc	 movzx	 ecx, BYTE PTR _ss$[ebp+32]
  00749	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  0074c	c1 ea 08	 shr	 edx, 8
  0074f	0f b6 c2	 movzx	 eax, dl
  00752	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_im[ecx*4]
  00759	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+1024]
  00760	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00763	c1 ea 10	 shr	 edx, 16			; 00000010H
  00766	0f b6 c2	 movzx	 eax, dl
  00769	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+2048]
  00770	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00773	c1 ea 18	 shr	 edx, 24			; 00000018H
  00776	0f b6 c2	 movzx	 eax, dl
  00779	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+3072]
  00780	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00783	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00786	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00789	33 91 a0 00 00
	00		 xor	 edx, DWORD PTR [ecx+160]
  0078f	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00792	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00795	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00798	89 88 80 00 00
	00		 mov	 DWORD PTR [eax+128], ecx
  0079e	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp+4]
  007a1	33 55 dc	 xor	 edx, DWORD PTR _ss$[ebp]
  007a4	89 55 e0	 mov	 DWORD PTR _ss$[ebp+4], edx
  007a7	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  007aa	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  007ad	33 88 a4 00 00
	00		 xor	 ecx, DWORD PTR [eax+164]
  007b3	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  007b6	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  007b9	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  007bc	89 82 84 00 00
	00		 mov	 DWORD PTR [edx+132], eax
  007c2	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+8]
  007c5	33 4d e0	 xor	 ecx, DWORD PTR _ss$[ebp+4]
  007c8	89 4d e4	 mov	 DWORD PTR _ss$[ebp+8], ecx
  007cb	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  007ce	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  007d1	33 82 a8 00 00
	00		 xor	 eax, DWORD PTR [edx+168]
  007d7	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  007da	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  007dd	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  007e0	89 91 88 00 00
	00		 mov	 DWORD PTR [ecx+136], edx
  007e6	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  007e9	33 45 e4	 xor	 eax, DWORD PTR _ss$[ebp+8]
  007ec	89 45 e8	 mov	 DWORD PTR _ss$[ebp+12], eax
  007ef	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  007f2	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  007f5	33 91 ac 00 00
	00		 xor	 edx, DWORD PTR [ecx+172]
  007fb	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  007fe	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00801	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00804	89 88 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ecx
  0080a	0f b6 55 e8	 movzx	 edx, BYTE PTR _ss$[ebp+12]
  0080e	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00811	c1 e8 08	 shr	 eax, 8
  00814	0f b6 c8	 movzx	 ecx, al
  00817	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  0081e	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  00825	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00828	c1 e8 10	 shr	 eax, 16			; 00000010H
  0082b	0f b6 c8	 movzx	 ecx, al
  0082e	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  00835	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00838	c1 e8 18	 shr	 eax, 24			; 00000018H
  0083b	0f b6 c8	 movzx	 ecx, al
  0083e	33 14 8d 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+3072]
  00845	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00848	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+16]
  0084b	33 55 fc	 xor	 edx, DWORD PTR _ss$[ebp+32]
  0084e	89 55 ec	 mov	 DWORD PTR _ss$[ebp+16], edx
  00851	0f b6 45 fc	 movzx	 eax, BYTE PTR _ss$[ebp+32]
  00855	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00858	c1 e9 08	 shr	 ecx, 8
  0085b	0f b6 d1	 movzx	 edx, cl
  0085e	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  00865	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  0086c	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  0086f	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00872	0f b6 d1	 movzx	 edx, cl
  00875	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  0087c	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  0087f	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00882	0f b6 d1	 movzx	 edx, cl
  00885	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  0088c	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  0088f	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00892	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00895	33 88 90 00 00
	00		 xor	 ecx, DWORD PTR [eax+144]
  0089b	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  0089e	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  008a1	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  008a4	89 42 70	 mov	 DWORD PTR [edx+112], eax
  008a7	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  008aa	33 4d ec	 xor	 ecx, DWORD PTR _ss$[ebp+16]
  008ad	89 4d f0	 mov	 DWORD PTR _ss$[ebp+20], ecx
  008b0	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  008b3	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  008b6	33 82 94 00 00
	00		 xor	 eax, DWORD PTR [edx+148]
  008bc	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  008bf	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  008c2	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  008c5	89 51 74	 mov	 DWORD PTR [ecx+116], edx
  008c8	8b 45 f4	 mov	 eax, DWORD PTR _ss$[ebp+24]
  008cb	33 45 f0	 xor	 eax, DWORD PTR _ss$[ebp+20]
  008ce	89 45 f4	 mov	 DWORD PTR _ss$[ebp+24], eax
  008d1	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  008d4	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  008d7	33 91 98 00 00
	00		 xor	 edx, DWORD PTR [ecx+152]
  008dd	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  008e0	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  008e3	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  008e6	89 48 78	 mov	 DWORD PTR [eax+120], ecx
  008e9	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  008ec	33 55 f4	 xor	 edx, DWORD PTR _ss$[ebp+24]
  008ef	89 55 f8	 mov	 DWORD PTR _ss$[ebp+28], edx
  008f2	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  008f5	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  008f8	33 88 9c 00 00
	00		 xor	 ecx, DWORD PTR [eax+156]
  008fe	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00901	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00904	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00907	89 42 7c	 mov	 DWORD PTR [edx+124], eax
  0090a	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  0090d	c1 e9 08	 shr	 ecx, 8
  00910	0f b6 d1	 movzx	 edx, cl
  00913	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  00916	c1 e8 10	 shr	 eax, 16			; 00000010H
  00919	0f b6 c8	 movzx	 ecx, al
  0091c	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  00923	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  0092a	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  0092d	c1 e8 18	 shr	 eax, 24			; 00000018H
  00930	0f b6 c8	 movzx	 ecx, al
  00933	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  0093a	0f b6 45 f8	 movzx	 eax, BYTE PTR _ss$[ebp+28]
  0093e	33 14 85 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[eax*4+3072]
  00945	33 15 0c 00 00
	00		 xor	 edx, DWORD PTR _t_rc+12
  0094b	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  0094e	8b 4d dc	 mov	 ecx, DWORD PTR _ss$[ebp]
  00951	33 4d fc	 xor	 ecx, DWORD PTR _ss$[ebp+32]
  00954	89 4d dc	 mov	 DWORD PTR _ss$[ebp], ecx
  00957	0f b6 55 fc	 movzx	 edx, BYTE PTR _ss$[ebp+32]
  0095b	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  0095e	c1 e8 08	 shr	 eax, 8
  00961	0f b6 c8	 movzx	 ecx, al
  00964	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_im[edx*4]
  0096b	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+1024]
  00972	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00975	c1 e8 10	 shr	 eax, 16			; 00000010H
  00978	0f b6 c8	 movzx	 ecx, al
  0097b	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+2048]
  00982	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00985	c1 e8 18	 shr	 eax, 24			; 00000018H
  00988	0f b6 c8	 movzx	 ecx, al
  0098b	33 14 8d 00 0c
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+3072]
  00992	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00995	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00998	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  0099b	33 82 80 00 00
	00		 xor	 eax, DWORD PTR [edx+128]
  009a1	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  009a4	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  009a7	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  009aa	89 51 60	 mov	 DWORD PTR [ecx+96], edx
  009ad	8b 45 e0	 mov	 eax, DWORD PTR _ss$[ebp+4]
  009b0	33 45 dc	 xor	 eax, DWORD PTR _ss$[ebp]
  009b3	89 45 e0	 mov	 DWORD PTR _ss$[ebp+4], eax
  009b6	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  009b9	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  009bc	33 91 84 00 00
	00		 xor	 edx, DWORD PTR [ecx+132]
  009c2	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  009c5	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  009c8	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  009cb	89 48 64	 mov	 DWORD PTR [eax+100], ecx
  009ce	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+8]
  009d1	33 55 e0	 xor	 edx, DWORD PTR _ss$[ebp+4]
  009d4	89 55 e4	 mov	 DWORD PTR _ss$[ebp+8], edx
  009d7	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  009da	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  009dd	33 88 88 00 00
	00		 xor	 ecx, DWORD PTR [eax+136]
  009e3	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  009e6	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  009e9	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  009ec	89 42 68	 mov	 DWORD PTR [edx+104], eax
  009ef	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  009f2	33 4d e4	 xor	 ecx, DWORD PTR _ss$[ebp+8]
  009f5	89 4d e8	 mov	 DWORD PTR _ss$[ebp+12], ecx
  009f8	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  009fb	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  009fe	33 82 8c 00 00
	00		 xor	 eax, DWORD PTR [edx+140]
  00a04	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00a07	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00a0a	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00a0d	89 51 6c	 mov	 DWORD PTR [ecx+108], edx
  00a10	0f b6 45 e8	 movzx	 eax, BYTE PTR _ss$[ebp+12]
  00a14	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00a17	c1 e9 08	 shr	 ecx, 8
  00a1a	0f b6 d1	 movzx	 edx, cl
  00a1d	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  00a24	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  00a2b	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00a2e	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00a31	0f b6 d1	 movzx	 edx, cl
  00a34	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  00a3b	8b 4d e8	 mov	 ecx, DWORD PTR _ss$[ebp+12]
  00a3e	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00a41	0f b6 d1	 movzx	 edx, cl
  00a44	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+3072]
  00a4b	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00a4e	8b 45 ec	 mov	 eax, DWORD PTR _ss$[ebp+16]
  00a51	33 45 fc	 xor	 eax, DWORD PTR _ss$[ebp+32]
  00a54	89 45 ec	 mov	 DWORD PTR _ss$[ebp+16], eax
  00a57	0f b6 4d fc	 movzx	 ecx, BYTE PTR _ss$[ebp+32]
  00a5b	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00a5e	c1 ea 08	 shr	 edx, 8
  00a61	0f b6 c2	 movzx	 eax, dl
  00a64	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_im[ecx*4]
  00a6b	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+1024]
  00a72	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00a75	c1 ea 10	 shr	 edx, 16			; 00000010H
  00a78	0f b6 c2	 movzx	 eax, dl
  00a7b	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+2048]
  00a82	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00a85	c1 ea 18	 shr	 edx, 24			; 00000018H
  00a88	0f b6 c2	 movzx	 eax, dl
  00a8b	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+3072]
  00a92	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00a95	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00a98	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00a9b	33 51 70	 xor	 edx, DWORD PTR [ecx+112]
  00a9e	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00aa1	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00aa4	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00aa7	89 48 50	 mov	 DWORD PTR [eax+80], ecx
  00aaa	8b 55 f0	 mov	 edx, DWORD PTR _ss$[ebp+20]
  00aad	33 55 ec	 xor	 edx, DWORD PTR _ss$[ebp+16]
  00ab0	89 55 f0	 mov	 DWORD PTR _ss$[ebp+20], edx
  00ab3	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00ab6	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00ab9	33 48 74	 xor	 ecx, DWORD PTR [eax+116]
  00abc	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00abf	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00ac2	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00ac5	89 42 54	 mov	 DWORD PTR [edx+84], eax
  00ac8	8b 4d f4	 mov	 ecx, DWORD PTR _ss$[ebp+24]
  00acb	33 4d f0	 xor	 ecx, DWORD PTR _ss$[ebp+20]
  00ace	89 4d f4	 mov	 DWORD PTR _ss$[ebp+24], ecx
  00ad1	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00ad4	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00ad7	33 42 78	 xor	 eax, DWORD PTR [edx+120]
  00ada	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00add	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00ae0	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00ae3	89 51 58	 mov	 DWORD PTR [ecx+88], edx
  00ae6	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  00ae9	33 45 f4	 xor	 eax, DWORD PTR _ss$[ebp+24]
  00aec	89 45 f8	 mov	 DWORD PTR _ss$[ebp+28], eax
  00aef	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00af2	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00af5	33 51 7c	 xor	 edx, DWORD PTR [ecx+124]
  00af8	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00afb	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00afe	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00b01	89 48 5c	 mov	 DWORD PTR [eax+92], ecx

; 530  :     kd8(cx->ks, 4);  kd8(cx->ks, 5);

  00b04	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00b07	c1 ea 08	 shr	 edx, 8
  00b0a	0f b6 c2	 movzx	 eax, dl
  00b0d	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  00b10	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00b13	0f b6 d1	 movzx	 edx, cl
  00b16	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_fl[eax*4]
  00b1d	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+1024]
  00b24	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  00b27	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00b2a	0f b6 d1	 movzx	 edx, cl
  00b2d	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_fl[edx*4+2048]
  00b34	0f b6 4d f8	 movzx	 ecx, BYTE PTR _ss$[ebp+28]
  00b38	33 04 8d 00 0c
	00 00		 xor	 eax, DWORD PTR _t_fl[ecx*4+3072]
  00b3f	33 05 10 00 00
	00		 xor	 eax, DWORD PTR _t_rc+16
  00b45	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00b48	8b 55 dc	 mov	 edx, DWORD PTR _ss$[ebp]
  00b4b	33 55 fc	 xor	 edx, DWORD PTR _ss$[ebp+32]
  00b4e	89 55 dc	 mov	 DWORD PTR _ss$[ebp], edx
  00b51	0f b6 45 fc	 movzx	 eax, BYTE PTR _ss$[ebp+32]
  00b55	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00b58	c1 e9 08	 shr	 ecx, 8
  00b5b	0f b6 d1	 movzx	 edx, cl
  00b5e	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  00b65	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  00b6c	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00b6f	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00b72	0f b6 d1	 movzx	 edx, cl
  00b75	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  00b7c	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00b7f	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00b82	0f b6 d1	 movzx	 edx, cl
  00b85	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  00b8c	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00b8f	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00b92	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00b95	33 48 60	 xor	 ecx, DWORD PTR [eax+96]
  00b98	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00b9b	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00b9e	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00ba1	89 42 40	 mov	 DWORD PTR [edx+64], eax
  00ba4	8b 4d e0	 mov	 ecx, DWORD PTR _ss$[ebp+4]
  00ba7	33 4d dc	 xor	 ecx, DWORD PTR _ss$[ebp]
  00baa	89 4d e0	 mov	 DWORD PTR _ss$[ebp+4], ecx
  00bad	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00bb0	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00bb3	33 42 64	 xor	 eax, DWORD PTR [edx+100]
  00bb6	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00bb9	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00bbc	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00bbf	89 51 44	 mov	 DWORD PTR [ecx+68], edx
  00bc2	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+8]
  00bc5	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp+4]
  00bc8	89 45 e4	 mov	 DWORD PTR _ss$[ebp+8], eax
  00bcb	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00bce	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00bd1	33 51 68	 xor	 edx, DWORD PTR [ecx+104]
  00bd4	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00bd7	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00bda	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00bdd	89 48 48	 mov	 DWORD PTR [eax+72], ecx
  00be0	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00be3	33 55 e4	 xor	 edx, DWORD PTR _ss$[ebp+8]
  00be6	89 55 e8	 mov	 DWORD PTR _ss$[ebp+12], edx
  00be9	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00bec	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00bef	33 48 6c	 xor	 ecx, DWORD PTR [eax+108]
  00bf2	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00bf5	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00bf8	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00bfb	89 42 4c	 mov	 DWORD PTR [edx+76], eax
  00bfe	0f b6 4d e8	 movzx	 ecx, BYTE PTR _ss$[ebp+12]
  00c02	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00c05	c1 ea 08	 shr	 edx, 8
  00c08	0f b6 c2	 movzx	 eax, dl
  00c0b	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  00c12	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  00c19	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00c1c	c1 ea 10	 shr	 edx, 16			; 00000010H
  00c1f	0f b6 c2	 movzx	 eax, dl
  00c22	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  00c29	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00c2c	c1 ea 18	 shr	 edx, 24			; 00000018H
  00c2f	0f b6 c2	 movzx	 eax, dl
  00c32	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+3072]
  00c39	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00c3c	8b 4d ec	 mov	 ecx, DWORD PTR _ss$[ebp+16]
  00c3f	33 4d fc	 xor	 ecx, DWORD PTR _ss$[ebp+32]
  00c42	89 4d ec	 mov	 DWORD PTR _ss$[ebp+16], ecx
  00c45	0f b6 55 fc	 movzx	 edx, BYTE PTR _ss$[ebp+32]
  00c49	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00c4c	c1 e8 08	 shr	 eax, 8
  00c4f	0f b6 c8	 movzx	 ecx, al
  00c52	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_im[edx*4]
  00c59	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+1024]
  00c60	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00c63	c1 e8 10	 shr	 eax, 16			; 00000010H
  00c66	0f b6 c8	 movzx	 ecx, al
  00c69	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+2048]
  00c70	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00c73	c1 e8 18	 shr	 eax, 24			; 00000018H
  00c76	0f b6 c8	 movzx	 ecx, al
  00c79	33 14 8d 00 0c
	00 00		 xor	 edx, DWORD PTR _t_im[ecx*4+3072]
  00c80	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00c83	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00c86	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00c89	33 42 50	 xor	 eax, DWORD PTR [edx+80]
  00c8c	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00c8f	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00c92	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00c95	89 51 30	 mov	 DWORD PTR [ecx+48], edx
  00c98	8b 45 f0	 mov	 eax, DWORD PTR _ss$[ebp+20]
  00c9b	33 45 ec	 xor	 eax, DWORD PTR _ss$[ebp+16]
  00c9e	89 45 f0	 mov	 DWORD PTR _ss$[ebp+20], eax
  00ca1	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00ca4	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00ca7	33 51 54	 xor	 edx, DWORD PTR [ecx+84]
  00caa	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00cad	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00cb0	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00cb3	89 48 34	 mov	 DWORD PTR [eax+52], ecx
  00cb6	8b 55 f4	 mov	 edx, DWORD PTR _ss$[ebp+24]
  00cb9	33 55 f0	 xor	 edx, DWORD PTR _ss$[ebp+20]
  00cbc	89 55 f4	 mov	 DWORD PTR _ss$[ebp+24], edx
  00cbf	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00cc2	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00cc5	33 48 58	 xor	 ecx, DWORD PTR [eax+88]
  00cc8	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00ccb	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00cce	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00cd1	89 42 38	 mov	 DWORD PTR [edx+56], eax
  00cd4	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  00cd7	33 4d f4	 xor	 ecx, DWORD PTR _ss$[ebp+24]
  00cda	89 4d f8	 mov	 DWORD PTR _ss$[ebp+28], ecx
  00cdd	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00ce0	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00ce3	33 42 5c	 xor	 eax, DWORD PTR [edx+92]
  00ce6	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00ce9	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00cec	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00cef	89 51 3c	 mov	 DWORD PTR [ecx+60], edx
  00cf2	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  00cf5	c1 e8 08	 shr	 eax, 8
  00cf8	0f b6 c8	 movzx	 ecx, al
  00cfb	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00cfe	c1 ea 10	 shr	 edx, 16			; 00000010H
  00d01	0f b6 c2	 movzx	 eax, dl
  00d04	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_fl[ecx*4]
  00d0b	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+1024]
  00d12	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00d15	c1 ea 18	 shr	 edx, 24			; 00000018H
  00d18	0f b6 c2	 movzx	 eax, dl
  00d1b	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_fl[eax*4+2048]
  00d22	0f b6 55 f8	 movzx	 edx, BYTE PTR _ss$[ebp+28]
  00d26	33 0c 95 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_fl[edx*4+3072]
  00d2d	33 0d 14 00 00
	00		 xor	 ecx, DWORD PTR _t_rc+20
  00d33	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00d36	8b 45 dc	 mov	 eax, DWORD PTR _ss$[ebp]
  00d39	33 45 fc	 xor	 eax, DWORD PTR _ss$[ebp+32]
  00d3c	89 45 dc	 mov	 DWORD PTR _ss$[ebp], eax
  00d3f	0f b6 4d fc	 movzx	 ecx, BYTE PTR _ss$[ebp+32]
  00d43	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00d46	c1 ea 08	 shr	 edx, 8
  00d49	0f b6 c2	 movzx	 eax, dl
  00d4c	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR _t_im[ecx*4]
  00d53	33 0c 85 00 04
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+1024]
  00d5a	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00d5d	c1 ea 10	 shr	 edx, 16			; 00000010H
  00d60	0f b6 c2	 movzx	 eax, dl
  00d63	33 0c 85 00 08
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+2048]
  00d6a	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00d6d	c1 ea 18	 shr	 edx, 24			; 00000018H
  00d70	0f b6 c2	 movzx	 eax, dl
  00d73	33 0c 85 00 0c
	00 00		 xor	 ecx, DWORD PTR _t_im[eax*4+3072]
  00d7a	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00d7d	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00d80	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00d83	33 51 40	 xor	 edx, DWORD PTR [ecx+64]
  00d86	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00d89	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00d8c	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00d8f	89 48 20	 mov	 DWORD PTR [eax+32], ecx
  00d92	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp+4]
  00d95	33 55 dc	 xor	 edx, DWORD PTR _ss$[ebp]
  00d98	89 55 e0	 mov	 DWORD PTR _ss$[ebp+4], edx
  00d9b	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00d9e	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00da1	33 48 44	 xor	 ecx, DWORD PTR [eax+68]
  00da4	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00da7	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00daa	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00dad	89 42 24	 mov	 DWORD PTR [edx+36], eax
  00db0	8b 4d e4	 mov	 ecx, DWORD PTR _ss$[ebp+8]
  00db3	33 4d e0	 xor	 ecx, DWORD PTR _ss$[ebp+4]
  00db6	89 4d e4	 mov	 DWORD PTR _ss$[ebp+8], ecx
  00db9	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00dbc	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00dbf	33 42 48	 xor	 eax, DWORD PTR [edx+72]
  00dc2	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00dc5	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00dc8	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00dcb	89 51 28	 mov	 DWORD PTR [ecx+40], edx
  00dce	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00dd1	33 45 e4	 xor	 eax, DWORD PTR _ss$[ebp+8]
  00dd4	89 45 e8	 mov	 DWORD PTR _ss$[ebp+12], eax
  00dd7	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00dda	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00ddd	33 51 4c	 xor	 edx, DWORD PTR [ecx+76]
  00de0	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00de3	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00de6	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00de9	89 48 2c	 mov	 DWORD PTR [eax+44], ecx
  00dec	0f b6 55 e8	 movzx	 edx, BYTE PTR _ss$[ebp+12]
  00df0	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00df3	c1 e8 08	 shr	 eax, 8
  00df6	0f b6 c8	 movzx	 ecx, al
  00df9	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  00e00	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  00e07	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00e0a	c1 e8 10	 shr	 eax, 16			; 00000010H
  00e0d	0f b6 c8	 movzx	 ecx, al
  00e10	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  00e17	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00e1a	c1 e8 18	 shr	 eax, 24			; 00000018H
  00e1d	0f b6 c8	 movzx	 ecx, al
  00e20	33 14 8d 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+3072]
  00e27	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00e2a	8b 55 ec	 mov	 edx, DWORD PTR _ss$[ebp+16]
  00e2d	33 55 fc	 xor	 edx, DWORD PTR _ss$[ebp+32]
  00e30	89 55 ec	 mov	 DWORD PTR _ss$[ebp+16], edx
  00e33	0f b6 45 fc	 movzx	 eax, BYTE PTR _ss$[ebp+32]
  00e37	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00e3a	c1 e9 08	 shr	 ecx, 8
  00e3d	0f b6 d1	 movzx	 edx, cl
  00e40	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR _t_im[eax*4]
  00e47	33 04 95 00 04
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+1024]
  00e4e	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00e51	c1 e9 10	 shr	 ecx, 16			; 00000010H
  00e54	0f b6 d1	 movzx	 edx, cl
  00e57	33 04 95 00 08
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+2048]
  00e5e	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00e61	c1 e9 18	 shr	 ecx, 24			; 00000018H
  00e64	0f b6 d1	 movzx	 edx, cl
  00e67	33 04 95 00 0c
	00 00		 xor	 eax, DWORD PTR _t_im[edx*4+3072]
  00e6e	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00e71	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00e74	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00e77	33 48 30	 xor	 ecx, DWORD PTR [eax+48]
  00e7a	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00e7d	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00e80	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00e83	89 42 10	 mov	 DWORD PTR [edx+16], eax
  00e86	8b 4d f0	 mov	 ecx, DWORD PTR _ss$[ebp+20]
  00e89	33 4d ec	 xor	 ecx, DWORD PTR _ss$[ebp+16]
  00e8c	89 4d f0	 mov	 DWORD PTR _ss$[ebp+20], ecx
  00e8f	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00e92	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00e95	33 42 34	 xor	 eax, DWORD PTR [edx+52]
  00e98	89 45 fc	 mov	 DWORD PTR _ss$[ebp+32], eax
  00e9b	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00e9e	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00ea1	89 51 14	 mov	 DWORD PTR [ecx+20], edx
  00ea4	8b 45 f4	 mov	 eax, DWORD PTR _ss$[ebp+24]
  00ea7	33 45 f0	 xor	 eax, DWORD PTR _ss$[ebp+20]
  00eaa	89 45 f4	 mov	 DWORD PTR _ss$[ebp+24], eax
  00ead	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00eb0	8b 55 fc	 mov	 edx, DWORD PTR _ss$[ebp+32]
  00eb3	33 51 38	 xor	 edx, DWORD PTR [ecx+56]
  00eb6	89 55 fc	 mov	 DWORD PTR _ss$[ebp+32], edx
  00eb9	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00ebc	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00ebf	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  00ec2	8b 55 f8	 mov	 edx, DWORD PTR _ss$[ebp+28]
  00ec5	33 55 f4	 xor	 edx, DWORD PTR _ss$[ebp+24]
  00ec8	89 55 f8	 mov	 DWORD PTR _ss$[ebp+28], edx
  00ecb	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00ece	8b 4d fc	 mov	 ecx, DWORD PTR _ss$[ebp+32]
  00ed1	33 48 3c	 xor	 ecx, DWORD PTR [eax+60]
  00ed4	89 4d fc	 mov	 DWORD PTR _ss$[ebp+32], ecx
  00ed7	8b 55 0c	 mov	 edx, DWORD PTR _cx$[ebp]
  00eda	8b 45 fc	 mov	 eax, DWORD PTR _ss$[ebp+32]
  00edd	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 531  :     kdl8(cx->ks, 6);

  00ee0	8b 4d f8	 mov	 ecx, DWORD PTR _ss$[ebp+28]
  00ee3	c1 e9 08	 shr	 ecx, 8
  00ee6	0f b6 d1	 movzx	 edx, cl
  00ee9	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  00eec	c1 e8 10	 shr	 eax, 16			; 00000010H
  00eef	0f b6 c8	 movzx	 ecx, al
  00ef2	8b 14 95 00 00
	00 00		 mov	 edx, DWORD PTR _t_fl[edx*4]
  00ef9	33 14 8d 00 04
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+1024]
  00f00	8b 45 f8	 mov	 eax, DWORD PTR _ss$[ebp+28]
  00f03	c1 e8 18	 shr	 eax, 24			; 00000018H
  00f06	0f b6 c8	 movzx	 ecx, al
  00f09	33 14 8d 00 08
	00 00		 xor	 edx, DWORD PTR _t_fl[ecx*4+2048]
  00f10	0f b6 45 f8	 movzx	 eax, BYTE PTR _ss$[ebp+28]
  00f14	33 14 85 00 0c
	00 00		 xor	 edx, DWORD PTR _t_fl[eax*4+3072]
  00f1b	33 15 18 00 00
	00		 xor	 edx, DWORD PTR _t_rc+24
  00f21	33 55 dc	 xor	 edx, DWORD PTR _ss$[ebp]
  00f24	89 55 dc	 mov	 DWORD PTR _ss$[ebp], edx
  00f27	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00f2a	8b 55 dc	 mov	 edx, DWORD PTR _ss$[ebp]
  00f2d	89 11		 mov	 DWORD PTR [ecx], edx
  00f2f	8b 45 e0	 mov	 eax, DWORD PTR _ss$[ebp+4]
  00f32	33 45 dc	 xor	 eax, DWORD PTR _ss$[ebp]
  00f35	89 45 e0	 mov	 DWORD PTR _ss$[ebp+4], eax
  00f38	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00f3b	8b 55 e0	 mov	 edx, DWORD PTR _ss$[ebp+4]
  00f3e	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  00f41	8b 45 e4	 mov	 eax, DWORD PTR _ss$[ebp+8]
  00f44	33 45 e0	 xor	 eax, DWORD PTR _ss$[ebp+4]
  00f47	89 45 e4	 mov	 DWORD PTR _ss$[ebp+8], eax
  00f4a	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00f4d	8b 55 e4	 mov	 edx, DWORD PTR _ss$[ebp+8]
  00f50	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00f53	8b 45 e8	 mov	 eax, DWORD PTR _ss$[ebp+12]
  00f56	33 45 e4	 xor	 eax, DWORD PTR _ss$[ebp+8]
  00f59	89 45 e8	 mov	 DWORD PTR _ss$[ebp+12], eax
  00f5c	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00f5f	8b 55 e8	 mov	 edx, DWORD PTR _ss$[ebp+12]
  00f62	89 51 0c	 mov	 DWORD PTR [ecx+12], edx

; 532  : #endif
; 533  :     cx->inf.l = 0;

  00f65	8b 45 0c	 mov	 eax, DWORD PTR _cx$[ebp]
  00f68	c7 80 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+240], 0

; 534  :     cx->inf.b[0] = 14 * 16;

  00f72	8b 4d 0c	 mov	 ecx, DWORD PTR _cx$[ebp]
  00f75	c6 81 f0 00 00
	00 e0		 mov	 BYTE PTR [ecx+240], 224	; 000000e0H

; 535  : 
; 536  : #ifdef USE_VIA_ACE_IF_PRESENT
; 537  :     if(VIA_ACE_AVAILABLE)
; 538  :         cx->inf.b[1] = 0xff;
; 539  : #endif
; 540  : 
; 541  : #if defined( AES_ERR_CHK )
; 542  :     return EXIT_SUCCESS;

  00f7c	33 c0		 xor	 eax, eax

; 543  : #endif
; 544  : }

  00f7e	5e		 pop	 esi
  00f7f	8b e5		 mov	 esp, ebp
  00f81	5d		 pop	 ebp
  00f82	c2 08 00	 ret	 8
_aes_decrypt_key256@8 ENDP
_TEXT	ENDS
END
