; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	aes_decrypt_key256
;	COMDAT pdata
; File c:\home\public\desktop\projects\ciphershed\src\crypto\aeskey.c
pdata	SEGMENT
$pdata$aes_decrypt_key256 DD imagerel $LN3
	DD	imagerel $LN3+5926
	DD	imagerel $unwind$aes_decrypt_key256
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$aes_decrypt_key256 DD 020f01H
	DD	0300b520fH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT aes_decrypt_key256
_TEXT	SEGMENT
ss$ = 0
key$ = 64
cx$ = 72
aes_decrypt_key256 PROC					; COMDAT

; 498  : {   uint_32t    ss[9];

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	53		 push	 rbx
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 499  : #if defined( d_vars )
; 500  :         d_vars;
; 501  : #endif
; 502  :     cx->ks[v(56,(0))] = ss[0] = word_in(key, 0);

  0000f	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00014	8b 00		 mov	 eax, DWORD PTR [rax]
  00016	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00019	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0001e	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00021	89 81 e0 00 00
	00		 mov	 DWORD PTR [rcx+224], eax

; 503  :     cx->ks[v(56,(1))] = ss[1] = word_in(key, 1);

  00027	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  0002c	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  0002f	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  00033	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00038	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  0003c	89 81 e4 00 00
	00		 mov	 DWORD PTR [rcx+228], eax

; 504  :     cx->ks[v(56,(2))] = ss[2] = word_in(key, 2);

  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00047	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  0004a	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  0004e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00053	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00057	89 81 e8 00 00
	00		 mov	 DWORD PTR [rcx+232], eax

; 505  :     cx->ks[v(56,(3))] = ss[3] = word_in(key, 3);

  0005d	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00062	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  00065	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  00069	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0006e	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00072	89 81 ec 00 00
	00		 mov	 DWORD PTR [rcx+236], eax

; 506  : 
; 507  : #if DEC_UNROLL == NONE
; 508  :     cx->ks[v(56,(4))] = ss[4] = word_in(key, 4);
; 509  :     cx->ks[v(56,(5))] = ss[5] = word_in(key, 5);
; 510  :     cx->ks[v(56,(6))] = ss[6] = word_in(key, 6);
; 511  :     cx->ks[v(56,(7))] = ss[7] = word_in(key, 7);
; 512  :     {   uint_32t i;
; 513  : 
; 514  :         for(i = 0; i < 6; ++i)
; 515  :             k8e(cx->ks,  i);
; 516  :         k8ef(cx->ks,  6);
; 517  : #if !(DEC_ROUND == NO_TABLES)
; 518  :         for(i = N_COLS; i < 14 * N_COLS; ++i)
; 519  :             cx->ks[i] = inv_mcol(cx->ks[i]);
; 520  : 
; 521  : #endif
; 522  :     }
; 523  : #else
; 524  :     cx->ks[v(56,(4))] = ff(ss[4] = word_in(key, 4));

  00078	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  0007d	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00080	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00084	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00089	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  0008c	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00090	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00095	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00098	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  0009c	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  000a1	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  000a4	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  000a8	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  000ac	c1 e8 18	 shr	 eax, 24
  000af	0f b6 d8	 movzx	 ebx, al
  000b2	4c 8d 1d 00 00
	00 00		 lea	 r11, OFFSET FLAT:t_im
  000b9	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  000bd	c1 e8 10	 shr	 eax, 16
  000c0	44 0f b6 d0	 movzx	 r10d, al
  000c4	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:t_im
  000cb	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  000cf	c1 e8 08	 shr	 eax, 8
  000d2	44 0f b6 c0	 movzx	 r8d, al
  000d6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:t_im
  000dd	0f b6 54 24 10	 movzx	 edx, BYTE PTR ss$[rsp+16]
  000e2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  000e9	42 8b 84 80 00
	04 00 00	 mov	 eax, DWORD PTR [rax+r8*4+1024]
  000f1	8b 0c 91	 mov	 ecx, DWORD PTR [rcx+rdx*4]
  000f4	33 c8		 xor	 ecx, eax
  000f6	43 33 8c 91 00
	08 00 00	 xor	 ecx, DWORD PTR [r9+r10*4+2048]
  000fe	41 33 8c 9b 00
	0c 00 00	 xor	 ecx, DWORD PTR [r11+rbx*4+3072]
  00106	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0010b	89 88 d0 00 00
	00		 mov	 DWORD PTR [rax+208], ecx

; 525  :     cx->ks[v(56,(5))] = ff(ss[5] = word_in(key, 5));

  00111	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00116	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  00119	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  0011d	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00122	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  00125	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  00129	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  0012e	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  00131	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  00135	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  0013a	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  0013d	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  00141	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00145	c1 e8 18	 shr	 eax, 24
  00148	0f b6 d8	 movzx	 ebx, al
  0014b	4c 8d 1d 00 00
	00 00		 lea	 r11, OFFSET FLAT:t_im
  00152	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00156	c1 e8 10	 shr	 eax, 16
  00159	44 0f b6 d0	 movzx	 r10d, al
  0015d	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:t_im
  00164	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00168	c1 e8 08	 shr	 eax, 8
  0016b	44 0f b6 c0	 movzx	 r8d, al
  0016f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:t_im
  00176	0f b6 54 24 14	 movzx	 edx, BYTE PTR ss$[rsp+20]
  0017b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00182	42 8b 84 80 00
	04 00 00	 mov	 eax, DWORD PTR [rax+r8*4+1024]
  0018a	8b 0c 91	 mov	 ecx, DWORD PTR [rcx+rdx*4]
  0018d	33 c8		 xor	 ecx, eax
  0018f	43 33 8c 91 00
	08 00 00	 xor	 ecx, DWORD PTR [r9+r10*4+2048]
  00197	41 33 8c 9b 00
	0c 00 00	 xor	 ecx, DWORD PTR [r11+rbx*4+3072]
  0019f	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  001a4	89 88 d4 00 00
	00		 mov	 DWORD PTR [rax+212], ecx

; 526  :     cx->ks[v(56,(6))] = ff(ss[6] = word_in(key, 6));

  001aa	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  001af	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  001b2	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  001b6	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  001bb	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  001be	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  001c2	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  001c7	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  001ca	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  001ce	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  001d3	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  001d6	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  001da	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  001de	c1 e8 18	 shr	 eax, 24
  001e1	0f b6 d8	 movzx	 ebx, al
  001e4	4c 8d 1d 00 00
	00 00		 lea	 r11, OFFSET FLAT:t_im
  001eb	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  001ef	c1 e8 10	 shr	 eax, 16
  001f2	44 0f b6 d0	 movzx	 r10d, al
  001f6	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:t_im
  001fd	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  00201	c1 e8 08	 shr	 eax, 8
  00204	44 0f b6 c0	 movzx	 r8d, al
  00208	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:t_im
  0020f	0f b6 54 24 18	 movzx	 edx, BYTE PTR ss$[rsp+24]
  00214	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  0021b	42 8b 84 80 00
	04 00 00	 mov	 eax, DWORD PTR [rax+r8*4+1024]
  00223	8b 0c 91	 mov	 ecx, DWORD PTR [rcx+rdx*4]
  00226	33 c8		 xor	 ecx, eax
  00228	43 33 8c 91 00
	08 00 00	 xor	 ecx, DWORD PTR [r9+r10*4+2048]
  00230	41 33 8c 9b 00
	0c 00 00	 xor	 ecx, DWORD PTR [r11+rbx*4+3072]
  00238	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0023d	89 88 d8 00 00
	00		 mov	 DWORD PTR [rax+216], ecx

; 527  :     cx->ks[v(56,(7))] = ff(ss[7] = word_in(key, 7));

  00243	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00248	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  0024b	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  0024f	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00254	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  00257	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  0025b	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  00260	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  00263	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  00267	48 8b 44 24 40	 mov	 rax, QWORD PTR key$[rsp]
  0026c	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  0026f	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  00273	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00277	c1 e8 18	 shr	 eax, 24
  0027a	0f b6 d8	 movzx	 ebx, al
  0027d	4c 8d 1d 00 00
	00 00		 lea	 r11, OFFSET FLAT:t_im
  00284	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00288	c1 e8 10	 shr	 eax, 16
  0028b	44 0f b6 d0	 movzx	 r10d, al
  0028f	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:t_im
  00296	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0029a	c1 e8 08	 shr	 eax, 8
  0029d	44 0f b6 c0	 movzx	 r8d, al
  002a1	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:t_im
  002a8	0f b6 54 24 1c	 movzx	 edx, BYTE PTR ss$[rsp+28]
  002ad	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  002b4	42 8b 84 80 00
	04 00 00	 mov	 eax, DWORD PTR [rax+r8*4+1024]
  002bc	8b 0c 91	 mov	 ecx, DWORD PTR [rcx+rdx*4]
  002bf	33 c8		 xor	 ecx, eax
  002c1	43 33 8c 91 00
	08 00 00	 xor	 ecx, DWORD PTR [r9+r10*4+2048]
  002c9	41 33 8c 9b 00
	0c 00 00	 xor	 ecx, DWORD PTR [r11+rbx*4+3072]
  002d1	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  002d6	89 88 dc 00 00
	00		 mov	 DWORD PTR [rax+220], ecx

; 528  :     kdf8(cx->ks, 0); kd8(cx->ks, 1);

  002dc	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  002e0	c1 e8 08	 shr	 eax, 8
  002e3	44 0f b6 c0	 movzx	 r8d, al
  002e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  002ee	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  002f5	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  002f9	c1 e8 10	 shr	 eax, 16
  002fc	0f b6 c0	 movzx	 eax, al
  002ff	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00306	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  0030a	33 c8		 xor	 ecx, eax
  0030c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00313	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00317	c1 e8 18	 shr	 eax, 24
  0031a	0f b6 c0	 movzx	 eax, al
  0031d	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00324	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0032b	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  00330	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00337	33 0d 00 00 00
	00		 xor	 ecx, DWORD PTR t_rc
  0033d	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00340	33 c1		 xor	 eax, ecx
  00342	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00345	44 0f b6 04 24	 movzx	 r8d, BYTE PTR ss$[rsp]
  0034a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00351	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00358	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  0035b	c1 e8 08	 shr	 eax, 8
  0035e	0f b6 c0	 movzx	 eax, al
  00361	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00368	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  0036c	33 c8		 xor	 ecx, eax
  0036e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00375	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00378	c1 e8 10	 shr	 eax, 16
  0037b	0f b6 c0	 movzx	 eax, al
  0037e	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00385	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  0038c	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  0038f	c1 e8 18	 shr	 eax, 24
  00392	0f b6 c0	 movzx	 eax, al
  00395	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  0039c	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  003a1	89 88 c0 00 00
	00		 mov	 DWORD PTR [rax+192], ecx
  003a7	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  003aa	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  003ae	33 c1		 xor	 eax, ecx
  003b0	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  003b4	44 0f b6 44 24
	04		 movzx	 r8d, BYTE PTR ss$[rsp+4]
  003ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  003c1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  003c8	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  003cc	c1 e8 08	 shr	 eax, 8
  003cf	0f b6 c0	 movzx	 eax, al
  003d2	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  003d9	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  003dd	33 c8		 xor	 ecx, eax
  003df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  003e6	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  003ea	c1 e8 10	 shr	 eax, 16
  003ed	0f b6 c0	 movzx	 eax, al
  003f0	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  003f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  003fe	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00402	c1 e8 18	 shr	 eax, 24
  00405	0f b6 c0	 movzx	 eax, al
  00408	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  0040f	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00414	89 88 c4 00 00
	00		 mov	 DWORD PTR [rax+196], ecx
  0041a	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  0041e	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00422	33 c1		 xor	 eax, ecx
  00424	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00428	44 0f b6 44 24
	08		 movzx	 r8d, BYTE PTR ss$[rsp+8]
  0042e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00435	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  0043c	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00440	c1 e8 08	 shr	 eax, 8
  00443	0f b6 c0	 movzx	 eax, al
  00446	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  0044d	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00451	33 c8		 xor	 ecx, eax
  00453	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  0045a	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0045e	c1 e8 10	 shr	 eax, 16
  00461	0f b6 c0	 movzx	 eax, al
  00464	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  0046b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00472	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00476	c1 e8 18	 shr	 eax, 24
  00479	0f b6 c0	 movzx	 eax, al
  0047c	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00483	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00488	89 88 c8 00 00
	00		 mov	 DWORD PTR [rax+200], ecx
  0048e	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  00492	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00496	33 c1		 xor	 eax, ecx
  00498	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  0049c	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  004a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  004a9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  004b0	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  004b4	c1 e8 08	 shr	 eax, 8
  004b7	0f b6 c0	 movzx	 eax, al
  004ba	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  004c1	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  004c5	33 c8		 xor	 ecx, eax
  004c7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  004ce	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  004d2	c1 e8 10	 shr	 eax, 16
  004d5	0f b6 c0	 movzx	 eax, al
  004d8	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  004df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  004e6	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  004ea	c1 e8 18	 shr	 eax, 24
  004ed	0f b6 c0	 movzx	 eax, al
  004f0	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  004f7	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  004fc	89 88 cc 00 00
	00		 mov	 DWORD PTR [rax+204], ecx
  00502	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  00508	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0050f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00516	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0051a	c1 e8 08	 shr	 eax, 8
  0051d	0f b6 c0	 movzx	 eax, al
  00520	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00527	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  0052b	33 c8		 xor	 ecx, eax
  0052d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00534	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00538	c1 e8 10	 shr	 eax, 16
  0053b	0f b6 c0	 movzx	 eax, al
  0053e	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00545	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0054c	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00550	c1 e8 18	 shr	 eax, 24
  00553	0f b6 c0	 movzx	 eax, al
  00556	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  0055d	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  00561	33 c1		 xor	 eax, ecx
  00563	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00567	44 0f b6 44 24
	10		 movzx	 r8d, BYTE PTR ss$[rsp+16]
  0056d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00574	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  0057b	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  0057f	c1 e8 08	 shr	 eax, 8
  00582	0f b6 c0	 movzx	 eax, al
  00585	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  0058c	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00590	33 c8		 xor	 ecx, eax
  00592	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00599	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  0059d	c1 e8 10	 shr	 eax, 16
  005a0	0f b6 c0	 movzx	 eax, al
  005a3	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  005aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  005b1	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  005b5	c1 e8 18	 shr	 eax, 24
  005b8	0f b6 c0	 movzx	 eax, al
  005bb	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  005c2	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  005c7	89 88 b0 00 00
	00		 mov	 DWORD PTR [rax+176], ecx
  005cd	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  005d1	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  005d5	33 c1		 xor	 eax, ecx
  005d7	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  005db	44 0f b6 44 24
	14		 movzx	 r8d, BYTE PTR ss$[rsp+20]
  005e1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  005e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  005ef	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  005f3	c1 e8 08	 shr	 eax, 8
  005f6	0f b6 c0	 movzx	 eax, al
  005f9	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00600	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00604	33 c8		 xor	 ecx, eax
  00606	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  0060d	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00611	c1 e8 10	 shr	 eax, 16
  00614	0f b6 c0	 movzx	 eax, al
  00617	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  0061e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00625	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00629	c1 e8 18	 shr	 eax, 24
  0062c	0f b6 c0	 movzx	 eax, al
  0062f	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00636	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0063b	89 88 b4 00 00
	00		 mov	 DWORD PTR [rax+180], ecx
  00641	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  00645	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  00649	33 c1		 xor	 eax, ecx
  0064b	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  0064f	44 0f b6 44 24
	18		 movzx	 r8d, BYTE PTR ss$[rsp+24]
  00655	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  0065c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00663	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  00667	c1 e8 08	 shr	 eax, 8
  0066a	0f b6 c0	 movzx	 eax, al
  0066d	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00674	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00678	33 c8		 xor	 ecx, eax
  0067a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00681	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  00685	c1 e8 10	 shr	 eax, 16
  00688	0f b6 c0	 movzx	 eax, al
  0068b	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00692	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00699	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  0069d	c1 e8 18	 shr	 eax, 24
  006a0	0f b6 c0	 movzx	 eax, al
  006a3	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  006aa	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  006af	89 88 b8 00 00
	00		 mov	 DWORD PTR [rax+184], ecx
  006b5	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  006b9	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  006bd	33 c1		 xor	 eax, ecx
  006bf	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  006c3	44 0f b6 44 24
	1c		 movzx	 r8d, BYTE PTR ss$[rsp+28]
  006c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  006d0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  006d7	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  006db	c1 e8 08	 shr	 eax, 8
  006de	0f b6 c0	 movzx	 eax, al
  006e1	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  006e8	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  006ec	33 c8		 xor	 ecx, eax
  006ee	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  006f5	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  006f9	c1 e8 10	 shr	 eax, 16
  006fc	0f b6 c0	 movzx	 eax, al
  006ff	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00706	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  0070d	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00711	c1 e8 18	 shr	 eax, 24
  00714	0f b6 c0	 movzx	 eax, al
  00717	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  0071e	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00723	89 88 bc 00 00
	00		 mov	 DWORD PTR [rax+188], ecx
  00729	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0072d	c1 e8 08	 shr	 eax, 8
  00730	44 0f b6 c0	 movzx	 r8d, al
  00734	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0073b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00742	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00746	c1 e8 10	 shr	 eax, 16
  00749	0f b6 c0	 movzx	 eax, al
  0074c	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00753	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00757	44 33 c0	 xor	 r8d, eax
  0075a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00761	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00765	c1 e8 18	 shr	 eax, 24
  00768	0f b6 c8	 movzx	 ecx, al
  0076b	41 8b c0	 mov	 eax, r8d
  0076e	33 84 8a 00 08
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+2048]
  00775	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0077c	0f b6 4c 24 1c	 movzx	 ecx, BYTE PTR ss$[rsp+28]
  00781	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00788	33 05 04 00 00
	00		 xor	 eax, DWORD PTR t_rc+4
  0078e	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00792	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  00796	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00799	33 c1		 xor	 eax, ecx
  0079b	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  0079e	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  007a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  007ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  007b2	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  007b6	c1 e8 08	 shr	 eax, 8
  007b9	0f b6 c0	 movzx	 eax, al
  007bc	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  007c3	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  007c7	44 33 c0	 xor	 r8d, eax
  007ca	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  007d1	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  007d5	c1 e8 10	 shr	 eax, 16
  007d8	0f b6 c0	 movzx	 eax, al
  007db	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  007e3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  007ea	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  007ee	c1 e8 18	 shr	 eax, 24
  007f1	0f b6 c8	 movzx	 ecx, al
  007f4	41 8b c0	 mov	 eax, r8d
  007f7	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  007fe	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00802	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00807	8b 88 c0 00 00
	00		 mov	 ecx, DWORD PTR [rax+192]
  0080d	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00811	33 c1		 xor	 eax, ecx
  00813	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00817	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0081c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00820	89 81 a0 00 00
	00		 mov	 DWORD PTR [rcx+160], eax
  00826	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  00829	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  0082d	33 c1		 xor	 eax, ecx
  0082f	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  00833	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00838	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [rax+196]
  0083e	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00842	33 c1		 xor	 eax, ecx
  00844	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00848	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0084d	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00851	89 81 a4 00 00
	00		 mov	 DWORD PTR [rcx+164], eax
  00857	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  0085b	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0085f	33 c1		 xor	 eax, ecx
  00861	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00865	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0086a	8b 88 c8 00 00
	00		 mov	 ecx, DWORD PTR [rax+200]
  00870	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00874	33 c1		 xor	 eax, ecx
  00876	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0087a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0087f	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00883	89 81 a8 00 00
	00		 mov	 DWORD PTR [rcx+168], eax
  00889	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  0088d	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00891	33 c1		 xor	 eax, ecx
  00893	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  00897	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0089c	8b 88 cc 00 00
	00		 mov	 ecx, DWORD PTR [rax+204]
  008a2	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  008a6	33 c1		 xor	 eax, ecx
  008a8	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  008ac	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  008b1	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  008b5	89 81 ac 00 00
	00		 mov	 DWORD PTR [rcx+172], eax
  008bb	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  008c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  008c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  008cf	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  008d3	c1 e8 08	 shr	 eax, 8
  008d6	0f b6 c0	 movzx	 eax, al
  008d9	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  008e0	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  008e4	44 33 c0	 xor	 r8d, eax
  008e7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  008ee	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  008f2	c1 e8 10	 shr	 eax, 16
  008f5	0f b6 c0	 movzx	 eax, al
  008f8	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00900	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00907	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0090b	c1 e8 18	 shr	 eax, 24
  0090e	0f b6 c8	 movzx	 ecx, al
  00911	41 8b c0	 mov	 eax, r8d
  00914	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  0091b	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0091f	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  00923	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  00927	33 c1		 xor	 eax, ecx
  00929	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  0092d	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  00933	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  0093a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00941	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00945	c1 e8 08	 shr	 eax, 8
  00948	0f b6 c0	 movzx	 eax, al
  0094b	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00952	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00956	44 33 c0	 xor	 r8d, eax
  00959	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00960	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00964	c1 e8 10	 shr	 eax, 16
  00967	0f b6 c0	 movzx	 eax, al
  0096a	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00972	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00979	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0097d	c1 e8 18	 shr	 eax, 24
  00980	0f b6 c8	 movzx	 ecx, al
  00983	41 8b c0	 mov	 eax, r8d
  00986	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  0098d	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00991	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00996	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [rax+176]
  0099c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  009a0	33 c1		 xor	 eax, ecx
  009a2	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  009a6	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  009ab	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  009af	89 81 90 00 00
	00		 mov	 DWORD PTR [rcx+144], eax
  009b5	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  009b9	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  009bd	33 c1		 xor	 eax, ecx
  009bf	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  009c3	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  009c8	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [rax+180]
  009ce	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  009d2	33 c1		 xor	 eax, ecx
  009d4	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  009d8	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  009dd	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  009e1	89 81 94 00 00
	00		 mov	 DWORD PTR [rcx+148], eax
  009e7	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  009eb	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  009ef	33 c1		 xor	 eax, ecx
  009f1	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  009f5	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  009fa	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [rax+184]
  00a00	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00a04	33 c1		 xor	 eax, ecx
  00a06	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00a0a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00a0f	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00a13	89 81 98 00 00
	00		 mov	 DWORD PTR [rcx+152], eax
  00a19	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  00a1d	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a21	33 c1		 xor	 eax, ecx
  00a23	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  00a27	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00a2c	8b 88 bc 00 00
	00		 mov	 ecx, DWORD PTR [rax+188]
  00a32	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00a36	33 c1		 xor	 eax, ecx
  00a38	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00a3c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00a41	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00a45	89 81 9c 00 00
	00		 mov	 DWORD PTR [rcx+156], eax

; 529  :     kd8(cx->ks, 2);  kd8(cx->ks, 3);

  00a4b	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a4f	c1 e8 08	 shr	 eax, 8
  00a52	44 0f b6 c0	 movzx	 r8d, al
  00a56	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00a5d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00a64	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a68	c1 e8 10	 shr	 eax, 16
  00a6b	0f b6 c0	 movzx	 eax, al
  00a6e	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00a75	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00a79	44 33 c0	 xor	 r8d, eax
  00a7c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00a83	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a87	c1 e8 18	 shr	 eax, 24
  00a8a	0f b6 c8	 movzx	 ecx, al
  00a8d	41 8b c0	 mov	 eax, r8d
  00a90	33 84 8a 00 08
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+2048]
  00a97	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00a9e	0f b6 4c 24 1c	 movzx	 ecx, BYTE PTR ss$[rsp+28]
  00aa3	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00aaa	33 05 08 00 00
	00		 xor	 eax, DWORD PTR t_rc+8
  00ab0	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00ab4	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  00ab8	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00abb	33 c1		 xor	 eax, ecx
  00abd	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00ac0	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  00ac6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00acd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00ad4	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00ad8	c1 e8 08	 shr	 eax, 8
  00adb	0f b6 c0	 movzx	 eax, al
  00ade	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00ae5	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00ae9	44 33 c0	 xor	 r8d, eax
  00aec	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00af3	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00af7	c1 e8 10	 shr	 eax, 16
  00afa	0f b6 c0	 movzx	 eax, al
  00afd	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00b05	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00b0c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00b10	c1 e8 18	 shr	 eax, 24
  00b13	0f b6 c8	 movzx	 ecx, al
  00b16	41 8b c0	 mov	 eax, r8d
  00b19	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00b20	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00b24	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00b29	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [rax+160]
  00b2f	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00b33	33 c1		 xor	 eax, ecx
  00b35	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00b39	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00b3e	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00b42	89 81 80 00 00
	00		 mov	 DWORD PTR [rcx+128], eax
  00b48	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  00b4b	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00b4f	33 c1		 xor	 eax, ecx
  00b51	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  00b55	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00b5a	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [rax+164]
  00b60	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00b64	33 c1		 xor	 eax, ecx
  00b66	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00b6a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00b6f	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00b73	89 81 84 00 00
	00		 mov	 DWORD PTR [rcx+132], eax
  00b79	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  00b7d	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00b81	33 c1		 xor	 eax, ecx
  00b83	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00b87	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00b8c	8b 88 a8 00 00
	00		 mov	 ecx, DWORD PTR [rax+168]
  00b92	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00b96	33 c1		 xor	 eax, ecx
  00b98	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00b9c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00ba1	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00ba5	89 81 88 00 00
	00		 mov	 DWORD PTR [rcx+136], eax
  00bab	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  00baf	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00bb3	33 c1		 xor	 eax, ecx
  00bb5	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  00bb9	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00bbe	8b 88 ac 00 00
	00		 mov	 ecx, DWORD PTR [rax+172]
  00bc4	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00bc8	33 c1		 xor	 eax, ecx
  00bca	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00bce	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00bd3	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00bd7	89 81 8c 00 00
	00		 mov	 DWORD PTR [rcx+140], eax
  00bdd	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  00be3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00bea	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00bf1	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00bf5	c1 e8 08	 shr	 eax, 8
  00bf8	0f b6 c0	 movzx	 eax, al
  00bfb	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00c02	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00c06	44 33 c0	 xor	 r8d, eax
  00c09	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00c10	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00c14	c1 e8 10	 shr	 eax, 16
  00c17	0f b6 c0	 movzx	 eax, al
  00c1a	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00c22	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00c29	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00c2d	c1 e8 18	 shr	 eax, 24
  00c30	0f b6 c8	 movzx	 ecx, al
  00c33	41 8b c0	 mov	 eax, r8d
  00c36	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00c3d	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00c41	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  00c45	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  00c49	33 c1		 xor	 eax, ecx
  00c4b	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00c4f	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  00c55	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00c5c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00c63	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00c67	c1 e8 08	 shr	 eax, 8
  00c6a	0f b6 c0	 movzx	 eax, al
  00c6d	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00c74	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00c78	44 33 c0	 xor	 r8d, eax
  00c7b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00c82	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00c86	c1 e8 10	 shr	 eax, 16
  00c89	0f b6 c0	 movzx	 eax, al
  00c8c	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00c94	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00c9b	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00c9f	c1 e8 18	 shr	 eax, 24
  00ca2	0f b6 c8	 movzx	 ecx, al
  00ca5	41 8b c0	 mov	 eax, r8d
  00ca8	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00caf	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00cb3	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00cb8	8b 88 90 00 00
	00		 mov	 ecx, DWORD PTR [rax+144]
  00cbe	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00cc2	33 c1		 xor	 eax, ecx
  00cc4	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00cc8	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00ccd	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00cd1	89 41 70	 mov	 DWORD PTR [rcx+112], eax
  00cd4	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  00cd8	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00cdc	33 c1		 xor	 eax, ecx
  00cde	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  00ce2	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00ce7	8b 88 94 00 00
	00		 mov	 ecx, DWORD PTR [rax+148]
  00ced	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00cf1	33 c1		 xor	 eax, ecx
  00cf3	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00cf7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00cfc	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00d00	89 41 74	 mov	 DWORD PTR [rcx+116], eax
  00d03	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  00d07	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  00d0b	33 c1		 xor	 eax, ecx
  00d0d	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  00d11	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00d16	8b 88 98 00 00
	00		 mov	 ecx, DWORD PTR [rax+152]
  00d1c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00d20	33 c1		 xor	 eax, ecx
  00d22	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00d26	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00d2b	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00d2f	89 41 78	 mov	 DWORD PTR [rcx+120], eax
  00d32	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  00d36	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00d3a	33 c1		 xor	 eax, ecx
  00d3c	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  00d40	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00d45	8b 88 9c 00 00
	00		 mov	 ecx, DWORD PTR [rax+156]
  00d4b	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00d4f	33 c1		 xor	 eax, ecx
  00d51	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00d55	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00d5a	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00d5e	89 41 7c	 mov	 DWORD PTR [rcx+124], eax
  00d61	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00d65	c1 e8 08	 shr	 eax, 8
  00d68	44 0f b6 c0	 movzx	 r8d, al
  00d6c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00d73	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00d7a	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00d7e	c1 e8 10	 shr	 eax, 16
  00d81	0f b6 c0	 movzx	 eax, al
  00d84	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00d8b	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00d8f	44 33 c0	 xor	 r8d, eax
  00d92	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00d99	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00d9d	c1 e8 18	 shr	 eax, 24
  00da0	0f b6 c8	 movzx	 ecx, al
  00da3	41 8b c0	 mov	 eax, r8d
  00da6	33 84 8a 00 08
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+2048]
  00dad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00db4	0f b6 4c 24 1c	 movzx	 ecx, BYTE PTR ss$[rsp+28]
  00db9	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00dc0	33 05 0c 00 00
	00		 xor	 eax, DWORD PTR t_rc+12
  00dc6	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00dca	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  00dce	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00dd1	33 c1		 xor	 eax, ecx
  00dd3	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00dd6	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  00ddc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00de3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00dea	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00dee	c1 e8 08	 shr	 eax, 8
  00df1	0f b6 c0	 movzx	 eax, al
  00df4	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00dfb	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00dff	44 33 c0	 xor	 r8d, eax
  00e02	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00e09	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00e0d	c1 e8 10	 shr	 eax, 16
  00e10	0f b6 c0	 movzx	 eax, al
  00e13	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00e1b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00e22	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00e26	c1 e8 18	 shr	 eax, 24
  00e29	0f b6 c8	 movzx	 ecx, al
  00e2c	41 8b c0	 mov	 eax, r8d
  00e2f	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00e36	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00e3a	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00e3f	8b 88 80 00 00
	00		 mov	 ecx, DWORD PTR [rax+128]
  00e45	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00e49	33 c1		 xor	 eax, ecx
  00e4b	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00e4f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00e54	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00e58	89 41 60	 mov	 DWORD PTR [rcx+96], eax
  00e5b	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  00e5e	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00e62	33 c1		 xor	 eax, ecx
  00e64	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  00e68	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00e6d	8b 88 84 00 00
	00		 mov	 ecx, DWORD PTR [rax+132]
  00e73	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00e77	33 c1		 xor	 eax, ecx
  00e79	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00e7d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00e82	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00e86	89 41 64	 mov	 DWORD PTR [rcx+100], eax
  00e89	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  00e8d	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00e91	33 c1		 xor	 eax, ecx
  00e93	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00e97	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00e9c	8b 88 88 00 00
	00		 mov	 ecx, DWORD PTR [rax+136]
  00ea2	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00ea6	33 c1		 xor	 eax, ecx
  00ea8	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00eac	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00eb1	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00eb5	89 41 68	 mov	 DWORD PTR [rcx+104], eax
  00eb8	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  00ebc	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00ec0	33 c1		 xor	 eax, ecx
  00ec2	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  00ec6	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00ecb	8b 88 8c 00 00
	00		 mov	 ecx, DWORD PTR [rax+140]
  00ed1	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00ed5	33 c1		 xor	 eax, ecx
  00ed7	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00edb	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00ee0	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00ee4	89 41 6c	 mov	 DWORD PTR [rcx+108], eax
  00ee7	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  00eed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00ef4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00efb	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00eff	c1 e8 08	 shr	 eax, 8
  00f02	0f b6 c0	 movzx	 eax, al
  00f05	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00f0c	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00f10	44 33 c0	 xor	 r8d, eax
  00f13	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00f1a	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00f1e	c1 e8 10	 shr	 eax, 16
  00f21	0f b6 c0	 movzx	 eax, al
  00f24	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00f2c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00f33	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00f37	c1 e8 18	 shr	 eax, 24
  00f3a	0f b6 c8	 movzx	 ecx, al
  00f3d	41 8b c0	 mov	 eax, r8d
  00f40	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00f47	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00f4b	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  00f4f	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  00f53	33 c1		 xor	 eax, ecx
  00f55	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00f59	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  00f5f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00f66	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00f6d	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00f71	c1 e8 08	 shr	 eax, 8
  00f74	0f b6 c0	 movzx	 eax, al
  00f77	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00f7e	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  00f82	44 33 c0	 xor	 r8d, eax
  00f85	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  00f8c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00f90	c1 e8 10	 shr	 eax, 16
  00f93	0f b6 c0	 movzx	 eax, al
  00f96	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  00f9e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  00fa5	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00fa9	c1 e8 18	 shr	 eax, 24
  00fac	0f b6 c8	 movzx	 ecx, al
  00faf	41 8b c0	 mov	 eax, r8d
  00fb2	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  00fb9	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00fbd	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00fc2	8b 48 70	 mov	 ecx, DWORD PTR [rax+112]
  00fc5	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00fc9	33 c1		 xor	 eax, ecx
  00fcb	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00fcf	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  00fd4	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00fd8	89 41 50	 mov	 DWORD PTR [rcx+80], eax
  00fdb	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  00fdf	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00fe3	33 c1		 xor	 eax, ecx
  00fe5	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  00fe9	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  00fee	8b 48 74	 mov	 ecx, DWORD PTR [rax+116]
  00ff1	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  00ff5	33 c1		 xor	 eax, ecx
  00ff7	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  00ffb	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  01000	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01004	89 41 54	 mov	 DWORD PTR [rcx+84], eax
  01007	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  0100b	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  0100f	33 c1		 xor	 eax, ecx
  01011	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  01015	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0101a	8b 48 78	 mov	 ecx, DWORD PTR [rax+120]
  0101d	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01021	33 c1		 xor	 eax, ecx
  01023	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01027	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0102c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01030	89 41 58	 mov	 DWORD PTR [rcx+88], eax
  01033	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  01037	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0103b	33 c1		 xor	 eax, ecx
  0103d	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  01041	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  01046	8b 48 7c	 mov	 ecx, DWORD PTR [rax+124]
  01049	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0104d	33 c1		 xor	 eax, ecx
  0104f	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01053	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  01058	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0105c	89 41 5c	 mov	 DWORD PTR [rcx+92], eax

; 530  :     kd8(cx->ks, 4);  kd8(cx->ks, 5);

  0105f	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  01063	c1 e8 08	 shr	 eax, 8
  01066	44 0f b6 c0	 movzx	 r8d, al
  0106a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01071	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  01078	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0107c	c1 e8 10	 shr	 eax, 16
  0107f	0f b6 c0	 movzx	 eax, al
  01082	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  01089	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  0108d	44 33 c0	 xor	 r8d, eax
  01090	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01097	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0109b	c1 e8 18	 shr	 eax, 24
  0109e	0f b6 c8	 movzx	 ecx, al
  010a1	41 8b c0	 mov	 eax, r8d
  010a4	33 84 8a 00 08
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+2048]
  010ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  010b2	0f b6 4c 24 1c	 movzx	 ecx, BYTE PTR ss$[rsp+28]
  010b7	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  010be	33 05 10 00 00
	00		 xor	 eax, DWORD PTR t_rc+16
  010c4	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  010c8	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  010cc	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  010cf	33 c1		 xor	 eax, ecx
  010d1	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  010d4	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  010da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  010e1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  010e8	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  010ec	c1 e8 08	 shr	 eax, 8
  010ef	0f b6 c0	 movzx	 eax, al
  010f2	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  010f9	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  010fd	44 33 c0	 xor	 r8d, eax
  01100	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  01107	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0110b	c1 e8 10	 shr	 eax, 16
  0110e	0f b6 c0	 movzx	 eax, al
  01111	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  01119	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  01120	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01124	c1 e8 18	 shr	 eax, 24
  01127	0f b6 c8	 movzx	 ecx, al
  0112a	41 8b c0	 mov	 eax, r8d
  0112d	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  01134	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01138	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0113d	8b 48 60	 mov	 ecx, DWORD PTR [rax+96]
  01140	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01144	33 c1		 xor	 eax, ecx
  01146	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0114a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0114f	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01153	89 41 40	 mov	 DWORD PTR [rcx+64], eax
  01156	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  01159	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  0115d	33 c1		 xor	 eax, ecx
  0115f	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  01163	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  01168	8b 48 64	 mov	 ecx, DWORD PTR [rax+100]
  0116b	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0116f	33 c1		 xor	 eax, ecx
  01171	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01175	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0117a	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0117e	89 41 44	 mov	 DWORD PTR [rcx+68], eax
  01181	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  01185	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  01189	33 c1		 xor	 eax, ecx
  0118b	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  0118f	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  01194	8b 48 68	 mov	 ecx, DWORD PTR [rax+104]
  01197	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0119b	33 c1		 xor	 eax, ecx
  0119d	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  011a1	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  011a6	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  011aa	89 41 48	 mov	 DWORD PTR [rcx+72], eax
  011ad	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  011b1	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  011b5	33 c1		 xor	 eax, ecx
  011b7	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  011bb	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  011c0	8b 48 6c	 mov	 ecx, DWORD PTR [rax+108]
  011c3	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  011c7	33 c1		 xor	 eax, ecx
  011c9	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  011cd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  011d2	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  011d6	89 41 4c	 mov	 DWORD PTR [rcx+76], eax
  011d9	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  011df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  011e6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  011ed	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  011f1	c1 e8 08	 shr	 eax, 8
  011f4	0f b6 c0	 movzx	 eax, al
  011f7	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  011fe	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  01202	44 33 c0	 xor	 r8d, eax
  01205	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0120c	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  01210	c1 e8 10	 shr	 eax, 16
  01213	0f b6 c0	 movzx	 eax, al
  01216	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  0121e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01225	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  01229	c1 e8 18	 shr	 eax, 24
  0122c	0f b6 c8	 movzx	 ecx, al
  0122f	41 8b c0	 mov	 eax, r8d
  01232	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  01239	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0123d	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  01241	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  01245	33 c1		 xor	 eax, ecx
  01247	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  0124b	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  01251	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  01258	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  0125f	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01263	c1 e8 08	 shr	 eax, 8
  01266	0f b6 c0	 movzx	 eax, al
  01269	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  01270	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  01274	44 33 c0	 xor	 r8d, eax
  01277	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  0127e	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01282	c1 e8 10	 shr	 eax, 16
  01285	0f b6 c0	 movzx	 eax, al
  01288	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  01290	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  01297	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0129b	c1 e8 18	 shr	 eax, 24
  0129e	0f b6 c8	 movzx	 ecx, al
  012a1	41 8b c0	 mov	 eax, r8d
  012a4	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  012ab	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  012af	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  012b4	8b 48 50	 mov	 ecx, DWORD PTR [rax+80]
  012b7	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  012bb	33 c1		 xor	 eax, ecx
  012bd	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  012c1	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  012c6	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  012ca	89 41 30	 mov	 DWORD PTR [rcx+48], eax
  012cd	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  012d1	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  012d5	33 c1		 xor	 eax, ecx
  012d7	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  012db	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  012e0	8b 48 54	 mov	 ecx, DWORD PTR [rax+84]
  012e3	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  012e7	33 c1		 xor	 eax, ecx
  012e9	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  012ed	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  012f2	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  012f6	89 41 34	 mov	 DWORD PTR [rcx+52], eax
  012f9	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  012fd	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  01301	33 c1		 xor	 eax, ecx
  01303	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  01307	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0130c	8b 48 58	 mov	 ecx, DWORD PTR [rax+88]
  0130f	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01313	33 c1		 xor	 eax, ecx
  01315	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01319	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0131e	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01322	89 41 38	 mov	 DWORD PTR [rcx+56], eax
  01325	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  01329	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0132d	33 c1		 xor	 eax, ecx
  0132f	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  01333	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  01338	8b 48 5c	 mov	 ecx, DWORD PTR [rax+92]
  0133b	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0133f	33 c1		 xor	 eax, ecx
  01341	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01345	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0134a	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0134e	89 41 3c	 mov	 DWORD PTR [rcx+60], eax
  01351	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  01355	c1 e8 08	 shr	 eax, 8
  01358	44 0f b6 c0	 movzx	 r8d, al
  0135c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01363	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0136a	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0136e	c1 e8 10	 shr	 eax, 16
  01371	0f b6 c0	 movzx	 eax, al
  01374	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  0137b	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  0137f	44 33 c0	 xor	 r8d, eax
  01382	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01389	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0138d	c1 e8 18	 shr	 eax, 24
  01390	0f b6 c8	 movzx	 ecx, al
  01393	41 8b c0	 mov	 eax, r8d
  01396	33 84 8a 00 08
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+2048]
  0139d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  013a4	0f b6 4c 24 1c	 movzx	 ecx, BYTE PTR ss$[rsp+28]
  013a9	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  013b0	33 05 14 00 00
	00		 xor	 eax, DWORD PTR t_rc+20
  013b6	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  013ba	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  013be	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  013c1	33 c1		 xor	 eax, ecx
  013c3	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  013c6	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  013cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  013d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  013da	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  013de	c1 e8 08	 shr	 eax, 8
  013e1	0f b6 c0	 movzx	 eax, al
  013e4	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  013eb	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  013ef	44 33 c0	 xor	 r8d, eax
  013f2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  013f9	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  013fd	c1 e8 10	 shr	 eax, 16
  01400	0f b6 c0	 movzx	 eax, al
  01403	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  0140b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  01412	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01416	c1 e8 18	 shr	 eax, 24
  01419	0f b6 c8	 movzx	 ecx, al
  0141c	41 8b c0	 mov	 eax, r8d
  0141f	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  01426	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0142a	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0142f	8b 48 40	 mov	 ecx, DWORD PTR [rax+64]
  01432	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01436	33 c1		 xor	 eax, ecx
  01438	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0143c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  01441	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01445	89 41 20	 mov	 DWORD PTR [rcx+32], eax
  01448	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  0144b	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  0144f	33 c1		 xor	 eax, ecx
  01451	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  01455	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0145a	8b 48 44	 mov	 ecx, DWORD PTR [rax+68]
  0145d	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01461	33 c1		 xor	 eax, ecx
  01463	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01467	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0146c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01470	89 41 24	 mov	 DWORD PTR [rcx+36], eax
  01473	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  01477	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0147b	33 c1		 xor	 eax, ecx
  0147d	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  01481	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  01486	8b 48 48	 mov	 ecx, DWORD PTR [rax+72]
  01489	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0148d	33 c1		 xor	 eax, ecx
  0148f	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01493	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  01498	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0149c	89 41 28	 mov	 DWORD PTR [rcx+40], eax
  0149f	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  014a3	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  014a7	33 c1		 xor	 eax, ecx
  014a9	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  014ad	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  014b2	8b 48 4c	 mov	 ecx, DWORD PTR [rax+76]
  014b5	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  014b9	33 c1		 xor	 eax, ecx
  014bb	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  014bf	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  014c4	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  014c8	89 41 2c	 mov	 DWORD PTR [rcx+44], eax
  014cb	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  014d1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  014d8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  014df	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  014e3	c1 e8 08	 shr	 eax, 8
  014e6	0f b6 c0	 movzx	 eax, al
  014e9	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  014f0	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  014f4	44 33 c0	 xor	 r8d, eax
  014f7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  014fe	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  01502	c1 e8 10	 shr	 eax, 16
  01505	0f b6 c0	 movzx	 eax, al
  01508	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  01510	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01517	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0151b	c1 e8 18	 shr	 eax, 24
  0151e	0f b6 c8	 movzx	 ecx, al
  01521	41 8b c0	 mov	 eax, r8d
  01524	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  0152b	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0152f	8b 4c 24 20	 mov	 ecx, DWORD PTR ss$[rsp+32]
  01533	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  01537	33 c1		 xor	 eax, ecx
  01539	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  0153d	44 0f b6 44 24
	20		 movzx	 r8d, BYTE PTR ss$[rsp+32]
  01543	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  0154a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  01551	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01555	c1 e8 08	 shr	 eax, 8
  01558	0f b6 c0	 movzx	 eax, al
  0155b	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  01562	46 8b 04 82	 mov	 r8d, DWORD PTR [rdx+r8*4]
  01566	44 33 c0	 xor	 r8d, eax
  01569	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_im
  01570	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01574	c1 e8 10	 shr	 eax, 16
  01577	0f b6 c0	 movzx	 eax, al
  0157a	44 33 84 81 00
	08 00 00	 xor	 r8d, DWORD PTR [rcx+rax*4+2048]
  01582	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_im
  01589	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  0158d	c1 e8 18	 shr	 eax, 24
  01590	0f b6 c8	 movzx	 ecx, al
  01593	41 8b c0	 mov	 eax, r8d
  01596	33 84 8a 00 0c
	00 00		 xor	 eax, DWORD PTR [rdx+rcx*4+3072]
  0159d	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  015a1	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  015a6	8b 48 30	 mov	 ecx, DWORD PTR [rax+48]
  015a9	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  015ad	33 c1		 xor	 eax, ecx
  015af	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  015b3	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  015b8	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  015bc	89 41 10	 mov	 DWORD PTR [rcx+16], eax
  015bf	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  015c3	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  015c7	33 c1		 xor	 eax, ecx
  015c9	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  015cd	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  015d2	8b 48 34	 mov	 ecx, DWORD PTR [rax+52]
  015d5	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  015d9	33 c1		 xor	 eax, ecx
  015db	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  015df	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  015e4	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  015e8	89 41 14	 mov	 DWORD PTR [rcx+20], eax
  015eb	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  015ef	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  015f3	33 c1		 xor	 eax, ecx
  015f5	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  015f9	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  015fe	8b 48 38	 mov	 ecx, DWORD PTR [rax+56]
  01601	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01605	33 c1		 xor	 eax, ecx
  01607	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  0160b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  01610	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01614	89 41 18	 mov	 DWORD PTR [rcx+24], eax
  01617	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  0161b	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0161f	33 c1		 xor	 eax, ecx
  01621	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  01625	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  0162a	8b 48 3c	 mov	 ecx, DWORD PTR [rax+60]
  0162d	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01631	33 c1		 xor	 eax, ecx
  01633	89 44 24 20	 mov	 DWORD PTR ss$[rsp+32], eax
  01637	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  0163c	8b 44 24 20	 mov	 eax, DWORD PTR ss$[rsp+32]
  01640	89 41 1c	 mov	 DWORD PTR [rcx+28], eax

; 531  :     kdl8(cx->ks, 6);

  01643	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  01647	c1 e8 08	 shr	 eax, 8
  0164a	44 0f b6 c0	 movzx	 r8d, al
  0164e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01655	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0165c	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  01660	c1 e8 10	 shr	 eax, 16
  01663	0f b6 c0	 movzx	 eax, al
  01666	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  0166d	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  01671	33 c8		 xor	 ecx, eax
  01673	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0167a	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0167e	c1 e8 18	 shr	 eax, 24
  01681	0f b6 c0	 movzx	 eax, al
  01684	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  0168b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  01692	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  01697	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  0169e	33 0d 18 00 00
	00		 xor	 ecx, DWORD PTR t_rc+24
  016a4	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  016a7	33 c1		 xor	 eax, ecx
  016a9	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  016ac	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  016b1	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  016b4	89 01		 mov	 DWORD PTR [rcx], eax
  016b6	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  016b9	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  016bd	33 c1		 xor	 eax, ecx
  016bf	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  016c3	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  016c8	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  016cc	89 41 04	 mov	 DWORD PTR [rcx+4], eax
  016cf	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  016d3	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  016d7	33 c1		 xor	 eax, ecx
  016d9	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  016dd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  016e2	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  016e6	89 41 08	 mov	 DWORD PTR [rcx+8], eax
  016e9	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  016ed	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  016f1	33 c1		 xor	 eax, ecx
  016f3	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  016f7	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cx$[rsp]
  016fc	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  01700	89 41 0c	 mov	 DWORD PTR [rcx+12], eax

; 532  : #endif
; 533  :     cx->inf.l = 0;

  01703	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  01708	c7 80 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+240], 0

; 534  :     cx->inf.b[0] = 14 * 16;

  01712	48 8b 44 24 48	 mov	 rax, QWORD PTR cx$[rsp]
  01717	c6 80 f0 00 00
	00 e0		 mov	 BYTE PTR [rax+240], 224	; 000000e0H

; 535  : 
; 536  : #ifdef USE_VIA_ACE_IF_PRESENT
; 537  :     if(VIA_ACE_AVAILABLE)
; 538  :         cx->inf.b[1] = 0xff;
; 539  : #endif
; 540  : 
; 541  : #if defined( AES_ERR_CHK )
; 542  :     return EXIT_SUCCESS;

  0171e	33 c0		 xor	 eax, eax

; 543  : #endif
; 544  : }

  01720	48 83 c4 30	 add	 rsp, 48			; 00000030H
  01724	5b		 pop	 rbx
  01725	c3		 ret	 0
aes_decrypt_key256 ENDP
_TEXT	ENDS
PUBLIC	aes_encrypt_key256
;	COMDAT pdata
pdata	SEGMENT
$pdata$aes_encrypt_key256 DD imagerel $LN3
	DD	imagerel $LN3+2817
	DD	imagerel $unwind$aes_encrypt_key256
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$aes_encrypt_key256 DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT aes_encrypt_key256
_TEXT	SEGMENT
ss$ = 0
key$ = 48
cx$ = 56
aes_encrypt_key256 PROC					; COMDAT

; 175  : {   uint_32t    ss[8];

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 176  : 
; 177  :     cx->ks[0] = ss[0] = word_in(key, 0);

  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  00013	8b 00		 mov	 eax, DWORD PTR [rax]
  00015	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00018	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0001d	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00020	89 01		 mov	 DWORD PTR [rcx], eax

; 178  :     cx->ks[1] = ss[1] = word_in(key, 1);

  00022	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  00027	8b 40 04	 mov	 eax, DWORD PTR [rax+4]
  0002a	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  0002e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00033	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00037	89 41 04	 mov	 DWORD PTR [rcx+4], eax

; 179  :     cx->ks[2] = ss[2] = word_in(key, 2);

  0003a	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  0003f	8b 40 08	 mov	 eax, DWORD PTR [rax+8]
  00042	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00046	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0004b	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0004f	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 180  :     cx->ks[3] = ss[3] = word_in(key, 3);

  00052	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  00057	8b 40 0c	 mov	 eax, DWORD PTR [rax+12]
  0005a	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  0005e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00063	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00067	89 41 0c	 mov	 DWORD PTR [rcx+12], eax

; 181  :     cx->ks[4] = ss[4] = word_in(key, 4);

  0006a	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  0006f	8b 40 10	 mov	 eax, DWORD PTR [rax+16]
  00072	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00076	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0007b	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  0007f	89 41 10	 mov	 DWORD PTR [rcx+16], eax

; 182  :     cx->ks[5] = ss[5] = word_in(key, 5);

  00082	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  00087	8b 40 14	 mov	 eax, DWORD PTR [rax+20]
  0008a	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  0008e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00093	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00097	89 41 14	 mov	 DWORD PTR [rcx+20], eax

; 183  :     cx->ks[6] = ss[6] = word_in(key, 6);

  0009a	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  0009f	8b 40 18	 mov	 eax, DWORD PTR [rax+24]
  000a2	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  000a6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  000ab	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  000af	89 41 18	 mov	 DWORD PTR [rcx+24], eax

; 184  :     cx->ks[7] = ss[7] = word_in(key, 7);

  000b2	48 8b 44 24 30	 mov	 rax, QWORD PTR key$[rsp]
  000b7	8b 40 1c	 mov	 eax, DWORD PTR [rax+28]
  000ba	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  000be	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  000c3	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  000c7	89 41 1c	 mov	 DWORD PTR [rcx+28], eax

; 185  : 
; 186  : #if ENC_UNROLL == NONE
; 187  :     {   uint_32t i;
; 188  :         for(i = 0; i < 6; ++i)
; 189  :             ke8(cx->ks,  i);
; 190  :     }
; 191  : #else
; 192  :     ke8(cx->ks, 0); ke8(cx->ks, 1);

  000ca	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  000ce	c1 e8 08	 shr	 eax, 8
  000d1	44 0f b6 c0	 movzx	 r8d, al
  000d5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  000dc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  000e3	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  000e7	c1 e8 10	 shr	 eax, 16
  000ea	0f b6 c0	 movzx	 eax, al
  000ed	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  000f4	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  000f8	33 c8		 xor	 ecx, eax
  000fa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00101	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00105	c1 e8 18	 shr	 eax, 24
  00108	0f b6 c0	 movzx	 eax, al
  0010b	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00112	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00119	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  0011e	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00125	33 0d 00 00 00
	00		 xor	 ecx, DWORD PTR t_rc
  0012b	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  0012e	33 c1		 xor	 eax, ecx
  00130	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00133	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00138	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  0013b	89 41 20	 mov	 DWORD PTR [rcx+32], eax
  0013e	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  00141	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00145	33 c1		 xor	 eax, ecx
  00147	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  0014b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00150	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00154	89 41 24	 mov	 DWORD PTR [rcx+36], eax
  00157	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  0015b	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0015f	33 c1		 xor	 eax, ecx
  00161	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00165	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0016a	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0016e	89 41 28	 mov	 DWORD PTR [rcx+40], eax
  00171	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  00175	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00179	33 c1		 xor	 eax, ecx
  0017b	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  0017f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00184	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00188	89 41 2c	 mov	 DWORD PTR [rcx+44], eax
  0018b	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  00191	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00198	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0019f	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  001a3	c1 e8 08	 shr	 eax, 8
  001a6	0f b6 c0	 movzx	 eax, al
  001a9	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  001b0	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  001b4	33 c8		 xor	 ecx, eax
  001b6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  001bd	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  001c1	c1 e8 10	 shr	 eax, 16
  001c4	0f b6 c0	 movzx	 eax, al
  001c7	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  001ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  001d5	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  001d9	c1 e8 18	 shr	 eax, 24
  001dc	0f b6 c0	 movzx	 eax, al
  001df	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  001e6	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  001ea	33 c1		 xor	 eax, ecx
  001ec	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  001f0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  001f5	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  001f9	89 41 30	 mov	 DWORD PTR [rcx+48], eax
  001fc	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  00200	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00204	33 c1		 xor	 eax, ecx
  00206	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  0020a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0020f	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00213	89 41 34	 mov	 DWORD PTR [rcx+52], eax
  00216	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  0021a	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  0021e	33 c1		 xor	 eax, ecx
  00220	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  00224	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00229	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  0022d	89 41 38	 mov	 DWORD PTR [rcx+56], eax
  00230	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  00234	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00238	33 c1		 xor	 eax, ecx
  0023a	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  0023e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00243	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00247	89 41 3c	 mov	 DWORD PTR [rcx+60], eax
  0024a	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0024e	c1 e8 08	 shr	 eax, 8
  00251	44 0f b6 c0	 movzx	 r8d, al
  00255	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0025c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00263	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00267	c1 e8 10	 shr	 eax, 16
  0026a	0f b6 c0	 movzx	 eax, al
  0026d	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00274	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00278	33 c8		 xor	 ecx, eax
  0027a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00281	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00285	c1 e8 18	 shr	 eax, 24
  00288	0f b6 c0	 movzx	 eax, al
  0028b	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00292	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00299	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  0029e	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  002a5	33 0d 04 00 00
	00		 xor	 ecx, DWORD PTR t_rc+4
  002ab	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  002ae	33 c1		 xor	 eax, ecx
  002b0	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  002b3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  002b8	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  002bb	89 41 40	 mov	 DWORD PTR [rcx+64], eax
  002be	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  002c1	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  002c5	33 c1		 xor	 eax, ecx
  002c7	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  002cb	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  002d0	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  002d4	89 41 44	 mov	 DWORD PTR [rcx+68], eax
  002d7	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  002db	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  002df	33 c1		 xor	 eax, ecx
  002e1	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  002e5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  002ea	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  002ee	89 41 48	 mov	 DWORD PTR [rcx+72], eax
  002f1	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  002f5	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  002f9	33 c1		 xor	 eax, ecx
  002fb	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  002ff	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00304	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00308	89 41 4c	 mov	 DWORD PTR [rcx+76], eax
  0030b	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  00311	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00318	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0031f	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00323	c1 e8 08	 shr	 eax, 8
  00326	0f b6 c0	 movzx	 eax, al
  00329	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00330	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00334	33 c8		 xor	 ecx, eax
  00336	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0033d	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00341	c1 e8 10	 shr	 eax, 16
  00344	0f b6 c0	 movzx	 eax, al
  00347	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  0034e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00355	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00359	c1 e8 18	 shr	 eax, 24
  0035c	0f b6 c0	 movzx	 eax, al
  0035f	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00366	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  0036a	33 c1		 xor	 eax, ecx
  0036c	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00370	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00375	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  00379	89 41 50	 mov	 DWORD PTR [rcx+80], eax
  0037c	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  00380	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00384	33 c1		 xor	 eax, ecx
  00386	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  0038a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0038f	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00393	89 41 54	 mov	 DWORD PTR [rcx+84], eax
  00396	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  0039a	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  0039e	33 c1		 xor	 eax, ecx
  003a0	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  003a4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  003a9	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  003ad	89 41 58	 mov	 DWORD PTR [rcx+88], eax
  003b0	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  003b4	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  003b8	33 c1		 xor	 eax, ecx
  003ba	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  003be	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  003c3	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  003c7	89 41 5c	 mov	 DWORD PTR [rcx+92], eax

; 193  :     ke8(cx->ks, 2); ke8(cx->ks, 3);

  003ca	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  003ce	c1 e8 08	 shr	 eax, 8
  003d1	44 0f b6 c0	 movzx	 r8d, al
  003d5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  003dc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  003e3	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  003e7	c1 e8 10	 shr	 eax, 16
  003ea	0f b6 c0	 movzx	 eax, al
  003ed	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  003f4	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  003f8	33 c8		 xor	 ecx, eax
  003fa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00401	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00405	c1 e8 18	 shr	 eax, 24
  00408	0f b6 c0	 movzx	 eax, al
  0040b	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00412	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00419	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  0041e	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00425	33 0d 08 00 00
	00		 xor	 ecx, DWORD PTR t_rc+8
  0042b	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  0042e	33 c1		 xor	 eax, ecx
  00430	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00433	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00438	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  0043b	89 41 60	 mov	 DWORD PTR [rcx+96], eax
  0043e	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  00441	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00445	33 c1		 xor	 eax, ecx
  00447	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  0044b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00450	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00454	89 41 64	 mov	 DWORD PTR [rcx+100], eax
  00457	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  0045b	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0045f	33 c1		 xor	 eax, ecx
  00461	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00465	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0046a	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0046e	89 41 68	 mov	 DWORD PTR [rcx+104], eax
  00471	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  00475	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00479	33 c1		 xor	 eax, ecx
  0047b	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  0047f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00484	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00488	89 41 6c	 mov	 DWORD PTR [rcx+108], eax
  0048b	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  00491	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00498	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0049f	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  004a3	c1 e8 08	 shr	 eax, 8
  004a6	0f b6 c0	 movzx	 eax, al
  004a9	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  004b0	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  004b4	33 c8		 xor	 ecx, eax
  004b6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  004bd	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  004c1	c1 e8 10	 shr	 eax, 16
  004c4	0f b6 c0	 movzx	 eax, al
  004c7	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  004ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  004d5	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  004d9	c1 e8 18	 shr	 eax, 24
  004dc	0f b6 c0	 movzx	 eax, al
  004df	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  004e6	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  004ea	33 c1		 xor	 eax, ecx
  004ec	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  004f0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  004f5	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  004f9	89 41 70	 mov	 DWORD PTR [rcx+112], eax
  004fc	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  00500	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00504	33 c1		 xor	 eax, ecx
  00506	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  0050a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0050f	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00513	89 41 74	 mov	 DWORD PTR [rcx+116], eax
  00516	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  0051a	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  0051e	33 c1		 xor	 eax, ecx
  00520	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  00524	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00529	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  0052d	89 41 78	 mov	 DWORD PTR [rcx+120], eax
  00530	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  00534	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00538	33 c1		 xor	 eax, ecx
  0053a	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  0053e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00543	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00547	89 41 7c	 mov	 DWORD PTR [rcx+124], eax
  0054a	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0054e	c1 e8 08	 shr	 eax, 8
  00551	44 0f b6 c0	 movzx	 r8d, al
  00555	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0055c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00563	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00567	c1 e8 10	 shr	 eax, 16
  0056a	0f b6 c0	 movzx	 eax, al
  0056d	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00574	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00578	33 c8		 xor	 ecx, eax
  0057a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00581	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00585	c1 e8 18	 shr	 eax, 24
  00588	0f b6 c0	 movzx	 eax, al
  0058b	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00592	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00599	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  0059e	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  005a5	33 0d 0c 00 00
	00		 xor	 ecx, DWORD PTR t_rc+12
  005ab	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  005ae	33 c1		 xor	 eax, ecx
  005b0	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  005b3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  005b8	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  005bb	89 81 80 00 00
	00		 mov	 DWORD PTR [rcx+128], eax
  005c1	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  005c4	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  005c8	33 c1		 xor	 eax, ecx
  005ca	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  005ce	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  005d3	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  005d7	89 81 84 00 00
	00		 mov	 DWORD PTR [rcx+132], eax
  005dd	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  005e1	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  005e5	33 c1		 xor	 eax, ecx
  005e7	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  005eb	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  005f0	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  005f4	89 81 88 00 00
	00		 mov	 DWORD PTR [rcx+136], eax
  005fa	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  005fe	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00602	33 c1		 xor	 eax, ecx
  00604	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  00608	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0060d	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00611	89 81 8c 00 00
	00		 mov	 DWORD PTR [rcx+140], eax
  00617	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  0061d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00624	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0062b	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0062f	c1 e8 08	 shr	 eax, 8
  00632	0f b6 c0	 movzx	 eax, al
  00635	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  0063c	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00640	33 c8		 xor	 ecx, eax
  00642	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00649	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0064d	c1 e8 10	 shr	 eax, 16
  00650	0f b6 c0	 movzx	 eax, al
  00653	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  0065a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00661	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00665	c1 e8 18	 shr	 eax, 24
  00668	0f b6 c0	 movzx	 eax, al
  0066b	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00672	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  00676	33 c1		 xor	 eax, ecx
  00678	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  0067c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00681	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  00685	89 81 90 00 00
	00		 mov	 DWORD PTR [rcx+144], eax
  0068b	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  0068f	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  00693	33 c1		 xor	 eax, ecx
  00695	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  00699	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0069e	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  006a2	89 81 94 00 00
	00		 mov	 DWORD PTR [rcx+148], eax
  006a8	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  006ac	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  006b0	33 c1		 xor	 eax, ecx
  006b2	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  006b6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  006bb	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  006bf	89 81 98 00 00
	00		 mov	 DWORD PTR [rcx+152], eax
  006c5	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  006c9	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  006cd	33 c1		 xor	 eax, ecx
  006cf	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  006d3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  006d8	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  006dc	89 81 9c 00 00
	00		 mov	 DWORD PTR [rcx+156], eax

; 194  :     ke8(cx->ks, 4); ke8(cx->ks, 5);

  006e2	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  006e6	c1 e8 08	 shr	 eax, 8
  006e9	44 0f b6 c0	 movzx	 r8d, al
  006ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  006f4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  006fb	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  006ff	c1 e8 10	 shr	 eax, 16
  00702	0f b6 c0	 movzx	 eax, al
  00705	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  0070c	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00710	33 c8		 xor	 ecx, eax
  00712	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00719	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0071d	c1 e8 18	 shr	 eax, 24
  00720	0f b6 c0	 movzx	 eax, al
  00723	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  0072a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00731	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  00736	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  0073d	33 0d 10 00 00
	00		 xor	 ecx, DWORD PTR t_rc+16
  00743	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00746	33 c1		 xor	 eax, ecx
  00748	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  0074b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00750	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00753	89 81 a0 00 00
	00		 mov	 DWORD PTR [rcx+160], eax
  00759	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  0075c	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00760	33 c1		 xor	 eax, ecx
  00762	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  00766	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0076b	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  0076f	89 81 a4 00 00
	00		 mov	 DWORD PTR [rcx+164], eax
  00775	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  00779	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0077d	33 c1		 xor	 eax, ecx
  0077f	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00783	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00788	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  0078c	89 81 a8 00 00
	00		 mov	 DWORD PTR [rcx+168], eax
  00792	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  00796	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0079a	33 c1		 xor	 eax, ecx
  0079c	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  007a0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  007a5	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  007a9	89 81 ac 00 00
	00		 mov	 DWORD PTR [rcx+172], eax
  007af	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  007b5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  007bc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  007c3	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  007c7	c1 e8 08	 shr	 eax, 8
  007ca	0f b6 c0	 movzx	 eax, al
  007cd	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  007d4	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  007d8	33 c8		 xor	 ecx, eax
  007da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  007e1	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  007e5	c1 e8 10	 shr	 eax, 16
  007e8	0f b6 c0	 movzx	 eax, al
  007eb	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  007f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  007f9	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  007fd	c1 e8 18	 shr	 eax, 24
  00800	0f b6 c0	 movzx	 eax, al
  00803	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  0080a	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  0080e	33 c1		 xor	 eax, ecx
  00810	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  00814	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00819	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  0081d	89 81 b0 00 00
	00		 mov	 DWORD PTR [rcx+176], eax
  00823	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  00827	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  0082b	33 c1		 xor	 eax, ecx
  0082d	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  00831	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00836	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  0083a	89 81 b4 00 00
	00		 mov	 DWORD PTR [rcx+180], eax
  00840	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  00844	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  00848	33 c1		 xor	 eax, ecx
  0084a	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  0084e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00853	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  00857	89 81 b8 00 00
	00		 mov	 DWORD PTR [rcx+184], eax
  0085d	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  00861	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00865	33 c1		 xor	 eax, ecx
  00867	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  0086b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00870	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00874	89 81 bc 00 00
	00		 mov	 DWORD PTR [rcx+188], eax
  0087a	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  0087e	c1 e8 08	 shr	 eax, 8
  00881	44 0f b6 c0	 movzx	 r8d, al
  00885	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  0088c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00893	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00897	c1 e8 10	 shr	 eax, 16
  0089a	0f b6 c0	 movzx	 eax, al
  0089d	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  008a4	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  008a8	33 c8		 xor	 ecx, eax
  008aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  008b1	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  008b5	c1 e8 18	 shr	 eax, 24
  008b8	0f b6 c0	 movzx	 eax, al
  008bb	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  008c2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  008c9	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  008ce	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  008d5	33 0d 14 00 00
	00		 xor	 ecx, DWORD PTR t_rc+20
  008db	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  008de	33 c1		 xor	 eax, ecx
  008e0	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  008e3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  008e8	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  008eb	89 81 c0 00 00
	00		 mov	 DWORD PTR [rcx+192], eax
  008f1	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  008f4	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  008f8	33 c1		 xor	 eax, ecx
  008fa	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  008fe	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00903	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00907	89 81 c4 00 00
	00		 mov	 DWORD PTR [rcx+196], eax
  0090d	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  00911	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00915	33 c1		 xor	 eax, ecx
  00917	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  0091b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00920	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00924	89 81 c8 00 00
	00		 mov	 DWORD PTR [rcx+200], eax
  0092a	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  0092e	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00932	33 c1		 xor	 eax, ecx
  00934	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  00938	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  0093d	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00941	89 81 cc 00 00
	00		 mov	 DWORD PTR [rcx+204], eax
  00947	44 0f b6 44 24
	0c		 movzx	 r8d, BYTE PTR ss$[rsp+12]
  0094d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00954	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  0095b	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0095f	c1 e8 08	 shr	 eax, 8
  00962	0f b6 c0	 movzx	 eax, al
  00965	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  0096c	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00970	33 c8		 xor	 ecx, eax
  00972	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00979	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  0097d	c1 e8 10	 shr	 eax, 16
  00980	0f b6 c0	 movzx	 eax, al
  00983	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  0098a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00991	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00995	c1 e8 18	 shr	 eax, 24
  00998	0f b6 c0	 movzx	 eax, al
  0099b	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  009a2	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  009a6	33 c1		 xor	 eax, ecx
  009a8	89 44 24 10	 mov	 DWORD PTR ss$[rsp+16], eax
  009ac	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  009b1	8b 44 24 10	 mov	 eax, DWORD PTR ss$[rsp+16]
  009b5	89 81 d0 00 00
	00		 mov	 DWORD PTR [rcx+208], eax
  009bb	8b 4c 24 10	 mov	 ecx, DWORD PTR ss$[rsp+16]
  009bf	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  009c3	33 c1		 xor	 eax, ecx
  009c5	89 44 24 14	 mov	 DWORD PTR ss$[rsp+20], eax
  009c9	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  009ce	8b 44 24 14	 mov	 eax, DWORD PTR ss$[rsp+20]
  009d2	89 81 d4 00 00
	00		 mov	 DWORD PTR [rcx+212], eax
  009d8	8b 4c 24 14	 mov	 ecx, DWORD PTR ss$[rsp+20]
  009dc	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  009e0	33 c1		 xor	 eax, ecx
  009e2	89 44 24 18	 mov	 DWORD PTR ss$[rsp+24], eax
  009e6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  009eb	8b 44 24 18	 mov	 eax, DWORD PTR ss$[rsp+24]
  009ef	89 81 d8 00 00
	00		 mov	 DWORD PTR [rcx+216], eax
  009f5	8b 4c 24 18	 mov	 ecx, DWORD PTR ss$[rsp+24]
  009f9	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  009fd	33 c1		 xor	 eax, ecx
  009ff	89 44 24 1c	 mov	 DWORD PTR ss$[rsp+28], eax
  00a03	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00a08	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a0c	89 81 dc 00 00
	00		 mov	 DWORD PTR [rcx+220], eax

; 195  : #endif
; 196  :     kef8(cx->ks, 6);

  00a12	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a16	c1 e8 08	 shr	 eax, 8
  00a19	44 0f b6 c0	 movzx	 r8d, al
  00a1d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00a24	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:t_fl
  00a2b	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a2f	c1 e8 10	 shr	 eax, 16
  00a32	0f b6 c0	 movzx	 eax, al
  00a35	8b 84 81 00 04
	00 00		 mov	 eax, DWORD PTR [rcx+rax*4+1024]
  00a3c	42 8b 0c 82	 mov	 ecx, DWORD PTR [rdx+r8*4]
  00a40	33 c8		 xor	 ecx, eax
  00a42	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00a49	8b 44 24 1c	 mov	 eax, DWORD PTR ss$[rsp+28]
  00a4d	c1 e8 18	 shr	 eax, 24
  00a50	0f b6 c0	 movzx	 eax, al
  00a53	33 8c 82 00 08
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+2048]
  00a5a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:t_fl
  00a61	0f b6 44 24 1c	 movzx	 eax, BYTE PTR ss$[rsp+28]
  00a66	33 8c 82 00 0c
	00 00		 xor	 ecx, DWORD PTR [rdx+rax*4+3072]
  00a6d	33 0d 18 00 00
	00		 xor	 ecx, DWORD PTR t_rc+24
  00a73	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00a76	33 c1		 xor	 eax, ecx
  00a78	89 04 24	 mov	 DWORD PTR ss$[rsp], eax
  00a7b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00a80	8b 04 24	 mov	 eax, DWORD PTR ss$[rsp]
  00a83	89 81 e0 00 00
	00		 mov	 DWORD PTR [rcx+224], eax
  00a89	8b 0c 24	 mov	 ecx, DWORD PTR ss$[rsp]
  00a8c	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00a90	33 c1		 xor	 eax, ecx
  00a92	89 44 24 04	 mov	 DWORD PTR ss$[rsp+4], eax
  00a96	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00a9b	8b 44 24 04	 mov	 eax, DWORD PTR ss$[rsp+4]
  00a9f	89 81 e4 00 00
	00		 mov	 DWORD PTR [rcx+228], eax
  00aa5	8b 4c 24 04	 mov	 ecx, DWORD PTR ss$[rsp+4]
  00aa9	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00aad	33 c1		 xor	 eax, ecx
  00aaf	89 44 24 08	 mov	 DWORD PTR ss$[rsp+8], eax
  00ab3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00ab8	8b 44 24 08	 mov	 eax, DWORD PTR ss$[rsp+8]
  00abc	89 81 e8 00 00
	00		 mov	 DWORD PTR [rcx+232], eax
  00ac2	8b 4c 24 08	 mov	 ecx, DWORD PTR ss$[rsp+8]
  00ac6	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00aca	33 c1		 xor	 eax, ecx
  00acc	89 44 24 0c	 mov	 DWORD PTR ss$[rsp+12], eax
  00ad0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR cx$[rsp]
  00ad5	8b 44 24 0c	 mov	 eax, DWORD PTR ss$[rsp+12]
  00ad9	89 81 ec 00 00
	00		 mov	 DWORD PTR [rcx+236], eax

; 197  :     cx->inf.l = 0;

  00adf	48 8b 44 24 38	 mov	 rax, QWORD PTR cx$[rsp]
  00ae4	c7 80 f0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+240], 0

; 198  :     cx->inf.b[0] = 14 * 16;

  00aee	48 8b 44 24 38	 mov	 rax, QWORD PTR cx$[rsp]
  00af3	c6 80 f0 00 00
	00 e0		 mov	 BYTE PTR [rax+240], 224	; 000000e0H

; 199  : 
; 200  : #ifdef USE_VIA_ACE_IF_PRESENT
; 201  :     if(VIA_ACE_AVAILABLE)
; 202  :         cx->inf.b[1] = 0xff;
; 203  : #endif
; 204  : 
; 205  : #if defined( AES_ERR_CHK )
; 206  :     return EXIT_SUCCESS;

  00afa	33 c0		 xor	 eax, eax

; 207  : #endif
; 208  : }

  00afc	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00b00	c3		 ret	 0
aes_encrypt_key256 ENDP
END
