; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.207 

	TITLE	c:\home\public\desktop\projects\ciphershed\src\crypto\rmd160.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
_PADDING DB	080H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	_RMD160Init@4
; Function compile flags: /Ogsp
; File c:\home\public\desktop\projects\ciphershed\src\crypto\rmd160.c
;	COMDAT _RMD160Init@4
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_RMD160Init@4 PROC					; COMDAT

; 54   : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp

; 55   : 	ctx->count = 0;

  00005	8b 45 08	 mov	 eax, DWORD PTR _ctx$[ebp]
  00008	83 60 18 00	 and	 DWORD PTR [eax+24], 0
  0000c	83 60 1c 00	 and	 DWORD PTR [eax+28], 0

; 56   : 	ctx->state[0] = 0x67452301;

  00010	c7 00 01 23 45
	67		 mov	 DWORD PTR [eax], 1732584193 ; 67452301H

; 57   : 	ctx->state[1] = 0xefcdab89;

  00016	c7 40 04 89 ab
	cd ef		 mov	 DWORD PTR [eax+4], -271733879 ; efcdab89H

; 58   : 	ctx->state[2] = 0x98badcfe;

  0001d	c7 40 08 fe dc
	ba 98		 mov	 DWORD PTR [eax+8], -1732584194 ; 98badcfeH

; 59   : 	ctx->state[3] = 0x10325476;

  00024	c7 40 0c 76 54
	32 10		 mov	 DWORD PTR [eax+12], 271733878 ; 10325476H

; 60   : 	ctx->state[4] = 0xc3d2e1f0;

  0002b	c7 40 10 f0 e1
	d2 c3		 mov	 DWORD PTR [eax+16], -1009589776 ; c3d2e1f0H

; 61   : 	PADDING[0] = 0x80;

  00032	c6 05 00 00 00
	00 80		 mov	 BYTE PTR _PADDING, 128	; 00000080H

; 62   : }

  00039	5d		 pop	 ebp
  0003a	c2 04 00	 ret	 4
_RMD160Init@4 ENDP
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT _rotlFixed@8
_TEXT	SEGMENT
_rotlFixed@8 PROC					; COMDAT
; _x$ = eax
; _y$ = ecx

; 166  : 	return (word32)((x<<y) | (x>>(sizeof(word32)*8-y)));

  00000	d3 c0		 rol	 eax, cl

; 167  : }

  00002	c3		 ret	 0
_rotlFixed@8 ENDP
_TEXT	ENDS
PUBLIC	_RMD160Transform@8
; Function compile flags: /Ogsp
;	COMDAT _RMD160Transform@8
_TEXT	SEGMENT
tv5556 = -92						; size = 4
tv5528 = -88						; size = 4
tv5444 = -84						; size = 4
tv5392 = -80						; size = 4
tv5944 = -76						; size = 4
tv5430 = -72						; size = 4
tv5500 = -68						; size = 4
tv5472 = -64						; size = 4
tv5414 = -60						; size = 4
tv5458 = -56						; size = 4
tv5861 = -52						; size = 4
tv5598 = -48						; size = 4
tv5486 = -44						; size = 4
tv5514 = -40						; size = 4
tv7046 = -36						; size = 4
tv6988 = -32						; size = 4
tv4758 = -28						; size = 4
_b2$ = -28						; size = 4
_b1$ = -24						; size = 4
_a2$ = -20						; size = 4
_c1$ = -16						; size = 4
_e1$ = -12						; size = 4
_a1$ = -8						; size = 4
_e2$ = -4						; size = 4
_d1$ = 8						; size = 4
_c2$ = 8						; size = 4
_digest$ = 8						; size = 4
tv4749 = 12						; size = 4
_d2$ = 12						; size = 4
_data$ = 12						; size = 4
_RMD160Transform@8 PROC					; COMDAT

; 175  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 5c	 sub	 esp, 92			; 0000005cH

; 176  : #if BYTE_ORDER == LITTLE_ENDIAN
; 177  : 	const word32 *X = data;
; 178  : #else
; 179  : 	word32 X[16];
; 180  : 	int i;
; 181  : #endif
; 182  : 
; 183  : 	word32 a1, b1, c1, d1, e1, a2, b2, c2, d2, e2;
; 184  : 	a1 = a2 = digest[0];

  00008	8b 4d 08	 mov	 ecx, DWORD PTR _digest$[ebp]

; 185  : 	b1 = b2 = digest[1];
; 186  : 	c1 = c2 = digest[2];
; 187  : 	d1 = d2 = digest[3];

  0000b	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]

; 188  : 	e1 = e2 = digest[4];
; 189  : 
; 190  : #if BYTE_ORDER == BIG_ENDIAN
; 191  : 	for (i = 0; i < 16; i++)
; 192  : 	{
; 193  : 		X[i] = LE32 (data[i]);
; 194  : 	}
; 195  : #endif
; 196  : 
; 197  : 	Subround(F, a1, b1, c1, d1, e1, X[ 0], 11, k0);

  0000e	8b 45 0c	 mov	 eax, DWORD PTR _data$[ebp]
  00011	53		 push	 ebx
  00012	8b da		 mov	 ebx, edx
  00014	56		 push	 esi
  00015	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00018	57		 push	 edi
  00019	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  0001c	33 df		 xor	 ebx, edi
  0001e	33 de		 xor	 ebx, esi
  00020	03 18		 add	 ebx, DWORD PTR [eax]
  00022	03 19		 add	 ebx, DWORD PTR [ecx]
  00024	c1 c3 0b	 rol	 ebx, 11			; 0000000bH
  00027	03 59 10	 add	 ebx, DWORD PTR [ecx+16]
  0002a	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  0002d	89 7d 0c	 mov	 DWORD PTR tv4749[ebp], edi
  00030	33 fe		 xor	 edi, esi

; 198  : 	Subround(F, e1, a1, b1, c1, d1, X[ 1], 14, k0);

  00032	33 fb		 xor	 edi, ebx
  00034	03 78 04	 add	 edi, DWORD PTR [eax+4]
  00037	03 79 10	 add	 edi, DWORD PTR [ecx+16]
  0003a	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  0003d	03 fa		 add	 edi, edx
  0003f	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 199  : 	Subround(F, d1, e1, a1, b1, c1, X[ 2], 15, k0);

  00042	8b d7		 mov	 edx, edi
  00044	33 d6		 xor	 edx, esi
  00046	33 d3		 xor	 edx, ebx
  00048	03 50 08	 add	 edx, DWORD PTR [eax+8]
  0004b	89 75 e4	 mov	 DWORD PTR tv4758[ebp], esi
  0004e	03 51 0c	 add	 edx, DWORD PTR [ecx+12]

; 200  : 	Subround(F, c1, d1, e1, a1, b1, X[ 3], 12, k0);

  00051	8b f7		 mov	 esi, edi
  00053	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  00056	03 55 0c	 add	 edx, DWORD PTR tv4749[ebp]
  00059	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  0005c	33 f2		 xor	 esi, edx
  0005e	33 f3		 xor	 esi, ebx
  00060	03 70 0c	 add	 esi, DWORD PTR [eax+12]
  00063	89 5d f8	 mov	 DWORD PTR _a1$[ebp], ebx
  00066	03 75 0c	 add	 esi, DWORD PTR tv4749[ebp]
  00069	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  0006c	03 75 e4	 add	 esi, DWORD PTR tv4758[ebp]
  0006f	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 201  : 	Subround(F, b1, c1, d1, e1, a1, X[ 4],  5, k0);

  00072	8b df		 mov	 ebx, edi
  00074	33 da		 xor	 ebx, edx
  00076	33 de		 xor	 ebx, esi
  00078	03 58 10	 add	 ebx, DWORD PTR [eax+16]
  0007b	89 7d f4	 mov	 DWORD PTR _e1$[ebp], edi
  0007e	03 5d e4	 add	 ebx, DWORD PTR tv4758[ebp]
  00081	89 75 f0	 mov	 DWORD PTR _c1$[ebp], esi
  00084	c1 c3 05	 rol	 ebx, 5
  00087	03 5d f8	 add	 ebx, DWORD PTR _a1$[ebp]
  0008a	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  0008d	89 5d e8	 mov	 DWORD PTR _b1$[ebp], ebx

; 202  : 	Subround(F, a1, b1, c1, d1, e1, X[ 5],  8, k0);

  00090	8b da		 mov	 ebx, edx
  00092	33 de		 xor	 ebx, esi
  00094	33 5d e8	 xor	 ebx, DWORD PTR _b1$[ebp]
  00097	89 55 08	 mov	 DWORD PTR _d1$[ebp], edx
  0009a	03 58 14	 add	 ebx, DWORD PTR [eax+20]
  0009d	03 5d f8	 add	 ebx, DWORD PTR _a1$[ebp]
  000a0	c1 c3 08	 rol	 ebx, 8
  000a3	03 df		 add	 ebx, edi
  000a5	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH

; 203  : 	Subround(F, e1, a1, b1, c1, d1, X[ 6],  7, k0);

  000a9	8b 7d f0	 mov	 edi, DWORD PTR _c1$[ebp]
  000ac	33 7d e8	 xor	 edi, DWORD PTR _b1$[ebp]
  000af	33 fb		 xor	 edi, ebx
  000b1	03 78 18	 add	 edi, DWORD PTR [eax+24]
  000b4	03 7d f4	 add	 edi, DWORD PTR _e1$[ebp]
  000b7	c1 c7 07	 rol	 edi, 7
  000ba	03 fa		 add	 edi, edx
  000bc	c1 45 e8 0a	 rol	 DWORD PTR _b1$[ebp], 10	; 0000000aH

; 204  : 	Subround(F, d1, e1, a1, b1, c1, X[ 7],  9, k0);

  000c0	8b d7		 mov	 edx, edi
  000c2	33 55 e8	 xor	 edx, DWORD PTR _b1$[ebp]

; 205  : 	Subround(F, c1, d1, e1, a1, b1, X[ 8], 11, k0);

  000c5	8b f7		 mov	 esi, edi
  000c7	33 d3		 xor	 edx, ebx
  000c9	03 50 1c	 add	 edx, DWORD PTR [eax+28]
  000cc	03 55 08	 add	 edx, DWORD PTR _d1$[ebp]
  000cf	c1 c2 09	 rol	 edx, 9
  000d2	03 55 f0	 add	 edx, DWORD PTR _c1$[ebp]
  000d5	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  000d8	89 55 08	 mov	 DWORD PTR _d1$[ebp], edx
  000db	89 5d f8	 mov	 DWORD PTR _a1$[ebp], ebx
  000de	33 f2		 xor	 esi, edx
  000e0	33 f3		 xor	 esi, ebx
  000e2	03 70 20	 add	 esi, DWORD PTR [eax+32]
  000e5	03 75 f0	 add	 esi, DWORD PTR _c1$[ebp]
  000e8	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  000eb	03 75 e8	 add	 esi, DWORD PTR _b1$[ebp]
  000ee	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  000f1	89 75 f0	 mov	 DWORD PTR _c1$[ebp], esi

; 206  : 	Subround(F, b1, c1, d1, e1, a1, X[ 9], 13, k0);

  000f4	8b f7		 mov	 esi, edi
  000f6	33 f2		 xor	 esi, edx
  000f8	33 75 f0	 xor	 esi, DWORD PTR _c1$[ebp]
  000fb	89 7d f4	 mov	 DWORD PTR _e1$[ebp], edi
  000fe	03 70 24	 add	 esi, DWORD PTR [eax+36]
  00101	03 75 e8	 add	 esi, DWORD PTR _b1$[ebp]
  00104	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00107	03 f3		 add	 esi, ebx
  00109	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH

; 207  : 	Subround(F, a1, b1, c1, d1, e1, X[10], 14, k0);

  0010d	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  00110	33 5d f0	 xor	 ebx, DWORD PTR _c1$[ebp]
  00113	33 de		 xor	 ebx, esi
  00115	03 58 28	 add	 ebx, DWORD PTR [eax+40]
  00118	03 5d f8	 add	 ebx, DWORD PTR _a1$[ebp]
  0011b	c1 c3 0e	 rol	 ebx, 14			; 0000000eH
  0011e	03 df		 add	 ebx, edi
  00120	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH

; 208  : 	Subround(F, e1, a1, b1, c1, d1, X[11], 15, k0);

  00124	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00127	8b 78 2c	 mov	 edi, DWORD PTR [eax+44]
  0012a	33 d6		 xor	 edx, esi
  0012c	33 d3		 xor	 edx, ebx
  0012e	03 d7		 add	 edx, edi
  00130	03 55 f4	 add	 edx, DWORD PTR _e1$[ebp]
  00133	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  00136	03 55 08	 add	 edx, DWORD PTR _d1$[ebp]
  00139	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 209  : 	Subround(F, d1, e1, a1, b1, c1, X[12],  6, k0);

  0013c	8b fa		 mov	 edi, edx
  0013e	33 fe		 xor	 edi, esi
  00140	33 fb		 xor	 edi, ebx
  00142	03 78 30	 add	 edi, DWORD PTR [eax+48]
  00145	89 55 f4	 mov	 DWORD PTR _e1$[ebp], edx
  00148	03 7d 08	 add	 edi, DWORD PTR _d1$[ebp]
  0014b	89 75 e8	 mov	 DWORD PTR _b1$[ebp], esi
  0014e	c1 c7 06	 rol	 edi, 6
  00151	03 7d f0	 add	 edi, DWORD PTR _c1$[ebp]
  00154	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00157	33 d7		 xor	 edx, edi

; 210  : 	Subround(F, c1, d1, e1, a1, b1, X[13],  7, k0);

  00159	33 d3		 xor	 edx, ebx
  0015b	03 50 34	 add	 edx, DWORD PTR [eax+52]
  0015e	89 7d 08	 mov	 DWORD PTR _d1$[ebp], edi
  00161	03 55 f0	 add	 edx, DWORD PTR _c1$[ebp]
  00164	89 5d f8	 mov	 DWORD PTR _a1$[ebp], ebx
  00167	c1 c2 07	 rol	 edx, 7
  0016a	03 d6		 add	 edx, esi
  0016c	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH

; 211  : 	Subround(F, b1, c1, d1, e1, a1, X[14],  9, k0);

  00170	8b 75 f4	 mov	 esi, DWORD PTR _e1$[ebp]
  00173	33 f7		 xor	 esi, edi
  00175	33 f2		 xor	 esi, edx
  00177	03 70 38	 add	 esi, DWORD PTR [eax+56]
  0017a	03 75 e8	 add	 esi, DWORD PTR _b1$[ebp]
  0017d	c1 c6 09	 rol	 esi, 9
  00180	03 f3		 add	 esi, ebx
  00182	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH

; 212  : 	Subround(F, a1, b1, c1, d1, e1, X[15],  8, k0);

  00186	8b 7d 08	 mov	 edi, DWORD PTR _d1$[ebp]
  00189	8b 58 3c	 mov	 ebx, DWORD PTR [eax+60]
  0018c	33 fa		 xor	 edi, edx
  0018e	33 fe		 xor	 edi, esi
  00190	03 fb		 add	 edi, ebx
  00192	03 7d f8	 add	 edi, DWORD PTR _a1$[ebp]
  00195	c1 c7 08	 rol	 edi, 8
  00198	03 7d f4	 add	 edi, DWORD PTR _e1$[ebp]
  0019b	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 213  : 
; 214  : 	Subround(G, e1, a1, b1, c1, d1, X[ 7],  7, k1);

  0019e	8b da		 mov	 ebx, edx
  001a0	33 de		 xor	 ebx, esi
  001a2	23 df		 and	 ebx, edi
  001a4	33 da		 xor	 ebx, edx
  001a6	03 58 1c	 add	 ebx, DWORD PTR [eax+28]
  001a9	89 7d f8	 mov	 DWORD PTR _a1$[ebp], edi
  001ac	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  001af	8d bc 3b 99 79
	82 5a		 lea	 edi, DWORD PTR [ebx+edi+1518500249]
  001b6	c1 c7 07	 rol	 edi, 7
  001b9	03 7d 08	 add	 edi, DWORD PTR _d1$[ebp]
  001bc	89 7d f4	 mov	 DWORD PTR _e1$[ebp], edi

; 215  : 	Subround(G, d1, e1, a1, b1, c1, X[ 4],  6, k1);

  001bf	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  001c2	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  001c5	8b fe		 mov	 edi, esi
  001c7	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  001ca	23 7d f4	 and	 edi, DWORD PTR _e1$[ebp]
  001cd	33 fe		 xor	 edi, esi
  001cf	03 78 10	 add	 edi, DWORD PTR [eax+16]
  001d2	8d bc 1f 99 79
	82 5a		 lea	 edi, DWORD PTR [edi+ebx+1518500249]
  001d9	c1 c7 06	 rol	 edi, 6
  001dc	03 fa		 add	 edi, edx
  001de	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH
  001e2	89 7d 08	 mov	 DWORD PTR _d1$[ebp], edi

; 216  : 	Subround(G, c1, d1, e1, a1, b1, X[13],  8, k1);

  001e5	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  001e8	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]

; 217  : 	Subround(G, b1, c1, d1, e1, a1, X[ 1], 13, k1);
; 218  : 	Subround(G, a1, b1, c1, d1, e1, X[10], 11, k1);

  001eb	8b 5d f8	 mov	 ebx, DWORD PTR _a1$[ebp]
  001ee	23 7d 08	 and	 edi, DWORD PTR _d1$[ebp]
  001f1	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  001f4	03 78 34	 add	 edi, DWORD PTR [eax+52]
  001f7	8d 94 17 99 79
	82 5a		 lea	 edx, DWORD PTR [edi+edx+1518500249]
  001fe	c1 c2 08	 rol	 edx, 8
  00201	03 d6		 add	 edx, esi
  00203	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH
  00207	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  0020a	33 7d 08	 xor	 edi, DWORD PTR _d1$[ebp]
  0020d	23 fa		 and	 edi, edx
  0020f	33 7d f4	 xor	 edi, DWORD PTR _e1$[ebp]
  00212	03 78 04	 add	 edi, DWORD PTR [eax+4]
  00215	8d b4 37 99 79
	82 5a		 lea	 esi, DWORD PTR [edi+esi+1518500249]
  0021c	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  0021f	03 75 f8	 add	 esi, DWORD PTR _a1$[ebp]
  00222	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH
  00226	8b 7d 08	 mov	 edi, DWORD PTR _d1$[ebp]
  00229	33 fa		 xor	 edi, edx
  0022b	23 fe		 and	 edi, esi
  0022d	33 7d 08	 xor	 edi, DWORD PTR _d1$[ebp]
  00230	03 78 28	 add	 edi, DWORD PTR [eax+40]
  00233	8d bc 1f 99 79
	82 5a		 lea	 edi, DWORD PTR [edi+ebx+1518500249]
  0023a	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  0023d	03 7d f4	 add	 edi, DWORD PTR _e1$[ebp]
  00240	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00243	89 7d f8	 mov	 DWORD PTR _a1$[ebp], edi

; 219  : 	Subround(G, e1, a1, b1, c1, d1, X[ 6],  9, k1);

  00246	8b da		 mov	 ebx, edx
  00248	33 de		 xor	 ebx, esi
  0024a	23 df		 and	 ebx, edi
  0024c	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  0024f	33 da		 xor	 ebx, edx
  00251	03 58 18	 add	 ebx, DWORD PTR [eax+24]
  00254	8d bc 3b 99 79
	82 5a		 lea	 edi, DWORD PTR [ebx+edi+1518500249]
  0025b	c1 c7 09	 rol	 edi, 9
  0025e	03 7d 08	 add	 edi, DWORD PTR _d1$[ebp]

; 220  : 	Subround(G, d1, e1, a1, b1, c1, X[15],  7, k1);

  00261	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  00264	89 7d f4	 mov	 DWORD PTR _e1$[ebp], edi
  00267	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  0026a	8b fe		 mov	 edi, esi
  0026c	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  0026f	23 7d f4	 and	 edi, DWORD PTR _e1$[ebp]
  00272	33 fe		 xor	 edi, esi
  00274	03 78 3c	 add	 edi, DWORD PTR [eax+60]
  00277	8d bc 1f 99 79
	82 5a		 lea	 edi, DWORD PTR [edi+ebx+1518500249]
  0027e	c1 c7 07	 rol	 edi, 7
  00281	03 fa		 add	 edi, edx
  00283	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH
  00287	89 7d 08	 mov	 DWORD PTR _d1$[ebp], edi

; 221  : 	Subround(G, c1, d1, e1, a1, b1, X[ 3], 15, k1);

  0028a	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  0028d	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  00290	23 7d 08	 and	 edi, DWORD PTR _d1$[ebp]
  00293	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  00296	03 78 0c	 add	 edi, DWORD PTR [eax+12]
  00299	8d 94 17 99 79
	82 5a		 lea	 edx, DWORD PTR [edi+edx+1518500249]
  002a0	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  002a3	03 d6		 add	 edx, esi
  002a5	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH

; 222  : 	Subround(G, b1, c1, d1, e1, a1, X[12],  7, k1);

  002a9	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  002ac	33 7d 08	 xor	 edi, DWORD PTR _d1$[ebp]
  002af	23 fa		 and	 edi, edx
  002b1	33 7d f4	 xor	 edi, DWORD PTR _e1$[ebp]
  002b4	03 78 30	 add	 edi, DWORD PTR [eax+48]
  002b7	8d b4 37 99 79
	82 5a		 lea	 esi, DWORD PTR [edi+esi+1518500249]
  002be	c1 c6 07	 rol	 esi, 7
  002c1	03 75 f8	 add	 esi, DWORD PTR _a1$[ebp]
  002c4	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH

; 223  : 	Subround(G, a1, b1, c1, d1, e1, X[ 0], 12, k1);

  002c8	8b 7d 08	 mov	 edi, DWORD PTR _d1$[ebp]
  002cb	33 fa		 xor	 edi, edx
  002cd	23 fe		 and	 edi, esi
  002cf	33 7d 08	 xor	 edi, DWORD PTR _d1$[ebp]
  002d2	8b 5d f8	 mov	 ebx, DWORD PTR _a1$[ebp]
  002d5	03 38		 add	 edi, DWORD PTR [eax]
  002d7	8d bc 1f 99 79
	82 5a		 lea	 edi, DWORD PTR [edi+ebx+1518500249]
  002de	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  002e1	03 7d f4	 add	 edi, DWORD PTR _e1$[ebp]
  002e4	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  002e7	89 7d f8	 mov	 DWORD PTR _a1$[ebp], edi

; 224  : 	Subround(G, e1, a1, b1, c1, d1, X[ 9], 15, k1);

  002ea	8b da		 mov	 ebx, edx
  002ec	33 de		 xor	 ebx, esi
  002ee	23 df		 and	 ebx, edi
  002f0	33 da		 xor	 ebx, edx
  002f2	03 58 24	 add	 ebx, DWORD PTR [eax+36]
  002f5	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  002f8	8d bc 3b 99 79
	82 5a		 lea	 edi, DWORD PTR [ebx+edi+1518500249]
  002ff	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00302	03 7d 08	 add	 edi, DWORD PTR _d1$[ebp]

; 225  : 	Subround(G, d1, e1, a1, b1, c1, X[ 5],  9, k1);

  00305	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  00308	89 7d f4	 mov	 DWORD PTR _e1$[ebp], edi
  0030b	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  0030e	8b fe		 mov	 edi, esi
  00310	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  00313	23 7d f4	 and	 edi, DWORD PTR _e1$[ebp]
  00316	33 fe		 xor	 edi, esi
  00318	03 78 14	 add	 edi, DWORD PTR [eax+20]
  0031b	8d bc 1f 99 79
	82 5a		 lea	 edi, DWORD PTR [edi+ebx+1518500249]
  00322	c1 c7 09	 rol	 edi, 9
  00325	03 fa		 add	 edi, edx
  00327	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH
  0032b	89 7d 08	 mov	 DWORD PTR _d1$[ebp], edi

; 226  : 	Subround(G, c1, d1, e1, a1, b1, X[ 2], 11, k1);

  0032e	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  00331	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  00334	23 7d 08	 and	 edi, DWORD PTR _d1$[ebp]
  00337	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  0033a	03 78 08	 add	 edi, DWORD PTR [eax+8]
  0033d	8d 94 17 99 79
	82 5a		 lea	 edx, DWORD PTR [edi+edx+1518500249]
  00344	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00347	03 d6		 add	 edx, esi
  00349	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH

; 227  : 	Subround(G, b1, c1, d1, e1, a1, X[14],  7, k1);

  0034d	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  00350	33 7d 08	 xor	 edi, DWORD PTR _d1$[ebp]
  00353	23 fa		 and	 edi, edx
  00355	33 7d f4	 xor	 edi, DWORD PTR _e1$[ebp]
  00358	03 78 38	 add	 edi, DWORD PTR [eax+56]
  0035b	8d b4 37 99 79
	82 5a		 lea	 esi, DWORD PTR [edi+esi+1518500249]
  00362	8b 7d f8	 mov	 edi, DWORD PTR _a1$[ebp]
  00365	c1 c6 07	 rol	 esi, 7
  00368	03 f7		 add	 esi, edi
  0036a	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH

; 228  : 	Subround(G, a1, b1, c1, d1, e1, X[11], 13, k1);

  0036e	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  00371	33 da		 xor	 ebx, edx
  00373	23 de		 and	 ebx, esi
  00375	33 5d 08	 xor	 ebx, DWORD PTR _d1$[ebp]
  00378	03 58 2c	 add	 ebx, DWORD PTR [eax+44]
  0037b	8d bc 3b 99 79
	82 5a		 lea	 edi, DWORD PTR [ebx+edi+1518500249]
  00382	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00385	03 7d f4	 add	 edi, DWORD PTR _e1$[ebp]
  00388	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 229  : 	Subround(G, e1, a1, b1, c1, d1, X[ 8], 12, k1);

  0038b	8b da		 mov	 ebx, edx
  0038d	33 de		 xor	 ebx, esi
  0038f	23 df		 and	 ebx, edi
  00391	33 da		 xor	 ebx, edx
  00393	03 58 20	 add	 ebx, DWORD PTR [eax+32]
  00396	89 7d f8	 mov	 DWORD PTR _a1$[ebp], edi
  00399	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  0039c	8d bc 3b 99 79
	82 5a		 lea	 edi, DWORD PTR [ebx+edi+1518500249]

; 230  : 
; 231  : 	Subround(H, d1, e1, a1, b1, c1, X[ 3], 11, k2);

  003a3	8b 5d f8	 mov	 ebx, DWORD PTR _a1$[ebp]
  003a6	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  003a9	03 7d 08	 add	 edi, DWORD PTR _d1$[ebp]
  003ac	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  003af	f7 d3		 not	 ebx
  003b1	0b df		 or	 ebx, edi
  003b3	33 de		 xor	 ebx, esi
  003b5	03 58 0c	 add	 ebx, DWORD PTR [eax+12]
  003b8	89 75 e8	 mov	 DWORD PTR _b1$[ebp], esi
  003bb	8b 75 08	 mov	 esi, DWORD PTR _d1$[ebp]
  003be	8d b4 33 a1 eb
	d9 6e		 lea	 esi, DWORD PTR [ebx+esi+1859775393]
  003c5	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  003c8	03 f2		 add	 esi, edx
  003ca	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH

; 232  : 	Subround(H, c1, d1, e1, a1, b1, X[10], 13, k2);

  003ce	8b df		 mov	 ebx, edi
  003d0	f7 d3		 not	 ebx
  003d2	0b de		 or	 ebx, esi
  003d4	33 5d f8	 xor	 ebx, DWORD PTR _a1$[ebp]
  003d7	89 75 08	 mov	 DWORD PTR _d1$[ebp], esi
  003da	03 58 28	 add	 ebx, DWORD PTR [eax+40]
  003dd	8b 75 e8	 mov	 esi, DWORD PTR _b1$[ebp]
  003e0	8d 94 13 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ebx+edx+1859775393]
  003e7	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  003ea	03 d6		 add	 edx, esi

; 233  : 	Subround(H, b1, c1, d1, e1, a1, X[14],  6, k2);

  003ec	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  003ef	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  003f2	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  003f5	f7 d3		 not	 ebx
  003f7	0b da		 or	 ebx, edx
  003f9	33 df		 xor	 ebx, edi
  003fb	03 58 38	 add	 ebx, DWORD PTR [eax+56]

; 234  : 	Subround(H, a1, b1, c1, d1, e1, X[ 4],  7, k2);

  003fe	f7 d2		 not	 edx
  00400	8d 9c 33 a1 eb
	d9 6e		 lea	 ebx, DWORD PTR [ebx+esi+1859775393]
  00407	8b 75 f8	 mov	 esi, DWORD PTR _a1$[ebp]
  0040a	c1 c3 06	 rol	 ebx, 6
  0040d	03 5d f8	 add	 ebx, DWORD PTR _a1$[ebp]
  00410	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH
  00414	0b d3		 or	 edx, ebx
  00416	33 55 08	 xor	 edx, DWORD PTR _d1$[ebp]
  00419	03 50 10	 add	 edx, DWORD PTR [eax+16]
  0041c	8d b4 32 a1 eb
	d9 6e		 lea	 esi, DWORD PTR [edx+esi+1859775393]
  00423	c1 c6 07	 rol	 esi, 7
  00426	03 f7		 add	 esi, edi
  00428	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH

; 235  : 	Subround(H, e1, a1, b1, c1, d1, X[ 9], 14, k2);

  0042c	8b d3		 mov	 edx, ebx
  0042e	f7 d2		 not	 edx
  00430	0b d6		 or	 edx, esi
  00432	33 55 f0	 xor	 edx, DWORD PTR _c1$[ebp]
  00435	03 50 24	 add	 edx, DWORD PTR [eax+36]
  00438	8d 94 3a a1 eb
	d9 6e		 lea	 edx, DWORD PTR [edx+edi+1859775393]
  0043f	c1 c2 0e	 rol	 edx, 14			; 0000000eH
  00442	03 55 08	 add	 edx, DWORD PTR _d1$[ebp]

; 236  : 	Subround(H, d1, e1, a1, b1, c1, X[15],  9, k2);

  00445	8b fe		 mov	 edi, esi
  00447	f7 d7		 not	 edi
  00449	0b fa		 or	 edi, edx
  0044b	89 55 f4	 mov	 DWORD PTR _e1$[ebp], edx
  0044e	8b 55 08	 mov	 edx, DWORD PTR _d1$[ebp]
  00451	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00454	33 fb		 xor	 edi, ebx
  00456	03 78 3c	 add	 edi, DWORD PTR [eax+60]
  00459	8d 94 17 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [edi+edx+1859775393]

; 237  : 	Subround(H, c1, d1, e1, a1, b1, X[ 8], 13, k2);

  00460	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  00463	c1 c2 09	 rol	 edx, 9
  00466	03 55 f0	 add	 edx, DWORD PTR _c1$[ebp]
  00469	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  0046c	f7 d7		 not	 edi
  0046e	0b fa		 or	 edi, edx
  00470	33 fe		 xor	 edi, esi
  00472	03 78 20	 add	 edi, DWORD PTR [eax+32]
  00475	89 55 08	 mov	 DWORD PTR _d1$[ebp], edx
  00478	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  0047b	8d bc 17 a1 eb
	d9 6e		 lea	 edi, DWORD PTR [edi+edx+1859775393]

; 238  : 	Subround(H, b1, c1, d1, e1, a1, X[ 1], 15, k2);

  00482	8b 55 08	 mov	 edx, DWORD PTR _d1$[ebp]
  00485	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00488	03 fb		 add	 edi, ebx
  0048a	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH
  0048e	f7 d2		 not	 edx
  00490	0b d7		 or	 edx, edi
  00492	33 55 f4	 xor	 edx, DWORD PTR _e1$[ebp]
  00495	89 75 f8	 mov	 DWORD PTR _a1$[ebp], esi
  00498	03 50 04	 add	 edx, DWORD PTR [eax+4]
  0049b	8d 94 1a a1 eb
	d9 6e		 lea	 edx, DWORD PTR [edx+ebx+1859775393]

; 239  : 	Subround(H, a1, b1, c1, d1, e1, X[ 2], 14, k2);

  004a2	8b 5d f8	 mov	 ebx, DWORD PTR _a1$[ebp]
  004a5	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  004a8	03 d6		 add	 edx, esi
  004aa	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH
  004ae	8b f7		 mov	 esi, edi
  004b0	f7 d6		 not	 esi
  004b2	0b f2		 or	 esi, edx
  004b4	33 75 08	 xor	 esi, DWORD PTR _d1$[ebp]
  004b7	03 70 08	 add	 esi, DWORD PTR [eax+8]
  004ba	8d b4 1e a1 eb
	d9 6e		 lea	 esi, DWORD PTR [esi+ebx+1859775393]
  004c1	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  004c4	03 75 f4	 add	 esi, DWORD PTR _e1$[ebp]
  004c7	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 240  : 	Subround(H, e1, a1, b1, c1, d1, X[ 7],  8, k2);

  004ca	8b da		 mov	 ebx, edx
  004cc	f7 d3		 not	 ebx
  004ce	0b de		 or	 ebx, esi
  004d0	33 df		 xor	 ebx, edi
  004d2	03 58 1c	 add	 ebx, DWORD PTR [eax+28]
  004d5	89 75 f8	 mov	 DWORD PTR _a1$[ebp], esi
  004d8	8b 75 f4	 mov	 esi, DWORD PTR _e1$[ebp]
  004db	8d b4 33 a1 eb
	d9 6e		 lea	 esi, DWORD PTR [ebx+esi+1859775393]

; 241  : 	Subround(H, d1, e1, a1, b1, c1, X[ 0], 13, k2);

  004e2	8b 5d f8	 mov	 ebx, DWORD PTR _a1$[ebp]
  004e5	c1 c6 08	 rol	 esi, 8
  004e8	03 75 08	 add	 esi, DWORD PTR _d1$[ebp]
  004eb	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  004ee	f7 d3		 not	 ebx
  004f0	0b de		 or	 ebx, esi
  004f2	33 da		 xor	 ebx, edx
  004f4	03 18		 add	 ebx, DWORD PTR [eax]
  004f6	89 75 f4	 mov	 DWORD PTR _e1$[ebp], esi
  004f9	8b 75 08	 mov	 esi, DWORD PTR _d1$[ebp]
  004fc	8d b4 33 a1 eb
	d9 6e		 lea	 esi, DWORD PTR [ebx+esi+1859775393]
  00503	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00506	03 f7		 add	 esi, edi
  00508	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH
  0050c	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi

; 242  : 	Subround(H, c1, d1, e1, a1, b1, X[ 6],  6, k2);

  0050f	8b 7d f4	 mov	 edi, DWORD PTR _e1$[ebp]
  00512	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  00515	f7 d7		 not	 edi
  00517	0b fe		 or	 edi, esi
  00519	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  0051c	89 55 e8	 mov	 DWORD PTR _b1$[ebp], edx
  0051f	03 78 18	 add	 edi, DWORD PTR [eax+24]
  00522	8d bc 1f a1 eb
	d9 6e		 lea	 edi, DWORD PTR [edi+ebx+1859775393]

; 243  : 	Subround(H, b1, c1, d1, e1, a1, X[13],  5, k2);

  00529	8b 5d e8	 mov	 ebx, DWORD PTR _b1$[ebp]
  0052c	c1 c7 06	 rol	 edi, 6
  0052f	03 fa		 add	 edi, edx
  00531	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH
  00535	8b d6		 mov	 edx, esi
  00537	f7 d2		 not	 edx
  00539	0b d7		 or	 edx, edi
  0053b	33 55 f4	 xor	 edx, DWORD PTR _e1$[ebp]
  0053e	03 50 34	 add	 edx, DWORD PTR [eax+52]
  00541	8d 94 1a a1 eb
	d9 6e		 lea	 edx, DWORD PTR [edx+ebx+1859775393]
  00548	c1 c2 05	 rol	 edx, 5
  0054b	03 55 f8	 add	 edx, DWORD PTR _a1$[ebp]
  0054e	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 244  : 	Subround(H, a1, b1, c1, d1, e1, X[11], 12, k2);

  00551	8b df		 mov	 ebx, edi
  00553	f7 d3		 not	 ebx
  00555	0b da		 or	 ebx, edx
  00557	33 de		 xor	 ebx, esi
  00559	03 58 2c	 add	 ebx, DWORD PTR [eax+44]
  0055c	89 55 e8	 mov	 DWORD PTR _b1$[ebp], edx
  0055f	8b 55 f8	 mov	 edx, DWORD PTR _a1$[ebp]
  00562	8d 94 13 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ebx+edx+1859775393]

; 245  : 	Subround(H, e1, a1, b1, c1, d1, X[ 5],  7, k2);

  00569	8b 5d e8	 mov	 ebx, DWORD PTR _b1$[ebp]
  0056c	c1 c2 0c	 rol	 edx, 12			; 0000000cH
  0056f	03 55 f4	 add	 edx, DWORD PTR _e1$[ebp]
  00572	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00575	f7 d3		 not	 ebx
  00577	0b da		 or	 ebx, edx
  00579	33 df		 xor	 ebx, edi
  0057b	03 58 14	 add	 ebx, DWORD PTR [eax+20]
  0057e	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  00581	8b 55 f4	 mov	 edx, DWORD PTR _e1$[ebp]
  00584	89 75 08	 mov	 DWORD PTR _d1$[ebp], esi
  00587	8d 94 13 a1 eb
	d9 6e		 lea	 edx, DWORD PTR [ebx+edx+1859775393]

; 246  : 	Subround(H, d1, e1, a1, b1, c1, X[12],  5, k2);

  0058e	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  00591	c1 c2 07	 rol	 edx, 7
  00594	03 d6		 add	 edx, esi
  00596	8b 75 f8	 mov	 esi, DWORD PTR _a1$[ebp]
  00599	c1 45 e8 0a	 rol	 DWORD PTR _b1$[ebp], 10	; 0000000aH
  0059d	f7 d6		 not	 esi
  0059f	0b f2		 or	 esi, edx
  005a1	33 75 e8	 xor	 esi, DWORD PTR _b1$[ebp]
  005a4	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi
  005a7	03 70 30	 add	 esi, DWORD PTR [eax+48]
  005aa	8d b4 1e a1 eb
	d9 6e		 lea	 esi, DWORD PTR [esi+ebx+1859775393]
  005b1	c1 c6 05	 rol	 esi, 5
  005b4	03 f7		 add	 esi, edi
  005b6	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH

; 247  : 
; 248  : 	Subround(I, c1, d1, e1, a1, b1, X[ 1], 11, k3);

  005ba	8b fa		 mov	 edi, edx
  005bc	33 fe		 xor	 edi, esi
  005be	23 7d f8	 and	 edi, DWORD PTR _a1$[ebp]
  005c1	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  005c4	33 fa		 xor	 edi, edx
  005c6	03 78 04	 add	 edi, DWORD PTR [eax+4]
  005c9	8d bc 1f dc bc
	1b 8f		 lea	 edi, DWORD PTR [edi+ebx-1894007588]
  005d0	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  005d3	03 7d e8	 add	 edi, DWORD PTR _b1$[ebp]
  005d6	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  005d9	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi

; 249  : 	Subround(I, b1, c1, d1, e1, a1, X[ 9], 12, k3);

  005dc	8b de		 mov	 ebx, esi
  005de	33 df		 xor	 ebx, edi
  005e0	23 da		 and	 ebx, edx
  005e2	33 de		 xor	 ebx, esi
  005e4	03 58 24	 add	 ebx, DWORD PTR [eax+36]
  005e7	8b 7d e8	 mov	 edi, DWORD PTR _b1$[ebp]
  005ea	8d bc 3b dc bc
	1b 8f		 lea	 edi, DWORD PTR [ebx+edi-1894007588]
  005f1	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  005f4	03 7d f8	 add	 edi, DWORD PTR _a1$[ebp]

; 250  : 	Subround(I, a1, b1, c1, d1, e1, X[11], 14, k3);

  005f7	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  005fa	33 df		 xor	 ebx, edi
  005fc	89 7d e8	 mov	 DWORD PTR _b1$[ebp], edi
  005ff	8b 7d f8	 mov	 edi, DWORD PTR _a1$[ebp]
  00602	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00605	23 de		 and	 ebx, esi
  00607	33 5d f0	 xor	 ebx, DWORD PTR _c1$[ebp]
  0060a	03 58 2c	 add	 ebx, DWORD PTR [eax+44]
  0060d	8d bc 3b dc bc
	1b 8f		 lea	 edi, DWORD PTR [ebx+edi-1894007588]

; 251  : 	Subround(I, e1, a1, b1, c1, d1, X[10], 15, k3);

  00614	8b 5d e8	 mov	 ebx, DWORD PTR _b1$[ebp]
  00617	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  0061a	03 fa		 add	 edi, edx
  0061c	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH
  00620	33 df		 xor	 ebx, edi
  00622	23 5d f0	 and	 ebx, DWORD PTR _c1$[ebp]
  00625	89 7d f8	 mov	 DWORD PTR _a1$[ebp], edi
  00628	33 5d e8	 xor	 ebx, DWORD PTR _b1$[ebp]
  0062b	03 58 28	 add	 ebx, DWORD PTR [eax+40]
  0062e	8d 94 13 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ebx+edx-1894007588]
  00635	c1 c2 0f	 rol	 edx, 15			; 0000000fH
  00638	03 d6		 add	 edx, esi
  0063a	c1 45 e8 0a	 rol	 DWORD PTR _b1$[ebp], 10	; 0000000aH

; 252  : 	Subround(I, d1, e1, a1, b1, c1, X[ 0], 14, k3);
; 253  : 	Subround(I, c1, d1, e1, a1, b1, X[ 8], 15, k3);

  0063e	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  00641	8b fa		 mov	 edi, edx
  00643	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  00646	23 7d e8	 and	 edi, DWORD PTR _b1$[ebp]
  00649	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  0064c	03 38		 add	 edi, DWORD PTR [eax]
  0064e	8d b4 37 dc bc
	1b 8f		 lea	 esi, DWORD PTR [edi+esi-1894007588]
  00655	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  00658	03 75 f0	 add	 esi, DWORD PTR _c1$[ebp]
  0065b	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH
  0065f	8b fa		 mov	 edi, edx
  00661	33 fe		 xor	 edi, esi
  00663	23 7d f8	 and	 edi, DWORD PTR _a1$[ebp]
  00666	33 fa		 xor	 edi, edx
  00668	03 78 20	 add	 edi, DWORD PTR [eax+32]
  0066b	8d bc 1f dc bc
	1b 8f		 lea	 edi, DWORD PTR [edi+ebx-1894007588]
  00672	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00675	03 7d e8	 add	 edi, DWORD PTR _b1$[ebp]
  00678	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  0067b	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi

; 254  : 	Subround(I, b1, c1, d1, e1, a1, X[12],  9, k3);

  0067e	8b de		 mov	 ebx, esi
  00680	33 df		 xor	 ebx, edi
  00682	8b 7d e8	 mov	 edi, DWORD PTR _b1$[ebp]
  00685	23 da		 and	 ebx, edx
  00687	33 de		 xor	 ebx, esi
  00689	03 58 30	 add	 ebx, DWORD PTR [eax+48]
  0068c	8d bc 3b dc bc
	1b 8f		 lea	 edi, DWORD PTR [ebx+edi-1894007588]

; 255  : 	Subround(I, a1, b1, c1, d1, e1, X[ 4],  8, k3);

  00693	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  00696	c1 c7 09	 rol	 edi, 9
  00699	03 7d f8	 add	 edi, DWORD PTR _a1$[ebp]
  0069c	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  0069f	33 df		 xor	 ebx, edi
  006a1	23 de		 and	 ebx, esi
  006a3	33 5d f0	 xor	 ebx, DWORD PTR _c1$[ebp]
  006a6	89 7d e8	 mov	 DWORD PTR _b1$[ebp], edi
  006a9	03 58 10	 add	 ebx, DWORD PTR [eax+16]
  006ac	8b 7d f8	 mov	 edi, DWORD PTR _a1$[ebp]
  006af	8d bc 3b dc bc
	1b 8f		 lea	 edi, DWORD PTR [ebx+edi-1894007588]
  006b6	c1 c7 08	 rol	 edi, 8
  006b9	03 fa		 add	 edi, edx
  006bb	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH

; 256  : 	Subround(I, e1, a1, b1, c1, d1, X[13],  9, k3);

  006bf	8b 5d e8	 mov	 ebx, DWORD PTR _b1$[ebp]
  006c2	33 df		 xor	 ebx, edi
  006c4	23 5d f0	 and	 ebx, DWORD PTR _c1$[ebp]
  006c7	89 7d f8	 mov	 DWORD PTR _a1$[ebp], edi
  006ca	33 5d e8	 xor	 ebx, DWORD PTR _b1$[ebp]
  006cd	03 58 34	 add	 ebx, DWORD PTR [eax+52]
  006d0	8d 94 13 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ebx+edx-1894007588]
  006d7	c1 c2 09	 rol	 edx, 9
  006da	03 d6		 add	 edx, esi
  006dc	c1 45 e8 0a	 rol	 DWORD PTR _b1$[ebp], 10	; 0000000aH

; 257  : 	Subround(I, d1, e1, a1, b1, c1, X[ 3], 14, k3);
; 258  : 	Subround(I, c1, d1, e1, a1, b1, X[ 7],  5, k3);

  006e0	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  006e3	8b fa		 mov	 edi, edx
  006e5	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  006e8	23 7d e8	 and	 edi, DWORD PTR _b1$[ebp]
  006eb	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  006ee	03 78 0c	 add	 edi, DWORD PTR [eax+12]
  006f1	8d b4 37 dc bc
	1b 8f		 lea	 esi, DWORD PTR [edi+esi-1894007588]
  006f8	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  006fb	03 75 f0	 add	 esi, DWORD PTR _c1$[ebp]
  006fe	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH
  00702	8b fa		 mov	 edi, edx
  00704	33 fe		 xor	 edi, esi
  00706	23 7d f8	 and	 edi, DWORD PTR _a1$[ebp]
  00709	33 fa		 xor	 edi, edx
  0070b	03 78 1c	 add	 edi, DWORD PTR [eax+28]
  0070e	8d bc 1f dc bc
	1b 8f		 lea	 edi, DWORD PTR [edi+ebx-1894007588]
  00715	c1 c7 05	 rol	 edi, 5
  00718	03 7d e8	 add	 edi, DWORD PTR _b1$[ebp]
  0071b	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  0071e	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi

; 259  : 	Subround(I, b1, c1, d1, e1, a1, X[15],  6, k3);

  00721	8b de		 mov	 ebx, esi
  00723	33 df		 xor	 ebx, edi
  00725	8b 7d e8	 mov	 edi, DWORD PTR _b1$[ebp]
  00728	23 da		 and	 ebx, edx
  0072a	33 de		 xor	 ebx, esi
  0072c	03 58 3c	 add	 ebx, DWORD PTR [eax+60]
  0072f	8d bc 3b dc bc
	1b 8f		 lea	 edi, DWORD PTR [ebx+edi-1894007588]

; 260  : 	Subround(I, a1, b1, c1, d1, e1, X[14],  8, k3);

  00736	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  00739	c1 c7 06	 rol	 edi, 6
  0073c	03 7d f8	 add	 edi, DWORD PTR _a1$[ebp]
  0073f	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00742	33 df		 xor	 ebx, edi
  00744	23 de		 and	 ebx, esi
  00746	33 5d f0	 xor	 ebx, DWORD PTR _c1$[ebp]
  00749	89 7d e8	 mov	 DWORD PTR _b1$[ebp], edi
  0074c	03 58 38	 add	 ebx, DWORD PTR [eax+56]
  0074f	8b 7d f8	 mov	 edi, DWORD PTR _a1$[ebp]
  00752	8d bc 3b dc bc
	1b 8f		 lea	 edi, DWORD PTR [ebx+edi-1894007588]

; 261  : 	Subround(I, e1, a1, b1, c1, d1, X[ 5],  6, k3);

  00759	8b 5d e8	 mov	 ebx, DWORD PTR _b1$[ebp]
  0075c	c1 c7 08	 rol	 edi, 8
  0075f	03 fa		 add	 edi, edx
  00761	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH
  00765	33 df		 xor	 ebx, edi
  00767	23 5d f0	 and	 ebx, DWORD PTR _c1$[ebp]
  0076a	89 7d f8	 mov	 DWORD PTR _a1$[ebp], edi
  0076d	33 5d e8	 xor	 ebx, DWORD PTR _b1$[ebp]
  00770	03 58 14	 add	 ebx, DWORD PTR [eax+20]
  00773	8d 94 13 dc bc
	1b 8f		 lea	 edx, DWORD PTR [ebx+edx-1894007588]
  0077a	c1 c2 06	 rol	 edx, 6
  0077d	03 d6		 add	 edx, esi
  0077f	c1 45 e8 0a	 rol	 DWORD PTR _b1$[ebp], 10	; 0000000aH

; 262  : 	Subround(I, d1, e1, a1, b1, c1, X[ 6],  5, k3);
; 263  : 	Subround(I, c1, d1, e1, a1, b1, X[ 2], 12, k3);

  00783	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  00786	8b fa		 mov	 edi, edx
  00788	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  0078b	23 7d e8	 and	 edi, DWORD PTR _b1$[ebp]
  0078e	33 7d f8	 xor	 edi, DWORD PTR _a1$[ebp]
  00791	03 78 18	 add	 edi, DWORD PTR [eax+24]
  00794	8d b4 37 dc bc
	1b 8f		 lea	 esi, DWORD PTR [edi+esi-1894007588]
  0079b	c1 c6 05	 rol	 esi, 5
  0079e	03 75 f0	 add	 esi, DWORD PTR _c1$[ebp]
  007a1	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH
  007a5	8b fa		 mov	 edi, edx
  007a7	33 fe		 xor	 edi, esi
  007a9	23 7d f8	 and	 edi, DWORD PTR _a1$[ebp]
  007ac	33 fa		 xor	 edi, edx
  007ae	03 78 08	 add	 edi, DWORD PTR [eax+8]
  007b1	8d bc 1f dc bc
	1b 8f		 lea	 edi, DWORD PTR [edi+ebx-1894007588]
  007b8	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  007bb	03 7d e8	 add	 edi, DWORD PTR _b1$[ebp]
  007be	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi
  007c1	c1 c2 0a	 rol	 edx, 10			; 0000000aH

; 264  : 
; 265  : 	Subround(J, b1, c1, d1, e1, a1, X[ 4],  9, k4);

  007c4	8b da		 mov	 ebx, edx
  007c6	f7 d3		 not	 ebx
  007c8	0b de		 or	 ebx, esi
  007ca	33 df		 xor	 ebx, edi
  007cc	03 58 10	 add	 ebx, DWORD PTR [eax+16]
  007cf	8b 7d e8	 mov	 edi, DWORD PTR _b1$[ebp]
  007d2	8d bc 3b 4e fd
	53 a9		 lea	 edi, DWORD PTR [ebx+edi-1454113458]
  007d9	8b 5d f8	 mov	 ebx, DWORD PTR _a1$[ebp]
  007dc	c1 c7 09	 rol	 edi, 9
  007df	03 fb		 add	 edi, ebx
  007e1	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  007e4	89 75 08	 mov	 DWORD PTR _d1$[ebp], esi

; 266  : 	Subround(J, a1, b1, c1, d1, e1, X[ 0], 15, k4);

  007e7	f7 d6		 not	 esi
  007e9	0b 75 f0	 or	 esi, DWORD PTR _c1$[ebp]
  007ec	33 f7		 xor	 esi, edi
  007ee	03 30		 add	 esi, DWORD PTR [eax]
  007f0	8d 9c 1e 4e fd
	53 a9		 lea	 ebx, DWORD PTR [esi+ebx-1454113458]
  007f7	c1 c3 0f	 rol	 ebx, 15			; 0000000fH
  007fa	03 da		 add	 ebx, edx
  007fc	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH

; 267  : 	Subround(J, e1, a1, b1, c1, d1, X[ 5],  5, k4);

  00800	8b 75 f0	 mov	 esi, DWORD PTR _c1$[ebp]
  00803	f7 d6		 not	 esi
  00805	0b f7		 or	 esi, edi
  00807	33 f3		 xor	 esi, ebx
  00809	03 70 14	 add	 esi, DWORD PTR [eax+20]
  0080c	8d 94 16 4e fd
	53 a9		 lea	 edx, DWORD PTR [esi+edx-1454113458]
  00813	8b 75 08	 mov	 esi, DWORD PTR _d1$[ebp]
  00816	c1 c2 05	 rol	 edx, 5
  00819	03 d6		 add	 edx, esi
  0081b	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  0081e	89 7d e8	 mov	 DWORD PTR _b1$[ebp], edi

; 268  : 	Subround(J, d1, e1, a1, b1, c1, X[ 9], 11, k4);

  00821	f7 d7		 not	 edi
  00823	0b fb		 or	 edi, ebx
  00825	33 fa		 xor	 edi, edx
  00827	03 78 24	 add	 edi, DWORD PTR [eax+36]
  0082a	89 55 f4	 mov	 DWORD PTR _e1$[ebp], edx
  0082d	8d bc 37 4e fd
	53 a9		 lea	 edi, DWORD PTR [edi+esi-1454113458]
  00834	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  00837	03 7d f0	 add	 edi, DWORD PTR _c1$[ebp]
  0083a	c1 c3 0a	 rol	 ebx, 10			; 0000000aH

; 269  : 	Subround(J, c1, d1, e1, a1, b1, X[ 7],  6, k4);

  0083d	8b f3		 mov	 esi, ebx
  0083f	f7 d6		 not	 esi
  00841	0b f2		 or	 esi, edx
  00843	8b 55 f0	 mov	 edx, DWORD PTR _c1$[ebp]
  00846	33 f7		 xor	 esi, edi
  00848	03 70 1c	 add	 esi, DWORD PTR [eax+28]
  0084b	8d 94 16 4e fd
	53 a9		 lea	 edx, DWORD PTR [esi+edx-1454113458]
  00852	c1 c2 06	 rol	 edx, 6
  00855	03 55 e8	 add	 edx, DWORD PTR _b1$[ebp]
  00858	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH

; 270  : 	Subround(J, b1, c1, d1, e1, a1, X[12],  8, k4);

  0085c	8b 75 f4	 mov	 esi, DWORD PTR _e1$[ebp]
  0085f	89 55 f0	 mov	 DWORD PTR _c1$[ebp], edx
  00862	f7 d6		 not	 esi
  00864	0b f7		 or	 esi, edi
  00866	33 f2		 xor	 esi, edx
  00868	03 70 30	 add	 esi, DWORD PTR [eax+48]
  0086b	8b 55 e8	 mov	 edx, DWORD PTR _b1$[ebp]
  0086e	8d b4 16 4e fd
	53 a9		 lea	 esi, DWORD PTR [esi+edx-1454113458]
  00875	c1 c6 08	 rol	 esi, 8
  00878	03 f3		 add	 esi, ebx
  0087a	c1 c7 0a	 rol	 edi, 10			; 0000000aH

; 271  : 	Subround(J, a1, b1, c1, d1, e1, X[ 2], 13, k4);

  0087d	8b d7		 mov	 edx, edi
  0087f	f7 d2		 not	 edx
  00881	0b 55 f0	 or	 edx, DWORD PTR _c1$[ebp]
  00884	89 7d 08	 mov	 DWORD PTR _d1$[ebp], edi
  00887	33 d6		 xor	 edx, esi
  00889	03 50 08	 add	 edx, DWORD PTR [eax+8]
  0088c	8d 94 1a 4e fd
	53 a9		 lea	 edx, DWORD PTR [edx+ebx-1454113458]
  00893	c1 c2 0d	 rol	 edx, 13			; 0000000dH
  00896	03 55 f4	 add	 edx, DWORD PTR _e1$[ebp]
  00899	c1 45 f0 0a	 rol	 DWORD PTR _c1$[ebp], 10	; 0000000aH

; 272  : 	Subround(J, e1, a1, b1, c1, d1, X[10], 12, k4);

  0089d	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  008a0	f7 d3		 not	 ebx
  008a2	0b de		 or	 ebx, esi
  008a4	33 da		 xor	 ebx, edx
  008a6	03 58 28	 add	 ebx, DWORD PTR [eax+40]
  008a9	89 55 f8	 mov	 DWORD PTR _a1$[ebp], edx
  008ac	8b 55 f4	 mov	 edx, DWORD PTR _e1$[ebp]
  008af	8d 94 13 4e fd
	53 a9		 lea	 edx, DWORD PTR [ebx+edx-1454113458]
  008b6	c1 c2 0c	 rol	 edx, 12			; 0000000cH
  008b9	03 d7		 add	 edx, edi
  008bb	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 273  : 	Subround(J, d1, e1, a1, b1, c1, X[14],  5, k4);

  008be	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  008c1	8b fe		 mov	 edi, esi
  008c3	f7 d7		 not	 edi
  008c5	0b 7d f8	 or	 edi, DWORD PTR _a1$[ebp]
  008c8	89 75 e8	 mov	 DWORD PTR _b1$[ebp], esi
  008cb	33 fa		 xor	 edi, edx
  008cd	03 78 38	 add	 edi, DWORD PTR [eax+56]
  008d0	8d bc 1f 4e fd
	53 a9		 lea	 edi, DWORD PTR [edi+ebx-1454113458]
  008d7	c1 c7 05	 rol	 edi, 5
  008da	03 7d f0	 add	 edi, DWORD PTR _c1$[ebp]
  008dd	c1 45 f8 0a	 rol	 DWORD PTR _a1$[ebp], 10	; 0000000aH

; 274  : 	Subround(J, c1, d1, e1, a1, b1, X[ 1], 12, k4);

  008e1	8b 5d f8	 mov	 ebx, DWORD PTR _a1$[ebp]
  008e4	f7 d3		 not	 ebx
  008e6	0b da		 or	 ebx, edx
  008e8	33 df		 xor	 ebx, edi
  008ea	03 58 04	 add	 ebx, DWORD PTR [eax+4]
  008ed	89 7d 08	 mov	 DWORD PTR _d1$[ebp], edi
  008f0	8b 7d f0	 mov	 edi, DWORD PTR _c1$[ebp]
  008f3	8d bc 3b 4e fd
	53 a9		 lea	 edi, DWORD PTR [ebx+edi-1454113458]

; 275  : 	Subround(J, b1, c1, d1, e1, a1, X[ 3], 13, k4);

  008fa	8b 5d e8	 mov	 ebx, DWORD PTR _b1$[ebp]
  008fd	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  00900	03 fe		 add	 edi, esi
  00902	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  00905	8b f2		 mov	 esi, edx
  00907	f7 d6		 not	 esi
  00909	0b 75 08	 or	 esi, DWORD PTR _d1$[ebp]
  0090c	89 55 f4	 mov	 DWORD PTR _e1$[ebp], edx
  0090f	33 f7		 xor	 esi, edi
  00911	03 70 0c	 add	 esi, DWORD PTR [eax+12]
  00914	8d b4 1e 4e fd
	53 a9		 lea	 esi, DWORD PTR [esi+ebx-1454113458]
  0091b	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  0091e	03 75 f8	 add	 esi, DWORD PTR _a1$[ebp]
  00921	c1 45 08 0a	 rol	 DWORD PTR _d1$[ebp], 10	; 0000000aH

; 276  : 	Subround(J, a1, b1, c1, d1, e1, X[ 8], 14, k4);

  00925	8b 5d 08	 mov	 ebx, DWORD PTR _d1$[ebp]
  00928	f7 d3		 not	 ebx
  0092a	0b df		 or	 ebx, edi
  0092c	33 de		 xor	 ebx, esi
  0092e	03 58 20	 add	 ebx, DWORD PTR [eax+32]
  00931	89 75 e8	 mov	 DWORD PTR _b1$[ebp], esi
  00934	8b 75 f8	 mov	 esi, DWORD PTR _a1$[ebp]
  00937	8d b4 33 4e fd
	53 a9		 lea	 esi, DWORD PTR [ebx+esi-1454113458]

; 277  : 	Subround(J, e1, a1, b1, c1, d1, X[11], 11, k4);

  0093e	8b 5d f4	 mov	 ebx, DWORD PTR _e1$[ebp]
  00941	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  00944	03 f2		 add	 esi, edx
  00946	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00949	8b d7		 mov	 edx, edi
  0094b	f7 d2		 not	 edx
  0094d	0b 55 e8	 or	 edx, DWORD PTR _b1$[ebp]
  00950	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi
  00953	33 d6		 xor	 edx, esi
  00955	03 50 2c	 add	 edx, DWORD PTR [eax+44]
  00958	8d 94 1a 4e fd
	53 a9		 lea	 edx, DWORD PTR [edx+ebx-1454113458]
  0095f	c1 c2 0b	 rol	 edx, 11			; 0000000bH
  00962	03 55 08	 add	 edx, DWORD PTR _d1$[ebp]
  00965	c1 45 e8 0a	 rol	 DWORD PTR _b1$[ebp], 10	; 0000000aH

; 278  : 	Subround(J, d1, e1, a1, b1, c1, X[ 6],  8, k4);

  00969	8b 5d e8	 mov	 ebx, DWORD PTR _b1$[ebp]
  0096c	f7 d3		 not	 ebx
  0096e	0b de		 or	 ebx, esi
  00970	33 da		 xor	 ebx, edx
  00972	03 58 18	 add	 ebx, DWORD PTR [eax+24]
  00975	89 55 f4	 mov	 DWORD PTR _e1$[ebp], edx
  00978	8b 55 08	 mov	 edx, DWORD PTR _d1$[ebp]
  0097b	8d 94 13 4e fd
	53 a9		 lea	 edx, DWORD PTR [ebx+edx-1454113458]

; 279  : 	Subround(J, c1, d1, e1, a1, b1, X[15],  5, k4);

  00982	8b 5d f0	 mov	 ebx, DWORD PTR _c1$[ebp]
  00985	c1 c2 08	 rol	 edx, 8
  00988	03 d7		 add	 edx, edi
  0098a	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  0098d	8b fe		 mov	 edi, esi
  0098f	f7 d7		 not	 edi
  00991	0b 7d f4	 or	 edi, DWORD PTR _e1$[ebp]
  00994	89 75 f8	 mov	 DWORD PTR _a1$[ebp], esi
  00997	33 fa		 xor	 edi, edx
  00999	03 78 3c	 add	 edi, DWORD PTR [eax+60]
  0099c	8d bc 1f 4e fd
	53 a9		 lea	 edi, DWORD PTR [edi+ebx-1454113458]
  009a3	c1 c7 05	 rol	 edi, 5
  009a6	03 7d e8	 add	 edi, DWORD PTR _b1$[ebp]
  009a9	c1 45 f4 0a	 rol	 DWORD PTR _e1$[ebp], 10	; 0000000aH

; 280  : 	Subround(J, b1, c1, d1, e1, a1, X[13],  6, k4);

  009ad	8b 5d f4	 mov	 ebx, DWORD PTR _e1$[ebp]
  009b0	89 7d f0	 mov	 DWORD PTR _c1$[ebp], edi
  009b3	f7 d3		 not	 ebx
  009b5	0b da		 or	 ebx, edx
  009b7	33 df		 xor	 ebx, edi
  009b9	03 58 34	 add	 ebx, DWORD PTR [eax+52]
  009bc	8b 7d e8	 mov	 edi, DWORD PTR _b1$[ebp]
  009bf	8d bc 3b 4e fd
	53 a9		 lea	 edi, DWORD PTR [ebx+edi-1454113458]

; 281  : 
; 282  : 	Subround(J, a2, b2, c2, d2, e2, X[ 5],  8, k5);

  009c6	8b 59 0c	 mov	 ebx, DWORD PTR [ecx+12]
  009c9	c1 c7 06	 rol	 edi, 6
  009cc	03 fe		 add	 edi, esi
  009ce	8b 31		 mov	 esi, DWORD PTR [ecx]
  009d0	f7 d3		 not	 ebx
  009d2	0b 59 08	 or	 ebx, DWORD PTR [ecx+8]
  009d5	89 7d e8	 mov	 DWORD PTR _b1$[ebp], edi
  009d8	8b 79 04	 mov	 edi, DWORD PTR [ecx+4]
  009db	33 df		 xor	 ebx, edi
  009dd	03 58 14	 add	 ebx, DWORD PTR [eax+20]
  009e0	8d b4 33 e6 8b
	a2 50		 lea	 esi, DWORD PTR [ebx+esi+1352829926]

; 283  : 	Subround(J, e2, a2, b2, c2, d2, X[14],  9, k5);

  009e7	8b 5d 0c	 mov	 ebx, DWORD PTR tv4749[ebp]
  009ea	c1 c6 08	 rol	 esi, 8
  009ed	03 71 10	 add	 esi, DWORD PTR [ecx+16]
  009f0	f7 d3		 not	 ebx
  009f2	0b df		 or	 ebx, edi
  009f4	33 de		 xor	 ebx, esi
  009f6	03 58 38	 add	 ebx, DWORD PTR [eax+56]
  009f9	8b 79 10	 mov	 edi, DWORD PTR [ecx+16]
  009fc	8d bc 3b e6 8b
	a2 50		 lea	 edi, DWORD PTR [ebx+edi+1352829926]

; 284  : 	Subround(J, d2, e2, a2, b2, c2, X[ 7],  9, k5);

  00a03	8b 5d e4	 mov	 ebx, DWORD PTR tv4758[ebp]
  00a06	c1 c7 09	 rol	 edi, 9
  00a09	03 79 0c	 add	 edi, DWORD PTR [ecx+12]
  00a0c	f7 d3		 not	 ebx
  00a0e	0b de		 or	 ebx, esi
  00a10	33 df		 xor	 ebx, edi
  00a12	03 58 1c	 add	 ebx, DWORD PTR [eax+28]
  00a15	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  00a18	8b 79 0c	 mov	 edi, DWORD PTR [ecx+12]
  00a1b	8d bc 3b e6 8b
	a2 50		 lea	 edi, DWORD PTR [ebx+edi+1352829926]

; 285  : 	Subround(J, c2, d2, e2, a2, b2, X[ 0], 11, k5);

  00a22	8b 5d 0c	 mov	 ebx, DWORD PTR tv4749[ebp]
  00a25	c1 c7 09	 rol	 edi, 9
  00a28	03 7d 0c	 add	 edi, DWORD PTR tv4749[ebp]
  00a2b	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00a2e	89 75 ec	 mov	 DWORD PTR _a2$[ebp], esi
  00a31	f7 d6		 not	 esi
  00a33	0b 75 fc	 or	 esi, DWORD PTR _e2$[ebp]
  00a36	33 f7		 xor	 esi, edi
  00a38	03 30		 add	 esi, DWORD PTR [eax]
  00a3a	8d b4 1e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+ebx+1352829926]
  00a41	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00a44	03 75 e4	 add	 esi, DWORD PTR tv4758[ebp]
  00a47	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH

; 286  : 	Subround(J, b2, c2, d2, e2, a2, X[ 9], 13, k5);

  00a4b	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00a4e	89 75 08	 mov	 DWORD PTR _c2$[ebp], esi
  00a51	f7 d3		 not	 ebx
  00a53	0b df		 or	 ebx, edi
  00a55	33 de		 xor	 ebx, esi
  00a57	03 58 24	 add	 ebx, DWORD PTR [eax+36]
  00a5a	8b 75 e4	 mov	 esi, DWORD PTR tv4758[ebp]
  00a5d	8d b4 33 e6 8b
	a2 50		 lea	 esi, DWORD PTR [ebx+esi+1352829926]
  00a64	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00a67	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]

; 287  : 	Subround(J, a2, b2, c2, d2, e2, X[ 2], 15, k5);

  00a6a	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00a6d	89 75 e4	 mov	 DWORD PTR _b2$[ebp], esi
  00a70	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00a73	8b f7		 mov	 esi, edi
  00a75	f7 d6		 not	 esi
  00a77	0b 75 08	 or	 esi, DWORD PTR _c2$[ebp]
  00a7a	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  00a7d	33 75 e4	 xor	 esi, DWORD PTR _b2$[ebp]
  00a80	03 70 08	 add	 esi, DWORD PTR [eax+8]
  00a83	8d b4 1e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+ebx+1352829926]

; 288  : 	Subround(J, e2, a2, b2, c2, d2, X[11], 15, k5);

  00a8a	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00a8d	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  00a90	03 75 fc	 add	 esi, DWORD PTR _e2$[ebp]
  00a93	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH
  00a97	89 75 ec	 mov	 DWORD PTR _a2$[ebp], esi
  00a9a	8b 75 08	 mov	 esi, DWORD PTR _c2$[ebp]
  00a9d	f7 d6		 not	 esi
  00a9f	0b 75 e4	 or	 esi, DWORD PTR _b2$[ebp]
  00aa2	33 75 ec	 xor	 esi, DWORD PTR _a2$[ebp]
  00aa5	03 70 2c	 add	 esi, DWORD PTR [eax+44]
  00aa8	8d b4 1e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+ebx+1352829926]
  00aaf	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  00ab2	03 f7		 add	 esi, edi
  00ab4	c1 45 e4 0a	 rol	 DWORD PTR _b2$[ebp], 10	; 0000000aH

; 289  : 	Subround(J, d2, e2, a2, b2, c2, X[ 4],  5, k5);

  00ab8	8b 7d e4	 mov	 edi, DWORD PTR _b2$[ebp]
  00abb	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00abe	f7 d7		 not	 edi
  00ac0	0b 7d ec	 or	 edi, DWORD PTR _a2$[ebp]
  00ac3	33 fe		 xor	 edi, esi
  00ac5	03 78 10	 add	 edi, DWORD PTR [eax+16]
  00ac8	8d bc 1f e6 8b
	a2 50		 lea	 edi, DWORD PTR [edi+ebx+1352829926]
  00acf	c1 c7 05	 rol	 edi, 5
  00ad2	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  00ad5	c1 45 ec 0a	 rol	 DWORD PTR _a2$[ebp], 10	; 0000000aH

; 290  : 	Subround(J, c2, d2, e2, a2, b2, X[13],  7, k5);

  00ad9	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00adc	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  00adf	f7 d3		 not	 ebx
  00ae1	0b de		 or	 ebx, esi
  00ae3	33 df		 xor	 ebx, edi
  00ae5	03 58 34	 add	 ebx, DWORD PTR [eax+52]
  00ae8	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  00aeb	8d bc 3b e6 8b
	a2 50		 lea	 edi, DWORD PTR [ebx+edi+1352829926]
  00af2	c1 c7 07	 rol	 edi, 7
  00af5	03 7d e4	 add	 edi, DWORD PTR _b2$[ebp]
  00af8	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 291  : 	Subround(J, b2, c2, d2, e2, a2, X[ 6],  7, k5);

  00afb	8b 5d e4	 mov	 ebx, DWORD PTR _b2$[ebp]
  00afe	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  00b01	8b fe		 mov	 edi, esi
  00b03	f7 d7		 not	 edi
  00b05	0b 7d 0c	 or	 edi, DWORD PTR _d2$[ebp]
  00b08	89 75 fc	 mov	 DWORD PTR _e2$[ebp], esi
  00b0b	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  00b0e	03 78 18	 add	 edi, DWORD PTR [eax+24]
  00b11	8d bc 1f e6 8b
	a2 50		 lea	 edi, DWORD PTR [edi+ebx+1352829926]

; 292  : 	Subround(J, a2, b2, c2, d2, e2, X[15],  8, k5);

  00b18	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00b1b	c1 c7 07	 rol	 edi, 7
  00b1e	03 7d ec	 add	 edi, DWORD PTR _a2$[ebp]
  00b21	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  00b25	89 7d e4	 mov	 DWORD PTR _b2$[ebp], edi
  00b28	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  00b2b	f7 d7		 not	 edi
  00b2d	0b 7d 08	 or	 edi, DWORD PTR _c2$[ebp]
  00b30	33 7d e4	 xor	 edi, DWORD PTR _b2$[ebp]
  00b33	03 78 3c	 add	 edi, DWORD PTR [eax+60]
  00b36	8d bc 1f e6 8b
	a2 50		 lea	 edi, DWORD PTR [edi+ebx+1352829926]

; 293  : 	Subround(J, e2, a2, b2, c2, d2, X[ 8], 11, k5);

  00b3d	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00b40	c1 c7 08	 rol	 edi, 8
  00b43	03 fe		 add	 edi, esi
  00b45	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH
  00b49	8b 75 08	 mov	 esi, DWORD PTR _c2$[ebp]
  00b4c	f7 d6		 not	 esi
  00b4e	0b 75 e4	 or	 esi, DWORD PTR _b2$[ebp]
  00b51	33 f7		 xor	 esi, edi
  00b53	03 70 20	 add	 esi, DWORD PTR [eax+32]
  00b56	8d b4 1e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+ebx+1352829926]
  00b5d	c1 c6 0b	 rol	 esi, 11			; 0000000bH
  00b60	03 75 0c	 add	 esi, DWORD PTR _d2$[ebp]
  00b63	c1 45 e4 0a	 rol	 DWORD PTR _b2$[ebp], 10	; 0000000aH

; 294  : 	Subround(J, d2, e2, a2, b2, c2, X[ 1], 14, k5);

  00b67	8b 5d e4	 mov	 ebx, DWORD PTR _b2$[ebp]
  00b6a	89 75 fc	 mov	 DWORD PTR _e2$[ebp], esi
  00b6d	f7 d3		 not	 ebx
  00b6f	0b df		 or	 ebx, edi
  00b71	33 de		 xor	 ebx, esi
  00b73	03 58 04	 add	 ebx, DWORD PTR [eax+4]
  00b76	8b 75 0c	 mov	 esi, DWORD PTR _d2$[ebp]
  00b79	8d b4 33 e6 8b
	a2 50		 lea	 esi, DWORD PTR [ebx+esi+1352829926]

; 295  : 	Subround(J, c2, d2, e2, a2, b2, X[10], 14, k5);

  00b80	8b 5d 08	 mov	 ebx, DWORD PTR _c2$[ebp]
  00b83	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  00b86	03 75 08	 add	 esi, DWORD PTR _c2$[ebp]
  00b89	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00b8c	89 75 0c	 mov	 DWORD PTR _d2$[ebp], esi
  00b8f	8b f7		 mov	 esi, edi
  00b91	f7 d6		 not	 esi
  00b93	0b 75 fc	 or	 esi, DWORD PTR _e2$[ebp]
  00b96	89 7d ec	 mov	 DWORD PTR _a2$[ebp], edi
  00b99	33 75 0c	 xor	 esi, DWORD PTR _d2$[ebp]
  00b9c	03 70 28	 add	 esi, DWORD PTR [eax+40]
  00b9f	8d b4 1e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+ebx+1352829926]
  00ba6	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  00ba9	03 75 e4	 add	 esi, DWORD PTR _b2$[ebp]
  00bac	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  00bb0	89 75 08	 mov	 DWORD PTR _c2$[ebp], esi

; 296  : 	Subround(J, b2, c2, d2, e2, a2, X[ 3], 12, k5);

  00bb3	8b 75 fc	 mov	 esi, DWORD PTR _e2$[ebp]
  00bb6	8b 5d e4	 mov	 ebx, DWORD PTR _b2$[ebp]
  00bb9	f7 d6		 not	 esi
  00bbb	0b 75 0c	 or	 esi, DWORD PTR _d2$[ebp]
  00bbe	33 75 08	 xor	 esi, DWORD PTR _c2$[ebp]
  00bc1	03 70 0c	 add	 esi, DWORD PTR [eax+12]
  00bc4	8d b4 1e e6 8b
	a2 50		 lea	 esi, DWORD PTR [esi+ebx+1352829926]

; 297  : 	Subround(J, a2, b2, c2, d2, e2, X[12],  6, k5);

  00bcb	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00bce	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  00bd1	03 f7		 add	 esi, edi
  00bd3	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  00bd7	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  00bda	f7 d7		 not	 edi
  00bdc	0b 7d 08	 or	 edi, DWORD PTR _c2$[ebp]
  00bdf	33 fe		 xor	 edi, esi
  00be1	03 78 30	 add	 edi, DWORD PTR [eax+48]
  00be4	8d bc 1f e6 8b
	a2 50		 lea	 edi, DWORD PTR [edi+ebx+1352829926]
  00beb	c1 c7 06	 rol	 edi, 6
  00bee	03 7d fc	 add	 edi, DWORD PTR _e2$[ebp]
  00bf1	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH
  00bf5	89 7d ec	 mov	 DWORD PTR _a2$[ebp], edi

; 298  : 
; 299  : 	Subround(I, e2, a2, b2, c2, d2, X[ 6],  9, k6); 

  00bf8	8b de		 mov	 ebx, esi
  00bfa	33 df		 xor	 ebx, edi
  00bfc	23 5d 08	 and	 ebx, DWORD PTR _c2$[ebp]
  00bff	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  00c02	33 de		 xor	 ebx, esi
  00c04	03 58 18	 add	 ebx, DWORD PTR [eax+24]
  00c07	8d bc 3b 24 d1
	4d 5c		 lea	 edi, DWORD PTR [ebx+edi+1548603684]
  00c0e	c1 c7 09	 rol	 edi, 9
  00c11	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]

; 300  : 	Subround(I, d2, e2, a2, b2, c2, X[11], 13, k6);

  00c14	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00c17	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  00c1a	33 7d ec	 xor	 edi, DWORD PTR _a2$[ebp]
  00c1d	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00c20	23 fe		 and	 edi, esi
  00c22	33 7d ec	 xor	 edi, DWORD PTR _a2$[ebp]
  00c25	03 78 2c	 add	 edi, DWORD PTR [eax+44]
  00c28	8d bc 1f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ebx+1548603684]

; 301  : 	Subround(I, c2, d2, e2, a2, b2, X[ 3], 15, k6);

  00c2f	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00c32	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00c35	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  00c38	c1 45 ec 0a	 rol	 DWORD PTR _a2$[ebp], 10	; 0000000aH
  00c3c	33 df		 xor	 ebx, edi
  00c3e	23 5d ec	 and	 ebx, DWORD PTR _a2$[ebp]
  00c41	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  00c44	33 5d fc	 xor	 ebx, DWORD PTR _e2$[ebp]
  00c47	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  00c4a	03 58 0c	 add	 ebx, DWORD PTR [eax+12]
  00c4d	8d bc 3b 24 d1
	4d 5c		 lea	 edi, DWORD PTR [ebx+edi+1548603684]

; 302  : 	Subround(I, b2, c2, d2, e2, a2, X[ 7],  7, k6);

  00c54	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00c57	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  00c5a	03 fe		 add	 edi, esi
  00c5c	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  00c60	33 df		 xor	 ebx, edi
  00c62	23 5d fc	 and	 ebx, DWORD PTR _e2$[ebp]
  00c65	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  00c68	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  00c6b	03 58 1c	 add	 ebx, DWORD PTR [eax+28]
  00c6e	8d b4 33 24 d1
	4d 5c		 lea	 esi, DWORD PTR [ebx+esi+1548603684]

; 303  : 	Subround(I, a2, b2, c2, d2, e2, X[ 0], 12, k6);

  00c75	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00c78	c1 c6 07	 rol	 esi, 7
  00c7b	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]
  00c7e	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  00c82	33 fe		 xor	 edi, esi
  00c84	23 7d 0c	 and	 edi, DWORD PTR _d2$[ebp]
  00c87	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  00c8a	03 38		 add	 edi, DWORD PTR [eax]
  00c8c	8d bc 1f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ebx+1548603684]
  00c93	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  00c96	03 7d fc	 add	 edi, DWORD PTR _e2$[ebp]
  00c99	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 304  : 	Subround(I, e2, a2, b2, c2, d2, X[13],  8, k6);

  00c9d	8b de		 mov	 ebx, esi
  00c9f	33 df		 xor	 ebx, edi
  00ca1	23 5d 08	 and	 ebx, DWORD PTR _c2$[ebp]
  00ca4	89 7d ec	 mov	 DWORD PTR _a2$[ebp], edi
  00ca7	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  00caa	33 de		 xor	 ebx, esi
  00cac	03 58 34	 add	 ebx, DWORD PTR [eax+52]
  00caf	8d bc 3b 24 d1
	4d 5c		 lea	 edi, DWORD PTR [ebx+edi+1548603684]
  00cb6	c1 c7 08	 rol	 edi, 8
  00cb9	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  00cbc	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi

; 305  : 	Subround(I, d2, e2, a2, b2, c2, X[ 5],  9, k6);

  00cbf	33 7d ec	 xor	 edi, DWORD PTR _a2$[ebp]
  00cc2	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00cc5	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00cc8	23 fe		 and	 edi, esi
  00cca	33 7d ec	 xor	 edi, DWORD PTR _a2$[ebp]
  00ccd	03 78 14	 add	 edi, DWORD PTR [eax+20]
  00cd0	8d bc 1f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ebx+1548603684]
  00cd7	c1 c7 09	 rol	 edi, 9
  00cda	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  00cdd	c1 45 ec 0a	 rol	 DWORD PTR _a2$[ebp], 10	; 0000000aH

; 306  : 	Subround(I, c2, d2, e2, a2, b2, X[10], 11, k6);

  00ce1	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00ce4	33 df		 xor	 ebx, edi
  00ce6	23 5d ec	 and	 ebx, DWORD PTR _a2$[ebp]
  00ce9	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  00cec	33 5d fc	 xor	 ebx, DWORD PTR _e2$[ebp]
  00cef	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  00cf2	03 58 28	 add	 ebx, DWORD PTR [eax+40]
  00cf5	8d bc 3b 24 d1
	4d 5c		 lea	 edi, DWORD PTR [ebx+edi+1548603684]

; 307  : 	Subround(I, b2, c2, d2, e2, a2, X[14],  7, k6);

  00cfc	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00cff	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  00d02	03 fe		 add	 edi, esi
  00d04	33 df		 xor	 ebx, edi
  00d06	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  00d0a	23 5d fc	 and	 ebx, DWORD PTR _e2$[ebp]
  00d0d	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  00d10	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  00d13	03 58 38	 add	 ebx, DWORD PTR [eax+56]
  00d16	8d b4 33 24 d1
	4d 5c		 lea	 esi, DWORD PTR [ebx+esi+1548603684]

; 308  : 	Subround(I, a2, b2, c2, d2, e2, X[15],  7, k6);

  00d1d	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00d20	c1 c6 07	 rol	 esi, 7
  00d23	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]
  00d26	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  00d2a	33 fe		 xor	 edi, esi
  00d2c	23 7d 0c	 and	 edi, DWORD PTR _d2$[ebp]
  00d2f	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  00d32	03 78 3c	 add	 edi, DWORD PTR [eax+60]
  00d35	8d bc 1f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ebx+1548603684]
  00d3c	c1 c7 07	 rol	 edi, 7
  00d3f	03 7d fc	 add	 edi, DWORD PTR _e2$[ebp]
  00d42	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH
  00d46	89 7d ec	 mov	 DWORD PTR _a2$[ebp], edi

; 309  : 	Subround(I, e2, a2, b2, c2, d2, X[ 8], 12, k6);

  00d49	8b de		 mov	 ebx, esi
  00d4b	33 df		 xor	 ebx, edi
  00d4d	23 5d 08	 and	 ebx, DWORD PTR _c2$[ebp]
  00d50	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  00d53	33 de		 xor	 ebx, esi
  00d55	03 58 20	 add	 ebx, DWORD PTR [eax+32]
  00d58	8d bc 3b 24 d1
	4d 5c		 lea	 edi, DWORD PTR [ebx+edi+1548603684]

; 310  : 	Subround(I, d2, e2, a2, b2, c2, X[12],  7, k6);

  00d5f	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00d62	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  00d65	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  00d68	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00d6b	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  00d6e	33 7d ec	 xor	 edi, DWORD PTR _a2$[ebp]
  00d71	23 fe		 and	 edi, esi
  00d73	33 7d ec	 xor	 edi, DWORD PTR _a2$[ebp]
  00d76	03 78 30	 add	 edi, DWORD PTR [eax+48]
  00d79	8d bc 1f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ebx+1548603684]

; 311  : 	Subround(I, c2, d2, e2, a2, b2, X[ 4],  6, k6);

  00d80	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00d83	c1 c7 07	 rol	 edi, 7
  00d86	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  00d89	c1 45 ec 0a	 rol	 DWORD PTR _a2$[ebp], 10	; 0000000aH
  00d8d	33 df		 xor	 ebx, edi
  00d8f	23 5d ec	 and	 ebx, DWORD PTR _a2$[ebp]
  00d92	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  00d95	33 5d fc	 xor	 ebx, DWORD PTR _e2$[ebp]
  00d98	8b 78 10	 mov	 edi, DWORD PTR [eax+16]
  00d9b	03 df		 add	 ebx, edi
  00d9d	89 7d c8	 mov	 DWORD PTR tv5458[ebp], edi
  00da0	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  00da3	8d bc 3b 24 d1
	4d 5c		 lea	 edi, DWORD PTR [ebx+edi+1548603684]

; 312  : 	Subround(I, b2, c2, d2, e2, a2, X[ 9], 15, k6);

  00daa	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00dad	c1 c7 06	 rol	 edi, 6
  00db0	03 fe		 add	 edi, esi
  00db2	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  00db6	33 df		 xor	 ebx, edi
  00db8	23 5d fc	 and	 ebx, DWORD PTR _e2$[ebp]
  00dbb	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  00dbe	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  00dc1	03 58 24	 add	 ebx, DWORD PTR [eax+36]
  00dc4	8d b4 33 24 d1
	4d 5c		 lea	 esi, DWORD PTR [ebx+esi+1548603684]

; 313  : 	Subround(I, a2, b2, c2, d2, e2, X[ 1], 13, k6);

  00dcb	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00dce	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  00dd1	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]
  00dd4	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  00dd8	33 fe		 xor	 edi, esi
  00dda	23 7d 0c	 and	 edi, DWORD PTR _d2$[ebp]
  00ddd	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  00de0	03 78 04	 add	 edi, DWORD PTR [eax+4]
  00de3	8d bc 1f 24 d1
	4d 5c		 lea	 edi, DWORD PTR [edi+ebx+1548603684]
  00dea	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00ded	03 7d fc	 add	 edi, DWORD PTR _e2$[ebp]
  00df0	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH
  00df4	89 7d ec	 mov	 DWORD PTR _a2$[ebp], edi

; 314  : 	Subround(I, e2, a2, b2, c2, d2, X[ 2], 11, k6);

  00df7	8b de		 mov	 ebx, esi
  00df9	33 df		 xor	 ebx, edi
  00dfb	23 5d 08	 and	 ebx, DWORD PTR _c2$[ebp]
  00dfe	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  00e01	33 de		 xor	 ebx, esi
  00e03	03 58 08	 add	 ebx, DWORD PTR [eax+8]
  00e06	8d bc 3b 24 d1
	4d 5c		 lea	 edi, DWORD PTR [ebx+edi+1548603684]

; 315  : 
; 316  : 	Subround(H, d2, e2, a2, b2, c2, X[15],  9, k7);

  00e0d	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00e10	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  00e13	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  00e16	f7 d3		 not	 ebx
  00e18	0b df		 or	 ebx, edi
  00e1a	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  00e1d	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  00e20	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00e23	33 de		 xor	 ebx, esi
  00e25	03 58 3c	 add	 ebx, DWORD PTR [eax+60]
  00e28	8d bc 3b f3 3e
	70 6d		 lea	 edi, DWORD PTR [ebx+edi+1836072691]

; 317  : 	Subround(H, c2, d2, e2, a2, b2, X[ 5],  7, k7);

  00e2f	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00e32	c1 c7 09	 rol	 edi, 9
  00e35	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  00e38	c1 45 ec 0a	 rol	 DWORD PTR _a2$[ebp], 10	; 0000000aH
  00e3c	f7 d3		 not	 ebx
  00e3e	0b df		 or	 ebx, edi
  00e40	33 5d ec	 xor	 ebx, DWORD PTR _a2$[ebp]
  00e43	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  00e46	03 58 14	 add	 ebx, DWORD PTR [eax+20]
  00e49	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  00e4c	8d bc 3b f3 3e
	70 6d		 lea	 edi, DWORD PTR [ebx+edi+1836072691]

; 318  : 	Subround(H, b2, c2, d2, e2, a2, X[ 1], 15, k7);

  00e53	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00e56	c1 c7 07	 rol	 edi, 7
  00e59	03 fe		 add	 edi, esi
  00e5b	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  00e5f	f7 d3		 not	 ebx
  00e61	0b df		 or	 ebx, edi
  00e63	33 5d fc	 xor	 ebx, DWORD PTR _e2$[ebp]
  00e66	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  00e69	03 58 04	 add	 ebx, DWORD PTR [eax+4]

; 319  : 	Subround(H, a2, b2, c2, d2, e2, X[ 3], 11, k7);

  00e6c	f7 d7		 not	 edi
  00e6e	8d b4 33 f3 3e
	70 6d		 lea	 esi, DWORD PTR [ebx+esi+1836072691]
  00e75	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00e78	c1 c6 0f	 rol	 esi, 15			; 0000000fH
  00e7b	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]
  00e7e	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  00e82	0b fe		 or	 edi, esi
  00e84	33 7d 0c	 xor	 edi, DWORD PTR _d2$[ebp]
  00e87	03 78 0c	 add	 edi, DWORD PTR [eax+12]
  00e8a	8d bc 1f f3 3e
	70 6d		 lea	 edi, DWORD PTR [edi+ebx+1836072691]
  00e91	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  00e94	03 7d fc	 add	 edi, DWORD PTR _e2$[ebp]
  00e97	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 320  : 	Subround(H, e2, a2, b2, c2, d2, X[ 7],  8, k7);

  00e9b	8b de		 mov	 ebx, esi
  00e9d	f7 d3		 not	 ebx
  00e9f	0b df		 or	 ebx, edi
  00ea1	33 5d 08	 xor	 ebx, DWORD PTR _c2$[ebp]
  00ea4	89 7d ec	 mov	 DWORD PTR _a2$[ebp], edi
  00ea7	03 58 1c	 add	 ebx, DWORD PTR [eax+28]
  00eaa	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  00ead	8d bc 3b f3 3e
	70 6d		 lea	 edi, DWORD PTR [ebx+edi+1836072691]

; 321  : 	Subround(H, d2, e2, a2, b2, c2, X[14],  6, k7);

  00eb4	8b 5d ec	 mov	 ebx, DWORD PTR _a2$[ebp]
  00eb7	c1 c7 08	 rol	 edi, 8
  00eba	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  00ebd	f7 d3		 not	 ebx
  00ebf	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  00ec2	0b df		 or	 ebx, edi
  00ec4	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  00ec7	89 75 e4	 mov	 DWORD PTR _b2$[ebp], esi
  00eca	33 de		 xor	 ebx, esi
  00ecc	8b 70 38	 mov	 esi, DWORD PTR [eax+56]
  00ecf	03 de		 add	 ebx, esi

; 322  : 	Subround(H, c2, d2, e2, a2, b2, X[ 6],  6, k7);
; 323  : 	Subround(H, b2, c2, d2, e2, a2, X[ 9], 14, k7);
; 324  : 	Subround(H, a2, b2, c2, d2, e2, X[11], 12, k7);
; 325  : 	Subround(H, e2, a2, b2, c2, d2, X[ 8], 13, k7);
; 326  : 	Subround(H, d2, e2, a2, b2, c2, X[12],  5, k7);
; 327  : 	Subround(H, c2, d2, e2, a2, b2, X[ 2], 14, k7);

  00ed1	89 75 d0	 mov	 DWORD PTR tv5598[ebp], esi
  00ed4	8b 75 0c	 mov	 esi, DWORD PTR _d2$[ebp]
  00ed7	8d 9c 33 f3 3e
	70 6d		 lea	 ebx, DWORD PTR [ebx+esi+1836072691]
  00ede	8b 70 18	 mov	 esi, DWORD PTR [eax+24]
  00ee1	c1 c3 06	 rol	 ebx, 6
  00ee4	03 5d 08	 add	 ebx, DWORD PTR _c2$[ebp]
  00ee7	c1 45 ec 0a	 rol	 DWORD PTR _a2$[ebp], 10	; 0000000aH
  00eeb	f7 d7		 not	 edi
  00eed	0b fb		 or	 edi, ebx
  00eef	33 7d ec	 xor	 edi, DWORD PTR _a2$[ebp]
  00ef2	89 75 d4	 mov	 DWORD PTR tv5486[ebp], esi
  00ef5	03 fe		 add	 edi, esi
  00ef7	8b 75 08	 mov	 esi, DWORD PTR _c2$[ebp]
  00efa	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  00f01	c1 c6 06	 rol	 esi, 6
  00f04	03 75 e4	 add	 esi, DWORD PTR _b2$[ebp]
  00f07	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  00f0b	89 75 08	 mov	 DWORD PTR _c2$[ebp], esi
  00f0e	8b fb		 mov	 edi, ebx
  00f10	f7 d7		 not	 edi
  00f12	0b fe		 or	 edi, esi
  00f14	33 7d fc	 xor	 edi, DWORD PTR _e2$[ebp]
  00f17	8b 75 e4	 mov	 esi, DWORD PTR _b2$[ebp]
  00f1a	03 78 24	 add	 edi, DWORD PTR [eax+36]
  00f1d	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  00f24	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  00f27	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  00f2a	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]
  00f2d	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  00f30	89 75 e4	 mov	 DWORD PTR _b2$[ebp], esi
  00f33	f7 d7		 not	 edi
  00f35	0b fe		 or	 edi, esi
  00f37	8b 75 ec	 mov	 esi, DWORD PTR _a2$[ebp]
  00f3a	33 fb		 xor	 edi, ebx
  00f3c	03 78 2c	 add	 edi, DWORD PTR [eax+44]
  00f3f	8d b4 37 f3 3e
	70 6d		 lea	 esi, DWORD PTR [edi+esi+1836072691]
  00f46	8b 7d e4	 mov	 edi, DWORD PTR _b2$[ebp]
  00f49	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  00f4c	03 75 fc	 add	 esi, DWORD PTR _e2$[ebp]
  00f4f	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH
  00f53	89 75 ec	 mov	 DWORD PTR _a2$[ebp], esi
  00f56	f7 d7		 not	 edi
  00f58	0b fe		 or	 edi, esi
  00f5a	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  00f5d	8b 70 20	 mov	 esi, DWORD PTR [eax+32]
  00f60	03 fe		 add	 edi, esi
  00f62	89 75 d8	 mov	 DWORD PTR tv5514[ebp], esi
  00f65	8b 75 fc	 mov	 esi, DWORD PTR _e2$[ebp]
  00f68	8d bc 37 f3 3e
	70 6d		 lea	 edi, DWORD PTR [edi+esi+1836072691]
  00f6f	8b 75 ec	 mov	 esi, DWORD PTR _a2$[ebp]
  00f72	f7 d6		 not	 esi
  00f74	c1 c7 0d	 rol	 edi, 13			; 0000000dH
  00f77	03 fb		 add	 edi, ebx
  00f79	c1 45 e4 0a	 rol	 DWORD PTR _b2$[ebp], 10	; 0000000aH
  00f7d	0b f7		 or	 esi, edi
  00f7f	33 75 e4	 xor	 esi, DWORD PTR _b2$[ebp]
  00f82	03 70 30	 add	 esi, DWORD PTR [eax+48]
  00f85	8d b4 1e f3 3e
	70 6d		 lea	 esi, DWORD PTR [esi+ebx+1836072691]
  00f8c	c1 c6 05	 rol	 esi, 5
  00f8f	03 75 08	 add	 esi, DWORD PTR _c2$[ebp]
  00f92	c1 45 ec 0a	 rol	 DWORD PTR _a2$[ebp], 10	; 0000000aH
  00f96	8b df		 mov	 ebx, edi
  00f98	f7 d3		 not	 ebx
  00f9a	0b de		 or	 ebx, esi
  00f9c	33 5d ec	 xor	 ebx, DWORD PTR _a2$[ebp]
  00f9f	89 75 0c	 mov	 DWORD PTR _d2$[ebp], esi
  00fa2	03 58 08	 add	 ebx, DWORD PTR [eax+8]
  00fa5	8b 75 08	 mov	 esi, DWORD PTR _c2$[ebp]
  00fa8	8d b4 33 f3 3e
	70 6d		 lea	 esi, DWORD PTR [ebx+esi+1836072691]

; 328  : 	Subround(H, b2, c2, d2, e2, a2, X[10], 13, k7);

  00faf	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  00fb2	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  00fb5	03 75 e4	 add	 esi, DWORD PTR _b2$[ebp]
  00fb8	f7 d3		 not	 ebx
  00fba	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  00fbd	0b de		 or	 ebx, esi
  00fbf	33 df		 xor	 ebx, edi
  00fc1	03 58 28	 add	 ebx, DWORD PTR [eax+40]
  00fc4	89 75 08	 mov	 DWORD PTR _c2$[ebp], esi
  00fc7	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  00fca	8b 75 e4	 mov	 esi, DWORD PTR _b2$[ebp]
  00fcd	8d b4 33 f3 3e
	70 6d		 lea	 esi, DWORD PTR [ebx+esi+1836072691]

; 329  : 	Subround(H, a2, b2, c2, d2, e2, X[ 0], 13, k7);

  00fd4	8b 5d 08	 mov	 ebx, DWORD PTR _c2$[ebp]
  00fd7	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00fda	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]
  00fdd	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  00fe1	f7 d3		 not	 ebx
  00fe3	0b de		 or	 ebx, esi
  00fe5	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  00fe8	89 75 e4	 mov	 DWORD PTR _b2$[ebp], esi
  00feb	03 18		 add	 ebx, DWORD PTR [eax]
  00fed	8b 75 ec	 mov	 esi, DWORD PTR _a2$[ebp]
  00ff0	8d b4 33 f3 3e
	70 6d		 lea	 esi, DWORD PTR [ebx+esi+1836072691]

; 330  : 	Subround(H, e2, a2, b2, c2, d2, X[ 4],  7, k7);

  00ff7	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  00ffa	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  00ffd	03 f7		 add	 esi, edi
  00fff	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH
  01003	8b 7d e4	 mov	 edi, DWORD PTR _b2$[ebp]
  01006	f7 d7		 not	 edi
  01008	0b fe		 or	 edi, esi
  0100a	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  0100d	03 78 10	 add	 edi, DWORD PTR [eax+16]
  01010	8d bc 1f f3 3e
	70 6d		 lea	 edi, DWORD PTR [edi+ebx+1836072691]
  01017	c1 c7 07	 rol	 edi, 7
  0101a	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  0101d	c1 45 e4 0a	 rol	 DWORD PTR _b2$[ebp], 10	; 0000000aH
  01021	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi

; 331  : 	Subround(H, d2, e2, a2, b2, c2, X[13],  5, k7);

  01024	8b de		 mov	 ebx, esi
  01026	f7 d3		 not	 ebx
  01028	0b df		 or	 ebx, edi
  0102a	33 5d e4	 xor	 ebx, DWORD PTR _b2$[ebp]
  0102d	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  01030	03 58 34	 add	 ebx, DWORD PTR [eax+52]
  01033	8d bc 3b f3 3e
	70 6d		 lea	 edi, DWORD PTR [ebx+edi+1836072691]

; 332  : 
; 333  : 	Subround(G, c2, d2, e2, a2, b2, X[ 8], 15, k8);

  0103a	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  0103d	c1 c7 05	 rol	 edi, 5
  01040	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  01043	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  01046	33 de		 xor	 ebx, esi
  01048	23 df		 and	 ebx, edi
  0104a	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  0104d	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  01050	33 de		 xor	 ebx, esi
  01052	03 5d d8	 add	 ebx, DWORD PTR tv5514[ebp]
  01055	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]
  0105c	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  0105f	03 7d e4	 add	 edi, DWORD PTR _b2$[ebp]
  01062	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH

; 334  : 	Subround(G, b2, c2, d2, e2, a2, X[ 6],  5, k8);

  01066	8b 5d e4	 mov	 ebx, DWORD PTR _b2$[ebp]
  01069	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  0106c	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  0106f	33 7d 0c	 xor	 edi, DWORD PTR _d2$[ebp]
  01072	23 7d 08	 and	 edi, DWORD PTR _c2$[ebp]
  01075	33 7d fc	 xor	 edi, DWORD PTR _e2$[ebp]
  01078	03 7d d4	 add	 edi, DWORD PTR tv5486[ebp]
  0107b	8d bc 1f e9 76
	6d 7a		 lea	 edi, DWORD PTR [edi+ebx+2053994217]
  01082	c1 c7 05	 rol	 edi, 5
  01085	03 fe		 add	 edi, esi
  01087	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH
  0108b	89 7d e4	 mov	 DWORD PTR _b2$[ebp], edi

; 335  : 	Subround(G, a2, b2, c2, d2, e2, X[ 4],  8, k8);

  0108e	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  01091	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  01094	23 7d e4	 and	 edi, DWORD PTR _b2$[ebp]
  01097	33 7d 0c	 xor	 edi, DWORD PTR _d2$[ebp]
  0109a	03 78 10	 add	 edi, DWORD PTR [eax+16]
  0109d	8d b4 37 e9 76
	6d 7a		 lea	 esi, DWORD PTR [edi+esi+2053994217]
  010a4	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  010a7	c1 c6 08	 rol	 esi, 8
  010aa	03 75 fc	 add	 esi, DWORD PTR _e2$[ebp]
  010ad	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 336  : 	Subround(G, e2, a2, b2, c2, d2, X[ 1], 11, k8);

  010b1	8b 5d 08	 mov	 ebx, DWORD PTR _c2$[ebp]
  010b4	33 5d e4	 xor	 ebx, DWORD PTR _b2$[ebp]
  010b7	89 7d c4	 mov	 DWORD PTR tv5414[ebp], edi
  010ba	23 de		 and	 ebx, esi
  010bc	33 5d 08	 xor	 ebx, DWORD PTR _c2$[ebp]
  010bf	03 df		 add	 ebx, edi
  010c1	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  010c4	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]
  010cb	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  010ce	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  010d1	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  010d4	c1 45 e4 0a	 rol	 DWORD PTR _b2$[ebp], 10	; 0000000aH

; 337  : 	Subround(G, d2, e2, a2, b2, c2, X[ 3], 14, k8);

  010d8	8b 5d e4	 mov	 ebx, DWORD PTR _b2$[ebp]
  010db	33 de		 xor	 ebx, esi
  010dd	23 df		 and	 ebx, edi
  010df	33 5d e4	 xor	 ebx, DWORD PTR _b2$[ebp]
  010e2	8b 78 0c	 mov	 edi, DWORD PTR [eax+12]
  010e5	03 df		 add	 ebx, edi
  010e7	89 7d ac	 mov	 DWORD PTR tv5444[ebp], edi
  010ea	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  010ed	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]

; 338  : 	Subround(G, c2, d2, e2, a2, b2, X[11], 14, k8);

  010f4	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  010f7	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  010fa	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  010fd	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  01100	33 de		 xor	 ebx, esi
  01102	23 df		 and	 ebx, edi
  01104	33 de		 xor	 ebx, esi
  01106	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  01109	8b 78 2c	 mov	 edi, DWORD PTR [eax+44]
  0110c	03 df		 add	 ebx, edi
  0110e	89 7d a4	 mov	 DWORD PTR tv5556[ebp], edi
  01111	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  01114	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]
  0111b	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  0111e	03 7d e4	 add	 edi, DWORD PTR _b2$[ebp]
  01121	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH

; 339  : 	Subround(G, b2, c2, d2, e2, a2, X[15],  6, k8);

  01125	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  01128	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  0112b	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  0112e	23 df		 and	 ebx, edi
  01130	33 5d fc	 xor	 ebx, DWORD PTR _e2$[ebp]
  01133	8b 78 3c	 mov	 edi, DWORD PTR [eax+60]
  01136	03 df		 add	 ebx, edi
  01138	89 7d cc	 mov	 DWORD PTR tv5861[ebp], edi
  0113b	8b 7d e4	 mov	 edi, DWORD PTR _b2$[ebp]
  0113e	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]
  01145	c1 c7 06	 rol	 edi, 6
  01148	03 fe		 add	 edi, esi
  0114a	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH

; 340  : 	Subround(G, a2, b2, c2, d2, e2, X[ 0], 14, k8);

  0114e	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  01151	33 5d 08	 xor	 ebx, DWORD PTR _c2$[ebp]
  01154	89 7d e4	 mov	 DWORD PTR _b2$[ebp], edi
  01157	23 df		 and	 ebx, edi
  01159	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  0115c	8b 38		 mov	 edi, DWORD PTR [eax]
  0115e	03 df		 add	 ebx, edi
  01160	8d b4 33 e9 76
	6d 7a		 lea	 esi, DWORD PTR [ebx+esi+2053994217]
  01167	c1 c6 0e	 rol	 esi, 14			; 0000000eH
  0116a	03 75 fc	 add	 esi, DWORD PTR _e2$[ebp]
  0116d	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 341  : 	Subround(G, e2, a2, b2, c2, d2, X[ 5],  6, k8);

  01171	8b 5d 08	 mov	 ebx, DWORD PTR _c2$[ebp]
  01174	33 5d e4	 xor	 ebx, DWORD PTR _b2$[ebp]
  01177	89 7d b0	 mov	 DWORD PTR tv5392[ebp], edi
  0117a	8b 78 14	 mov	 edi, DWORD PTR [eax+20]
  0117d	23 de		 and	 ebx, esi
  0117f	33 5d 08	 xor	 ebx, DWORD PTR _c2$[ebp]
  01182	89 7d c0	 mov	 DWORD PTR tv5472[ebp], edi
  01185	03 df		 add	 ebx, edi
  01187	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  0118a	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]

; 342  : 	Subround(G, d2, e2, a2, b2, c2, X[12],  9, k8);

  01191	8b 58 30	 mov	 ebx, DWORD PTR [eax+48]
  01194	c1 c7 06	 rol	 edi, 6
  01197	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  0119a	c1 45 e4 0a	 rol	 DWORD PTR _b2$[ebp], 10	; 0000000aH
  0119e	89 5d e0	 mov	 DWORD PTR tv6988[ebp], ebx
  011a1	8b 5d e4	 mov	 ebx, DWORD PTR _b2$[ebp]
  011a4	33 de		 xor	 ebx, esi
  011a6	23 df		 and	 ebx, edi
  011a8	33 5d e4	 xor	 ebx, DWORD PTR _b2$[ebp]
  011ab	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  011ae	03 5d e0	 add	 ebx, DWORD PTR tv6988[ebp]
  011b1	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  011b4	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]

; 343  : 	Subround(G, c2, d2, e2, a2, b2, X[ 2], 12, k8);

  011bb	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  011be	c1 c7 09	 rol	 edi, 9
  011c1	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  011c4	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  011c7	33 de		 xor	 ebx, esi
  011c9	23 df		 and	 ebx, edi
  011cb	89 7d 0c	 mov	 DWORD PTR _d2$[ebp], edi
  011ce	33 de		 xor	 ebx, esi
  011d0	8b 78 08	 mov	 edi, DWORD PTR [eax+8]
  011d3	03 df		 add	 ebx, edi
  011d5	89 7d b8	 mov	 DWORD PTR tv5430[ebp], edi
  011d8	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  011db	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]
  011e2	c1 c7 0c	 rol	 edi, 12			; 0000000cH
  011e5	03 7d e4	 add	 edi, DWORD PTR _b2$[ebp]
  011e8	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH

; 344  : 	Subround(G, b2, c2, d2, e2, a2, X[13],  9, k8);

  011ec	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  011ef	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  011f2	89 7d 08	 mov	 DWORD PTR _c2$[ebp], edi
  011f5	23 df		 and	 ebx, edi
  011f7	33 5d fc	 xor	 ebx, DWORD PTR _e2$[ebp]
  011fa	8b 78 34	 mov	 edi, DWORD PTR [eax+52]
  011fd	03 df		 add	 ebx, edi
  011ff	89 7d b4	 mov	 DWORD PTR tv5944[ebp], edi
  01202	8b 7d e4	 mov	 edi, DWORD PTR _b2$[ebp]
  01205	8d bc 3b e9 76
	6d 7a		 lea	 edi, DWORD PTR [ebx+edi+2053994217]
  0120c	c1 c7 09	 rol	 edi, 9
  0120f	03 fe		 add	 edi, esi
  01211	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH

; 345  : 	Subround(G, a2, b2, c2, d2, e2, X[ 9], 12, k8);

  01215	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  01218	33 5d 08	 xor	 ebx, DWORD PTR _c2$[ebp]
  0121b	89 7d e4	 mov	 DWORD PTR _b2$[ebp], edi
  0121e	23 df		 and	 ebx, edi
  01220	33 5d 0c	 xor	 ebx, DWORD PTR _d2$[ebp]
  01223	8b 78 24	 mov	 edi, DWORD PTR [eax+36]
  01226	03 df		 add	 ebx, edi
  01228	8d b4 33 e9 76
	6d 7a		 lea	 esi, DWORD PTR [ebx+esi+2053994217]
  0122f	c1 c6 0c	 rol	 esi, 12			; 0000000cH
  01232	03 75 fc	 add	 esi, DWORD PTR _e2$[ebp]
  01235	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 346  : 	Subround(G, e2, a2, b2, c2, d2, X[ 7],  5, k8);

  01239	8b 5d 08	 mov	 ebx, DWORD PTR _c2$[ebp]
  0123c	33 5d e4	 xor	 ebx, DWORD PTR _b2$[ebp]

; 347  : 	Subround(G, d2, e2, a2, b2, c2, X[10], 15, k8);
; 348  : 	Subround(G, c2, d2, e2, a2, b2, X[14],  8, k8);

  0123f	89 7d a8	 mov	 DWORD PTR tv5528[ebp], edi
  01242	8b 78 1c	 mov	 edi, DWORD PTR [eax+28]
  01245	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  01248	23 de		 and	 ebx, esi
  0124a	33 5d 08	 xor	 ebx, DWORD PTR _c2$[ebp]
  0124d	89 7d bc	 mov	 DWORD PTR tv5500[ebp], edi
  01250	03 df		 add	 ebx, edi
  01252	8b 7d fc	 mov	 edi, DWORD PTR _e2$[ebp]
  01255	8d 9c 3b e9 76
	6d 7a		 lea	 ebx, DWORD PTR [ebx+edi+2053994217]
  0125c	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  0125f	c1 c3 05	 rol	 ebx, 5
  01262	03 5d 0c	 add	 ebx, DWORD PTR _d2$[ebp]
  01265	c1 45 e4 0a	 rol	 DWORD PTR _b2$[ebp], 10	; 0000000aH
  01269	89 45 dc	 mov	 DWORD PTR tv7046[ebp], eax
  0126c	8b 45 e4	 mov	 eax, DWORD PTR _b2$[ebp]
  0126f	33 c6		 xor	 eax, esi
  01271	23 c3		 and	 eax, ebx
  01273	33 45 e4	 xor	 eax, DWORD PTR _b2$[ebp]
  01276	03 45 dc	 add	 eax, DWORD PTR tv7046[ebp]
  01279	8d 84 38 e9 76
	6d 7a		 lea	 eax, DWORD PTR [eax+edi+2053994217]
  01280	c1 c0 0f	 rol	 eax, 15			; 0000000fH
  01283	03 45 08	 add	 eax, DWORD PTR _c2$[ebp]
  01286	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  01289	8b fb		 mov	 edi, ebx
  0128b	33 fe		 xor	 edi, esi
  0128d	23 f8		 and	 edi, eax
  0128f	33 fe		 xor	 edi, esi
  01291	03 7d d0	 add	 edi, DWORD PTR tv5598[ebp]
  01294	89 45 0c	 mov	 DWORD PTR _d2$[ebp], eax
  01297	8b 45 08	 mov	 eax, DWORD PTR _c2$[ebp]
  0129a	8d 84 07 e9 76
	6d 7a		 lea	 eax, DWORD PTR [edi+eax+2053994217]
  012a1	c1 c0 08	 rol	 eax, 8
  012a4	03 45 e4	 add	 eax, DWORD PTR _b2$[ebp]
  012a7	c1 c3 0a	 rol	 ebx, 10			; 0000000aH

; 349  : 
; 350  : 	Subround(F, b2, c2, d2, e2, a2, X[12],  8, k9);

  012aa	8b fb		 mov	 edi, ebx
  012ac	33 7d 0c	 xor	 edi, DWORD PTR _d2$[ebp]
  012af	89 75 ec	 mov	 DWORD PTR _a2$[ebp], esi
  012b2	33 f8		 xor	 edi, eax
  012b4	03 7d e0	 add	 edi, DWORD PTR tv6988[ebp]
  012b7	89 45 08	 mov	 DWORD PTR _c2$[ebp], eax
  012ba	03 7d e4	 add	 edi, DWORD PTR _b2$[ebp]
  012bd	89 5d fc	 mov	 DWORD PTR _e2$[ebp], ebx
  012c0	c1 c7 08	 rol	 edi, 8
  012c3	03 fe		 add	 edi, esi
  012c5	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH

; 351  : 	Subround(F, a2, b2, c2, d2, e2, X[15],  5, k9);

  012c9	8b 75 0c	 mov	 esi, DWORD PTR _d2$[ebp]
  012cc	33 f0		 xor	 esi, eax
  012ce	33 f7		 xor	 esi, edi
  012d0	03 75 cc	 add	 esi, DWORD PTR tv5861[ebp]
  012d3	03 75 ec	 add	 esi, DWORD PTR _a2$[ebp]
  012d6	c1 c6 05	 rol	 esi, 5
  012d9	03 f3		 add	 esi, ebx
  012db	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 352  : 	Subround(F, e2, a2, b2, c2, d2, X[10], 12, k9);

  012df	8b 5d 08	 mov	 ebx, DWORD PTR _c2$[ebp]
  012e2	33 df		 xor	 ebx, edi
  012e4	33 de		 xor	 ebx, esi
  012e6	03 5d dc	 add	 ebx, DWORD PTR tv7046[ebp]
  012e9	03 5d fc	 add	 ebx, DWORD PTR _e2$[ebp]
  012ec	c1 c3 0c	 rol	 ebx, 12			; 0000000cH
  012ef	03 5d 0c	 add	 ebx, DWORD PTR _d2$[ebp]
  012f2	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  012f5	89 5d fc	 mov	 DWORD PTR _e2$[ebp], ebx
  012f8	33 df		 xor	 ebx, edi

; 353  : 	Subround(F, d2, e2, a2, b2, c2, X[ 4],  9, k9);

  012fa	33 de		 xor	 ebx, esi
  012fc	03 5d c8	 add	 ebx, DWORD PTR tv5458[ebp]

; 354  : 	Subround(F, c2, d2, e2, a2, b2, X[ 1], 12, k9);

  012ff	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  01302	03 5d 0c	 add	 ebx, DWORD PTR _d2$[ebp]
  01305	c1 c3 09	 rol	 ebx, 9
  01308	03 5d 08	 add	 ebx, DWORD PTR _c2$[ebp]
  0130b	c1 c6 0a	 rol	 esi, 10			; 0000000aH
  0130e	33 c3		 xor	 eax, ebx
  01310	33 c6		 xor	 eax, esi
  01312	03 45 c4	 add	 eax, DWORD PTR tv5414[ebp]
  01315	89 5d 0c	 mov	 DWORD PTR _d2$[ebp], ebx
  01318	03 45 08	 add	 eax, DWORD PTR _c2$[ebp]
  0131b	c1 c0 0c	 rol	 eax, 12			; 0000000cH
  0131e	03 c7		 add	 eax, edi
  01320	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  01324	89 45 08	 mov	 DWORD PTR _c2$[ebp], eax

; 355  : 	Subround(F, b2, c2, d2, e2, a2, X[ 5],  5, k9);

  01327	8b 45 fc	 mov	 eax, DWORD PTR _e2$[ebp]
  0132a	33 c3		 xor	 eax, ebx
  0132c	33 45 08	 xor	 eax, DWORD PTR _c2$[ebp]
  0132f	03 45 c0	 add	 eax, DWORD PTR tv5472[ebp]
  01332	03 c7		 add	 eax, edi
  01334	c1 c0 05	 rol	 eax, 5
  01337	03 c6		 add	 eax, esi
  01339	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH

; 356  : 	Subround(F, a2, b2, c2, d2, e2, X[ 8], 14, k9);

  0133d	8b 7d 0c	 mov	 edi, DWORD PTR _d2$[ebp]
  01340	33 7d 08	 xor	 edi, DWORD PTR _c2$[ebp]
  01343	33 f8		 xor	 edi, eax
  01345	03 7d d8	 add	 edi, DWORD PTR tv5514[ebp]
  01348	03 fe		 add	 edi, esi
  0134a	c1 c7 0e	 rol	 edi, 14			; 0000000eH
  0134d	03 7d fc	 add	 edi, DWORD PTR _e2$[ebp]
  01350	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 357  : 	Subround(F, e2, a2, b2, c2, d2, X[ 7],  6, k9);

  01354	8b 75 08	 mov	 esi, DWORD PTR _c2$[ebp]
  01357	33 f0		 xor	 esi, eax
  01359	33 f7		 xor	 esi, edi
  0135b	03 75 bc	 add	 esi, DWORD PTR tv5500[ebp]
  0135e	03 75 fc	 add	 esi, DWORD PTR _e2$[ebp]
  01361	c1 c6 06	 rol	 esi, 6
  01364	03 75 0c	 add	 esi, DWORD PTR _d2$[ebp]
  01367	c1 c0 0a	 rol	 eax, 10			; 0000000aH

; 358  : 	Subround(F, d2, e2, a2, b2, c2, X[ 6],  8, k9);

  0136a	8b de		 mov	 ebx, esi
  0136c	33 d8		 xor	 ebx, eax
  0136e	33 df		 xor	 ebx, edi
  01370	03 5d d4	 add	 ebx, DWORD PTR tv5486[ebp]
  01373	89 75 fc	 mov	 DWORD PTR _e2$[ebp], esi
  01376	03 5d 0c	 add	 ebx, DWORD PTR _d2$[ebp]
  01379	c1 c3 08	 rol	 ebx, 8
  0137c	03 5d 08	 add	 ebx, DWORD PTR _c2$[ebp]
  0137f	c1 c7 0a	 rol	 edi, 10			; 0000000aH
  01382	33 f3		 xor	 esi, ebx

; 359  : 	Subround(F, c2, d2, e2, a2, b2, X[ 2], 13, k9);

  01384	33 f7		 xor	 esi, edi
  01386	03 75 b8	 add	 esi, DWORD PTR tv5430[ebp]
  01389	89 5d 0c	 mov	 DWORD PTR _d2$[ebp], ebx
  0138c	03 75 08	 add	 esi, DWORD PTR _c2$[ebp]
  0138f	c1 c6 0d	 rol	 esi, 13			; 0000000dH
  01392	03 f0		 add	 esi, eax
  01394	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH
  01398	89 75 08	 mov	 DWORD PTR _c2$[ebp], esi

; 360  : 	Subround(F, b2, c2, d2, e2, a2, X[13],  6, k9);

  0139b	8b 75 fc	 mov	 esi, DWORD PTR _e2$[ebp]
  0139e	33 f3		 xor	 esi, ebx
  013a0	33 75 08	 xor	 esi, DWORD PTR _c2$[ebp]
  013a3	03 75 b4	 add	 esi, DWORD PTR tv5944[ebp]
  013a6	03 f0		 add	 esi, eax
  013a8	c1 c6 06	 rol	 esi, 6
  013ab	03 f7		 add	 esi, edi
  013ad	c1 45 0c 0a	 rol	 DWORD PTR _d2$[ebp], 10	; 0000000aH

; 361  : 	Subround(F, a2, b2, c2, d2, e2, X[14],  5, k9);

  013b1	8b 5d 0c	 mov	 ebx, DWORD PTR _d2$[ebp]
  013b4	33 5d 08	 xor	 ebx, DWORD PTR _c2$[ebp]
  013b7	33 de		 xor	 ebx, esi
  013b9	03 5d d0	 add	 ebx, DWORD PTR tv5598[ebp]
  013bc	03 df		 add	 ebx, edi
  013be	c1 c3 05	 rol	 ebx, 5
  013c1	03 5d fc	 add	 ebx, DWORD PTR _e2$[ebp]
  013c4	c1 45 08 0a	 rol	 DWORD PTR _c2$[ebp], 10	; 0000000aH

; 362  : 	Subround(F, e2, a2, b2, c2, d2, X[ 0], 15, k9);

  013c8	8b 7d 08	 mov	 edi, DWORD PTR _c2$[ebp]
  013cb	33 fe		 xor	 edi, esi
  013cd	33 fb		 xor	 edi, ebx
  013cf	03 7d b0	 add	 edi, DWORD PTR tv5392[ebp]
  013d2	03 7d fc	 add	 edi, DWORD PTR _e2$[ebp]
  013d5	c1 c7 0f	 rol	 edi, 15			; 0000000fH
  013d8	03 7d 0c	 add	 edi, DWORD PTR _d2$[ebp]
  013db	c1 c6 0a	 rol	 esi, 10			; 0000000aH

; 363  : 	Subround(F, d2, e2, a2, b2, c2, X[ 3], 13, k9);

  013de	8b c7		 mov	 eax, edi
  013e0	33 c6		 xor	 eax, esi
  013e2	33 c3		 xor	 eax, ebx
  013e4	03 45 ac	 add	 eax, DWORD PTR tv5444[ebp]
  013e7	89 7d fc	 mov	 DWORD PTR _e2$[ebp], edi
  013ea	03 45 0c	 add	 eax, DWORD PTR _d2$[ebp]
  013ed	c1 c0 0d	 rol	 eax, 13			; 0000000dH
  013f0	03 45 08	 add	 eax, DWORD PTR _c2$[ebp]
  013f3	c1 c3 0a	 rol	 ebx, 10			; 0000000aH
  013f6	33 f8		 xor	 edi, eax

; 364  : 	Subround(F, c2, d2, e2, a2, b2, X[ 9], 11, k9);

  013f8	33 fb		 xor	 edi, ebx
  013fa	03 7d a8	 add	 edi, DWORD PTR tv5528[ebp]
  013fd	89 5d ec	 mov	 DWORD PTR _a2$[ebp], ebx
  01400	03 7d 08	 add	 edi, DWORD PTR _c2$[ebp]
  01403	c1 c7 0b	 rol	 edi, 11			; 0000000bH
  01406	03 fe		 add	 edi, esi
  01408	c1 45 fc 0a	 rol	 DWORD PTR _e2$[ebp], 10	; 0000000aH

; 365  : 	Subround(F, b2, c2, d2, e2, a2, X[11], 11, k9);

  0140c	8b 5d fc	 mov	 ebx, DWORD PTR _e2$[ebp]
  0140f	33 d8		 xor	 ebx, eax
  01411	33 df		 xor	 ebx, edi
  01413	03 5d a4	 add	 ebx, DWORD PTR tv5556[ebp]
  01416	03 de		 add	 ebx, esi

; 366  : 
; 367  : 	c1        = digest[1] + c1 + d2;

  01418	8b 75 f0	 mov	 esi, DWORD PTR _c1$[ebp]
  0141b	c1 c3 0b	 rol	 ebx, 11			; 0000000bH
  0141e	03 5d ec	 add	 ebx, DWORD PTR _a2$[ebp]
  01421	c1 c0 0a	 rol	 eax, 10			; 0000000aH
  01424	03 41 04	 add	 eax, DWORD PTR [ecx+4]
  01427	03 f0		 add	 esi, eax

; 368  : 	digest[1] = digest[2] + d1 + e2;
; 369  : 	digest[2] = digest[3] + e1 + a2;

  01429	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0142c	c1 c2 0a	 rol	 edx, 10			; 0000000aH
  0142f	03 51 08	 add	 edx, DWORD PTR [ecx+8]
  01432	03 55 fc	 add	 edx, DWORD PTR _e2$[ebp]
  01435	89 51 04	 mov	 DWORD PTR [ecx+4], edx
  01438	8b 55 f4	 mov	 edx, DWORD PTR _e1$[ebp]
  0143b	03 c2		 add	 eax, edx
  0143d	03 45 ec	 add	 eax, DWORD PTR _a2$[ebp]
  01440	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 370  : 	digest[3] = digest[4] + a1 + b2;

  01443	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  01446	03 c3		 add	 eax, ebx
  01448	03 45 f8	 add	 eax, DWORD PTR _a1$[ebp]
  0144b	89 41 0c	 mov	 DWORD PTR [ecx+12], eax

; 371  : 	digest[4] = digest[0] + b1 + c2;

  0144e	8b 01		 mov	 eax, DWORD PTR [ecx]
  01450	03 c7		 add	 eax, edi
  01452	03 45 e8	 add	 eax, DWORD PTR _b1$[ebp]
  01455	5f		 pop	 edi

; 372  : 	digest[0] = c1;

  01456	89 31		 mov	 DWORD PTR [ecx], esi
  01458	5e		 pop	 esi
  01459	89 41 10	 mov	 DWORD PTR [ecx+16], eax
  0145c	5b		 pop	 ebx

; 373  : }

  0145d	c9		 leave
  0145e	c2 08 00	 ret	 8
_RMD160Transform@8 ENDP
_TEXT	ENDS
PUBLIC	_RMD160Update@12
EXTRN	_memcpy:PROC
EXTRN	__allmul:PROC
; Function compile flags: /Ogsp
;	COMDAT _RMD160Update@12
_TEXT	SEGMENT
_need$ = -16						; size = 8
_have$ = -16						; size = 8
_len$ = -8						; size = 8
_ctx$ = 8						; size = 4
_input$ = 12						; size = 4
_lenArg$ = 16						; size = 4
_RMD160Update@12 PROC					; COMDAT

; 69   : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 10	 sub	 esp, 16			; 00000010H

; 70   : #ifndef TC_WINDOWS_BOOT
; 71   : 	uint64 len = lenArg, have, need;

  00008	83 65 fc 00	 and	 DWORD PTR _len$[ebp+4], 0
  0000c	8b 4d 10	 mov	 ecx, DWORD PTR _lenArg$[ebp]
  0000f	53		 push	 ebx
  00010	56		 push	 esi

; 72   : #else
; 73   : 	uint16 len = (uint16) lenArg, have, need;
; 74   : #endif
; 75   : 
; 76   : 	/* Check how many bytes we already have and how many more we need. */
; 77   : 	have = ((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  00011	8b 75 08	 mov	 esi, DWORD PTR _ctx$[ebp]
  00014	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00017	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0001a	57		 push	 edi

; 78   : 	need = RIPEMD160_BLOCK_LENGTH - have;

  0001b	6a 40		 push	 64			; 00000040H
  0001d	0f ac d0 03	 shrd	 eax, edx, 3
  00021	5b		 pop	 ebx
  00022	33 d2		 xor	 edx, edx
  00024	52		 push	 edx
  00025	8b f8		 mov	 edi, eax
  00027	58		 pop	 eax

; 79   : 
; 80   : 	/* Update bitcount */
; 81   : 	ctx->count += len << 3;

  00028	52		 push	 edx
  00029	6a 08		 push	 8
  0002b	ff 75 fc	 push	 DWORD PTR _len$[ebp+4]
  0002e	83 e7 3f	 and	 edi, 63			; 0000003fH
  00031	2b df		 sub	 ebx, edi
  00033	1b c2		 sbb	 eax, edx
  00035	51		 push	 ecx
  00036	89 4d f8	 mov	 DWORD PTR _len$[ebp], ecx
  00039	89 45 f4	 mov	 DWORD PTR _need$[ebp+4], eax
  0003c	e8 00 00 00 00	 call	 __allmul
  00041	03 46 18	 add	 eax, DWORD PTR [esi+24]
  00044	13 56 1c	 adc	 edx, DWORD PTR [esi+28]
  00047	89 46 18	 mov	 DWORD PTR [esi+24], eax

; 82   : 
; 83   : 	if (len >= need) {

  0004a	8b 45 fc	 mov	 eax, DWORD PTR _len$[ebp+4]
  0004d	89 56 1c	 mov	 DWORD PTR [esi+28], edx
  00050	3b 45 f4	 cmp	 eax, DWORD PTR _need$[ebp+4]
  00053	72 64		 jb	 SHORT $LN19@RMD160Upda
  00055	77 05		 ja	 SHORT $LN16@RMD160Upda
  00057	39 5d f8	 cmp	 DWORD PTR _len$[ebp], ebx
  0005a	72 5d		 jb	 SHORT $LN19@RMD160Upda
$LN16@RMD160Upda:

; 84   : 		if (have != 0) {

  0005c	8b cf		 mov	 ecx, edi
  0005e	33 c0		 xor	 eax, eax
  00060	0b c8		 or	 ecx, eax
  00062	74 2c		 je	 SHORT $LN14@RMD160Upda

; 85   : 			memcpy (ctx->buffer + have, input, (size_t) need);

  00064	53		 push	 ebx
  00065	ff 75 0c	 push	 DWORD PTR _input$[ebp]
  00068	8d 44 37 20	 lea	 eax, DWORD PTR [edi+esi+32]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 _memcpy
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH

; 86   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) ctx->buffer);

  00075	8d 46 20	 lea	 eax, DWORD PTR [esi+32]
  00078	50		 push	 eax
  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 _RMD160Transform@8

; 87   : 			input += need;

  0007f	01 5d 0c	 add	 DWORD PTR _input$[ebp], ebx

; 88   : 			len -= need;

  00082	29 5d f8	 sub	 DWORD PTR _len$[ebp], ebx
  00085	8b 45 f4	 mov	 eax, DWORD PTR _need$[ebp+4]
  00088	19 45 fc	 sbb	 DWORD PTR _len$[ebp+4], eax

; 89   : 			have = 0;

  0008b	33 ff		 xor	 edi, edi
  0008d	89 7d f4	 mov	 DWORD PTR _have$[ebp+4], edi
$LN14@RMD160Upda:

; 90   : 		}
; 91   : 
; 92   : 		/* Process data in RIPEMD160_BLOCK_LENGTH-byte chunks. */
; 93   : 		while (len >= RIPEMD160_BLOCK_LENGTH) {

  00090	83 7d fc 00	 cmp	 DWORD PTR _len$[ebp+4], 0
  00094	76 1d		 jbe	 SHORT $LN22@RMD160Upda
$LL3@RMD160Upda:

; 94   : 			RMD160Transform ((uint32 *) ctx->state, (const uint32 *) input);

  00096	ff 75 0c	 push	 DWORD PTR _input$[ebp]
  00099	56		 push	 esi
  0009a	e8 00 00 00 00	 call	 _RMD160Transform@8

; 95   : 			input += RIPEMD160_BLOCK_LENGTH;

  0009f	83 45 0c 40	 add	 DWORD PTR _input$[ebp], 64 ; 00000040H

; 96   : 			len -= RIPEMD160_BLOCK_LENGTH;

  000a3	83 45 f8 c0	 add	 DWORD PTR _len$[ebp], -64 ; ffffffc0H
  000a7	83 55 fc ff	 adc	 DWORD PTR _len$[ebp+4], -1
  000ab	83 7d fc 00	 cmp	 DWORD PTR _len$[ebp+4], 0
  000af	77 e5		 ja	 SHORT $LL3@RMD160Upda

; 90   : 		}
; 91   : 
; 92   : 		/* Process data in RIPEMD160_BLOCK_LENGTH-byte chunks. */
; 93   : 		while (len >= RIPEMD160_BLOCK_LENGTH) {

  000b1	72 06		 jb	 SHORT $LN19@RMD160Upda
$LN22@RMD160Upda:
  000b3	83 7d f8 40	 cmp	 DWORD PTR _len$[ebp], 64 ; 00000040H
  000b7	73 dd		 jae	 SHORT $LL3@RMD160Upda
$LN19@RMD160Upda:

; 97   : 		}
; 98   : 	}
; 99   : 
; 100  : 	/* Handle any remaining bytes of data. */
; 101  : 	if (len != 0)

  000b9	8b 45 f8	 mov	 eax, DWORD PTR _len$[ebp]
  000bc	0b 45 fc	 or	 eax, DWORD PTR _len$[ebp+4]
  000bf	74 13		 je	 SHORT $LN1@RMD160Upda

; 102  : 		memcpy (ctx->buffer + have, input, (size_t) len);

  000c1	ff 75 f8	 push	 DWORD PTR _len$[ebp]
  000c4	8d 44 37 20	 lea	 eax, DWORD PTR [edi+esi+32]
  000c8	ff 75 0c	 push	 DWORD PTR _input$[ebp]
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 _memcpy
  000d1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@RMD160Upda:
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx

; 103  : }

  000d7	c9		 leave
  000d8	c2 0c 00	 ret	 12			; 0000000cH
_RMD160Update@12 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Ogsp
;	COMDAT _RMD160Pad@4
_TEXT	SEGMENT
tv162 = -20						; size = 8
_count$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_RMD160Pad@4 PROC					; COMDAT
; _ctx$ = esi

; 110  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	83 ec 14	 sub	 esp, 20			; 00000014H
  00008	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000d	33 c5		 xor	 eax, ebp
  0000f	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 111  : 	byte count[8];
; 112  : 	uint32 padlen;
; 113  : 
; 114  : 	/* Convert count to 8 bytes in little endian order. */
; 115  : 
; 116  : #ifndef TC_WINDOWS_BOOT
; 117  : 	PUT_64BIT_LE(count, ctx->count);

  00012	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00015	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00018	8b d0		 mov	 edx, eax
  0001a	c1 ea 18	 shr	 edx, 24			; 00000018H
  0001d	88 55 fb	 mov	 BYTE PTR _count$[ebp+7], dl
  00020	8b d0		 mov	 edx, eax
  00022	c1 ea 10	 shr	 edx, 16			; 00000010H
  00025	88 55 fa	 mov	 BYTE PTR _count$[ebp+6], dl
  00028	57		 push	 edi
  00029	8b d0		 mov	 edx, eax
  0002b	c1 ea 08	 shr	 edx, 8
  0002e	88 55 f9	 mov	 BYTE PTR _count$[ebp+5], dl
  00031	8a d0		 mov	 dl, al
  00033	88 55 f8	 mov	 BYTE PTR _count$[ebp+4], dl
  00036	8b f8		 mov	 edi, eax
  00038	8b d1		 mov	 edx, ecx
  0003a	0f ac fa 18	 shrd	 edx, edi, 24
  0003e	c1 ef 18	 shr	 edi, 24			; 00000018H
  00041	88 55 f7	 mov	 BYTE PTR _count$[ebp+3], dl
  00044	8b f8		 mov	 edi, eax
  00046	8b d1		 mov	 edx, ecx
  00048	0f ac fa 10	 shrd	 edx, edi, 16
  0004c	c1 ef 10	 shr	 edi, 16			; 00000010H
  0004f	88 55 f6	 mov	 BYTE PTR _count$[ebp+2], dl
  00052	8b f8		 mov	 edi, eax
  00054	8b d1		 mov	 edx, ecx
  00056	0f ac fa 08	 shrd	 edx, edi, 8
  0005a	88 55 f5	 mov	 BYTE PTR _count$[ebp+1], dl
  0005d	8a d1		 mov	 dl, cl

; 118  : #else
; 119  : 	*(uint32 *) (count + 4) = 0;
; 120  : 	*(uint16 *) (count + 2) = 0;
; 121  : 	*(uint16 *) (count + 0) = ctx->count;
; 122  : #endif
; 123  : 
; 124  : 	/* Pad out to 56 mod 64. */
; 125  : 	padlen = RIPEMD160_BLOCK_LENGTH -
; 126  : 		(uint32)((ctx->count >> 3) & (RIPEMD160_BLOCK_LENGTH - 1));

  0005f	0f ac c1 03	 shrd	 ecx, eax, 3
  00063	89 45 f0	 mov	 DWORD PTR tv162[ebp+4], eax
  00066	c1 e8 03	 shr	 eax, 3
  00069	6a 40		 push	 64			; 00000040H
  0006b	83 e1 3f	 and	 ecx, 63			; 0000003fH
  0006e	58		 pop	 eax
  0006f	c1 ef 08	 shr	 edi, 8
  00072	2b c1		 sub	 eax, ecx
  00074	88 55 f4	 mov	 BYTE PTR _count$[ebp], dl
  00077	5f		 pop	 edi

; 127  : 	if (padlen < 1 + 8)

  00078	83 f8 09	 cmp	 eax, 9
  0007b	73 03		 jae	 SHORT $LN1@RMD160Pad

; 128  : 		padlen += RIPEMD160_BLOCK_LENGTH;

  0007d	83 c0 40	 add	 eax, 64			; 00000040H
$LN1@RMD160Pad:

; 129  : 	RMD160Update(ctx, PADDING, padlen - 8);            /* padlen - 8 <= 64 */

  00080	83 c0 f8	 add	 eax, -8			; fffffff8H
  00083	50		 push	 eax
  00084	68 00 00 00 00	 push	 OFFSET _PADDING
  00089	56		 push	 esi
  0008a	e8 00 00 00 00	 call	 _RMD160Update@12

; 130  : 	RMD160Update(ctx, count, 8);

  0008f	6a 08		 push	 8
  00091	8d 45 f4	 lea	 eax, DWORD PTR _count$[ebp]
  00094	50		 push	 eax
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 _RMD160Update@12

; 131  : }

  0009b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009e	33 cd		 xor	 ecx, ebp
  000a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a5	c9		 leave
  000a6	c3		 ret	 0
_RMD160Pad@4 ENDP
_TEXT	ENDS
PUBLIC	_RMD160Final@8
EXTRN	_memset:PROC
; Function compile flags: /Ogsp
;	COMDAT _RMD160Final@8
_TEXT	SEGMENT
_digest$ = 8						; size = 4
_ctx$ = 12						; size = 4
_RMD160Final@8 PROC					; COMDAT

; 137  : {

  00000	8b ff		 npad	 2
  00002	55		 push	 ebp
  00003	8b ec		 mov	 ebp, esp
  00005	56		 push	 esi

; 138  : 	int i;
; 139  : 
; 140  : 	RMD160Pad(ctx);

  00006	8b 75 0c	 mov	 esi, DWORD PTR _ctx$[ebp]
  00009	e8 00 00 00 00	 call	 _RMD160Pad@4

; 141  : 	if (digest) {

  0000e	8b 45 08	 mov	 eax, DWORD PTR _digest$[ebp]
  00011	85 c0		 test	 eax, eax
  00013	74 38		 je	 SHORT $LN7@RMD160Fina
  00015	57		 push	 edi

; 142  : 		for (i = 0; i < 5; i++)

  00016	33 ff		 xor	 edi, edi
  00018	83 c0 02	 add	 eax, 2
$LL6@RMD160Fina:
  0001b	8d 0c be	 lea	 ecx, DWORD PTR [esi+edi*4]

; 143  : 			PUT_32BIT_LE(digest + i * 4, ctx->state[i]);

  0001e	8a 51 03	 mov	 dl, BYTE PTR [ecx+3]
  00021	88 50 01	 mov	 BYTE PTR [eax+1], dl
  00024	8a 51 02	 mov	 dl, BYTE PTR [ecx+2]
  00027	88 10		 mov	 BYTE PTR [eax], dl
  00029	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002b	c1 ea 08	 shr	 edx, 8
  0002e	88 50 ff	 mov	 BYTE PTR [eax-1], dl
  00031	8a 09		 mov	 cl, BYTE PTR [ecx]
  00033	88 48 fe	 mov	 BYTE PTR [eax-2], cl
  00036	47		 inc	 edi
  00037	83 c0 04	 add	 eax, 4
  0003a	83 ff 05	 cmp	 edi, 5
  0003d	7c dc		 jl	 SHORT $LL6@RMD160Fina

; 144  : 		memset (ctx, 0, sizeof(*ctx));

  0003f	6a 60		 push	 96			; 00000060H
  00041	6a 00		 push	 0
  00043	56		 push	 esi
  00044	e8 00 00 00 00	 call	 _memset
  00049	83 c4 0c	 add	 esp, 12			; 0000000cH
  0004c	5f		 pop	 edi
$LN7@RMD160Fina:
  0004d	5e		 pop	 esi

; 145  : 	}
; 146  : }

  0004e	5d		 pop	 ebp
  0004f	c2 08 00	 ret	 8
_RMD160Final@8 ENDP
_TEXT	ENDS
END
